id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6843992,2017-06-26T17:57:28Z,2017-06-27T03:18:50Z,6.1.1,"As part of this release we had [12 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=27&state=closed) closed.

This release includes the ability to turn off the un-flattening behavior added in 6.1.0 using [ForPath.Ignore](https://github.com/AutoMapper/AutoMapper/wiki/Reverse-Mapping-and-Unflattening#customizing-reverse-mapping)

__Bugs__
- [__#2156__](https://github.com/AutoMapper/AutoMapper/pull/2156) Generate setters only when they are required
- [__#2155__](https://github.com/AutoMapper/AutoMapper/issues/2155) NotSupportedException exception with EF unmapped members
- [__#2152__](https://github.com/AutoMapper/AutoMapper/issues/2152) Unexpected behavior for CustomValueResolver
- [__#2151__](https://github.com/AutoMapper/AutoMapper/issues/2151) ReverseMap creates object for navigation property
- [__#2147__](https://github.com/AutoMapper/AutoMapper/pull/2147) Allow null colections
- [__#2145__](https://github.com/AutoMapper/AutoMapper/issues/2145) AllowNullCollections=false not honored for ICollection
- [__#2144__](https://github.com/AutoMapper/AutoMapper/pull/2144) Avoid conflicts between path maps and property maps
- [__#2143__](https://github.com/AutoMapper/AutoMapper/issues/2143) ResolveUsing not working correctly after ReverseMap

__Improvements/Features__
- [__#2162__](https://github.com/AutoMapper/AutoMapper/pull/2162) Allow ignores on reverse map paths
- [__#2161__](https://github.com/AutoMapper/AutoMapper/issues/2161) Allow ignoring a path in ReverseMap
- [__#2158__](https://github.com/AutoMapper/AutoMapper/pull/2158) Request a repro
- [__#2153__](https://github.com/AutoMapper/AutoMapper/pull/2153) Fix ExpressionBuilder GetMapExpression behaviour

## Where to get it
You can download this release from [nuget](https://www.nuget.org/packages/automapper/)",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/6843992/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/6843992,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v6.1.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v6.1.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v6.1.1,v6.1.1,False,False
6708467,2017-06-13T11:31:22Z,2017-06-14T11:12:27Z,6.1.0,"

As part of this release we had [28 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=26&state=closed) closed.


__Bugs__
- [__#2115__](https://github.com/AutoMapper/AutoMapper/pull/2115) Null checks
- [__#2109__](https://github.com/AutoMapper/AutoMapper/pull/2109) Consider only constructors that can resolve all parameters
- [__#2102__](https://github.com/AutoMapper/AutoMapper/issues/2102) ResolveUsing problem
- [__#2100__](https://github.com/AutoMapper/AutoMapper/pull/2100) Check the underlying type
- [__#2097__](https://github.com/AutoMapper/AutoMapper/pull/2097) Use the runtime type for the destination too
- [__#2096__](https://github.com/AutoMapper/AutoMapper/issues/2096) ArgumentException when trying to map a ViewModel List to Domain List
- [__#2065__](https://github.com/AutoMapper/AutoMapper/pull/2065) Use the existing destination
- [__#2064__](https://github.com/AutoMapper/AutoMapper/issues/2064) Mapping to readonly IEnumerable property
- [__#2054__](https://github.com/AutoMapper/AutoMapper/issues/2054) Regression - Exception in System.Linq from NullableSourceMapper
- [__#2025__](https://github.com/AutoMapper/AutoMapper/pull/2025) Passing the type doesn't seem to help

__Improvements/Features__
- [__#2136__](https://github.com/AutoMapper/AutoMapper/pull/2136) Disallow duplicate create map calls
- [__#2131__](https://github.com/AutoMapper/AutoMapper/pull/2131) Let clause
- [__#2128__](https://github.com/AutoMapper/AutoMapper/issues/2128) Disallow duplicate CreateMap calls per mapping
- [__#2124__](https://github.com/AutoMapper/AutoMapper/pull/2124) [Detect cycles at config time and set PreserveReferences accordingly](https://github.com/AutoMapper/AutoMapper/wiki/5.0-Upgrade-Guide#circular-references)
- [__#2114__](https://github.com/AutoMapper/AutoMapper/issues/2114) Inefficient query produced
- [__#2110__](https://github.com/AutoMapper/AutoMapper/pull/2110) AddProfiles() includes internal types when scanning assemblies
- [__#2107__](https://github.com/AutoMapper/AutoMapper/pull/2107) Make object mappers help with validation
- [__#2085__](https://github.com/AutoMapper/AutoMapper/pull/2085) Project nullable to GetValueOrDefault
- [__#2082__](https://github.com/AutoMapper/AutoMapper/issues/2082) Unable to create a map expression from Person.FKContactTypeID (System.Nullable`1[System.Int64]) to RelatedPersonDTO.FKContactTypeID (System.Int64)
- [__#2080__](https://github.com/AutoMapper/AutoMapper/pull/2080) Reverse MapFrom
- [__#2074__](https://github.com/AutoMapper/AutoMapper/pull/2074) Unflatten
- [__#2068__](https://github.com/AutoMapper/AutoMapper/issues/2068) [Support un-flattening](https://github.com/AutoMapper/AutoMapper/wiki/Reverse-Mapping-and-Unflattening)
- [__#2063__](https://github.com/AutoMapper/AutoMapper/issues/2063) AddProfiles() should be able to include internal profiles
- [__#2059__](https://github.com/AutoMapper/AutoMapper/pull/2059) Allow source struct collections
- [__#2058__](https://github.com/AutoMapper/AutoMapper/issues/2058) InvalidOperationException when mapping a collection from struct enumerator
- [__#2038__](https://github.com/AutoMapper/AutoMapper/pull/2038) Consider abstract types
- [__#2037__](https://github.com/AutoMapper/AutoMapper/issues/2037) Instances of abstract classes cannot be created
- [__#2023__](https://github.com/AutoMapper/AutoMapper/pull/2023) Introducing Internal namespaces and classes to support extensibility


## Where to get it
You can download this release from [nuget](https://www.nuget.org/packages/automapper/)",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/6708467/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/6708467,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v6.1.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v6.1.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v6.1.0,v6.1.0,False,False
5831856,2017-03-22T14:04:06Z,2017-03-22T14:17:37Z,6.0.2,Removed the unused ValueTuple dependency,https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5831856/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5831856,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v6.0.2,https://github.com/AutoMapper/AutoMapper/releases/tag/v6.0.2,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v6.0.2,v6.0.2,False,False
5785528,2017-03-17T18:39:59Z,2017-03-20T13:37:25Z,6.0.1,Stupid assembly version was missing.,https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5785528/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5785528,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v6.0.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v6.0.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v6.0.1,v6.0.1,False,False
5762037,2017-03-16T13:32:54Z,2017-03-16T13:34:14Z,6.0.0,"As part of this release we had [62 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=25&state=closed) closed.

List of breaking changes:

[5.2.0...6.0.0](http://apicomparer-preview.particular.net/compare/automapper/5.2.0...6.0.0)

__Features__
- [__#1916__](https://github.com/AutoMapper/AutoMapper/pull/1916) Provide an alternative to using ProjectTo() and static initialization…  
- [__#1906__](https://github.com/AutoMapper/AutoMapper/pull/1906) Support older collection types
- [__#1883__](https://github.com/AutoMapper/AutoMapper/pull/1883) Add Advanced property and put BeforeSeal function in it
- [__#1876__](https://github.com/AutoMapper/AutoMapper/pull/1876) Add a per member option DoNotInline
- [__#1866__](https://github.com/AutoMapper/AutoMapper/issues/1866) Need to get ProfileConfiguration before sealed
- [__#1848__](https://github.com/AutoMapper/AutoMapper/pull/1848) Avoid static state; Mapper registry managed through mapper configuration

__Improvements__
- [__#1957__](https://github.com/AutoMapper/AutoMapper/pull/1957) 5.2.0 issue value type projection expression
- [__#1956__](https://github.com/AutoMapper/AutoMapper/issues/1956) ProjectTo<>(...,Expession<<>>[]membersToExpand): lambda for a Value Type causes NullReferenceException
- [__#1933__](https://github.com/AutoMapper/AutoMapper/pull/1933) Exclude more system base types
- [__#1930__](https://github.com/AutoMapper/AutoMapper/pull/1930) Concurrency
- [__#1922__](https://github.com/AutoMapper/AutoMapper/pull/1922) Remove DoNotUseDestinationValue
- [__#1919__](https://github.com/AutoMapper/AutoMapper/pull/1919) Custom config validation
- [__#1913__](https://github.com/AutoMapper/AutoMapper/pull/1913) Inherit ignore unless overriden in the derived map; fixes #1910; fixe…
- [__#1910__](https://github.com/AutoMapper/AutoMapper/issues/1910) inheritedMapper for map to a existed object is not working right.
- [__#1895__](https://github.com/AutoMapper/AutoMapper/pull/1895) Use ReverseTypeMaps when configuring closed generic TypeMaps
- [__#1889__](https://github.com/AutoMapper/AutoMapper/pull/1889) Multiple value resolver interfaces
- [__#1887__](https://github.com/AutoMapper/AutoMapper/issues/1887) To support resolver that implements multiple IValueResolver interfaces
- [__#1877__](https://github.com/AutoMapper/AutoMapper/pull/1877) Handle fields too; fixes #1875
- [__#1875__](https://github.com/AutoMapper/AutoMapper/issues/1875) Simple ProjectTo throws Exception, stating an incorrect Property type
- [__#1872__](https://github.com/AutoMapper/AutoMapper/pull/1872) Match on requested types if runtime types don't match; fixes #1865
- [__#1865__](https://github.com/AutoMapper/AutoMapper/issues/1865) Mapping nullable does not use nullable map when called with a non-null value
- [__#1861__](https://github.com/AutoMapper/AutoMapper/pull/1861) Add link to BuildExecutionPlan
- [__#1860__](https://github.com/AutoMapper/AutoMapper/pull/1860) Add a link to the wiki
- [__#1844__](https://github.com/AutoMapper/AutoMapper/pull/1844) Expose the execution plan
- [__#1842__](https://github.com/AutoMapper/AutoMapper/issues/1842) AutoMapper.Debugging
- [__#1822__](https://github.com/AutoMapper/AutoMapper/pull/1822) Just look for IMemberValueResolver; fixes #1813
- [__#1813__](https://github.com/AutoMapper/AutoMapper/issues/1813) Interfaces derived from IMemberValueResolver<,,,> break BuildValueResolverFunc 
- [__#1732__](https://github.com/AutoMapper/AutoMapper/issues/1732) Inherited Ignore Ignored

__Bugs__
- [__#1991__](https://github.com/AutoMapper/AutoMapper/pull/1991) We need the lock
- [__#1931__](https://github.com/AutoMapper/AutoMapper/issues/1931) AutoMapper 4.1.1 -> 5.2.0 Dynamic Enum Mapping differences
- [__#1911__](https://github.com/AutoMapper/AutoMapper/pull/1911) fix for issue 1886 and unit test in SourceInjectedQuery class
- [__#1908__](https://github.com/AutoMapper/AutoMapper/issues/1908) Missing property name on AssertConfigurationIsValid exception
- [__#1905__](https://github.com/AutoMapper/AutoMapper/issues/1905) InvalidOperationException when mapping IList to CollectionBase via ResolveUsing
- [__#1901__](https://github.com/AutoMapper/AutoMapper/pull/1901) Preserve references
- [__#1892__](https://github.com/AutoMapper/AutoMapper/issues/1892) Best way to preserve compatibility for v4 to v5 upgrade
- [__#1890__](https://github.com/AutoMapper/AutoMapper/pull/1890) Correct order of ExpressionBinders
- [__#1886__](https://github.com/AutoMapper/AutoMapper/issues/1886) Mapping of Expression<Func<T,bool>> causes exception starting from AutoMapper 5.2.0
- [__#1879__](https://github.com/AutoMapper/AutoMapper/issues/1879) QueryableExtensions: NullableExpressionBinder used in preference to CustomExpressionBinder
- [__#1863__](https://github.com/AutoMapper/AutoMapper/pull/1863) Default enum value to string
- [__#1862__](https://github.com/AutoMapper/AutoMapper/issues/1862) Mapping Enum to string - default enum value get mapped to null
- [__#1858__](https://github.com/AutoMapper/AutoMapper/pull/1858) Make the constructor parameter resolver type safe; fixes #1857
- [__#1854__](https://github.com/AutoMapper/AutoMapper/pull/1854) Preserve references bug
- [__#1847__](https://github.com/AutoMapper/AutoMapper/issues/1847) InvalidOperationException : ValueFactory attempted to access the Value property of this instance.
- [__#1834__](https://github.com/AutoMapper/AutoMapper/pull/1834) Always null check
- [__#1833__](https://github.com/AutoMapper/AutoMapper/issues/1833) Auto-flattening null reference exception
- [__#1831__](https://github.com/AutoMapper/AutoMapper/pull/1831) Somehow arrays are different :); fixes #1830
- [__#1830__](https://github.com/AutoMapper/AutoMapper/issues/1830) Mapping Class to Derived DynamicObject gives NullReferenceException
- [__#1828__](https://github.com/AutoMapper/AutoMapper/pull/1828) Avoid casts; hopefully they are not needed; fixes #1827
- [__#1827__](https://github.com/AutoMapper/AutoMapper/issues/1827) Automapper throws exception with ProjectTo and EF6
- [__#1819__](https://github.com/AutoMapper/AutoMapper/pull/1819) Add required casts for non generic ResolveUsing
- [__#1818__](https://github.com/AutoMapper/AutoMapper/pull/1818) Box once to keep object identity; fixes #1816
- [__#1816__](https://github.com/AutoMapper/AutoMapper/issues/1816) Regression between Automapper 4 and 5
- [__#1794__](https://github.com/AutoMapper/AutoMapper/issues/1794) Performance issues and PreserveReferences not working correctly

## Where to get it
You can download this release from [nuget](https://www.nuget.org/packages/automapper/)",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5762037/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/5762037,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v6.0.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v6.0.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v6.0.0,v6.0.0,False,False
4746713,2016-11-23T23:45:00Z,2016-11-23T23:52:59Z,5.2.0,"As part of this release we had [74 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=23&state=closed) closed.

**Features**
- [**#1800**](https://github.com/AutoMapper/AutoMapper/pull/1800) [Allowing explicit up-front compilation of map expressions](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#configuration-compilation); fixes #1693
- [**#1797**](https://github.com/AutoMapper/AutoMapper/pull/1797) [Scoped/global configuration with Profiles](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#profile-instances)
- [**#1796**](https://github.com/AutoMapper/AutoMapper/issues/1796) Apply Root Configuration to Profiles
- [**#1693**](https://github.com/AutoMapper/AutoMapper/issues/1693) Opt out of lazy expression compilation
- [**#1605**](https://github.com/AutoMapper/AutoMapper/pull/1605) [Lazily Mapped Queries (UseAsDataSource)](https://github.com/AutoMapper/AutoMapper/wiki/Expression-Translation-%28UseAsDataSource%29#useasdatasource)

**Improvements**
- [**#1809**](https://github.com/AutoMapper/AutoMapper/pull/1809) Check the destination type override to be a derived type
- [**#1753**](https://github.com/AutoMapper/AutoMapper/pull/1753) Expose the destination member
- [**#1746**](https://github.com/AutoMapper/AutoMapper/pull/1746) Make IncludeBase work with ReverseMap
- [**#1745**](https://github.com/AutoMapper/AutoMapper/pull/1745) Add .editorconfig
- [**#1743**](https://github.com/AutoMapper/AutoMapper/issues/1743) ReverseMap ignores mapping inheritance (AutoMapper 5.1.1)
- [**#1734**](https://github.com/AutoMapper/AutoMapper/pull/1734) Compile once
- [**#1719**](https://github.com/AutoMapper/AutoMapper/pull/1719) Add some helpful casts
- [**#1714**](https://github.com/AutoMapper/AutoMapper/pull/1714) Always map array contents & remove the primitive array mapper.
- [**#1687**](https://github.com/AutoMapper/AutoMapper/pull/1687) Make it easier to spot missing services
- [**#1677**](https://github.com/AutoMapper/AutoMapper/pull/1677) Lazily create convert expressions
- [**#1655**](https://github.com/AutoMapper/AutoMapper/issues/1655) UWP 5.2.2 + AutoMapper 5.1.1 = Insanely long builds
- [**#1628**](https://github.com/AutoMapper/AutoMapper/pull/1628) Match by name; the member type can be generic and so the types won't …
- [**#1624**](https://github.com/AutoMapper/AutoMapper/issues/1624) InvalidOperaionException when automapping using open generics and including the source in a ForMember statement
- [**#1530**](https://github.com/AutoMapper/AutoMapper/pull/1530) Make constructor mapping a little more lenient
- [**#1528**](https://github.com/AutoMapper/AutoMapper/issues/1528) Invalid constructor mappings throw exceptions at seal-time

**Bugs**
- [**#1814**](https://github.com/AutoMapper/AutoMapper/pull/1814) Filtering dynamic assemblies
- [**#1812**](https://github.com/AutoMapper/AutoMapper/pull/1812) Applying partially trusted callers only for full .NET
- [**#1806**](https://github.com/AutoMapper/AutoMapper/pull/1806) Catch NRE in MapFrom with value types; fixes #1798
- [**#1805**](https://github.com/AutoMapper/AutoMapper/pull/1805) Return null when mapping from null string to nullable
- [**#1804**](https://github.com/AutoMapper/AutoMapper/issues/1804) string -> int? conversion returning 0 rather than null
- [**#1798**](https://github.com/AutoMapper/AutoMapper/issues/1798) In AutoMapper 5.1.1  MapFrom method does not ignore Null Reference Exception but throws it 
- [**#1788**](https://github.com/AutoMapper/AutoMapper/pull/1788) Checking for closures (constant expressions) when mapping expressions
- [**#1785**](https://github.com/AutoMapper/AutoMapper/pull/1785) Fixing expression visitors to properly visit the underlying expressio…
- [**#1778**](https://github.com/AutoMapper/AutoMapper/issues/1778) MapFrom variable 'src' of type 'Xyz' referenced from scope '', but it is not defined
- [**#1774**](https://github.com/AutoMapper/AutoMapper/issues/1774) Mapping from ""string"" to ""nullable enum"" throws exception
- [**#1772**](https://github.com/AutoMapper/AutoMapper/pull/1772) Map string to nullable enum
- [**#1765**](https://github.com/AutoMapper/AutoMapper/pull/1765) Fix #1482
- [**#1764**](https://github.com/AutoMapper/AutoMapper/issues/1764) MapFrom/ResolveUsing no longer support null assignment
- [**#1752**](https://github.com/AutoMapper/AutoMapper/pull/1752) Consider VB closures
- [**#1748**](https://github.com/AutoMapper/AutoMapper/issues/1748) Paramterized mappings not working using VB.NET and Profiles
- [**#1740**](https://github.com/AutoMapper/AutoMapper/pull/1740) Mapping to/from object doesn't seem useful
- [**#1731**](https://github.com/AutoMapper/AutoMapper/pull/1731) Bugfix #1727
- [**#1727**](https://github.com/AutoMapper/AutoMapper/issues/1727) Automapper v5.1.1 does not work with ObservableDictionary where Automapper 4 does
- [**#1718**](https://github.com/AutoMapper/AutoMapper/pull/1718) When we map a nullable, we should map the underlying type unless an e…
- [**#1717**](https://github.com/AutoMapper/AutoMapper/issues/1717) Mapping from nullable enum stopped working in AutoMapper 5
- [**#1711**](https://github.com/AutoMapper/AutoMapper/pull/1711) Multiple IEnumerable interfaces
- [**#1697**](https://github.com/AutoMapper/AutoMapper/issues/1697) AddProfiles Blows Up With NotSupportedException if Any of the Assemblies are Dynamic
- [**#1692**](https://github.com/AutoMapper/AutoMapper/pull/1692) Fixed memory leaks
- [**#1691**](https://github.com/AutoMapper/AutoMapper/issues/1691) ConcurrentBag causes memory leak
- [**#1685**](https://github.com/AutoMapper/AutoMapper/issues/1685) MethodAccessException: Windows Phone 8.1 (WinRT)
- [**#1672**](https://github.com/AutoMapper/AutoMapper/pull/1672) Not needed code - nullables
- [**#1664**](https://github.com/AutoMapper/AutoMapper/issues/1664) Differentiation between type and nullable type
- [**#1662**](https://github.com/AutoMapper/AutoMapper/pull/1662) Get the element type from the destination object itself
- [**#1656**](https://github.com/AutoMapper/AutoMapper/issues/1656) Creating a map for collections throws when destination items of derived type
- [**#1654**](https://github.com/AutoMapper/AutoMapper/pull/1654) Short-circuit evaluation
- [**#1651**](https://github.com/AutoMapper/AutoMapper/issues/1651) Complex flattening
- [**#1649**](https://github.com/AutoMapper/AutoMapper/pull/1649) Convert the null substitute to what's needed for projections
- [**#1645**](https://github.com/AutoMapper/AutoMapper/issues/1645) Dictionary mappings no longer handle non-empty dictionary destinations in 5.1.1
- [**#1642**](https://github.com/AutoMapper/AutoMapper/pull/1642) Convert to nullable
- [**#1641**](https://github.com/AutoMapper/AutoMapper/issues/1641) Different ProjectUsings for nullable and non-nullable ints
- [**#1638**](https://github.com/AutoMapper/AutoMapper/pull/1638) Decimal to nullable decimal
- [**#1635**](https://github.com/AutoMapper/AutoMapper/pull/1635) Call the condition after setting the source property value because it…
- [**#1634**](https://github.com/AutoMapper/AutoMapper/issues/1634) Conditions do not get either Source or Destination values
- [**#1632**](https://github.com/AutoMapper/AutoMapper/pull/1632) Just clear the destination everytime we don't create it ourselves
- [**#1631**](https://github.com/AutoMapper/AutoMapper/issues/1631) NullReferecnceException when flattening values
- [**#1630**](https://github.com/AutoMapper/AutoMapper/issues/1630) Mapping onto existing object does no longer clear existing items from List [5.1.1]
- [**#1626**](https://github.com/AutoMapper/AutoMapper/pull/1626) Don't hard code the ToString call, use the StringMapper; remove the t…
- [**#1620**](https://github.com/AutoMapper/AutoMapper/issues/1620) Mapping object to string fails with NullReferenceException when called on null.
- [**#1618**](https://github.com/AutoMapper/AutoMapper/issues/1618) Profile.AllowNullCollections ignored?
- [**#1617**](https://github.com/AutoMapper/AutoMapper/issues/1617) Error when mapping an expression containing a (non-parameter) instance of the mapped type
- [**#1607**](https://github.com/AutoMapper/AutoMapper/issues/1607) IMemberValueResolver is created and called twice
- [**#1482**](https://github.com/AutoMapper/AutoMapper/issues/1482) UseAsDataSource Translate constants with PropertyMap changes.
- [**#1008**](https://github.com/AutoMapper/AutoMapper/issues/1008) UseAsDataSource() - filtering by date in OData query results in mapping exception
- [**#882**](https://github.com/AutoMapper/AutoMapper/issues/882) UseDataSource() with property-path expression leads to exception

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/4746713/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/4746713,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.2.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.2.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.2.0,v5.2.0,False,False
3871891,2016-08-12T03:44:24Z,2016-08-12T03:53:08Z,5.1.0,"As part of this release we had [57 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=21&state=closed) closed.

**Features**
- [**#1573**](https://github.com/AutoMapper/AutoMapper/pull/1573) Base class for simple object mappers that don't want to use expressions.
- [**#1572**](https://github.com/AutoMapper/AutoMapper/pull/1572) Constructor tests with prefixes and postfixes for source and destination
- [**#1568**](https://github.com/AutoMapper/AutoMapper/pull/1568) [Profile scanning](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#assembly-scanning-for-auto-configuration)
- [**#1253**](https://github.com/AutoMapper/AutoMapper/issues/1253) Recognize pre/postfixes in ctor args

**Improvements**
- [**#1559**](https://github.com/AutoMapper/AutoMapper/pull/1559) Add an AllowNull configuration
- [**#1557**](https://github.com/AutoMapper/AutoMapper/pull/1557) Inline the easy cases
- [**#1549**](https://github.com/AutoMapper/AutoMapper/pull/1549) Break long line in AutoMapperConfigurationException
- [**#1547**](https://github.com/AutoMapper/AutoMapper/issues/1547) [aestethic] Missing newline in AssertConfigurationIsValid output
- [**#1533**](https://github.com/AutoMapper/AutoMapper/pull/1533) Portable profile 111 support
- [**#1527**](https://github.com/AutoMapper/AutoMapper/pull/1527) Better exception messages
- [**#1512**](https://github.com/AutoMapper/AutoMapper/pull/1512) Configuration faster
- [**#1493**](https://github.com/AutoMapper/AutoMapper/pull/1493) Enumerators
- [**#1377**](https://github.com/AutoMapper/AutoMapper/issues/1377) Inline sub map expressions
- [**#1001**](https://github.com/AutoMapper/AutoMapper/issues/1001) Expression.NotEqual causing an exception when using queryable projections 

**Bugs**
- [**#1612**](https://github.com/AutoMapper/AutoMapper/issues/1612) Automapper is actually built with debug flags / non optimized when building in release mode.
- [**#1602**](https://github.com/AutoMapper/AutoMapper/pull/1602) Don't fail when the parameter name is null
- [**#1601**](https://github.com/AutoMapper/AutoMapper/pull/1601) Map from null interface
- [**#1588**](https://github.com/AutoMapper/AutoMapper/pull/1588) Struct with collection
- [**#1579**](https://github.com/AutoMapper/AutoMapper/pull/1579) The null substitute should have the same type as the value resolved
- [**#1578**](https://github.com/AutoMapper/AutoMapper/issues/1578) Using NullSubstitute with different source/destination types throws ArgumentException
- [**#1567**](https://github.com/AutoMapper/AutoMapper/pull/1567) Consider the underlying nullable type a related type when resolving t…
- [**#1566**](https://github.com/AutoMapper/AutoMapper/issues/1566) ConvertUsing from value type to the same value type doesn't work
- [**#1558**](https://github.com/AutoMapper/AutoMapper/pull/1558) Resorting to nuspec because of nuget weirdness
- [**#1555**](https://github.com/AutoMapper/AutoMapper/pull/1555) Don't allow duplicate After/Before Map registrations
- [**#1554**](https://github.com/AutoMapper/AutoMapper/pull/1554) Add a null guard instead of rewriting each node
- [**#1552**](https://github.com/AutoMapper/AutoMapper/issues/1552) 5.0.2 Can't create map where source is DateTime.Date
- [**#1550**](https://github.com/AutoMapper/AutoMapper/issues/1550) Update to 5.0.2 broke existing maps
- [**#1538**](https://github.com/AutoMapper/AutoMapper/pull/1538) Map to existing object
- [**#1537**](https://github.com/AutoMapper/AutoMapper/pull/1537) Convert using to string
- [**#1529**](https://github.com/AutoMapper/AutoMapper/issues/1529) Possible regression: AutoMapper 5.0.2 calls ToString() where 4.x didn't
- [**#1523**](https://github.com/AutoMapper/AutoMapper/pull/1523) Reuse the default context even only when MaxDepth and PreserverRefer…
- [**#1522**](https://github.com/AutoMapper/AutoMapper/pull/1522) ExpandoObject is a dictionary and should be mapped as such
- [**#1520**](https://github.com/AutoMapper/AutoMapper/pull/1520) Fix #1518
- [**#1519**](https://github.com/AutoMapper/AutoMapper/pull/1519) Added failing unit test for #1518
- [**#1518**](https://github.com/AutoMapper/AutoMapper/issues/1518) Index was outside the bounds of the array.
- [**#1516**](https://github.com/AutoMapper/AutoMapper/issues/1516) Multiple destination type maps for the same source type fails and uses the first type instead when PreserveReferences is specified.
- [**#1511**](https://github.com/AutoMapper/AutoMapper/pull/1511) Revert the order of the binders; I'm guessing this is the root cause …
- [**#1509**](https://github.com/AutoMapper/AutoMapper/issues/1509) Projecting EF queryables with AllowNullCollections throws exception
- [**#1508**](https://github.com/AutoMapper/AutoMapper/pull/1508) Only doing null fixing on custom member mappings when there are only …
- [**#1505**](https://github.com/AutoMapper/AutoMapper/issues/1505) Exception when configuring mappings (worked in 4.2.1)
- [**#1502**](https://github.com/AutoMapper/AutoMapper/pull/1502) Fixes #1495
- [**#1498**](https://github.com/AutoMapper/AutoMapper/pull/1498) Fixes #1497
- [**#1497**](https://github.com/AutoMapper/AutoMapper/issues/1497) Automapper 5.0.2: Expression mapping
- [**#1495**](https://github.com/AutoMapper/AutoMapper/issues/1495) Automapper 5.0.2: System.Guid and TryExpression 
- [**#1494**](https://github.com/AutoMapper/AutoMapper/pull/1494) Better match condition for enumerables
- [**#1491**](https://github.com/AutoMapper/AutoMapper/issues/1491) Issue with One to Many mappings in 5.0.2
- [**#1490**](https://github.com/AutoMapper/AutoMapper/pull/1490) Allow overriding the global ignore; fixes #1488
- [**#1489**](https://github.com/AutoMapper/AutoMapper/pull/1489) Handles the case when the resolver doesn't directly implement the res…
- [**#1488**](https://github.com/AutoMapper/AutoMapper/issues/1488) Broken changes in 5.0.2; AddGlobalIgnore cannot be overriden by specific mapping configuration
- [**#1487**](https://github.com/AutoMapper/AutoMapper/issues/1487) Configuration definition raises ArgumentNullReference in 5.0.2
- [**#1486**](https://github.com/AutoMapper/AutoMapper/issues/1486) Problem with mapping DTOs onto their POCO class in 5.02
- [**#1357**](https://github.com/AutoMapper/AutoMapper/issues/1357) AfterMap()/BeforeMap() getting invoked multiple times
- [**#925**](https://github.com/AutoMapper/AutoMapper/issues/925) NotSuportedException when mapping entities with complex types using AutoMapper and Entity Framework

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3871891/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3871891,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.1.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.1.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.1.0,v5.1.0,False,False
3609632,2016-07-07T18:41:26Z,2016-07-07T18:48:48Z,5.0.2,"Fixed NuGet problem for UWP apps
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3609632/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3609632,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.0.2,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.0.2,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.0.2,v5.0.2,False,False
3607742,2016-07-07T14:56:49Z,2016-07-07T15:03:08Z,5.0.1,"As part of this release we had [60 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=22&state=closed) closed.

**Features**
- [**#1464**](https://github.com/AutoMapper/AutoMapper/pull/1464) Explicit skipping of individual type maps configuration validation
- [**#1416**](https://github.com/AutoMapper/AutoMapper/issues/1416) [Opt-out configuration validation](https://github.com/AutoMapper/AutoMapper/wiki/Configuration-validation#selecting-members-to-validate)
- [**#1405**](https://github.com/AutoMapper/AutoMapper/pull/1405) Conditional property map configs

**Improvements**
- [**#1466**](https://github.com/AutoMapper/AutoMapper/pull/1466) Validating constructor mapping as part of configuration validation
- [**#1457**](https://github.com/AutoMapper/AutoMapper/issues/1457) AutoMapper 5.0.0 introduces runtime errors that AssertConfigurationIsValid doesn't catch
- [**#1456**](https://github.com/AutoMapper/AutoMapper/issues/1456) AutoMapper fails to map class with non-default constructor
- [**#1452**](https://github.com/AutoMapper/AutoMapper/pull/1452) Open generics allow any member configuration; removed a ton of dead c…
- [**#1451**](https://github.com/AutoMapper/AutoMapper/pull/1451) Inheriting resolvers from base maps
- [**#1450**](https://github.com/AutoMapper/AutoMapper/pull/1450) Adding back in destinations for value resolvers; Added new member val…
- [**#1445**](https://github.com/AutoMapper/AutoMapper/pull/1445) Restoring destination value in type converters
- [**#1444**](https://github.com/AutoMapper/AutoMapper/issues/1444) ResolveUsing<> not being inherited by IncludeBase<>
- [**#1415**](https://github.com/AutoMapper/AutoMapper/pull/1415) Better error message
- [**#1412**](https://github.com/AutoMapper/AutoMapper/pull/1412) Avoid boxing when calling before/after map actions
- [**#1411**](https://github.com/AutoMapper/AutoMapper/pull/1411) Restoring easy static config validation
- [**#1392**](https://github.com/AutoMapper/AutoMapper/pull/1392) Update copyright year in readme

**Bugs**
- [**#1478**](https://github.com/AutoMapper/AutoMapper/pull/1478) Fixing pack options to include PDBs and XML docs
- [**#1476**](https://github.com/AutoMapper/AutoMapper/pull/1476) If all we got from the constructor was a default value, try property …
- [**#1475**](https://github.com/AutoMapper/AutoMapper/issues/1475) Bug: Ctor with default values overrides mapped values (Automapper 5.0.0)
- [**#1473**](https://github.com/AutoMapper/AutoMapper/issues/1473) Bug: AutoMapper 5.0 nuget doesn't contain xml files with documentation
- [**#1471**](https://github.com/AutoMapper/AutoMapper/pull/1471) Fixes #1469;  Removed not needed accessor code
- [**#1470**](https://github.com/AutoMapper/AutoMapper/pull/1470) Correctly setting null type for allowing null collections
- [**#1469**](https://github.com/AutoMapper/AutoMapper/issues/1469) Null flattening has changed in 5.0
- [**#1468**](https://github.com/AutoMapper/AutoMapper/pull/1468) Using the resolve value expression to determine how to map member ins…
- [**#1467**](https://github.com/AutoMapper/AutoMapper/issues/1467) ArgumentException when mapping from IEnumerable<T> to T[] when AllowNullCollections is on
- [**#1463**](https://github.com/AutoMapper/AutoMapper/pull/1463) Map only the dynamic members necessary
- [**#1458**](https://github.com/AutoMapper/AutoMapper/pull/1458) Fixes #1453
- [**#1453**](https://github.com/AutoMapper/AutoMapper/issues/1453) Mapper.Initialize throw ArgumentNullException
- [**#1437**](https://github.com/AutoMapper/AutoMapper/pull/1437) ProjectTo stack overflow
- [**#1434**](https://github.com/AutoMapper/AutoMapper/pull/1434) Fixes #1417
- [**#1433**](https://github.com/AutoMapper/AutoMapper/issues/1433) 5.0.0 - AutoMapper.QueryableExtensions Project fails when source and destination contain MS-SQL timestamp
- [**#1430**](https://github.com/AutoMapper/AutoMapper/pull/1430) Expando object bug
- [**#1429**](https://github.com/AutoMapper/AutoMapper/pull/1429) Create missing map circular reference
- [**#1427**](https://github.com/AutoMapper/AutoMapper/issues/1427) Calling ForMember with open generics throws NullRef
- [**#1423**](https://github.com/AutoMapper/AutoMapper/pull/1423) On .NET Core, Length is not a property of string[] for example; a bug…
- [**#1422**](https://github.com/AutoMapper/AutoMapper/issues/1422) StackOverflowException related to CreateMissingTypeMaps and AddConditionalObjectMapper
- [**#1421**](https://github.com/AutoMapper/AutoMapper/pull/1421) Make Condition like pre-condition with IfThen
- [**#1418**](https://github.com/AutoMapper/AutoMapper/issues/1418) Can't map between List<ExpandoObject>s
- [**#1417**](https://github.com/AutoMapper/AutoMapper/issues/1417) Not all members are being mapped
- [**#1413**](https://github.com/AutoMapper/AutoMapper/issues/1413) Conditional Mapping Issue (vers 5.0)
- [**#1402**](https://github.com/AutoMapper/AutoMapper/pull/1402) Catch NRE in MapFrom; closes #1382
- [**#1401**](https://github.com/AutoMapper/AutoMapper/pull/1401) IfNullVisitor memory leak
- [**#1400**](https://github.com/AutoMapper/AutoMapper/pull/1400) Fixes #1380
- [**#1397**](https://github.com/AutoMapper/AutoMapper/pull/1397) Closes #1389
- [**#1396**](https://github.com/AutoMapper/AutoMapper/pull/1396) Fixes #1394
- [**#1394**](https://github.com/AutoMapper/AutoMapper/issues/1394) Automapper 5.0.0 can map flags enum to nullable flags enum
- [**#1393**](https://github.com/AutoMapper/AutoMapper/issues/1393) Can't configure mapping where source and destination have byte[] properties
- [**#1391**](https://github.com/AutoMapper/AutoMapper/pull/1391) Preferring type map even if a mapper matches for property maps
- [**#1389**](https://github.com/AutoMapper/AutoMapper/issues/1389) This operation is only valid on generic types 
- [**#1388**](https://github.com/AutoMapper/AutoMapper/pull/1388) Explicit dependencies
- [**#1385**](https://github.com/AutoMapper/AutoMapper/pull/1385) Fixed all sorts of nuget problems
- [**#1384**](https://github.com/AutoMapper/AutoMapper/issues/1384) CreateMissingTypeMaps sets properties of complex objects to null
- [**#1382**](https://github.com/AutoMapper/AutoMapper/issues/1382) MapFrom not applying Null Checking all of the way in 5.0
- [**#1381**](https://github.com/AutoMapper/AutoMapper/pull/1381) Fixes #1379
- [**#1380**](https://github.com/AutoMapper/AutoMapper/issues/1380) Additional Type Checks still run after ConvertUsing in 5.0
- [**#1379**](https://github.com/AutoMapper/AutoMapper/issues/1379) `ITypeConverter` from int/int? to bool throws exception in 5.0 but works in 4.2.1
- [**#1378**](https://github.com/AutoMapper/AutoMapper/issues/1378) Complex mapping fails in 5.0
- [**#1352**](https://github.com/AutoMapper/AutoMapper/issues/1352) UseAsDataSource StackOverflow Error
- [**#1342**](https://github.com/AutoMapper/AutoMapper/issues/1342) Map Automatic Property  to ExpandoObject causes many k__BackingField member
- [**#1131**](https://github.com/AutoMapper/AutoMapper/issues/1131) Automapper fails when using .NET Native - Part 2

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3607742/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3607742,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.0.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.0.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.0.1,v5.0.1,False,False
3535696,2016-06-28T03:48:28Z,2016-06-28T03:53:09Z,5.0.0,"As part of this release we had [58 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=20&state=closed) closed.

**Features**
- [**#1374**](https://github.com/AutoMapper/AutoMapper/pull/1374) Supporting .NET Core RTM
- [**#1340**](https://github.com/AutoMapper/AutoMapper/pull/1340) Net standard 1.3 Support
- [**#1321**](https://github.com/AutoMapper/AutoMapper/pull/1321) Don't map through properties members mapped through the constructor
- [**#1304**](https://github.com/AutoMapper/AutoMapper/pull/1304) Configuration expression separating
- [**#1300**](https://github.com/AutoMapper/AutoMapper/issues/1300) AutoMapper 4.2.1 Abstract Mapping Issue

**Improvements**
- [**#1370**](https://github.com/AutoMapper/AutoMapper/pull/1370) Reuse the context when it's generic
- [**#1360**](https://github.com/AutoMapper/AutoMapper/pull/1360) Make As work with generics; fixes #1349
- [**#1359**](https://github.com/AutoMapper/AutoMapper/pull/1359) Fixes #1350
- [**#1356**](https://github.com/AutoMapper/AutoMapper/pull/1356) Try to skip the security check
- [**#1354**](https://github.com/AutoMapper/AutoMapper/pull/1354) Inline the lambdas as necessary
- [**#1351**](https://github.com/AutoMapper/AutoMapper/pull/1351) Simplify Resolution Context
- [**#1349**](https://github.com/AutoMapper/AutoMapper/issues/1349) The interface has a conflicting property ID Parameter name: interfaceType
- [**#1345**](https://github.com/AutoMapper/AutoMapper/pull/1345) Remove null checks from map when src allready checked
- [**#1344**](https://github.com/AutoMapper/AutoMapper/pull/1344) Better Array Mappings
- [**#1336**](https://github.com/AutoMapper/AutoMapper/pull/1336) Ignore explicit interface implementations with no setter
- [**#1333**](https://github.com/AutoMapper/AutoMapper/issues/1333) IgnoreAllPropertiesWithAnInaccessibleSetter throws ArugmentOutOfRangeException when destination has explicit interface implementation property
- [**#1332**](https://github.com/AutoMapper/AutoMapper/pull/1332) A typo and some unnecessary work
- [**#1319**](https://github.com/AutoMapper/AutoMapper/pull/1319) Avoid calling IsDictionaryType because it allocates
- [**#1315**](https://github.com/AutoMapper/AutoMapper/pull/1315) Eliminate some allocations and some refactoring
- [**#1306**](https://github.com/AutoMapper/AutoMapper/pull/1306) Share the context between property mapping and constructor mapping
- [**#1303**](https://github.com/AutoMapper/AutoMapper/pull/1303) Reuse the context for properties and constructor parameters
- [**#1294**](https://github.com/AutoMapper/AutoMapper/pull/1294) Do not catch exceptions inside Resolve; closes #1293
- [**#1293**](https://github.com/AutoMapper/AutoMapper/issues/1293) 5.0 Beta1 will swallow exceptions
- [**#1290**](https://github.com/AutoMapper/AutoMapper/pull/1290) Reuse the context for collections
- [**#1288**](https://github.com/AutoMapper/AutoMapper/pull/1288) Resolve using with different types
- [**#1284**](https://github.com/AutoMapper/AutoMapper/pull/1284) Make seal last and move newing up create map functions before do config and seal.
- [**#1282**](https://github.com/AutoMapper/AutoMapper/pull/1282) Use casting instead of DynamicInvoke

**Bugs**
- [**#1373**](https://github.com/AutoMapper/AutoMapper/pull/1373) Map from nullable source; fixes #1372
- [**#1372**](https://github.com/AutoMapper/AutoMapper/issues/1372) Value lost when mapping from Nullable<int> to Nullable<decimal>
- [**#1371**](https://github.com/AutoMapper/AutoMapper/pull/1371) Define NET45 in debug too; this caused the System.FieldAccessExceptio…
- [**#1369**](https://github.com/AutoMapper/AutoMapper/pull/1369) Specify the type of the parameter for missing map exception
- [**#1367**](https://github.com/AutoMapper/AutoMapper/pull/1367) Test-case for #1366
- [**#1366**](https://github.com/AutoMapper/AutoMapper/issues/1366) Strange exception if trying to map unmapped type.
- [**#1364**](https://github.com/AutoMapper/AutoMapper/pull/1364) Fix buildOptions
- [**#1363**](https://github.com/AutoMapper/AutoMapper/issues/1363) project.json contains wrong json element for signed dll's
- [**#1355**](https://github.com/AutoMapper/AutoMapper/pull/1355) Use type maps in item mapping for collections if exists
- [**#1338**](https://github.com/AutoMapper/AutoMapper/pull/1338) Allow overriding the built in object mapper with a custom type converter
- [**#1337**](https://github.com/AutoMapper/AutoMapper/pull/1337) Eliminate duplicate extension methods; fixes #1297
- [**#1330**](https://github.com/AutoMapper/AutoMapper/issues/1330) Error trying to map System.Collections.Immutable.ImmutableDictionary
- [**#1314**](https://github.com/AutoMapper/AutoMapper/pull/1314) Allow custom resolved values to validate; I didn't try to get the typ…
- [**#1308**](https://github.com/AutoMapper/AutoMapper/pull/1308) Test for #1307
- [**#1305**](https://github.com/AutoMapper/AutoMapper/pull/1305) Fixing bug on mapping null objects
- [**#1302**](https://github.com/AutoMapper/AutoMapper/issues/1302) Passing NULL objects to mapper.Map<T>() raises exception
- [**#1297**](https://github.com/AutoMapper/AutoMapper/issues/1297) AutoMapper 5.0.0-beta-1 with ASP.NET Core RC2 throws System.ArgumentException: An item with the same key has already been added
- [**#1289**](https://github.com/AutoMapper/AutoMapper/pull/1289) Mapping structs

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3535696/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3535696,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.0.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.0.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.0.0,v5.0.0,False,False
3238496,2016-05-17T03:11:45Z,2016-05-17T03:32:09Z,5.0.0-beta-1,"As part of this release we had [93 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=18&state=closed) closed.

**Features**
- [**#1278**](https://github.com/AutoMapper/AutoMapper/pull/1278) Supporting official RC2 bits
- [**#1274**](https://github.com/AutoMapper/AutoMapper/pull/1274) Dot not core rc2
- [**#1210**](https://github.com/AutoMapper/AutoMapper/pull/1210) Implement ResolveUsing for constructor parameters
- [**#1209**](https://github.com/AutoMapper/AutoMapper/issues/1209) Constructor mapping doesn't honor `ResolveUsing`
- [**#1207**](https://github.com/AutoMapper/AutoMapper/pull/1207) Implemented mapping between open generic and nongeneric or closed generic types
- [**#1072**](https://github.com/AutoMapper/AutoMapper/issues/1072) Argument type 'IMapper' is not CLS-compliant
- [**#1055**](https://github.com/AutoMapper/AutoMapper/pull/1055) Remove all obsolete static APIs
- [**#1049**](https://github.com/AutoMapper/AutoMapper/pull/1049) ForAllOtherMembers #602
- [**#922**](https://github.com/AutoMapper/AutoMapper/pull/922) Allow disabling the default naming convention
- [**#611**](https://github.com/AutoMapper/AutoMapper/pull/611) Fixes #602: Added ForAllOtherMembers implementation. Not sure how I should do ...
- [**#602**](https://github.com/AutoMapper/AutoMapper/issues/602) FR: ForAllOtherMembers

**Improvements**
- [**#1280**](https://github.com/AutoMapper/AutoMapper/pull/1280) Adding convenience property for easier access to context items
- [**#1275**](https://github.com/AutoMapper/AutoMapper/pull/1275) Finish IObjectMapExpression conversions
- [**#1263**](https://github.com/AutoMapper/AutoMapper/pull/1263) Default value for Guid; fixes #1254
- [**#1251**](https://github.com/AutoMapper/AutoMapper/pull/1251) Expand object mappers to provide expression-based mapping
- [**#1245**](https://github.com/AutoMapper/AutoMapper/pull/1245) Switching construct using to use expressions
- [**#1244**](https://github.com/AutoMapper/AutoMapper/pull/1244) Generic type converter with two type parameters
- [**#1243**](https://github.com/AutoMapper/AutoMapper/pull/1243) Generic mappers
- [**#1222**](https://github.com/AutoMapper/AutoMapper/pull/1222) Expression optimization
- [**#1211**](https://github.com/AutoMapper/AutoMapper/pull/1211) Property map mapping via compiled expressions
- [**#1186**](https://github.com/AutoMapper/AutoMapper/pull/1186) Base interface members
- [**#1185**](https://github.com/AutoMapper/AutoMapper/pull/1185) Make the null substitute type safe
- [**#1184**](https://github.com/AutoMapper/AutoMapper/issues/1184) Can not map inherited property by its name
- [**#1181**](https://github.com/AutoMapper/AutoMapper/issues/1181) ProjectTo throws an exception when an interface is mapped with a base-interface property mapping
- [**#1172**](https://github.com/AutoMapper/AutoMapper/pull/1172) Disable the cache by default
- [**#1152**](https://github.com/AutoMapper/AutoMapper/pull/1152) Property map performance enhancements
- [**#1130**](https://github.com/AutoMapper/AutoMapper/pull/1130) Small changes to expression-binding behaviour II
- [**#1103**](https://github.com/AutoMapper/AutoMapper/pull/1103) Extension methods per type
- [**#1096**](https://github.com/AutoMapper/AutoMapper/pull/1096) Add DestinationType back into resolving member info conventions. Part 2
- [**#1090**](https://github.com/AutoMapper/AutoMapper/pull/1090) Restore some static api
- [**#1086**](https://github.com/AutoMapper/AutoMapper/issues/1086) Configuration Overhaul
- [**#1081**](https://github.com/AutoMapper/AutoMapper/issues/1081) Make create mapper more pure
- [**#1079**](https://github.com/AutoMapper/AutoMapper/pull/1079) Fixes #1077
- [**#1077**](https://github.com/AutoMapper/AutoMapper/issues/1077) 4.2.0 .Include<DerivedSourceType, DerivedTargetType> throws exception with base type names
- [**#1060**](https://github.com/AutoMapper/AutoMapper/pull/1060) Passing test; closes #944
- [**#1056**](https://github.com/AutoMapper/AutoMapper/pull/1056) Add DestinationType back into resolving member info conventions.
- [**#1050**](https://github.com/AutoMapper/AutoMapper/pull/1050) Added sorting of interfaces (2)
- [**#1007**](https://github.com/AutoMapper/AutoMapper/issues/1007) Add methods to streamline member resolution using ResolutionContext.Options.Items
- [**#1004**](https://github.com/AutoMapper/AutoMapper/pull/1004) Add an AllowNull configuration
- [**#1001**](https://github.com/AutoMapper/AutoMapper/issues/1001) Expression.NotEqual causing an exception when using queryable projections 
- [**#944**](https://github.com/AutoMapper/AutoMapper/issues/944) Open generic mappings failed with derived types
- [**#938**](https://github.com/AutoMapper/AutoMapper/pull/938) Complex types bug 925
- [**#852**](https://github.com/AutoMapper/AutoMapper/pull/852) Small changes to expression-binding behaviour

**Bugs**
- [**#1281**](https://github.com/AutoMapper/AutoMapper/pull/1281) Pre and post fixes now case insensitive
- [**#1265**](https://github.com/AutoMapper/AutoMapper/pull/1265) Always generate typed mapping funcs
- [**#1240**](https://github.com/AutoMapper/AutoMapper/pull/1240) MapFrom should override matching source member
- [**#1237**](https://github.com/AutoMapper/AutoMapper/pull/1237) The wrong null check now that Types is a value type
- [**#1236**](https://github.com/AutoMapper/AutoMapper/pull/1236) DoNotUseDestinationValue should work for value types too
- [**#1230**](https://github.com/AutoMapper/AutoMapper/pull/1230) Inherit the mapping order
- [**#1217**](https://github.com/AutoMapper/AutoMapper/pull/1217) Flatten nested children using ProjectTo
- [**#1216**](https://github.com/AutoMapper/AutoMapper/issues/1216) Flatten nested children using ProjectTo
- [**#1204**](https://github.com/AutoMapper/AutoMapper/pull/1204) Use the runtime type of the source object when mapping collections
- [**#1203**](https://github.com/AutoMapper/AutoMapper/issues/1203) Dynamic mapping in 4.2.1 not behaving as expected
- [**#1198**](https://github.com/AutoMapper/AutoMapper/pull/1198) Include recursively all the base maps
- [**#1197**](https://github.com/AutoMapper/AutoMapper/issues/1197) Condition override custom resolver defined in inherited mapping.
- [**#1093**](https://github.com/AutoMapper/AutoMapper/pull/1093) When using resolve, infer the type of the resolved value
- [**#1089**](https://github.com/AutoMapper/AutoMapper/pull/1089) Fix the generics test
- [**#1075**](https://github.com/AutoMapper/AutoMapper/issues/1075) IncludeBase failure in 4.2 (worked in 4.1 and below)
- [**#1059**](https://github.com/AutoMapper/AutoMapper/pull/1059) Compile the mapping lambda for the constructor argument; closes #1047
- [**#1048**](https://github.com/AutoMapper/AutoMapper/pull/1048) Passing test for #1046
- [**#1047**](https://github.com/AutoMapper/AutoMapper/issues/1047) Problem with mapping constructor arguments from nested classes
- [**#1046**](https://github.com/AutoMapper/AutoMapper/issues/1046) Mapping to base class does not work
- [**#1024**](https://github.com/AutoMapper/AutoMapper/pull/1024) Faling test for #1023
- [**#999**](https://github.com/AutoMapper/AutoMapper/issues/999) Broken inheritance after upgrading to version 4.1.1 (in RELEASE mode only)
- [**#967**](https://github.com/AutoMapper/AutoMapper/issues/967) Prefix/Postfix property matching is now case sensitive

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3238496/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/3238496,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v5.0.0-beta-1,https://github.com/AutoMapper/AutoMapper/releases/tag/v5.0.0-beta-1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v5.0.0-beta-1,v5.0.0-beta-1,False,True
2682248,2016-02-24T19:33:03Z,2016-02-24T19:48:39Z,4.2.1,"As part of this release we had [2 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=19&state=closed) closed.

As part of this release Mapper.Map and Mapper.Initialize are no longer obsolete. These will be supported going forward.

Mapper.CreateMap is still obsolete and I will kill it with fire.

**Improvements**
- [**#1139**](https://github.com/AutoMapper/AutoMapper/pull/1139) Restores Mapper.Initialize and Mapper.Map
- [**#1138**](https://github.com/AutoMapper/AutoMapper/issues/1138) Restore Mapper.Initialize and Mapper.Map

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/AutoMapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2682248/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2682248,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.2.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.2.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.2.1,v4.2.1,False,False
2505987,2016-01-28T03:46:08Z,2016-01-28T04:04:38Z,4.2.0,"As part of this release we had [42 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=16&state=closed) closed.

The major change with 4.2 is the static API is marked as obsolete in favor of a new instance-based API. The static API will be removed with 5.0.

**Features**
- [**#1043**](https://github.com/AutoMapper/AutoMapper/pull/1043) Obsolete Mutable Profile calls
- [**#1034**](https://github.com/AutoMapper/AutoMapper/pull/1034) Mapping engine cleanup
- [**#1031**](https://github.com/AutoMapper/AutoMapper/issues/1031) Non-static version of Mapper
- [**#1025**](https://github.com/AutoMapper/AutoMapper/pull/1025) We can resolve optional parameters
- [**#983**](https://github.com/AutoMapper/AutoMapper/pull/983) Change MemberInfo to IValueResolver
- [**#980**](https://github.com/AutoMapper/AutoMapper/pull/980) Support expand with collections
- [**#955**](https://github.com/AutoMapper/AutoMapper/pull/955) Add case sensitivity option for DefaultName comparer
- [**#866**](https://github.com/AutoMapper/AutoMapper/issues/866) Mapping Dynamic Object to an Entity Framework DataObject
- [**#670**](https://github.com/AutoMapper/AutoMapper/issues/670) Does AutoMapper support conventions?

**Improvements**
- [**#1041**](https://github.com/AutoMapper/AutoMapper/pull/1041) Marking Profile as abstract and Configure method abstract
- [**#1039**](https://github.com/AutoMapper/AutoMapper/pull/1039) Read only configuration
- [**#1029**](https://github.com/AutoMapper/AutoMapper/pull/1029) Fix ConcurrentDictionary issues
- [**#1023**](https://github.com/AutoMapper/AutoMapper/issues/1023) Am I doing maps to constructors wrong?
- [**#998**](https://github.com/AutoMapper/AutoMapper/pull/998) Expand everything on the path to the passed member
- [**#996**](https://github.com/AutoMapper/AutoMapper/issues/996) Explicit expansion is not transitive
- [**#982**](https://github.com/AutoMapper/AutoMapper/pull/982) Max depth
- [**#981**](https://github.com/AutoMapper/AutoMapper/pull/981) Better exception message
- [**#966**](https://github.com/AutoMapper/AutoMapper/pull/966) Report missing includes bug 533
- [**#960**](https://github.com/AutoMapper/AutoMapper/pull/960) Fix Conventions and Generic TypeMaps not caching
- [**#958**](https://github.com/AutoMapper/AutoMapper/pull/958) Include base inheritance bug 911
- [**#957**](https://github.com/AutoMapper/AutoMapper/issues/957) ProjectTo only reading from type map cache and not trying to resolve.
- [**#956**](https://github.com/AutoMapper/AutoMapper/pull/956) Fixed duplicated path in the exception message
- [**#953**](https://github.com/AutoMapper/AutoMapper/pull/953) Make dest property's name type pass over correctly
- [**#937**](https://github.com/AutoMapper/AutoMapper/pull/937) Fix for #936
- [**#936**](https://github.com/AutoMapper/AutoMapper/issues/936) Mapping from a null array doesn't overwrite not null array with empty array when AllowNullCollections is false
- [**#911**](https://github.com/AutoMapper/AutoMapper/issues/911) Resolver is not inherited in some cases
- [**#533**](https://github.com/AutoMapper/AutoMapper/issues/533) Can't find missing mappings in included mapping.
- [**#514**](https://github.com/AutoMapper/AutoMapper/issues/514) Make it easier to create a MappingEngine instance

**Bugs**
- [**#1044**](https://github.com/AutoMapper/AutoMapper/pull/1044) Passing test for #1040
- [**#1040**](https://github.com/AutoMapper/AutoMapper/issues/1040) An empty integer collection doesn't map over a collection with values.
- [**#1022**](https://github.com/AutoMapper/AutoMapper/issues/1022) NullReferenceException using AddConditionalObjectMapper (not when using empty CreateMap) on SECOND attempt to map value
- [**#994**](https://github.com/AutoMapper/AutoMapper/pull/994) Overwrite the context.DestinationType only if another destination typ…
- [**#993**](https://github.com/AutoMapper/AutoMapper/issues/993) Mapper.AssertConfigurationIsValid() throws NullReferenceException for Nullable -> Nullable property map
- [**#990**](https://github.com/AutoMapper/AutoMapper/pull/990) Removed DataReaderMapperYieldReturnEnabled; reverted ConstructorMappi…
- [**#968**](https://github.com/AutoMapper/AutoMapper/pull/968) Fix for #967
- [**#905**](https://github.com/AutoMapper/AutoMapper/issues/905) warning CS3001: Argument type 'AutoMapper.IConfiguration' is not CLS-compliant

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2505987/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2505987,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.2.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.2.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.2.0,v4.2.0,False,False
2021968,2015-10-26T21:45:35Z,2015-10-26T21:59:57Z,4.1.1,"This is a maintenance release to fix some regressions introduced in the 4.1.0 release and some issues in the NuGet package metadata.

As part of this release we had [8 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=17&state=closed) closed.

**Bugs**
- [**#954**](https://github.com/AutoMapper/AutoMapper/issues/954) GetUnmappedPropertyNames() seems broken in 4.1.0
- [**#950**](https://github.com/AutoMapper/AutoMapper/issues/950) Automatically-mapped Properties are now case sensitive
- [**#949**](https://github.com/AutoMapper/AutoMapper/issues/949) Breaking Change in 4.1.0 ProjectTo(IMappingEngine) overload
- [**#945**](https://github.com/AutoMapper/AutoMapper/issues/945) AutoMapper 4.1.0 Exception with Proxy on Inherited object with Entity Framework
- [**#916**](https://github.com/AutoMapper/AutoMapper/issues/916) Can't update from 3.3.1 to 4.0.4 via NuGet (Xamarin.Android)
- [**#915**](https://github.com/AutoMapper/AutoMapper/issues/915) Cannot update to 4.0.4 on a Xamarin project (android)
- [**#856**](https://github.com/AutoMapper/AutoMapper/issues/856) Can't add AutoMapper 4.x to Xamarin.Forms project
- [**#817**](https://github.com/AutoMapper/AutoMapper/issues/817) Failed to compile the generated registrar code - Automapper 4.0.4 - Xamarin in Release Mode

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2021968/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/2021968,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.1.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.1.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.1.1,v4.1.1,False,False
1999774,2015-10-22T01:33:28Z,2015-10-22T03:01:09Z,4.1.0,"As part of this release we had [49 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=15&state=closed) closed.

**Features**
- [**#891**](https://github.com/AutoMapper/AutoMapper/pull/891) [Dynamic/Expando Object Mapping](https://github.com/AutoMapper/AutoMapper/wiki/Dynamic-and-ExpandoObject-Mapping)
- [**#858**](https://github.com/AutoMapper/AutoMapper/pull/858) [ForAllMaps](https://github.com/AutoMapper/AutoMapper/blob/86d3019fd5b28aa15921517d0b128b152318747b/src/UnitTests/Bug/ForAllMaps.cs)
- [**#839**](https://github.com/AutoMapper/AutoMapper/pull/839) Fix for KeyValuePair enumerable #829
- [**#829**](https://github.com/AutoMapper/AutoMapper/issues/829) mapping object to dynamic
- [**#805**](https://github.com/AutoMapper/AutoMapper/issues/805) Extension point for mapping, generic and non-generic configuration API now equivalent
- [**#793**](https://github.com/AutoMapper/AutoMapper/pull/793) Add Profile Fluent API Convention

**Improvements**
- [**#933**](https://github.com/AutoMapper/AutoMapper/pull/933) ProjectUsing for the entity being queried
- [**#929**](https://github.com/AutoMapper/AutoMapper/pull/929) Allow custom factories in PlatformAdapter
- [**#927**](https://github.com/AutoMapper/AutoMapper/issues/927) ProxyGenerator injection support
- [**#894**](https://github.com/AutoMapper/AutoMapper/pull/894) Fixed Issues with property map inheritance
- [**#853**](https://github.com/AutoMapper/AutoMapper/pull/853) Added Serializable attribute to AutoMapperMappingException
- [**#849**](https://github.com/AutoMapper/AutoMapper/pull/849) Initial types in the resolution context
- [**#840**](https://github.com/AutoMapper/AutoMapper/issues/840) Mapping and Projecting enum strange behavior
- [**#836**](https://github.com/AutoMapper/AutoMapper/issues/836) Obsolete all Project.To and replace with ProjectTo
- [**#830**](https://github.com/AutoMapper/AutoMapper/pull/830) Projections should honour As
- [**#827**](https://github.com/AutoMapper/AutoMapper/pull/827) Use the constructor map only when we can resolve parameters
- [**#824**](https://github.com/AutoMapper/AutoMapper/issues/824) The test execution process crashed while running the tests
- [**#822**](https://github.com/AutoMapper/AutoMapper/issues/822) AutoMapper 4.0.4 - How to fix this breaking change: Base class mapping is now default for derived class mapping
- [**#816**](https://github.com/AutoMapper/AutoMapper/pull/816) Fix for #815
- [**#815**](https://github.com/AutoMapper/AutoMapper/issues/815) Strange issue with Automapper 4 and overloaded constructors
- [**#624**](https://github.com/AutoMapper/AutoMapper/pull/624) Consistent ResolveUsing and ConvertUsing interfaces
- [**#551**](https://github.com/AutoMapper/AutoMapper/issues/551) Error: Type does not have a default constructor when using destination override and abstract types

**Bugs**
- [**#941**](https://github.com/AutoMapper/AutoMapper/pull/941) Inheritance bug 910
- [**#924**](https://github.com/AutoMapper/AutoMapper/issues/924) Derived type is created instead of requested type
- [**#920**](https://github.com/AutoMapper/AutoMapper/pull/920) Fix for #918
- [**#914**](https://github.com/AutoMapper/AutoMapper/pull/914) NestedDtos
- [**#912**](https://github.com/AutoMapper/AutoMapper/issues/912) Auto-selecting child class even if you map from the parent one
- [**#910**](https://github.com/AutoMapper/AutoMapper/issues/910) Unexpected behavior of AllowNullDestinationValues and Map<T>(object) (Part 2)
- [**#909**](https://github.com/AutoMapper/AutoMapper/issues/909) DTOs with ctors issue when mapping ef models
- [**#893**](https://github.com/AutoMapper/AutoMapper/issues/893) Incorrect mapping chosen when immediate source type is not mapped.
- [**#887**](https://github.com/AutoMapper/AutoMapper/issues/887) Subtype mappings declares using As() or Include() are ignored when mapping subtypes of the subtype. 
- [**#877**](https://github.com/AutoMapper/AutoMapper/pull/877) Non generic ConstructProjectionUsing bug
- [**#868**](https://github.com/AutoMapper/AutoMapper/issues/868) As<>() is completely ignored. Can't specify subtypes to use in mapping. 
- [**#857**](https://github.com/AutoMapper/AutoMapper/pull/857) Nested explicit expand bug 838
- [**#847**](https://github.com/AutoMapper/AutoMapper/issues/847) AutoMapper 4 targeting wrong constructor on instantiation
- [**#846**](https://github.com/AutoMapper/AutoMapper/pull/846) Fix typo in AfterMap xml comment
- [**#844**](https://github.com/AutoMapper/AutoMapper/issues/844) RT error calling CreateMap: Cannot find a field or property named X
- [**#842**](https://github.com/AutoMapper/AutoMapper/issues/842) InvalidCastException when using mapping inheritance
- [**#841**](https://github.com/AutoMapper/AutoMapper/issues/841) StackOverflowException on « GetCustomAttributes » when mapping Enum to Enum
- [**#838**](https://github.com/AutoMapper/AutoMapper/issues/838) StackOverflowException with ExplicitExpand
- [**#833**](https://github.com/AutoMapper/AutoMapper/pull/833) Fix for #832
- [**#832**](https://github.com/AutoMapper/AutoMapper/issues/832) ReverseMap and ReplaceMemberName don't work together
- [**#828**](https://github.com/AutoMapper/AutoMapper/issues/828) Overriding destination type with .As<> does not work as in 3.3.1.0
- [**#825**](https://github.com/AutoMapper/AutoMapper/issues/825) System.AggregateException incluided in AutoMapper 4.0.4
- [**#823**](https://github.com/AutoMapper/AutoMapper/issues/823) Overlapping assembly references after updating to 4.0.4
- [**#819**](https://github.com/AutoMapper/AutoMapper/issues/819) Mapping inheritance doesn't work in 4.0.4
- [**#812**](https://github.com/AutoMapper/AutoMapper/pull/812) Fixed misspelling of 'extension' in intellisense comments

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1999774/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1999774,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.1.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.1.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.1.0,v4.1.0,False,False
1634066,2015-08-05T22:09:05Z,2015-08-05T22:18:47Z,4.0.3,"Adds a UAP target to fix #810
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1634066/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1634066,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.0.3,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.0.3,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.0.3,v4.0.3,False,False
1633133,2015-08-05T18:23:26Z,2015-08-05T18:47:09Z,4.0.1,"As part of this release we had [1 issue](https://github.com/AutoMapper/AutoMapper/issues?milestone=13&state=closed) closed.

This is a patch release for a bad nuspec file.

**Bug**
- [**#811**](https://github.com/AutoMapper/AutoMapper/issues/811) Specify dependencies for .NET Core

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/AutoMapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1633133/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1633133,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.0.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.0.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.0.1,v4.0.1,False,False
1632101,2015-08-05T13:56:20Z,2015-08-05T16:38:34Z,4.0.0,"As part of this release we had [198 commits](https://github.com/jbogard/AutoMapper/compare/3.3.1...4.0.0) which resulted in [77 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=11&state=closed) being closed.

This release supports a wide variety of platforms, and consolidates the assemblies so that each platform only references one assembly. It supports:
- .NET 4.0 +
- Silverlight 5+
- Windows Phone 8
- Windows Phone 8.1
- netcore45 apps
- DNX 4.6
- Anything that works with ""dotnet""

**Features**
- [**#786**](https://github.com/AutoMapper/AutoMapper/pull/786) Allow clearing of the [default prefixes](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#recognizing-prepostfixes)
- [**#785**](https://github.com/AutoMapper/AutoMapper/pull/785) Expose a [filter for the properties/fields to be mapped](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#global-propertyfield-filtering)
- [**#779**](https://github.com/AutoMapper/AutoMapper/pull/779) [Generic type converter](https://github.com/AutoMapper/AutoMapper/wiki/Open-Generics) closes #774 
- [**#778**](https://github.com/AutoMapper/AutoMapper/pull/778) UseAsDataSource with PR #649 expression fix
- [**#774**](https://github.com/AutoMapper/AutoMapper/issues/774) Please add support for generic version of TypeConverter
- [**#767**](https://github.com/AutoMapper/AutoMapper/issues/767) Internal properties mapping and BindingFlags (see #785)
- [**#697**](https://github.com/AutoMapper/AutoMapper/issues/697) Please support Windows 10 with Automapper 
- [**#688**](https://github.com/AutoMapper/AutoMapper/issues/688) Nested mapping projections not respecting explicit expansions
- [**#668**](https://github.com/AutoMapper/AutoMapper/issues/668) Support AutoMapper on CoreCLR
- [**#654**](https://github.com/AutoMapper/AutoMapper/issues/654) [Support constructor parameter mappings for LINQ expressions](https://github.com/AutoMapper/AutoMapper/wiki/Construction)
- [**#633**](https://github.com/AutoMapper/AutoMapper/issues/633) Mapping through constructor doesn't consider custom member mappings (see #654)
- [**#630**](https://github.com/AutoMapper/AutoMapper/issues/630) IQueryable extentions. Project Method
- [**#578**](https://github.com/AutoMapper/AutoMapper/issues/578) Remove default Prefixes and Postfixes (see #786)

**Improvements**
- [**#801**](https://github.com/AutoMapper/AutoMapper/pull/801) Fixes Include Seal() Problems #762 #683
- [**#792**](https://github.com/AutoMapper/AutoMapper/pull/792) Exclude object methods
- [**#782**](https://github.com/AutoMapper/AutoMapper/pull/782) Check if we are able to construct the destination object
- [**#781**](https://github.com/AutoMapper/AutoMapper/pull/781) Dynamically map arrays
- [**#780**](https://github.com/AutoMapper/AutoMapper/pull/780) Nullable int to nullable enum
- [**#777**](https://github.com/AutoMapper/AutoMapper/issues/777) NullReferenceException when mapping nullable int to nullable enum
- [**#771**](https://github.com/AutoMapper/AutoMapper/pull/771) Return also methods from base types when looking for source members
- [**#770**](https://github.com/AutoMapper/AutoMapper/pull/770) Support multidimensional arrays
- [**#769**](https://github.com/AutoMapper/AutoMapper/issues/769) Mapping a collection from an abstract base class via ""Get"" convention fails
- [**#766**](https://github.com/AutoMapper/AutoMapper/pull/766) Resolve read-only filed mapping bug
- [**#765**](https://github.com/AutoMapper/AutoMapper/issues/765) Unable to map type with read-only filed
- [**#762**](https://github.com/AutoMapper/AutoMapper/issues/762) Polymorphic collections example does not work in latest 4.0 release.
- [**#759**](https://github.com/AutoMapper/AutoMapper/pull/759) The expression mapper doesn't respect ConstructorParameterMaps; #654
- [**#755**](https://github.com/AutoMapper/AutoMapper/pull/755) Possibility to define the MapFrom also by a string
- [**#750**](https://github.com/AutoMapper/AutoMapper/pull/750) Nested mapping projections with explicit expanding bug 688
- [**#749**](https://github.com/AutoMapper/AutoMapper/issues/749) AutoMapper.targets causing duplicate item error using Web Publishing
- [**#743**](https://github.com/AutoMapper/AutoMapper/pull/743) Enum to nullable enum
- [**#741**](https://github.com/AutoMapper/AutoMapper/pull/741) Non existing property bug 733
- [**#733**](https://github.com/AutoMapper/AutoMapper/issues/733) Better error message when cannot find property
- [**#724**](https://github.com/AutoMapper/AutoMapper/issues/724) FindTypeMapFor ignores type parameters when src/dest objects passed
- [**#718**](https://github.com/AutoMapper/AutoMapper/issues/718) Slow Initialization
- [**#712**](https://github.com/AutoMapper/AutoMapper/issues/712) AutoMapper doesn't support multi-dimensional arrays
- [**#710**](https://github.com/AutoMapper/AutoMapper/issues/710) Enum -> Enum? mapping fails
- [**#687**](https://github.com/AutoMapper/AutoMapper/issues/687) No .pdb files in nuget package
- [**#683**](https://github.com/AutoMapper/AutoMapper/issues/683) IncludeBase must come before base overrides
- [**#669**](https://github.com/AutoMapper/AutoMapper/issues/669) Automapper on 64 bit device with Xamarin Unified
- [**#667**](https://github.com/AutoMapper/AutoMapper/issues/667) Error while building web application and class library using msbuild 
- [**#660**](https://github.com/AutoMapper/AutoMapper/issues/660) AssertConfigurationIsValid collect all errors rather than throw first one
- [**#649**](https://github.com/AutoMapper/AutoMapper/pull/649) Fix ExpressionMapper error for sub property expression conversion
- [**#648**](https://github.com/AutoMapper/AutoMapper/issues/648) Mapping Expressions with ICollection
- [**#646**](https://github.com/AutoMapper/AutoMapper/issues/646) Nested Project().To<T>(null, params string[] membersToExpand). How to?
- [**#628**](https://github.com/AutoMapper/AutoMapper/issues/628) DynamicMap doesn't map arrays
- [**#625**](https://github.com/AutoMapper/AutoMapper/issues/625) ConstructUsing does not throw exception or gives warning when null returned
- [**#592**](https://github.com/AutoMapper/AutoMapper/issues/592) Support public readonly fields
- [**#573**](https://github.com/AutoMapper/AutoMapper/issues/573) AutoMapperMappingException.Message can throw Exception
- [**#566**](https://github.com/AutoMapper/AutoMapper/issues/566) [Feature] Add Global Ignore By Property Type
- [**#565**](https://github.com/AutoMapper/AutoMapper/issues/565) Guidance on configuration is fractured
- [**#561**](https://github.com/AutoMapper/AutoMapper/issues/561) Redundant IProjectionExpression, use ProjectTo<>() instead of Project().To<>()
- [**#542**](https://github.com/AutoMapper/AutoMapper/issues/542) Related to issue #91, Source has no property named Type, Target does have property name Type

**Bugs**
- [**#798**](https://github.com/AutoMapper/AutoMapper/pull/798) IEnumerable to ISet
- [**#797**](https://github.com/AutoMapper/AutoMapper/pull/797) DynamicMap threading issues
- [**#794**](https://github.com/AutoMapper/AutoMapper/pull/794) A passing test for #154
- [**#789**](https://github.com/AutoMapper/AutoMapper/pull/789) Only apply EnumerableMapper to IList existing destination
- [**#784**](https://github.com/AutoMapper/AutoMapper/pull/784) Only use the AssignableArrayMapper if the elements of the arrays are …
- [**#753**](https://github.com/AutoMapper/AutoMapper/pull/753) Call the options after/before hooks only for the root map operation
- [**#742**](https://github.com/AutoMapper/AutoMapper/issues/742) MapFrom subquery unexpected (incorrect) result
- [**#740**](https://github.com/AutoMapper/AutoMapper/pull/740) Enum to string bug 720
- [**#738**](https://github.com/AutoMapper/AutoMapper/pull/738) Int to nullable decimal bug 732
- [**#734**](https://github.com/AutoMapper/AutoMapper/issues/734) AssertConfigurationIsValid hangs on recursive classes.
- [**#732**](https://github.com/AutoMapper/AutoMapper/issues/732) int to nullable decimal fails
- [**#723**](https://github.com/AutoMapper/AutoMapper/issues/723) .Include<> regression between 4.0-cli1052 and 4.0-cli1053 for dynamic proxies
- [**#720**](https://github.com/AutoMapper/AutoMapper/issues/720) Enums unhelpfully converted to strings, in object-valued property, even when explicitly mapped
- [**#674**](https://github.com/AutoMapper/AutoMapper/issues/674) after map action with nested objects
- [**#620**](https://github.com/AutoMapper/AutoMapper/issues/620) Threading Issue when CreateMissingTypeMaps option is true
- [**#618**](https://github.com/AutoMapper/AutoMapper/issues/618) Mapper.CreateMap<Self, Self> ignores nullability rules on collection properties
- [**#557**](https://github.com/AutoMapper/AutoMapper/issues/557) Behaviour changed in 3.2.1, DestinationValue not null when no Destination object passed
- [**#555**](https://github.com/AutoMapper/AutoMapper/issues/555) Cannot map type property resulting from a where
- [**#154**](https://github.com/AutoMapper/AutoMapper/issues/154) Incorrect constructor is picked when the ctor parameter name is 'type', resulting in an InvalidCastException.
- [**#28**](https://github.com/AutoMapper/AutoMapper/issues/28) When a target type property is of ISet<T>, the CollectionMapper incorrectly attempts to set it to a List<T>

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1632101/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/1632101,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v4.0.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v4.0.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v4.0.0,v4.0.0,False,False
897523,2015-01-29T16:00:24Z,2015-01-29T16:30:00Z,3.3.1,"As part of this release we had [1 issue](https://github.com/AutoMapper/AutoMapper/issues?milestone=12&state=closed) closed.
Addressing bug around BindingFlags not being available in all platforms

**Bug**
- Win8.1 Store app inherit from Automapper.Profile generates warning CS1684[**#658**](https://github.com/AutoMapper/AutoMapper/issues/658)

## Where to get it

You can download this release from [nuget](https://www.nuget.org/packages/automapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/897523/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/897523,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.3.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.3.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.3.1,v3.3.1,False,False
741838,2014-11-28T21:20:44Z,2014-11-28T21:39:20Z,3.3.0,"As part of this release we had [36 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=9&state=closed) closed.

**Features**
- Provide option for [custom constructor for LINQ projection](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#custom-destination-type-constructors)[**#560**](https://github.com/AutoMapper/AutoMapper/issues/560)
- [Open Generic](https://github.com/AutoMapper/AutoMapper/wiki/Open-Generics) mappings[**#549**](https://github.com/AutoMapper/AutoMapper/pull/549)
- Support [string conversion in LINQ projections](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#string-conversion)[**#545**](https://github.com/AutoMapper/AutoMapper/issues/545)
- Added Functionality to Support Web Api [expands on Projections](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#explicit-expansion)[**#520**](https://github.com/AutoMapper/AutoMapper/pull/520)
- Request: [Mapper.Map() callbacks](https://github.com/AutoMapper/AutoMapper/wiki/Before-and-after-map-actions).[**#503**](https://github.com/AutoMapper/AutoMapper/issues/503)
- Missing feature of handling enum to [string mappings in queryable projections](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#string-conversion)[**#494**](https://github.com/AutoMapper/AutoMapper/pull/494)
- [Replace member names](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#replacing-characters) with Mapper.Initialize[**#479**](https://github.com/AutoMapper/AutoMapper/pull/479)
- Partial Aliases - Need to [replace characters in member names](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#replacing-characters)[**#471**](https://github.com/AutoMapper/AutoMapper/issues/471)
- Allow [parameterizing LINQ](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#parameterization) queries[**#393**](https://github.com/AutoMapper/AutoMapper/issues/393)
- Support converting expression trees[**#294**](https://github.com/AutoMapper/AutoMapper/issues/294)
- Configuration setting: [allow public vs. internal properties to map.](https://github.com/AutoMapper/AutoMapper/wiki/Configuration#configuring-visibility)[**#218**](https://github.com/AutoMapper/AutoMapper/issues/218)
- Support open generic types[**#59**](https://github.com/AutoMapper/AutoMapper/issues/59)

**Improvements**
- Mapper.Reset does not clear the Project().To() expression trees.[**#614**](https://github.com/AutoMapper/AutoMapper/issues/614)
- AddGlobalIgnore does not work when the property name exists on both source and destination, but types are not compatible.[**#585**](https://github.com/AutoMapper/AutoMapper/pull/585)
- Addressing issues with ExpressionMapper logic.[**#584**](https://github.com/AutoMapper/AutoMapper/pull/584)
- Work around xunit issue which drops everything after dashes.[**#564**](https://github.com/AutoMapper/AutoMapper/pull/564)
- Support nullable destination when using custom MapFrom[**#559**](https://github.com/AutoMapper/AutoMapper/pull/559)
- Inheritance Include with Unincluded inherited mappings[**#537**](https://github.com/AutoMapper/AutoMapper/pull/537)
- Expose TypeMap in MappingExpression[**#531**](https://github.com/AutoMapper/AutoMapper/issues/531)
- Automapper projection don't support [custom type converters](https://github.com/AutoMapper/AutoMapper/wiki/Queryable-Extensions#parameterization)[**#522**](https://github.com/AutoMapper/AutoMapper/issues/522)
- Fixed #511 - error when trying to map to a ReadOnlyCollection at top-level (i.e. not a property)[**#512**](https://github.com/AutoMapper/AutoMapper/pull/512)
- Mapping List<TSource> to ReadOnlyCollection<TDestination> no longer works[**#511**](https://github.com/AutoMapper/AutoMapper/issues/511)
- Non Generic Version of .UseDestinationValue[**#509**](https://github.com/AutoMapper/AutoMapper/issues/509)
- Support NullSubstitute in LINQ expressions[**#506**](https://github.com/AutoMapper/AutoMapper/issues/506)
- [Inheritance Maps specified from Derived Class](https://github.com/AutoMapper/AutoMapper/wiki/Mapping-inheritance#specifying-inheritance-in-derived-classes)[**#456**](https://github.com/AutoMapper/AutoMapper/issues/456)
- NotSupportedException on clear in ListSourceMapper [**#404**](https://github.com/AutoMapper/AutoMapper/issues/404)

**Bugs**
- Automapper 3.2.1 and appharbor -> failure[**#609**](https://github.com/AutoMapper/AutoMapper/issues/609)
- Fix Automapper.targets to not use Content type item[**#581**](https://github.com/AutoMapper/AutoMapper/pull/581)
- AssertConfigurationIsValid fails for destination overrides (As<T>)[**#574**](https://github.com/AutoMapper/AutoMapper/issues/574)
- .targets file causes AutoMapper to be included by Web Publishing[**#556**](https://github.com/AutoMapper/AutoMapper/issues/556)
- Fixed #511 - error when trying to map to a ReadOnlyCollection at top-level (i.e. not a property)[**#532**](https://github.com/AutoMapper/AutoMapper/pull/532)
- Null array properties behaviour changes 3.0 -> 3.1[**#526**](https://github.com/AutoMapper/AutoMapper/issues/526)
- Using AutoMapper breaks design time experience in Expression Blend [**#524**](https://github.com/AutoMapper/AutoMapper/issues/524)
- AssertConfigurationIsValid ignore provided typemaps for DryRun[**#505**](https://github.com/AutoMapper/AutoMapper/issues/505)
- In post 3.0.0 builds, using NullSubstitute results in model type name being substituted instead of value provided[**#469**](https://github.com/AutoMapper/AutoMapper/issues/469)

## Where to get it

You can download this release from [nuget](http://www.nuget.org/packages/automapper/3.3.0)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/741838/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/741838,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.3.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.3.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.3.0,v3.3.0,False,False
288859,2014-04-25T13:01:30Z,2014-04-25T13:06:40Z,3.2.1,"This is a patch release to address the PCL issues of WPA81 only being available in VS2013 Update 2 RC.

As part of this release we had [4 commits](https://github.com/AutoMapper/AutoMapper/compare/3.2.0...3.2.1) which resulted in [3 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=10&state=closed) being closed.
Patch release

## Bugs

### [#499 Automapper 3.2.0 through Nuget is not CLS-Compliant ](https://github.com/AutoMapper/AutoMapper/issues/499)

I commmented on issue #464 but it didn't open the issue also it's for 3.1.1 and this is for 3.2.0 

Here is my comment

> I just updated Automapper to 3.2.0 through Nuget and I'm getting errors that AutoMapper.Profile is not CLS-Compliant when I extend it in my VB.net project.

I see that the Common Assembly Info has CLS Compliance so unless Nuget is pointing to the wrong version I don't really know what's going on here.

### [#498 ForMember breaks ReSharper after upgrade to 3.2](https://github.com/AutoMapper/AutoMapper/issues/498)

In VS2013:

```
Mapper.CreateMap<S,D>()
          .ForMember ( d=>d.Something, o=>o.MapFrom( s=> s.Value ) );
```

indicates (red squiggle) that d.Something is not valid ""Cannot resolve symbol Something"". It complies ok and runs ok.

What am I missing?

Thanks

### [#381 ForMember angering ReSharper? - Non-existing PCL profile on client machine causing compile/R# errors](https://github.com/AutoMapper/AutoMapper/issues/381)

I'm trying to use the ForMember to add an ignore mapping to an object. ReSharper refuses to believe that "".ForMember(x => x.Thing, o => o.Ignore())"" exists, though it's fine with using the string varient of that method. I'd rather use the former for obvious reasons, but seem to be stuck using the latter for now.

Note it, will COMPILE the other way, ReSharper just doesn't seem able to grok the Expression using the other one. Using 3.0.0 NuGet package.

## Where to get it

You can download this release from:
- [nuget](http://www.nuget.org/packages/AutoMapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/288859/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/288859,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.2.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.2.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.2.1,v3.2.1,False,False
272674,2014-04-14T21:59:38Z,2014-04-15T12:54:03Z,3.2.0,"AutoMapper 3.2.0 now supports the following target platforms:
- .NET 4+
- Silverlight 5
- Windows Phone 8+
- Windows 8+
- Windows Universal Apps (WPA81)
- Xamarin MonoDroid
- Xamarin MonoTouch

As part of this release we had [66 commits](https://github.com/AutoMapper/AutoMapper/compare/3.1.1...3.2.0) which resulted in [48 issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=8&state=closed) being closed.

## Features

### [#487 Queryable mapping bug](https://github.com/AutoMapper/AutoMapper/pull/487)

Test cases and partial fix for mapping child collections. See http://stackoverflow.com/q/20046521/311289 for a bigger description.

### [#446 Evaluate IMemberConfigurationExpression conditions before resolve value](https://github.com/AutoMapper/AutoMapper/issues/446)

Hi,

it would be nice if conditions are evaluated before ResolveValue is called in order to avoid executing code (i.e. calling the getter of the underlying property) which won't be needed anyway because a condition will return false. 

Specifing IMemberConfigurationExpression.Ignore() would work since this is evaluated before resolving the value but my use case depends on dynamic variables.

Source:

```
TypeMapObjectMapperRegistry::PropertyMapMappingStrategy:MapPropertyValue()
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/446)_

### [#429 Nuget ios version 3.1.0 does not compile for device](https://github.com/AutoMapper/AutoMapper/issues/429)

Setup:
- xamarin ios 7.0.x, xamarin ios vs2012 1.8
- create a new ios helloworld project, reference Automapper nuget
- In MyViewController add

```
public class Test1 { public string Value1 { get; set; } }
public class Test2 { public string Value1 { get; set; } }
```
- In ViewDidLoad add
  _Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/429)_

### [#422 support for optional args](https://github.com/AutoMapper/AutoMapper/pull/422)

added support for optional args with default values

### [#409 Handle NHibernate proxies of Abstract Type](https://github.com/AutoMapper/AutoMapper/issues/409)

Hi, I would like to be able to call 

```
Mapper.Map<Animal, AnimalDto>(animal);
```

Where Both Animal and AnimalDto are abstract classes AND animal is in fact a proxy to a NHibernate object. I would imagine this working by using Mappings similar to this:

```
Mapper.CreateMap<Animal, AnimalDto>()
.PreMap(animalProxy => Helper.CastToEntity(animalProxy))
.Include<Cat, CatDto>
.Include<Dog, DogDto>
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/409)_

### [#354 IgnoreMap attribute](https://github.com/AutoMapper/AutoMapper/issues/354)

We use Automapper to map between models and view models. In some of our view models we want to map in a value from a model but never want it to be mapped back into the model itself. These values/properties are used on the view model in a read only fashion and considered reference only. We were hoping that by adding the ignore attribute to our view model would allow us to map a value in from the model but not back into the model but it appears to work both ways. We use the map config to write ignore() for each of these values but would rather use attributes. How about an overload to the ignore map attribute that allows us to configure the allowed or blocked direction of the map operation?

### [#256 AutoMapper caching objects when mapping twice](https://github.com/AutoMapper/AutoMapper/issues/256)

When you have a tree heirarcy of objects, and the same value exists in two places of the tree (but with different child values), and when mapping the second instance of the item - it uses the child values of the first instance, instead of re-evaluating what the child values should be.

Here is my example:

```
class Tag {
int Id {get; set;}
string Name {get; set;}
IEnumerable<Tag> ChildTags {get; set;}
}

public void Test()
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/256)_

### [#255 Are there any plans to release WinRT version ?](https://github.com/AutoMapper/AutoMapper/issues/255)

I'm building Metro app based on C#/XMAL approach and I would really like to use automapper. So, is there a chance to get it ? Currently I'm not able to add it the project due to that automapper is not complied against winRT.

Preferable : it would be nice to get it thru nuget package.

### [#254 Support for yielding records from DataReaderMapper rather than using a list](https://github.com/AutoMapper/AutoMapper/pull/254)

For the most part, the DataReaderMapper has always worked well for me.  The use of a List rather than yielding records was never that big of a deal for the majority of my typical scenarios.  However, I finally have a legitimate need for yielding the records due to some rather large result sets.  

You might decide against merging this, but I wanted to offer it since others have asked for this ability.  All of the existing unit tests pass and I also tested the changes in my own projects.  Depending on how AutoMapper is being applied to data readers, there are some scenarios that could be problematic due to deferred execution.  

For example, code written such as this would now fail because the reader will already be closed when iteration of the enumerable begins.  The reader will not actually be processed until deferred execution is triggered.

``` c#
public IEnumerable<Person> GetAllPersonRecords()
{
   using (var connection = CreateConnection())
   using (var command = CreateCommand())
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/pull/254)_

### [#247 Support Entity Framework in CreateMapExpression](https://github.com/AutoMapper/AutoMapper/pull/247)

Hello,

I have made changes to enhance the support for building queries that translate to SQL using the Entity Framework. 
- Allow nested queries that can be mapped to SQL. 
- Added support for mapping to Arrays using CreateMapExpression.
- Created Unit Test cases for Linq Expressions.

``` c#
 Mapper.CreateMap<Entity, EntityViewModel>()
.ForMember(m => m.SubEntityNames, o => o.MapFrom(f => f.SubEntities.Select(e => e.Name)));
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/pull/247)_

### [#209 Shortcut for mapping subtypes](https://github.com/AutoMapper/AutoMapper/issues/209)

instead of writing:
               .ForMember(dto => dto.Contact, opt => opt.MapFrom(src => Mapper.Map<SOHeader, SalesOrderContact>(src)))

it would be nice to write something like

```
           .ForMember(dto => dto.Contact, opt => opt.UsingMap<SOHeader, SalesOrderContact>() )
```

<!---
@huboard:{""order"":64.0}
-->

## Improvements

### [#489 Support for WP8.1](https://github.com/AutoMapper/AutoMapper/issues/489)

Hi Jimmy!
Is it possible for you to add support for WP8.1/Universal Apps?

### [#482 Mapper.AssertConfigurationIsValid<TProfile>()](https://github.com/AutoMapper/AutoMapper/issues/482)

I like to have one unit test for each profile I've defined, so I use the overload of `Mapper.AssertConfigurationIsValid()` that takes a profile name. However, I'd rather have a type-safe reference to the profile than a string, since if I happen to have misspelled the profile name in the test, my test will always pass.

I would therefore suggest the addition of the following method to the `Mapper` class:

```
public static void AssertConfigurationIsValid<TProfile>()
    where TProfile : Profile, new()
{
    AssertConfigurationIsValid(new TProfile().ProfileName);
}
```

As far as I can tell that's all it would take.
_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/482)_

### [#480 Issue #473. Static DynamicMap and CreateMap APIs should be thread-safe](https://github.com/AutoMapper/AutoMapper/pull/480)

It's variant of changes. Mostly idea, because of strong types are used and not all platforms were tested.

### [#473 Static DynamicMap and CreateMap APIs should be thread-safe](https://github.com/AutoMapper/AutoMapper/issues/473)

I know, there have been closed bug reports in the past (#208, #50), but we just stumbled into the same trap. Since AutoMapper's primary API is static and AutoMapper is meant to be used in complex applications, we automatically assumed that it must be thread-safe.

Instead, it is not - calling `DynamicMap` and `CreateMap` on different threads can lead to (and, in our case, has lead to) multithreading issues. As static APIs are bound to be called from different threads, I want to again raise this request for thread-safe static APIs.

(Indeed, the static `DynamicMap` API is useless as long as not thread-safe, isn't it? In what context could you ever use it in an application?)

### [#468 Update QueryableExtensions.cs](https://github.com/AutoMapper/AutoMapper/pull/468)

Handles null source property so it will not create an object with possible non-nullable properties which would result in an exception.

### [#466 Set ResolutionContext.DestinationValue when it is resolved](https://github.com/AutoMapper/AutoMapper/pull/466)

When a value is resolved, set it on ResolutionContext.DestinationValue so that subsequent mappers in the resolution chain can make use of the resolved value.

This is in regards to my efforts to use AutoMapper to map from a DTO to a domain model that uses DDD, see https://groups.google.com/forum/#!topic/automapper-users/_xm0A-mA03U.

### [#465 Linq expression builder doesn't support max depth](https://github.com/AutoMapper/AutoMapper/issues/465)

There is a MaxDepth configuration option for CreateMap, but seems the linq expression doesn't respect that. So if I have circular references of an entity and its property, .Project() would result in stackoverflow. 

```
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using System.Data.Entity;

```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/465)_

### [#464 3.1.1 not CLS-Compliant](https://github.com/AutoMapper/AutoMapper/issues/464)

Automapper 2.X was CLS-Compliant. Is there a reason that 3.1.1 is no longer CLS Compliant?  Can the next version be CLS-Compliant again?

### [#458 AutoMapper.Net4.dll twofold in main project folder and References](https://github.com/AutoMapper/AutoMapper/issues/458)

When I use NuGet to get AutoMapper, AutoMapper.Net4.dll appears properly in References directory and in main project folder. It looks bad when same dll appears in two places - waste of resources. It is really needed in main folder? Any other NuGet project has that behavior :/
![automapper](https://f.cloud.github.com/assets/649986/2158599/25a1f2d6-9496-11e3-92dd-345afe8ee226.png)

### [#451 ReverseMap and Inheritance](https://github.com/AutoMapper/AutoMapper/issues/451)

I'm trying to do reverse mapping rules to go back and forth between complex objects using inheritance on both sides. When mapping in the reverse way, it seems that the map create an instance of the parent class instead of the child class like it does in normal mode.

```
namespace ReverseInheritanceTest
{
    [TestFixture]
    public class ReverseInheritanceTest
    {
        [SetUp]
        public void SetUp()
        {
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/451)_

### [#448 AutoMapper logo broken in ReadMe.](https://github.com/AutoMapper/AutoMapper/issues/448)

### [#447 Issue #274 - Reopened for Enumerable.Empty<>](https://github.com/AutoMapper/AutoMapper/pull/447)

Pull request from thread for Isssue #274

### [#445 Provide context information when mapping](https://github.com/AutoMapper/AutoMapper/issues/445)

I've got a situation where I want to create a mapping, but the mapping depends on the individual call to Map. For example, say I have the following source and destination objects:

``` csharp
public class Restaurant
{
    ...
    public DbGeography Location { get; set; }
}

public class RestaurantDto
{
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/445)_

### [#444 Fixed a NullReferenceException thrown by QueryableExtensions with Inherited Explicit Mapping](https://github.com/AutoMapper/AutoMapper/pull/444)

Resolves issue #443.

Fixes NullReferenceException in PropertyMap.ResolveExpression method (used by QueryableExtensions ) when Explicit Mapping is inherited.

### [#443 QueryableExtensions throw NullReferenceException when Inherited Explicit Mapping is used](https://github.com/AutoMapper/AutoMapper/issues/443)

PropertyMap.ResolveExpression method throws a NullReferenceException when trying to .Project().To<>() using inherited MapFrom mappings.

### [#438 Updating NuGet package to version 3.1.1.0 adds Automapper.Net4.dll file to project](https://github.com/AutoMapper/AutoMapper/issues/438)

After upgrading from AutoMapper 3.1.0.0 to 3.1.1.0, a file entry has been added to the root of the project pointing to the Automapper.Net4.dll file sitting in the packages directory. Was that intentional? If so, what's the purpose / reason for this file getting added to the project?

### [#436 TypeMapFactory fields should not be static](https://github.com/AutoMapper/AutoMapper/issues/436)

The TypeMapFactory class has some static fields in it that are causing some problems in a multi threaded environment (see mailing list, ""Automapper Invalid Operation and Index Out of Range exceptions"", for more explanation).

The fields are: 

private static readonly IDictionaryFactory DictionaryFactory = PlatformAdapter.Resolve<IDictionaryFactory>();
        private static readonly Internal.IDictionary<Type, TypeInfo> _typeInfos =
            DictionaryFactory.CreateDictionary<Type, TypeInfo>();

Mark

### [#424 ReverseMap() fails](https://github.com/AutoMapper/AutoMapper/issues/424)

I found a strange behavior in ReverseMap().
I have to map these classes  together, in both ways:

```
public class MyClass1
{
    public int MyProperty1 { get; set; }
}
public class MyClass2
{
    public int MyProperty1 { get; set; }
    public int MyProperty2 { get; set; }
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/424)_

### [#423 Added a new mapping expression - IgnoreAllPropertiesWithAnInaccessibleSetter()](https://github.com/AutoMapper/AutoMapper/pull/423)

IgnoreAllPropertiesWithAnInaccessibleSetter() supports scenarios where the destination type contains several properties with private or protected setters that should not be mapped from the source type.

I added a test class with four ""facts"" for this, and they all pass. I also added summary documentation.

This addresses https://github.com/AutoMapper/AutoMapper/issues/187 (and it appears to be related to https://github.com/AutoMapper/AutoMapper/issues/173 and https://github.com/AutoMapper/AutoMapper/issues/218).

(Note: I previously submitted a pull request with a different solution involving an overload to AssertConfigurationIsValid(), but I believe this is a better solution because it allows more fine-grained control and doesn't make any existing methods obsolete. I also managed not to screw up the line endings this time :))

### [#416 ValueResolver in child mapping incorrectly uses parent type instead of child type of property](https://github.com/AutoMapper/AutoMapper/issues/416)

A bit difficult to explain except trough code. I understand this is probably an edge case but it's something we ran into (our backend is quite inconsistent at times this is an attempt to fix that).

```
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using AutoMapper;

namespace TestConsoleApplication
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/416)_

### [#410 Update QueryableExtensions.cs](https://github.com/AutoMapper/AutoMapper/pull/410)

Handles null source property so it will not create an object with possible non-nullable propeerties which would result in an exception.

### [#403 Project().To fails when Source & Destination types have inner ICollection of different types](https://github.com/AutoMapper/AutoMapper/issues/403)

Using AutoMapper version 3.1.0.1032 with EntityFramework 5.  Attempting to use the projection features of AutoMapper.

Consider the following:

```
namespace Domain
{    
   public class Scenario
   {
       public int Id { get; set; }
       public string Name { get; set; }
       public ICollection<Domain.Characteristic> Characteristics { get; set; }
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/403)_

### [#399 StackOverflowException when calling Project on an IQueryable with nested classes](https://github.com/AutoMapper/AutoMapper/issues/399)

If I have a class with a property that it's of the same type of the class, whenever I used the Project extension on an IQueryable of the class, the AutoMapper returns a StackOverflowException.

Using for example the same source and destinations classes of the AutoMapper.UnitTests.MaxDepthTests, if we run the following code the exception is raised:

```
        Mapper.CreateMap<Source, Destination>()
            .ForSourceMember(src => src.Children, opt => opt.Ignore())
            .ForSourceMember(src => src.Parent, opt => opt.Ignore());

        var destination = _source.Children.AsQueryable().Project().To<Destination>();
```

Thanks,
_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/399)_

### [#281 AutoMapper Condition check](https://github.com/AutoMapper/AutoMapper/issues/281)

Hi,
I am using AutoMapper 2.2.1-ci9000, and I have the following problem:

I would like to map property only if destination value is null, I am using the code:

```
Mapper.CreateMap<ADGroup, Group>()
        .ForMember(dep => dep.Image, opt =>
                                                        {
                                                            opt.Condition(r => r.DestinationValue == null);
                                                            opt.MapFrom(src => _groups.GetImage(src)); //  <-- lazy load photo
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/281)_

### [#279 byte array to byte array is very slow.](https://github.com/AutoMapper/AutoMapper/issues/279)

Mapping a byte[] property to a byte[] property is terribly slow. It is typically 50 times slower than a plain Array.Copy(). It seems automapper is handling byte[] as an IEnumerable<byte> and maps every byte individually.

One of the mapped classes (tested with Data = new byte[1000])
    public class Document
    {
        public int Id { get; set; }
        public byte[] Data { get; set; }
    }

Adding the following map solves the issue:
    Mapper.CreateMap<byte[], byte[]>().ConstructUsing(src =>
_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/279)_

### [#263 Checking Destination Value before copying](https://github.com/AutoMapper/AutoMapper/issues/263)

I am trying to copy source value only if the destination value is null.  I am using the following map

```
     Mapper.CreateMap<BM.AudioSetting, BM.AudioSetting>()
            .ForMember(dest => dest.MSOffsetInherited, opt =>
                                                           {
                                                               opt.Condition(src => src.DestinationValue == null);
                                                               opt.MapFrom(src => src.MSOffset);
                                                           });
```

In my condition I am checking to make sure the destination value is null before mapping.  The problem is the copying is happening all the time regardless of the destination value.

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/263)_

## Bugs

### [#476 Mapper.Initialize with null or NOOP throws odd exception](https://github.com/AutoMapper/AutoMapper/issues/476)

Using version 3.0.0.

Following code blows a gasket:

```
    public void Initialize(string assemblySearchString)
    {
        List<Profile> profiles = new List<Profile>();
        var profileType = typeof(Profile);
        var assemblies = AppDomain.CurrentDomain.GetAssemblies()
            .Where(a => a.FullName.Contains(assemblySearchString));
        foreach (var assembly in assemblies)
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/476)_

### [#462 Fix for invalid cast exception when trying to map to not IList class](https://github.com/AutoMapper/AutoMapper/pull/462)

Fix for invalid cast exception when trying to map with EnumerableMapper to destination of IEnumerable, but not IList type

### [#457 Issue with Automapper.targets](https://github.com/AutoMapper/AutoMapper/issues/457)

Including the latest added automapper.targets file breaks my build for some weird reason, It gives a lot of assembly reference not found errors:

```
.Web\Domain\Auth\SecretRepository.cs(8,30,8,34): error CS0234: The type or namespace name 'Auth' does not exist in the namespace 'HearthstoneTracker' (are you missing an assembly reference?)
.Web\Domain\Auth\SecretRepository.cs(9,30,9,34): error CS0234: The type or namespace name 'Auth' does not exist in the namespace 'HearthstoneTracker' (are you missing an assembly reference?)
.Web\Domain\Auth\SecretRepository.cs(15,37,15,54): error CS0246: The type or namespace name 'ISecretRepository' could not be found (are you missing a using directive or an assembly reference?)
.Web\Domain\Auth\SecretRepository.cs(15,56,15,71): error CS0246: The type or namespace name 'ILookupUsername' could not be found (are you missing a using directive or an assembly reference?)
```

And that goes on an on for the referenced Class librariy in this web project.

Nothing fancy in the project (asp.net mvc 5 project referencing one class library). If I remove the Automapper.targets file from the project, everything is ok.

Checking the build log for both cases, it looks like when adding .targets file. csc.exe is not adding my referenced class library as a /reference: argument.

Is there some conflict with the 'ResolveAssemblyReferences' target maybe?

---

Ok, I found the issue.

Replace

```
<CoreBuildDependsOn>
  CopyAutoMapperAssembly;
  $(CoreBuildDependsOn)
</CoreBuildDependsOn>
```

With:

```
<CoreBuildDependsOn>
  $(CoreBuildDependsOn);
  CopyAutoMapperAssembly
</CoreBuildDependsOn>
```

I would send a PR normally, but i'd have to clone the whole repo to change 2 lines. Looks like an easy fix :-)

### [#452 DataReader mapping returns wrong type - BuilderKey.Equals() is wrong](https://github.com/AutoMapper/AutoMapper/issues/452)

I've been having an intermittent problem with mapping from a IDataRecord (SqlDataReader) to a variety of POCO objects. All my data records are identical (same column names) but I can map them into different classes.

A typical error would be 

```
""X.DistributorSummary"" is not of type ""X.ShareClassSummary"" and cannot be used in this generic collection.
Parameter name: value
   at System.ThrowHelper.ThrowWrongValueTypeArgumentException(Object value, Type targetType)
   at System.Collections.Generic.List`1.System.Collections.IList.Add(Object item)
   at AutoMapper.Mappers.DataReaderMapper.LoadDataReaderViaList(IDataReader dataReader, IMappingEngineRunner mapper, Build buildFrom, ResolutionContext resolveUsingContext, Type elementType)
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/452)_

### [#450 Getting ""Conflicting File Modification Detected"" for NuGet package w/ AutoMapper dependency](https://github.com/AutoMapper/AutoMapper/issues/450)

I was experimenting with creating my own NuGet package for a custom library, and I made AutoMapper one of the dependencies. When I went to install my custom NuGet package, I ran into this error dialog:

![conflicting file dialog](https://f.cloud.github.com/assets/1298521/1979964/6f516a7c-83b8-11e3-8ad1-143894d7ee56.png)

This appears to be related to the ""AutoMapper.Net4.dll"" link, which is the current solution for issue https://github.com/AutoMapper/AutoMapper/issues/318.

Potentially better solutions include (1) the technique is outlined in [this blog post by Alex Yakunin](http://blog.alexyakunin.com/2009/09/making-msbuild-visual-studio-to.html) or (2) adding a post-build event command line that uses `xcopy` to make sure the DLL ends up in the output directory, as in [EntityFramework.SqlServerCompact](http://www.nuget.org/packages/EntityFramework.SqlServerCompact/).

### [#433 Cannot Ignore Setter Only Property](https://github.com/AutoMapper/AutoMapper/issues/433)

tried by property name and get

```
        Mapper
            .CreateMap<Source, Desitination>()
            .ForMember(""Property"", o => o.Ignore());

AutoMapper.AutoMapperMappingException
Missing type map configuration or unsupported mapping.

Mapping types:
Source -> Desitination
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/433)_

### [#432 ForAllMembers condition breaks after upgrading to 3.1.0](https://github.com/AutoMapper/AutoMapper/issues/432)

We just upgraded from 3.0.0 to 3.1.0 and started getting an issue with mappings with the following definition:

```
.ForAllMembers(o => o.Condition(c => !c.IsSourceValueNull));
```

This was previously functioning correctly and would not attempt to map properties which did not have a source value. After the upgrade, it seems that Automapper, when faced with a destination member that has no matching source member, will attempt to map from the source type to the destination member. This then throws a mapping exception because there is no mapping definition for the source type to any of the destination property types. Previously, Automapper seemed to rightfully ignore members which did not have a matching source member.

We changed the condition line to:

```
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/432)_

### [#430 Collection mapping is broken after upgrade to Automapper 3.*, when collection is lazily initialized](https://github.com/AutoMapper/AutoMapper/issues/430)

Consider these classes:

```
    class Master
    {
        public int Id { get; set; }
        public ObservableCollection<Detail> Details
        {
            get
            {
                return details ?? (details = new ObservableCollection<Detail>());
            }
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/430)_

### [#425 The EntityCollection has already been initialized in automapper since 2.2.0 version](https://github.com/AutoMapper/AutoMapper/issues/425)

Hello!

Starting with 2.2.0 version of automapper I'm getting ""The EntityCollection has already been initialized"" exception while trying to map from data model into an EntityObject from edmx model (generated by EF DB first method) containing EntityCollection field with ""((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection"" method in setter.

I tried filling the EntityCollection property using add() method and .AfterMap in Map configuration. It works ok in such way, except for it creates a problem with relationships recursion.

I tried looking for the commit which have broken this stuff and found it: https://github.com/AutoMapper/AutoMapper/commit/6c38546861288d28add8d2073b91a68ce5dc5ff9

So it turned out that changing

```
object destinationValue = propertyMap.GetDestinationValue (mappedObject);
```

_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/425)_

### [#413 Automapper setting a property name Type incorrectly](https://github.com/AutoMapper/AutoMapper/issues/413)

I have an Entity with the property named TYPE and when I create the mapping there is no additional mapping for this field.

When I query the entity I get entity.TYPE = ""XYZ""

However, right after I execute

 Mapper.Map(source: dto, destination: entity);

my destination now has entity.TYPE = ""MyProject.DTO"" where my MyProject.DTO is the fullname of the GetType() function.

Is this a known issue? Or is there a restriction in regards of naming of the fields?
_Content trimmed. See [full issue](https://github.com/AutoMapper/AutoMapper/issues/413)_

## Where to get it

You can download this release from:
- [nuget](http://www.nuget.org/packages/AutoMapper/)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/272674/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/272674,develop,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.2.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.2.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.2.0,v3.2.0,False,False
134583,2013-12-31T01:38:12Z,2013-12-31T02:23:44Z,3.1.1,"Maintenance release:
- Mapping of IList properties map as reference #428 
- Bug in Install.ps1 - method Where not found #418 

This fixes bugs introduced in v3.1.0.

Full list of [closed issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=7&state=closed)
Full list of [changes](https://github.com/AutoMapper/AutoMapper/compare/3.1.0...3.1.1)
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/134583/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/134583,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.1.1,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.1.1,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.1.1,v3.1.1,False,False
99387,2013-11-17T20:59:39Z,2013-11-21T03:50:49Z,3.1.0,"### AutoMapper expands its Portable Class Library support to include Xamarin. AutoMapper 3.1 supports the following runtimes:
- .NET 4 and higher
- Silverlight 5
- Windows Phone 8
- .NET for Windows Store apps (WinRT)
- Xamarin.iOS
- Xamarin.Android

Full list of [closed issues](https://github.com/AutoMapper/AutoMapper/issues?milestone=6&state=closed)
Full list of [changes](https://github.com/AutoMapper/AutoMapper/compare/3.0.0...3.1.0)

### Enhancements
- Sharing base type mappings between derived types #309 
- Added possibility to disable constructor mapping for a profile #401 
- Extremely slow with large arrays #390 
- Revamped API for custom object mappers #385 
- Support array types in LINQ queries #375 
- AutoMapper now signed (again) #373 
- Support for MonoTouch #372 
- Support for MonoDroid #371 
- Supporting custom expressions for child members in LINQ queries #366 
- Automatic support of Enumerable/Queryable extension methods (Count() etc) #365 
- Complete support for inheriting parent mappings, for multiple children #348, #339, #329, #315, #307
- Add Items bag to CreateMap and Map options #322 
- Supporting child containers for MappingEngine instance #320 

### Bug Fixes
- PCL installation when used in a base project #318 and others
- Cast exceptions for nullable types #332 
- Concurrency problems in WP8 #394 
- Bug in TypeInfo with inherited fields #386 
- Removed swallowing of exceptions #122 
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/99387/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/99387,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.1.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.1.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.1.0,v3.1.0,False,False
32732,2013-08-25T18:39:17Z,2013-08-25T19:15:17Z,3.0.0,"### AutoMapper is now a Portable Class Library (PCL) to target multiple platforms including:
- .NET 4 and higher
- Silverlight 4 and higher
- Windows Phone 7.5 and higher
- .NET for Windows Store apps (WinRT)

Quite a bit of under-the-covers refactoring was needed to convert to a PCL, which should make it easier to have cross-platform support going forward.

### New features:
- Cross platform support
- Code comments for public API
- Collection, MapFrom and flattening support in LINQ projection

### Issues closed:
- Automapper: complex nested collections mapping with Entity Framework #360 
- AutoMapper uses Expression.Invoke when Entity Framework does not support it. #358 
- FileNotFoundException in PCL on WinRT App #353 
- Different destination instance using Mapper.Map<TSource, TDestination> with CreateMissingTypeMaps option #352 
- AutoMapper QueryableExtensions throws NullReference #351 
- MappingEngine.CreateMapExpression #347 
- Release notes / Change log for project #346 (hardy-har-har)
- Cannot project array type #344 
- Entity Framework 5.0 + Project() = Null reference #343 
- Edited QueryableExtensions so that it handles OrderBy and ThenBy on child collections. #327 
- Fixed projection with null reference or null collection in source object. #310 
- CreateMapExpression MapFrom problem #299  
",https://api.github.com/users/jbogard,104498,jbogard,https://api.github.com/repos/AutoMapper/AutoMapper/releases/32732/assets,https://api.github.com/repos/AutoMapper/AutoMapper/releases/32732,master,https://api.github.com/repos/AutoMapper/AutoMapper/tarball/v3.0.0,https://github.com/AutoMapper/AutoMapper/releases/tag/v3.0.0,https://api.github.com/repos/AutoMapper/AutoMapper/zipball/v3.0.0,v3.0.0,False,False
