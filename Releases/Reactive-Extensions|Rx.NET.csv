id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6524775,2017-05-27T22:16:28Z,2017-05-27T22:35:30Z,Reactive Extensions v4 Preview 1,"The first v4 preview of Rx addresses a number of issues and contains several enhancements.

The biggest enhancement is consolidating the existing packages into one main package, `System.Reactive`. This will prevent most of the pain around binding redirects that were caused by [#205](https://github.com/Reactive-Extensions/Rx.NET/issues/205). If you are using Rx 4.0 and need to use libraries built against Rx 3.x, then you need to also install the compatibility package `System.Reactive.Compatibility`. That package contains facades with type forwarders to the new assembly so types are unified correctly. You only need this compatibility package if you are consuming a library built against 3.x. You do not need it otherwise.

There have also been other performance enhancements in the codebase and various fixes as noted below:

 - [#393](https://github.com/Reactive-Extensions/Rx.NET/pull/393) - use SourceLink.Create.CommandLine contributed by Cameron Taggart ([ctaggart](https://github.com/ctaggart))
 - [#391](https://github.com/Reactive-Extensions/Rx.NET/pull/391) - Using C# 7 pattern matching features contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#388](https://github.com/Reactive-Extensions/Rx.NET/pull/388) - First steps to reduce operator object layouts contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#387](https://github.com/Reactive-Extensions/Rx.NET/pull/387) - Rename Omega methods contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#386](https://github.com/Reactive-Extensions/Rx.NET/pull/386) - Remove unused usings in operators contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#385](https://github.com/Reactive-Extensions/Rx.NET/pull/385) - Seal operators contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#384](https://github.com/Reactive-Extensions/Rx.NET/pull/384) - Remove NO_PERF conditional compilation contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#383](https://github.com/Reactive-Extensions/Rx.NET/pull/383) - Fixing names in authors.txt contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#381](https://github.com/Reactive-Extensions/Rx.NET/pull/381) - Misc concurrency improvements contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#380](https://github.com/Reactive-Extensions/Rx.NET/pull/380) - Some improvements to internal types contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#379](https://github.com/Reactive-Extensions/Rx.NET/pull/379) - Misc. improvements to Disposable types contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#378](https://github.com/Reactive-Extensions/Rx.NET/pull/378) - Fixing XML doc comments contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#377](https://github.com/Reactive-Extensions/Rx.NET/pull/377) - Misc. improvements to subjects contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#376](https://github.com/Reactive-Extensions/Rx.NET/pull/376) - Some improvements to core classes contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#375](https://github.com/Reactive-Extensions/Rx.NET/pull/375) - Cleanup of TaskObservableExtensions contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#374](https://github.com/Reactive-Extensions/Rx.NET/pull/374) - Eta reduction of some lambdas contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#373](https://github.com/Reactive-Extensions/Rx.NET/pull/373) - Using some C# 6.0 features contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#372](https://github.com/Reactive-Extensions/Rx.NET/pull/372) - Removing a few conditional compilation symbols contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#371](https://github.com/Reactive-Extensions/Rx.NET/pull/371) - Remove conditional support for expression trees contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#369](https://github.com/Reactive-Extensions/Rx.NET/pull/369) - Removing conditional usage of TLS contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#368](https://github.com/Reactive-Extensions/Rx.NET/pull/368) - Removing conditional use of ConditionalWeakTable contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#367](https://github.com/Reactive-Extensions/Rx.NET/pull/367) - Removing conditional compilation for TPL contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#365](https://github.com/Reactive-Extensions/Rx.NET/pull/365) - Removing remants of Windows Phone 7 support contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#364](https://github.com/Reactive-Extensions/Rx.NET/pull/364) - Removing conditional compilation for Silverlight contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#363](https://github.com/Reactive-Extensions/Rx.NET/pull/363) - Removing checks for concurrent APIs contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#362](https://github.com/Reactive-Extensions/Rx.NET/pull/362) - Removing checks for WeakReference<T> contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#361](https://github.com/Reactive-Extensions/Rx.NET/pull/361) - Task.Delay exists on all platforms now contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#360](https://github.com/Reactive-Extensions/Rx.NET/pull/360) - Removing traces of a backport of Semaphore contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#359](https://github.com/Reactive-Extensions/Rx.NET/pull/359) - All timers now have the self-rooting behavior contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#358](https://github.com/Reactive-Extensions/Rx.NET/pull/358) - Using nameof when looking up members through reflection contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#357](https://github.com/Reactive-Extensions/Rx.NET/pull/357) - Removing checks for absence of higher arity delegate types contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#356](https://github.com/Reactive-Extensions/Rx.NET/pull/356) - Removing check for 64-bit interlocked instructions contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#355](https://github.com/Reactive-Extensions/Rx.NET/pull/355) - Removing check for absence of Stopwatch contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#354](https://github.com/Reactive-Extensions/Rx.NET/pull/354) - Removing checks for EventArgs constraints contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#353](https://github.com/Reactive-Extensions/Rx.NET/pull/353) - Delegate invocation using C# 6.0 syntax contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#352](https://github.com/Reactive-Extensions/Rx.NET/pull/352) - Removing checks for absence of SynchronizationContext contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#351](https://github.com/Reactive-Extensions/Rx.NET/pull/351) - Removing checks for absence of HashSet<T> contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#350](https://github.com/Reactive-Extensions/Rx.NET/pull/350) - Removing TASKEX symbol contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#349](https://github.com/Reactive-Extensions/Rx.NET/pull/349) - Removing some unused usings contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#348](https://github.com/Reactive-Extensions/Rx.NET/pull/348) - Removing backported BCL types contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#347](https://github.com/Reactive-Extensions/Rx.NET/pull/347) - Using nameof in more places contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#346](https://github.com/Reactive-Extensions/Rx.NET/pull/346) - Cleaning up XML doc comments contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#345](https://github.com/Reactive-Extensions/Rx.NET/pull/345) - Use of Interlocked on volatile fields no longer raises CS0420 contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#344](https://github.com/Reactive-Extensions/Rx.NET/pull/344) - Removing NO_VARIANCE checks contributed by Bart J.F. De Smet ([bartdesmet](https://github.com/bartdesmet))
 - [#338](https://github.com/Reactive-Extensions/Rx.NET/pull/338) - enable source link contributed by Cameron Taggart ([ctaggart](https://github.com/ctaggart))
 - [#337](https://github.com/Reactive-Extensions/Rx.NET/pull/337) - [WIP] enable source link contributed by Cameron Taggart ([ctaggart](https://github.com/ctaggart))
 - [#321](https://github.com/Reactive-Extensions/Rx.NET/pull/321) - AsyncEnumerable.ToObservable: Use Try...-methods on TaskCompletionSources to avoid unexpected exceptions when the iterator is cancelled. contributed by Daniel C. Weber ([danielcweber](https://github.com/danielcweber))
 - [#305](https://github.com/Reactive-Extensions/Rx.NET/issues/305) - Incompatibility between System.Reactive.Core and System.Reactive.Windows.Threading 3.1.1 NuGet packages
 - [#302](https://github.com/Reactive-Extensions/Rx.NET/pull/302) - Let IOrderedAsyncQueryable<T> implement IOrderedAsyncQueryable contributed by Axel Heer ([axelheer](https://github.com/axelheer))
 - [#301](https://github.com/Reactive-Extensions/Rx.NET/issues/301) - AsyncEnumerableQuery does not implement IOrderedAsyncQueryable
 - [#299](https://github.com/Reactive-Extensions/Rx.NET/issues/299) - Version 3.1.1 has different DLL versions, depending on the platform.
 - [#199](https://github.com/Reactive-Extensions/Rx.NET/issues/199) - Consolidate core Rx libs into single library/package ",https://api.github.com/users/onovotny,1427284,onovotny,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/6524775/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/6524775,develop,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v4.0.0-preview1,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v4.0.0-preview1,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v4.0.0-preview1,v4.0.0-preview1,False,True
4718159,2016-11-21T13:57:30Z,2016-11-21T13:59:51Z,Rx and Ix 3.1.1,"Minor packaging update that ensures the `NETStandard.Library` meta-package isn't referenced by projects targeting the Desktop .NET Framework (4.5 and 4.6).
",https://api.github.com/users/onovotny,1427284,onovotny,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/4718159/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/4718159,develop,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v3.1.1,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v3.1.1,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v3.1.1,v3.1.1,False,False
4160034,2016-11-03T00:42:32Z,2016-09-23T12:46:32Z,Rx and Ix 3.1 ,"The Reactive and Interactive Extensions v3.1 is a minor update to the libraries, consisting mostly of bug fixes and small enhancements.

The full list of items fixed/improved is available [here](https://github.com/Reactive-Extensions/Rx.NET/milestone/2?closed=1), but below are some key highlights:
- #205 Implement an assembly version strategy
- #237 Rewrite of Ix Async to reduce memory allocations, make the code easier to read and fix many bugs
- #273 Restored access to the `PlatformEnlightenmentProvider.Current` setter 

Many thanks to @aelij for his excellent work in converting Ix Async to use `async` and `await` in #170.

**Note for Desktop .NET Users**: As part of #205, we now have a strict assembly versioning scheme in place. This may require binding redirects to work correctly. NuGet will generate these for you, so there's nothing you should have to do. If you're seeing issues, before reporting a bug, please verify you have `AutoGenerateBindingRedirects` enabled as described [here](https://msdn.microsoft.com/en-us/library/2fc472t2%28v=vs.110%29.aspx). You may need to manually add it some older projects.
",https://api.github.com/users/onovotny,1427284,onovotny,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/4160034/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/4160034,master,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v3.1.0,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v3.1.0,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v3.1.0,v3.1.0,False,False
3493023,2016-06-21T19:35:15Z,2016-06-27T13:38:48Z,Reactive and Interactive Extensions for .NET 3.0,"Major update from [version 2.2.5](https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v2.2.5) adding support for .NET Core and the .NET Platform Standard. In addition to .NET Core support, a few bugs were addressed.

This update is the first after [moving to the .NET Foundation](http://www.dotnetfoundation.org/blog/rx-net-welcome). As such, there are a few noteworthy items:
- The strong name key has been changed. The old key was a Microsoft key that could not be fully checked-in. The new key is checked in, allowing anyone to create custom builds easily.
  The package names have all changed
- The NuGet package names have changed. The `Rx-*` and `Ix-*` packages have been renamed to match their library names, keeping inline with the rest of .NET Core. As the strong name key had to change, we did update the old packages as the new binaries incompatible due to strong name conflicts. They are fully source-code compatible.
  - Use `System.Reactive` instead of `Rx-Main`
  - Use `System.Interactive` instead of `Ix-Main`
  - Use `System.Interactive.Async` instead of `Ix-Async`
- The supported platforms are .NET Platform Standard 1.0 and higher. This means the following minimum versions:
  - .NET Core App 1.0
  - .NET 4.5
  - Windows 8
  - Windows Phone 8 Silverlight
  - Windows Phone 8.1 
- On Visual Studio 2012 and 2013, NuGet 2.12 is required. On VS 2015, NuGet 3.4 or later is required.

As always, Rx and Ix have enhanced support per-platform, ensuring an optimal experience based on your target runtime.
",https://api.github.com/users/onovotny,1427284,onovotny,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/3493023/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/3493023,master,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v3.0.0,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v3.0.0,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v3.0.0,v3.0.0,False,False
492171,2014-08-14T19:42:13Z,2014-08-14T19:46:55Z,Reactive Extensions for .NET version 2.2.5,"Minor update from [version 2.2.4](https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v2.2.4) to update the support for Universal applications.  No new functionality was added for this release.

## Closed Issues
- #8  - Rx PCL target should be changed to portable-win8+net45+wp8+wpa81
- #10 -  Profile78 => Profile259, which is the same profile without WCF #10 
",https://api.github.com/users/mattpodwysocki,49051,mattpodwysocki,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/492171/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/492171,develop,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v2.2.5,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v2.2.5,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v2.2.5,v2.2.5,False,False
295092,2014-04-29T13:13:24Z,2014-04-29T19:34:36Z,Reactive Extensions version 2.2.4,"This is a minor update from Rx.NET v2.2.3 which includes two fixes.  First is the support for Windows Universal libraries, and the second is `ReplaySubject` performance enhancements.  With the help from the community, we are moving the Reactive Extensions forward and we have plenty more coming soon.

## Windows Universal Support

With the release of Windows Phone 8.1, it is now possible to use the Windows Runtime to build apps that can target each form factor in the family of Windows devices. Using the universal Windows app project templates, you can now create one app where your business logic can be surfaced up through a user experience relevant to the device. This unified approach to app development means that your app has the potential to reach not just Windows phones and tablets, but Windows laptops and workstations as well.

Previously, our NuGet packages did not support Universal Windows Apps, but now, thanks to work from @paulcbetts, you can now write Universal Apps using the Reactive Extensions.

## ReplaySubject Performance Enhancements

During the development of the Reactive Extensions version 2.0+, we have had a focus on performance as noted in [Bart de Smet's post](http://blogs.msdn.com/b/rxteam/archive/2012/03/12/reactive-extensions-v2-0-beta-available-now.aspx) on the [Reactive Extensions Team Blog](http://blogs.msdn.com/b/rxteam/).  One of the overlooked areas of the performance work we did as Subjects.

We had the community step up in this regard to helping performance better on the `ReplaySubject`.  The details are laid out in [this very detailed blog post](http://leecampbell.blogspot.com.au/2014/01/replaysubject-performance-improvements.html).

Many thanks to @LeeCampbell for his hard work for this feature.

## Patterns in Using Generic Virtual Methods Issues

Some patterns in using generic virtual methods may cause increases in compilation time and size on disk when used with Microsoft pre-compilation technologies such as NGEN. This bug fix removes those patterns so that Microsoft pre-compilation technologies such as NGEN work better with the Reactive Extensions library. This change was tested and found to have no noticeable performance impact, other than stabilizing compilation times and the size on disk.

## Closed Issues
- #4 - Add Windows Universal support
- #3 - Adding ReplaySubject perf improvements

## Changelog
- https://github.com/Reactive-Extensions/Rx.NET/commit/4be75495a11ab799b6b7ad7a3889a15d7d5df7d5 - Updating import.targets for flattening
- https://github.com/Reactive-Extensions/Rx.NET/commit/d56e5d1076bf2d6e5eacee2b03420a32fb354bbc - Add Wpa81 to BuildAll.proj 
- https://github.com/Reactive-Extensions/Rx.NET/commit/7041c402f8451a1c4b44d3128fcb27812d68bfdb - Universal Unit Tests aren't A Thing yet 
- https://github.com/Reactive-Extensions/Rx.NET/commit/b94b695ea1cac75f3fe2404fa9aa9d05ce89260c - Add Configurations for Wpa81 
- https://github.com/Reactive-Extensions/Rx.NET/commit/03368dab977141bbd099d117af5aa9cf8bebe3ee - Add a Windows 8.1 + Windows Phone 8.1 Target 
- https://github.com/Reactive-Extensions/Rx.NET/commit/7ea7fbbe026047e5057e00cd8f2125491d9bd5b5 - Some patterns in using generic virtual methods may cause increases in compilation time and memory usage
- https://github.com/Reactive-Extensions/Rx.NET/commit/0815ac71b524493483f4bb51196c3c0f892014f3 - Included multiple disposals to Replay UnitTests
- https://github.com/Reactive-Extensions/Rx.NET/commit/98ad5740a38075dfdc979206f91975f6a30fa896 - Remove comments
- https://github.com/Reactive-Extensions/Rx.NET/commit/5449869cd7bed830e9b74eccef821fe5e8748408 - Adding ReplaySubject perf improvements
- https://github.com/Reactive-Extensions/Rx.NET/commit/044afd56c6e3c6dc30ee8baefb45ef4a43ce47d1 - Use background thread for long-running ThreadPoolScheduler
",https://api.github.com/users/mattpodwysocki,49051,mattpodwysocki,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/295092/assets,https://api.github.com/repos/Reactive-Extensions/Rx.NET/releases/295092,develop,https://api.github.com/repos/Reactive-Extensions/Rx.NET/tarball/v2.2.4,https://github.com/Reactive-Extensions/Rx.NET/releases/tag/v2.2.4,https://api.github.com/repos/Reactive-Extensions/Rx.NET/zipball/v2.2.4,v2.2.4,False,False
