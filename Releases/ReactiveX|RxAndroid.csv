id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
4643555,2016-11-12T17:26:32Z,2016-11-12T17:27:15Z,,"**Bugfixes**
- [Pull 347](https://github.com/ReactiveX/RxAndroid/pull/347) - Schedule tasks with negative delays immediately
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/4643555/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/4643555,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/2.0.1,https://github.com/ReactiveX/RxAndroid/releases/tag/2.0.1,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/2.0.1,2.0.1,False,False
4516988,2016-10-29T12:18:27Z,2016-10-29T12:25:35Z,,"General availability of RxAndroid 2.0 for use with RxJava 2.0!

The sections below contain the changes since 2.0.0-RC1.

**API Enhancements**
- [Pull 338](https://github.com/ReactiveX/RxAndroid/pull/338) - Evaluate `Schedulers` initialization via `Callable`
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/4516988/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/4516988,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/2.0.0,https://github.com/ReactiveX/RxAndroid/releases/tag/2.0.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/2.0.0,2.0.0,False,False
3974167,2016-08-25T13:40:47Z,2016-08-25T16:01:51Z,,"RxAndroid 2.0 has been rewritten from scratch to support RxJava 2.0.

The library still offers the same APIs: a scheduler and stream cancelation callback that know about
the main thread, a means of creating a scheduler from any `Looper`, and plugin support for the
main thread sheduler. They just reside in a new package, `io.reactivex.android`, and may have
slightly different names.

For more information about RxJava 2.0 see [its RC1 release notes](https://github.com/ReactiveX/RxJava/releases/tag/v2.0.0-RC1)

Download:

``` groovy
compile 'io.reactivex.rxjava2:rxandroid:2.0.0-RC1'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3974167/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3974167,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/2.0.0-RC1,https://github.com/ReactiveX/RxAndroid/releases/tag/2.0.0-RC1,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/2.0.0-RC1,2.0.0-RC1,False,True
3972288,2016-06-16T22:21:12Z,2016-08-25T13:21:15Z,,"- New: `AndroidSchedulers.reset()` allows clearing the scheduler cache such that the next call to
  `AndroidSchedulers.mainThread()` will ask the `RxAndroidSchedulerHook` to re-create it. This API
  is experimental to match `Schedulers.reset()` in RxJava.
- RxJava dependency now points at v1.1.6.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3972288/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3972288,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/1.2.1,https://github.com/ReactiveX/RxAndroid/releases/tag/1.2.1,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/1.2.1,1.2.1,False,False
3160823,2016-05-03T04:44:24Z,2016-05-04T21:57:22Z,,"- Rewrite the Android-specific schedulers (main thread or custom) to greatly reduce allocation and
  performance overhead of scheduling work.
- `HandlerScheduler.create` has been deprecated in favor of `AndroidSchedulers.from(Looper)` as
  a `Looper` is the actual mechanism of scheduling on Android, not `Handler`.
- Fix: Correct the behavior of `AndroidSchedulers.mainThread()` to only invoke the registered
  `RxAndroidSchedulersHook` for creating the main thread scheduler and to cache the result instead
  of invoking it every time. This behvior change eliminates a performance overhead and brings
  behavior in line with RxJava. If you were relying on the ability to change the main thread
  scheduler over time (such as for tests), return a delegating scheduler from the hook which allows
  changing the delegate instance at will.
- RxJava dependency now points at v1.1.4.
- `RxAndroidPlugins.reset()` is now marked as `@Experimental` to match the RxJava method of the
  same name and behavior.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3160823/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/3160823,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/1.2.0,https://github.com/ReactiveX/RxAndroid/releases/tag/1.2.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/1.2.0,1.2.0,False,False
2261565,2015-12-09T20:23:32Z,2015-12-09T20:24:04Z,,"- New: `MainThreadSubscription` utility class runs its `onUnsubscribe` action on the Android main
  thread. This aids in adding tear-down actions which must be executed on the main thread without
  having to deal with posting to the main thread yourself.
- Fix: Lazily initialize `mainThread()` scheduler so that no Android code is run when overridden.
  This allows unit tests overriding the implementation to work correctly.
- RxJava dependency now points at v1.1.0.

Download:

``` groovy
compile 'io.reactivex:rxandroid:1.1.0'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/2261565/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/2261565,master,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/1.1.0,https://github.com/ReactiveX/RxAndroid/releases/tag/1.1.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/1.1.0,1.1.0,False,False
1648491,2015-08-10T00:39:22Z,2015-08-10T00:42:25Z,1.0.1,"- Fix: Correctly check `isUnsubscribed()` state in `HandlerScheduler`'s worker before scheduling
  more work.
- Fix: Eliminate a potential race condition in `HandlerScheduler` to ensure any posted work will
  be canceled on unsubscription.

Download:

``` groovy
compile 'io.reactivex:rxandroid:1.0.1'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1648491/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1648491,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/1.0.1,https://github.com/ReactiveX/RxAndroid/releases/tag/1.0.1,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/1.0.1,1.0.1,False,False
1633384,2015-08-05T19:39:18Z,2015-08-05T19:39:54Z,1.0.0,"Initial stable release!

In order to provide a library that no project using RxJava would hesitate to depend on, the decision was made to remove the APIs which were not absolutely fundamental to all apps. That is what's contained in this release.

Functionality which was previously part of this library is being explored in separate, modular
libraries:
- `LifecycleObservable`: https://github.com/trello/RxLifecycle
- `ViewObservable` and `WidgetObservable`: https://github.com/JakeWharton/RxBinding

This allows for a simpler process of design, development, and experimentation for the best ways to provide features like hooks into the lifecycle, binding to UI components, and simplifying interaction with all of Android's API. Not only can these projects now have their own release schedule, but it allows developers to pick and choose which ones are appropriate for your
application.

Applications using the various APIs which were previously in this library do not need to update immediately. Due to the number of APIs removed, switching to 1.0 and the use of these third-party libraries should be done gradually.

Breaking changes:
- `AndroidSchedulers.handlerThread()` is now `HandlerScheduler.from()`.
- **All other APIs have been removed** aside from `AndroidSchedulers.mainThread()`, `RxAndroidPlugins`, and `RxAndroidSchedulersHook`.

Download:

``` groovy
compile 'io.reactivex:rxandroid:1.0.0'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1633384/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1633384,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v1.0.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v1.0.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v1.0.0,v1.0.0,False,False
1473880,2015-01-03T16:47:04Z,2015-06-29T16:17:57Z,0.24.0,"This release has some breaking changes:
- `rx.android.observables.AndroidObservable` has changed to `rx.android.app.AppObservable`;
- `ViewObservable` has moved from `rx.android.observables` to `rx.android.view`
- (as part of RxJava's breaking changes) [`collect` has changed](https://github.com/ReactiveX/RxJava/blob/1a94d55fa8896931175896d09b86dca8d8d44f72/CHANGES.md#collect)
",https://api.github.com/users/benjchristensen,813492,benjchristensen,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1473880/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1473880,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v0.24.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v0.24.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v0.24.0,v0.24.0,False,False
1473852,2015-06-29T16:17:27Z,2015-06-29T16:18:17Z,0.25.0,"- New: `RxAndroidPlugins` and its `RxAndroidSchedulersHook` provides a mechanism similar to `RxJavaPlugins` (and its `RxJavaSchedulersHook`) for
  changing the scheduler returned from `AndroidSchedulers.mainThread()` as well as a callback for each subscription on any `Handler`-based scheduler.
- Fix: Ensure errors are properly propagated from `ContentObservable.fromCursor`.
- Fix: `LifecycleObservable` now correctly unsubscribes from its sources.

Breaking changes:
- Users of `AppObservable.bindFragment` with a support-v4 `Fragment` should now use `bindSupportFragment`.
",https://api.github.com/users/benjchristensen,813492,benjchristensen,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1473852/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/1473852,0.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v0.25.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v0.25.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v0.25.0,v0.25.0,False,False
751771,2014-11-12T17:48:40Z,2014-12-03T10:04:33Z,0.23.0,"Mostly internal changes to project setup, code cleanup, etc.

Also added `ViewActions`:
https://github.com/ReactiveX/RxAndroid/pull/27
",https://api.github.com/users/mttkay,102802,mttkay,https://api.github.com/repos/ReactiveX/RxAndroid/releases/751771/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/751771,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v0.23.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v0.23.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v0.23.0,v0.23.0,False,False
631356,2014-10-15T15:32:21Z,2014-10-16T14:17:57Z,0.22.0,"This release adds a number of new operators:
- Add operator to monitor `SharedPreference` changes
- Add view state event types to streamline `ViewObservable`
- Add `OperatorAdapterViewOnItemClick` to observe OnItemClick events in `AdapterView`s
",https://api.github.com/users/mttkay,102802,mttkay,https://api.github.com/repos/ReactiveX/RxAndroid/releases/631356/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/631356,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v0.22.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v0.22.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v0.22.0,v0.22.0,False,False
595128,2014-10-01T06:33:46Z,2014-10-01T06:39:08Z,0.21.0,"This is the first release after splitting from RxJava into its own top level project RxAndroid.

This is the same code as version 0.20.4 except:
- all deprecated methods and types are deleted
- now published to groupId `io.reactivex` instead of `com.netflix.rxjava`
- artifactId is now `rxandroid` instead of `rxjava-android`

```
io.reactivex:rxandroid:0.21.0
```

Issues and discussions specific to RxAndroid should now be had in the [RxAndroid Issues](https://github.com/ReactiveX/RxAndroid/issues). Issues with core `Observable` and operators remain in [RxJava Issues](https://github.com/ReactiveX/RxAndroid/issues).

The artifacts can be found on maven Central at: http://repo1.maven.org/maven2/io/reactivex/rxandroid

Artifacts: [Maven Central](http://search.maven.org/#artifactdetails%7Cio.reactivex%7Crxandroid%7C0.21.0%7C)
",https://api.github.com/users/benjchristensen,813492,benjchristensen,https://api.github.com/repos/ReactiveX/RxAndroid/releases/595128/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/595128,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/v0.21.0,https://github.com/ReactiveX/RxAndroid/releases/tag/v0.21.0,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/v0.21.0,v0.21.0,False,False
595126,2014-10-01T06:29:04Z,2014-10-01T06:37:54Z,0.20.4,"Last release as submodule of of RxJava: https://github.com/ReactiveX/RxJava/releases/tag/0.20.4
",https://api.github.com/users/benjchristensen,813492,benjchristensen,https://api.github.com/repos/ReactiveX/RxAndroid/releases/595126/assets,https://api.github.com/repos/ReactiveX/RxAndroid/releases/595126,2.x,https://api.github.com/repos/ReactiveX/RxAndroid/tarball/0.20.4,https://github.com/ReactiveX/RxAndroid/releases/tag/0.20.4,https://api.github.com/repos/ReactiveX/RxAndroid/zipball/0.20.4,0.20.4,False,False
