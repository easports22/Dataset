id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8157520,2017-10-17T21:16:00Z,2017-10-17T22:44:31Z,Mortred,"* Adds global Hooks and implements error handling hook.
* Deprecates `asSharedSequence` extensions on `ObservableType`.
* Publicly exposes `controlProperty`.

#### Anomalies

* Changes `Observable` extensions to `ObservableType` extensions.
* Changes `UITableView.didUpdateFocusInContextWithAnimationCoordinator` extension argument to `UITableViewFocusUpdateContext`.
* Changes access modifier of `DelegateProxy.setForwardToDelegate` to `open`.",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/8157520/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/8157520,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0,4.0.0,False,False
8039279,2017-10-08T12:13:59Z,2017-10-08T17:28:27Z,37,"* Deprecates `image(transitionType:)` in favor of `image`.
* Changes return type of `ignoreElements` to `Completable`. #1436
* Removes warning of sequence completion from `Binder`. #1431
* Deprecates `Variable` in favor of `BehaviorRelay`.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/8039279/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/8039279,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0-rc.0,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0-rc.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0-rc.0,4.0.0-rc.0,False,True
7956861,2017-10-01T18:28:56Z,2017-10-01T19:14:45Z,MoM,"* Adds `attributedText` to `UITextField`. #1249
* Adds `attributedText` to `UITextView`. #1249
* Deprecates `shareReplayLatestWhileConnected` and `shareReplay` in favor of `share(replay:scope:)`. #1430
* Changes `publish`, `replay`, `replayAll` to clear state in case of sequence termination to be more consistent with other Rx implementations and enable retries. #1430
* Replaces `share` with default implementation of `share(replay:scope:)`. #1430
* Adds `HasDelegate` and `HasDataSource` protocols.
* Updates package version to v4 format. #1418

#### Anomalies

* Adds deprecated warnings to API parts that were missing it. #1427
* Improves memory handling in `isScheduleRequiredKey`. #1428
* Removes pre-release identifier from bundle version to enable `TestFlight` submissions. #1424
* Removes code coverage to enable `TestFlight` submissions. #1423
* Fixes Xcode warnings. #1421",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7956861/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7956861,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0-beta.1,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0-beta.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0-beta.1,4.0.0-beta.1,False,True
7785918,2017-09-17T23:08:40Z,2017-09-18T00:20:28Z,Shavasana,"* Adds `materialize()` operator for RxBlocking's `BlockingObservable`. #1383
* Adds `first` operator to `ObservableType`.
* Deprecates `UIBindingObserver` in favor of `Binder`. #1411
* Adds another specialization of `SharedSequence` called `Signal`.
* Refactors `DelegateProxy` to be type safe.
* Changes nested `SharedSequence` strategy to use inner sharing strategy for result.

#### Anomalies

* Call `controlTextDidChange(â€¦)` as an optional method. #1406
* Fixed issue with `NSControl.rx.value` regarding multiple observers. #1399
* Removes useless extensions from `PrimitiveSequence`. #1248",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7785918/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7785918,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0-beta.0,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0-beta.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0-beta.0,4.0.0-beta.0,False,True
7456990,2017-08-20T18:01:03Z,2017-08-20T19:17:49Z,Enumerated,"* Merges `3.6.1` changes.
* Adds `UIScrollView.willEndDragging` extension. #1365
* Adds `enumerated` operator (deprecates `skipWhileWithIndex`, `takeWhileWithIndex`, `flatMapWithIndex`, `mapWithIndex`).

#### Anomalies
* Fixes gesture recognizer extensions crash. #1382
* Adds `onSubscribed` parameter to `SharedSequence` extensions.",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7456990/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7456990,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0-alpha.1,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0-alpha.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0-alpha.1,4.0.0-alpha.1,False,True
7221889,2017-07-30T21:36:54Z,2017-07-31T07:23:45Z,Polgar,"* Swift 4.0 compatibility
* Changes delegate proxy to use plugin architecture. 

#### Anomalies
* Fixes public interface leakage of `NSKeyValueObservingOptions`. #1164",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7221889/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7221889,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/4.0.0-alpha.0,https://github.com/ReactiveX/RxSwift/releases/tag/4.0.0-alpha.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/4.0.0-alpha.0,4.0.0-alpha.0,False,True
7122032,2017-07-21T08:34:55Z,2017-07-21T11:43:37Z,Oxygen.1,"#### Anomalies

* Fixes compilation issue with Xcode 9b3. #1341
* Fixes issues with `andThen` operator. #1347
* Improves locking behavior of `merge` and `switch` operators. #1344",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7122032/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7122032,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.6.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.6.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.6.1,3.6.1,False,False
7067108,2017-07-17T16:35:44Z,2017-07-17T17:50:40Z,Oxygen,"* Adds `timeout` operator to `PrimitiveSequence` (`Single`, `Maybe`, `Observable`)
* Adds `delay` operator to `SharedSequence`.
* Adds `andThen` operator to `Completeable`.
* Adds `concat` operator to `Completeable`.
* Adds `RxPickerViewDataSourceType`
* Adds `UIPickerView` extensions:
    * `modelSelected`
    * `itemTitles`
    * `itemAttributedTitles`
    * `items`
* Adds `UITableView` extensions:
    * `modelDeleted`
* Adds `UICollectionView` extensions:
    * `itemHighlighted`
    * `itemUnhighlighted`
    * `willDisplayCell`
    * `didEndDisplayingCell`
    * `willDisplaySupplementaryView`
    * `didEndDisplayingSupplementaryView`
* Adds `UIScrollView` extensions:
    * `willBeginDecelerating`
    * `willBeginDragging`
    * `willBeginZooming`
    * `didEndZooming`

#### Anomalies

* Fixes deadlock anomaly in `shareReplayWhileLatest`. #1323
* Removes duplicated events swallowing in `NSControl` on macOS.",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/7067108/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/7067108,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.6.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.6.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.6.0,3.6.0,False,False
6551149,2017-05-30T19:24:22Z,2017-05-30T22:36:27Z,Mango,"* Adds `from` operator on ""SharedSequence""
* Adds `merge` operator on ""Completable""
* Adds `using` operator on ""PrimitiveSequence""
* Adds `concatMap` operator.
* Adds `share(replay:scope:)` operator.
* Adds `multicast(makeSubject:)` operator.
* Adds `UIButton.image(for:)` extension.
* Adds `UIButton.backgroundImage(for:)` extension.
* fixes typos

#### Anomalies

* Improves reentrancy and synchronization checks.
* Issues with `share()` and `shareReplay(_:)`. #1111
* `.share()` inconsistent in behavior. #1242
* Fixes issues with `Driver` sometimes sending initial element async. #1253",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/6551149/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/6551149,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.5.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.5.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.5.0,3.5.0,False,False
6245200,2017-05-01T11:17:41Z,2017-05-01T22:29:42Z,David.1,"* Adds `UINavigationController` delegate proxy and extensions:
    * `willShow`
    * `didShow`
* Deprecates `TestScheduler.start(_:create:)` in favor of `TestScheduler.start(disposed:create:)`.
* Deprecates `TestScheduler.start(_:subscribed:disposed:create:)` in favor of `TestScheduler.start(created:subscribed:disposed:create:)`.

#### Anomalies

* Fixes observable sequence completion in case of empty arrays for `combineLatest` and `zip`. #1205
* Fixes array version of `merge` operator completing immediately in case one of the observable sequences is empty. #1221
* Adds RxTest to SPM. #1215
* Adds tuple version of operator `SharedSequence.zip` (collection).
* Adds tuple version of operator `SharedSequence.zip`.
* Adds tuple version of operator `SharedSequence.combineLatest` (collection).
* Adds tuple version of operator `SharedSequence.combineLatest`.
* Adds missing `trimOutput` parameter to `SharedSequence.debug`.
* Makes `RxImagePickerDelegateProxy` subclass of `RxNavigationControllerDelegateProxy`.",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/6245200/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/6245200,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.4.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.4.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.4.1,3.4.1,False,False
6026423,2017-04-09T21:31:54Z,2017-04-09T22:12:00Z,David,"* Xcode 8.3.1 / Swift 3.1 compatibility.
* Add subscription closures for Single, Maybe and Completable (`onSuccess`, `onError`, `onCompleted`).
* Renames Units as Traits and updates the documentation for Single, Completable & Maybe.
* Deprecates `bindTo` in favor of `bind(to:)`.
* Adds [`materialize`](http://reactivex.io/documentation/operators/materialize-dematerialize.html) operator
* Adds [`dematerialize`](http://reactivex.io/documentation/operators/materialize-dematerialize.html) operator
* Adds `latest` parameter to `SharedSequence.throttle` operator.
* Adds `debug` operator to `PrimitiveSequence`.

#### Anomalies

* Fixes problem with `UICollectionView` data source caching and disposal logic. #1154",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/6026423/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/6026423,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.4.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.4.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.4.0,3.4.0,False,False
5734697,2017-03-13T21:53:50Z,2017-03-14T08:23:27Z,Hashimoto.1,"#### Anomalies

* Fixes misspelled `Completeable` to `Completable`. #1134 ",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/5734697/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/5734697,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.3.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.3.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.3.1,3.3.1,False,False
5717639,2017-03-12T19:59:52Z,2017-03-12T23:15:15Z,Hashimoto,"* Adds `Single`, `Maybe`, `Completable` units inspired by RxJava (operators):
    * `create`
    * `deferred`
    * `just`
    * `error`
    * `never`
    * `delaySubscription`
    * `delay`
    * `do`
    * `filter`
    * `map`
    * `flatMap`
    * `observeOn`
    * `subscribeOn`
    * `catchError`
    * `retry`
    * `retryWhen`
    * `zip`
* Adds `asSingle()` operator on `ObservableType`.
* Adds `asMaybe()` operator on `ObservableType`.
* Adds `asCompleteable()` operator on `ObservableType`.
* Adds variadic `combineLatest` and `zip` overloads without result selector (defaults to tuple).
* Adds array `combineLatest` and `zip` overloads with result selector (defaults to array of elements)
* Adds optimized synchronous `merge` operator to observable sequence (variadic, array, collection). #579
* Adds optimized synchronous `merge` operator to shared sequence (variadic, array, collection).
* Adds `AsyncSubject` implementation.
* Adds `XCTAssertEqual` overloads to `RxTest`.
* Adds `countDownDuration` to `UIDatePicker`.
* Adds `attributedTitle(for:)` to `UIButton`.
* Adds `onSubscribed` to `do` operator.
* Adds `isUserInteractionEnabled` to `UIView`.

## Anomalies
* Improves DelegateProxy `responds(to:)` selector logic to only respond to used selectors. #1081, #1087
* Deprecates `from()` in favor of `from(optional:)` to avoid issues with implicit conversions to optional.
* Fixes thread sanitizer reporting issues with `merge` operator. #1063
* Calls `collectionViewLayout.invalidateLayout()` after `reloadData()` as a workaround for iOS 10 bug.
* Changes `UICollectionView.rx.didUpdateFocusInContextWithAnimationCoordinator` context parameter type to `UICollectionViewFocusUpdateContext`
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/5717639/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/5717639,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.3.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.3.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.3.0,3.3.0,False,False
5315735,2017-01-31T08:39:21Z,2017-01-31T14:16:46Z,Naldi,"- Adds `groupBy` operator
- Adds `ifEmpty(switchTo:)` operator
- Adds [`ifEmpty(default:)`](%28http://reactivex.io/documentation/operators/defaultifempty.html%29) operator
- Adds `Disposable` extension `disposed(by:)` equivalent to `addDisposableTo` that is meant to replace it in future 4.0 version.
- Consolidates atomic operations on Linux and Darwin platform.
- Adds DEBUG mode concurrent asserts for `Variable` and `Observable.create`.
- Adds DEBUG mode concurrent asserts for `Sink`.
- Small performance optimizations for subjects.
- Adaptations for Xcode 8.3 beta.
- Adds `numberOfPages` to `UIPageControl`.
- Adds additional resources cleanup unit tests for cases where operators are used without `DisposeBag`s. 
- Chores:
  - Adds `final` keyword wherever applicable.
  - Remove unnecessary `import Foundation` statements.
  - Examples cleanup.

## Anomalies
- Improves behavior of `shareReplayWhileConnected` by making sure that events emitted after disconnect are ignored even in case of fast reconnect.
- Fixes a couple of operators that were not cleaning up resources on terminal events when used without `DisposeBag`s.
- Fixes delegate proxy interaction with subclassing of `UISearchController`.
- Fixes delegate proxy interaction with subclassing of `NSTextStorage`.
- Fixes delegate proxy interaction with subclassing of `UIWebView`.
- Fixes delegate proxy interaction with subclassing of `UIPickerView`.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/5315735/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/5315735,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.2.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.2.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.2.0,3.2.0,False,False
5027601,2017-01-25T22:15:54Z,2016-12-28T19:58:49Z,Galois,"- Adds `changed` property to `ControlProperty` that returns `ControlEvent` of user generated changes.
  - `textField.text.changed.map { ""User changed text to \($0)"" }`
- Adds optional overloads for `from` operator. `let num: Int? = 3; let sequence = Observable.from(num)`
- Improves `UIBindingObserver` by tolerating binding from non main dispatch queue. In case binding is attempted
  from non main dispatch queue it will be automagically dispathed async to main queue.
- Makes control property naming consistent for `UIDatePicker`, `UISearchBar`, `UISegmentedControl`, `UISwitch`, `UITextField`, `UITextView` (`value` property + value alias name).
- Adds missing extension to `UIScrollView`. 
  - `didScroll` 
  - `didZoom`
  - `didEndDecelerating`
  - `didEndDragging`
  - `didScrollToTop`
- Renames `refreshing` to `isRefreshing`.
- adds `UIWebView` extensions:
  - `didStartLoad`
  - `didFinishLoad`
  - `didFailLoad`
- Adds `UITabBarController` extensions
  - `willBeginCustomizing`
  - `willEndCustomizing`
  - `didEndCustomizing` 
  - `didSelect`
- Adds `UIBarButtonItem` extensions
  - `title`
- Performance optimizations
- Improves data source behavior by clearing data source proxy when forwarding delegate is `nil`.

#### Anomalies
- Fixes anomaly caused by `UITableView` invalid state caching of previous data source even after the change.
  Binding of reactive data source now triggers `layoutIfNeeded` that invalidates that internal cached state.
- Fixes issue with race in `AnyRecursiveScheduler`. #995
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/5027601/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/5027601,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.1.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.1.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.1.0,3.1.0,False,False
4710604,2016-11-20T17:22:31Z,2016-11-20T21:13:47Z,,"#### Anomalies
- Fixes issues with locking strategy for subjects. #936
- Improves behavior of data sources on iOS 10. #999
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4710604/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4710604,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.6.1,https://github.com/ReactiveX/RxSwift/releases/tag/2.6.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.6.1,2.6.1,False,False
4585166,2016-11-06T18:19:42Z,2016-11-06T20:33:01Z,Graham,"#### Anomalies
- Fixes RxCocoa problems on macOS (`TextInput` now uses `NSTextInputClient`)
- Hides accidentally exposed `BagKey` structure.
- Makes `notification` extension `name` parameter optional.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4585166/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4585166,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.1,3.0.1,False,False
4461567,2016-10-23T20:11:12Z,2016-10-23T21:21:36Z,Aenea,"- Prefixes boolean properties with `is` and makes `String?` properties consistent.
  - `rx.hidden` -> `rx.isHidden`
  - `rx.enabled` -> `rx.isEnabled`
    ...
    also ...
  - since `rx.text` has now type `String?` to be consistent with UIKit, in case `String` is needed
    there is `rx.text.orEmpty` that has `String` type.  
- Renames `title(controlState:)` on `UIButton` to `title(for:)`.
- All data structures are now internal (`Bag`, `Queue`, `PriorityQueue` ...)
- Improves performance of `Bag`.
- Polishes RxCocoa `URLSession` extensions
  - `JSON` -> `json`
  - return type is `Any` instead of `AnyObject`
  - replaces response tuple parameters, now it's `(HTTPResponse, Data)`
  - removes name hiding for `request` parameter
- Migrates `Driver` and `NSNotification` tests to `Linux`.
- Removes RxTest from OSX + SPM integration until usable XCTest support on OSX.
- Renames `ObserverType.map` to `OberverType.mapObserver` because of possible ambigutites with subjects.
- Improves dispatch queue detection logic and replaces concept of threads in favor of dispatch queues (solves a lot
  of problems on Linux environment).
- Replaces `SectionedViewDataSourceType.model(_:)` with `SectionedViewDataSourceType.model(at:)`
- Renames `OSX` to `macOS` across the project.

#### Anomalies
- Fixes wrong casing in `#import ""include/_RXObjCRuntime.h""` (was creating issues for people with 
  case sensitive file system). #949
- Fixes issues with locking strategy for subjects. #936
- Fixes code example in comments of RxTableViewExtensions that didn't compile. #947
- Adds `.swift-version` to help package managers to detect Swift 3 version.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4461567/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4461567,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.0,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.0,3.0.0,False,False
4403084,2016-10-17T00:18:49Z,2016-10-17T01:17:57Z,Baneby,"- Renames `RxTests` library to `RxTest` because of problems with Swift Package Manager.
- Adds Swift Package Manager support
- Adds Linux support 
- Replaces `AnyObserver` with `UIBindingObserver` in public interface.
- Renames `resourceCount` to `Resources.total`.
- Makes `rx.text` type consistent with UIKit `String?` type.

``` swift
textField.rx.text          // <- now has type `ControlProperty<String?>`
textField.rx.text.orEmpty  // <- now has type `ControlProperty<String>`
```
- Adds optional overloads for `bindTo` and `drive`. Now the following works:

``` swift
let text: Observable<String> = Observable.just("""")

// Previously `map { $0 }` was needed because of mismatch betweeen sequence `String` type and `String?` type
// on binding `rx.text` observer.
text.bindTo(label.rx.text)  
   .addDisposableTo(disposeBag)

...

let text = Driver.just("""")
text.drive(label.rx.text)
   .addDisposableTo(disposeBag)
```
- Adds trim output parameter to `debug` operator. #930
- Renames `NSDate` to `Date` everywhere.
- Renames scheduler init param `globalConcurrentQueueQOS` to `qos` and removes custom enum wrapper.
- Adds setter to `rx` property to enable mutation of base object.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4403084/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4403084,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.0-rc.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.0-rc.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.0-rc.1,3.0.0-rc.1,False,True
4298109,2016-10-04T06:31:57Z,2016-10-04T11:44:55Z,Elena,"- Subscription disposables now only create strong references to sinks until being disposed or sequence terminates. #573
- Introduces `SharedSequence` and makes `Driver` just a specialization of `SharedSequence`.
  That means `Driver` is now just one specific `SharedSequence` and it is now possible to easily create new concepts that have another compile time guarantees in a couple of lines of code.
  E.g. choosing a background scheduler on which elements are delivered, or choosing `share` as a sharing strategy instead of `shareReplayLatestWhileConnected`.
- Moves `Reactive` struct and `ReactiveCompatible` from `RxCocoa` to `RxSwift` to enable third party consumers to remove `RxCocoa` dependency.
- Add `rx.` extensions on Types.
- Moves `UIImagePickerViewController` and `CLLocationManager` out of `RxCocoa` to `RxExample` project because of App Store submissions issues 
  on iOS 10.
- Adds `sentMessage` got its equivalent sequence `methodInvoked` that produces elements after method is invoked (vs before method is invoked).
- Deprecates `observe` method on `DelegateProxy` in favor of `sentMessage`.
- Adds simetric `methodInvoked` method on `DelegateProxy` that enables observing after method is invoked.
- Moves all delegate extensions from using `sentMessage` to using `methodInvoked` (that fixes some problem with editing data sources)
- Fixes problem with `RxTableViewDataSourceProxy` source enabling editing of table view cells (swipe on delete) even if there weren't
  any observers or `forwardToDelegate` wasn't implementing `UITableViewDataSource.tableView(_:commit:forRowAt:)`. #907
- Makes `DelegateProxy` open. #884
- Deprecates extensions that were polluting Swift collection namespaces and moves them to static functions on `Observable`
  - `Observable.combineLatest`
  - `Observable.zip`
  - `Observable.concat`
  - `Observable.catchError` (sequence version)
  - `Observable.amb`
- Deprecates extensions that were polluting Swift collection namespaces and moves them to static functions on `Driver`
  - `Driver.combineLatest`
  - `Driver.zip`
  - `Driver.concat`
  - `Driver.catchError` (sequence version)
  - `Driver.amb`
- Update Getting Started document, section on creating an observable that performs work to Swift 3.0.
- Removes stale installation instructions. 
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4298109/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4298109,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.0-beta.2,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.0-beta.2,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.0-beta.2,3.0.0-beta.2,False,True
4136627,2016-09-11T15:39:27Z,2016-09-14T22:41:44Z,Oz,"#### Features
- Adapts to new Swift 3.0 syntax.
- Corrects `throttle` operator behavior to be more consistent with other platforms. Adds `latest` flag that controls should latest element
  be emitted after dueTime.
- Adds `delay` operator.
- Adds `UISearchBar` extensions:
  - `bookmarkButtonClicked`
  - `resultsListButtonClicked`
  - `textDidBeginEditing`
  - `textDidEndEditing`
- Moves `CLLocationManager` and `UIImagePickerViewController` extensions from RxCocoa to RxExample project. #874
- Adds matrix CI builds.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/4136627/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/4136627,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.0-beta.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.0-beta.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.0-beta.1,3.0.0-beta.1,False,True
3935965,2016-08-21T17:26:15Z,2016-08-21T19:55:05Z,Black-Scholes,"#### Requirements
- Xcode 8.0 beta 6 (8S201h)
- Swift 3.0

#### Features
- Modernizes API to be more consistent with Swift 3.0 API Design Guidelines
- Replaces `rx_*` prefix with `rx.*` extensions. (Inspired by `.lazy` collections API). We've tried annotate deprecated APIs with `@available(*, deprecated, renamed: ""new method"")` but trivial replacements aren't annotated.
  - `rx_text` -> `rx.text`
  - `rx_tap` -> `rx.tap`
  - `rx_date` -> `rx.date`
  - ...
- Deprecates `subscribeNext`, `subscribeError`, `subscribeCompleted` in favor of `subscribe(onNext:onError:onCompleted:onDisposed)` (The downsides of old extensions were inconsistencies with Swift API guidelines. They also weren't expressing that calling them actually performes additional subscriptions and thus potentially additional work beside just registering observers).
- Deprecates `doOnNext`, `doOnCompleted`, `doOnError` in favor of `do(onNext:onCompleted:onError:onSubscribe:onDisposed:)`
- Adds `onSubscribe` and `onDisposed` to `do` operator.
- Adds namespace for immutable disposables called `Disposables`
  - Deprecates `AnonymousDisposable` in favor of `Disposables.create(with:)`
  - Deprecates `NopDisposable` in favor of `Disposables.create()`
  - Deprecates `BinaryDisposable` in favor of `Disposables.create(_:_:)`
- Deprecates `toObservable` in favor of `Observable.from()`.
- Replaces old javascript automation tests with Swift UI Tests.
- ...

#### Anomalies
- There is a problem using `UISwitch` extensions because it seems that a bug exists in UIKit that causes all `UISwitch` instances to leak. https://github.com/ReactiveX/RxSwift/issues/842
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/3935965/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/3935965,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/3.0.0.alpha.1,https://github.com/ReactiveX/RxSwift/releases/tag/3.0.0.alpha.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/3.0.0.alpha.1,3.0.0.alpha.1,False,True
3579329,2016-07-04T05:02:49Z,2016-07-04T05:57:03Z,Dracarys,"#### Features
- Adds Swift 2.3 compatibility.
- Adds `UIViewController.rx_title` extension.
- Adds `UIScrollView.rx_scrollEnabled` extension.
- Resolve static analysis issues relating to non-use of an assigned value, and potential null dereferences in RxCocoa's Objective-C classes.
- Changes `forwardDelegate` property type on `DelegateProxy` from `assign` to `weak`.
- Simplifies UITable/CollectionView data source generic parameters.
- Adds simple usage examples to UITable/CollectionView data source extensions.
- Documents UITable/CollectionView data source extensions memory management and adds unit tests to cover that documentation.
- Adds `.jazzy.yml`
- Adds `UITabBar` extensions and delegate proxy wrapper
  - rx_didSelectItem
  - rx_willBeginCustomizing
  - rx_didBeginCustomizing
  - rx_willEndCustomizing
  - rx_didEndCustomizing
- Adds `UIPickerView` delegate proxy and extensions:
  - rx_itemSelected
- Adds `UIAlertAction.rx_enabled` extension.
- Adds `UIButton.rx_title(controlState: UIControlState = .Normal)` extension.
- Adds `UIPageControl.rx_currentPage` extension.
- Adds `hasObservers` property to `*Subject`.

#### Anomalies
- Fixes problem with UITable/CollectionView releasing of data sources when result subscription disposable wasn't retained.
- Fixes all Xcode analyzer warnings
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/3579329/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/3579329,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.6.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.6.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.6.0,2.6.0,False,False
3229506,2016-05-15T16:28:31Z,2016-05-15T18:47:33Z,MalmÃ¶,"#### Features
- Exposes `installForwardDelegate`.
- Adds `proxyForObject` as protocol extension and deprecates global function version.
- Improves `installForwardDelegate` assert messaging.
- Improves gesture recognizer extensions to use typed gesture recognizers in `rx_event`.
- Adds `RxTextInput` protocol to enable creating reactive extensions for `UITextInput/NSTextInput`.
- Adds `rx_willDisplayCell` and `rx_didEndDisplayingCell` extensions to `UITableView`.
- Improves playgrounds.

#### Anomalies
- Fixes in documentation.
- Turns off Bitcode for `RxTests` CocoaPods integration.
- Fixes `UITextField.rx_text` and `UITextView.rx_text` integrations to be more robust when used with two way binding.
- Fixes two way binding example code so it now properly handles IME used in Asian cultures and adds explanations how to properly perform two way bindings. https://github.com/ReactiveX/RxSwift/issues/649
- Removes `distinctUntilChanged` from control extensions. https://github.com/ReactiveX/RxSwift/issues/626
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/3229506/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/3229506,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.5.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.5.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.5.0,2.5.0,False,False
2992224,2016-04-11T07:51:06Z,2016-04-11T09:30:09Z,Wb / mÂ²,"#### Features
- adds `Driver.drive` with `Variable` parameter.
- exposes `RxSearchBarDelegateProxy`
- adds `rx_cancelButtonClicked` to `UISearchBar`.
- adds `rx_searchButtonClicked` to `UISearchBar`.
- adds `UISearchController` extensions:
  - `rx_didDismiss`
  - `rx_didPresent`
  - `rx_present`
  - `rx_willDismiss`
  - `rx_willPresent`

#### Anomalies
- Fixes anomaly with `multicast` disposing subscription.
- Small grammar fixes in code.
- Fixes in documentation.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2992224/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2992224,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.4,https://github.com/ReactiveX/RxSwift/releases/tag/2.4,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.4,2.4,False,False
2867456,2016-03-22T12:32:18Z,2016-03-22T22:04:16Z,ETH (Xcode 7.3 / Swift 2.2),"#### Features
- Xcode 7.3 / Swift 2.2 support
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2867456/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2867456,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.3.1,https://github.com/ReactiveX/RxSwift/releases/tag/2.3.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.3.1,2.3.1,False,False
2846194,2016-03-18T22:08:52Z,2016-03-19T10:47:33Z,ETH,"#### Features
- Adds `rx_badgeValue` to `UITabBarItem`.
- Adds `rx_progress` to `UIProgresView`.
- Adds `rx_selectedScopeButtonIndex` to `UISearchBar`.
- Adds `asyncInstance` to `MainScheduler`.
- Makes `name` parmeter optional for `rx_notification` extension.
- Adds `UnitTests.md`.
- Adds `Tips.md`.
- Updates playground inline documentation with running instructions.
- Synchronizes copy of `RxDataSources` source files inside example project to `0.6` release.

#### Anomalies
- Fixes anomaly with synchronization in disposable setter of `SingleAssignmentDisposable`.
- Improves `DelegateProxy` memory management.
- Fixes anomaly during two way binding of `UITextView` text value.
- Improves `single` operator so it handles reentrancy better.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2846194/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2846194,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.3.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.3.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.3.0,2.3.0,False,False
2613218,2016-02-14T22:26:39Z,2016-02-14T22:42:29Z,Kintsugi,"#### Public Interface anomalies
- Fixes problem with `timer` operator. Changes return type from `Observable<Int64>` to `Observable<T>`. This could potentially cause code breakage, but it was an API anomaly.
- Curried functions were marked deprecated so they were replaced in `UITableView` and `UICollectionView` extensions with equivalent lambdas. This shouldn't break anyone's code, but it is a change in public interface.

This is example of those changes:

``` swift
- public func rx_itemsWithCellFactory<S : SequenceType, O : ObservableType where O.E == S>
      (source: O)
      (cellFactory: (UITableView, Int, S.Generator.Element) -> UITableViewCell) -> Disposable
+ public func rx_itemsWithCellFactory<S : SequenceType, O : ObservableType where O.E == S>
      (source: O)
      -> (cellFactory: (UITableView, Int, S.Generator.Element) -> UITableViewCell) -> Disposable
```
- Fixes anomaly in `CLLocationManager` extensions

``` swift
-    public var rx_didFinishDeferredUpdatesWithError: RxSwift.Observable<NSError> { get }
+    public var rx_didFinishDeferredUpdatesWithError: RxSwift.Observable<NSError?> { get }
```

#### Features
- Adds `UIBindingObserver`.
- Adds `doOnNext` convenience operator (also added to `Driver`).
- Adds `doOnError` convenience operator.
- Adds `doOnCompleted` convenience operator (also added to `Driver`).
- Adds `skip`, `startWith` to `Driver`.
- Adds `rx_active` extension to `NSLayoutConstraint`.
- Adds `rx_refreshing` extension to `UIRefreshControl`.
- Adds `interval` and `timer` to `Driver`.
- Adds `rx_itemAccessoryButtonTapped` to `UITableView` extensions.
- Adds `rx_networkActivityIndicatorVisible` to `UIApplication`.
- Adds `rx_selected` to `UIControl`.

#### Anomalies
- Fixes anomaly with registering multiple observers to `UIBarButtonItem`.
- Fixes anomaly with blocking operators possibly over-stopping the `RunLoop`.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2613218/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2613218,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.2.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.2.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.2.0,2.2.0,False,False
2402447,2016-01-10T23:42:07Z,2016-01-10T23:56:10Z,Honey Badger,"#### Features
- Adds `UIImagePickerController` delegate wrappers.
- Adds `SectionedViewDataSourceType` that enables third party data sources to use existing `rx_modelSelected`/`rx_modelDeselected` wrappers.
- Adds `rx_modelDeselected` to `UITableView`
- Adds `rx_itemDeselected` to `UITableView`
- Adds `rx_modelDeselected` to `UICollectionView`
- Adds `rx_itemDeselected` to `UICollectionView`
- Adds `rx_state` to `NSButton`
- Adds `rx_enabled` to `NSControl`
- Adds `UIImagePickerController` usage example to Example app.

#### Anomalies
- Removes usage of `OSSpinLock`s from all `Darwin` platforms because of problems with inversion of priority on iOS. [Original thread on swift mailing list is here](https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20151214/000321.html)
- Reduces verbose output from `RxCocoa` project in debug mode. `TRACE_RESOURCES` is now also treated as a verbosity level setting. It is possible to get old output by using `TRACE_RESOURCES` with verbosity level `>= 2`. [#397](https://github.com/ReactiveX/RxSwift/issues/397) 
- Fixes anomaly with logging of HTTP body of requests in `RxCocoa` project.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2402447/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2402447,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.1.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.1.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.1.0,2.1.0,False,False
2362196,2016-01-01T23:36:33Z,2016-01-02T00:58:29Z,on(.Completed),"This is release version of RxSwift 2.0.0.

If you are using RxSwift 1.9, check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)

If you are using `~> RxSwift-beta.0`, you can use [release candidate](https://github.com/ReactiveX/RxSwift/releases/2.0.0-rc.0) as a guide towards release version of the API.

**We've tried to make transition as painless as possible, so we've included hints what new API to use in deprecation messages of [2.0.0-rc.0](https://github.com/ReactiveX/RxSwift/releases/2.0.0-rc.0)**

You can also read more about those changes in release notes of [2.0.0-rc.0](https://github.com/ReactiveX/RxSwift/releases/2.0.0-rc.0).

Most of the changes from beta versions are cosmetic and are intended to make the API more consistent internally and between Rx versions.

Major changes from beta versions include changing from using free functions to create observable sequences to using factory methods:

``` swift
Observable.just(1)
```

... instead of

``` swift
just(1)
```

In case you want to use old behavior, you'll need to create those aliases to `Observable` factory methods in your project.

Major changes also include `Variable` not being observable directly, but through `asObservable` interface. In that way we can always complete the sequence once nothing is referencing particular variable instance. That should make it's behavior consistent with `ControlProperty` and `ControlEvent`.

You can read more about differences from beta version and release version of the api in [2.0.0-rc.0](https://github.com/ReactiveX/RxSwift/releases/2.0.0-rc.0).

This is a change log from release candidate:

#### Features
- Changes package names to `io.rx.[library]`
- Packages data sources from `RxDataSourceStarterKit` into it's own repository [RxDataSources](https://github.com/RxSwiftCommunity/RxDataSources) under `RxSwiftCommunity`.
- Removes deprecated APIs.

#### Anomalies
- Replaces hacky code that solved anomaly caused by interaction between autocorrect and text controls notification mechanism with proper solution. #333
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2362196/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2362196,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0,2.0.0,False,False
2356344,2015-12-30T19:55:43Z,2015-12-30T20:34:05Z,"on(.Next(""2.0.0""))","This is RxSwift 2.0 RC.

We have collected all of the feedback regarding 2.0.0 alpha and beta versions and tried to include it in this version of 2.0.0 API.

**We've tried to mark all of the deprecated APIs and provide a helpful message how to transition to release version of library.
Once 2.0.0 is released, all deprecated APIs will be removed.**

This RC can be always used as a transition guide even after we release 2.0.0 version.

Changes are cosmetic in nature, no behavior has been changed.

This RC contains all of the APIs we plan to ship in the **next day or two**, so in case you see some kind of problem with some part, please inform us.

Changes included in this release are intended to make the API more consistent internally and between Rx versions.

Major changes include changing from using free functions to create observable sequences to using factory methods:

``` swift
Observable.just(1)
```

... instead of

``` swift
just(1)
```

In case you want to use old behavior, you'll need to create those aliases to `Observable` factory methods in your project.

Major changes also include `Variable` not being observable directly, but through `asObservable` interface. In that way we can always complete the sequence once nothing is referencing particular variable instance. That should make it's behavior consistent with `ControlProperty` and `ControlEvent`.

Here is a list full list of all significant changes ...

#### Features
- Adds generic `public func rx_sentMessage(selector: Selector) -> Observable<[AnyObject]>` that enables observing of messages
  sent to any object. (This is enabled if DISABLE_SWIZZLING isn't set).
  - use cases like `cell.rx_sentMessage(""prepareForReuse"")` are now supported.
- Linux support (proof of concept, but single threaded mode works)
  - more info in [Documentation/Linux.md](https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Linux.md)
- Initial support for `Swift Package Manager`
  - works on `Linux` (`RxSwift`, `RxBlocking`, `RxTests`)
  - doesn't work on OSX because it can't compile `RxCocoa` and `RxTests` (because of inclusion of `XCTest` extensions), but OSX has two other package managers and manual method.
  - Project content is linked to `Sources` automagically using custom tool
  - more info in [Documentation/Linux.md](https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Linux.md)
- Adds `VirtualTimeScheduler` to `RxSwift`
- Adds `HistoricalScheduler` to `RxSwift`
- Improves performance of virtual schedulers using priority queue.
- Adds new `RxTests` library to enable testing of custom Rx operators.
  This library contains everything needed to write unit tests in the following way:

``` swift
func testMap() {
    let scheduler = TestScheduler(initialClock: 0)

    let xs = scheduler.createHotObservable([
        next(150, 1),
        next(210, 0),
        next(220, 1),
        next(230, 2),
        next(240, 4),
        completed(300)
        ])

    let res = scheduler.start { xs.map { $0 * 2 } }

    let correctEvents = [
        next(210, 0 * 2),
        next(220, 1 * 2),
        next(230, 2 * 2),
        next(240, 4 * 2),
        completed(300)
    ]

    let correctSubscriptions = [
        Subscription(200, 300)
    ]

    XCTAssertEqual(res.events, correctEvents)
    XCTAssertEqual(xs.subscriptions, correctSubscriptions)
}
```
- Adds test project for `RxExample-iOS` that demonstrates how to easily write marble tests using `RxTests` project.

``` swift
let (
    usernameEvents,
    passwordEvents,
    repeatedPasswordEvents,
    loginTapEvents,

    expectedValidatedUsernameEvents,
    expectedSignupEnabledEvents
) = (
    scheduler.parseEventsAndTimes(""e---u1----u2-----u3-----------------"", values: stringValues).first!,
    scheduler.parseEventsAndTimes(""e----------------------p1-----------"", values: stringValues).first!,
    scheduler.parseEventsAndTimes(""e---------------------------p2---p1-"", values: stringValues).first!,
    scheduler.parseEventsAndTimes(""------------------------------------"", values: events).first!,

    scheduler.parseEventsAndTimes(""e---v--f--v--f---v--o----------------"", values: validations).first!,
    scheduler.parseEventsAndTimes(""f--------------------------------t---"", values: booleans).first!
)
```
- Adds example app for GitHub signup example that shows the same example written with and without `Driver`.
- Documents idea behind units and `Driver` in `Units.md`.
- Example of table view with editing is polished to use more functional approach.
- Adds `deferred` to `Driver` unit.
- Removes implicitly unwrapped optionals from `CLLocationManager` extensions.
- Removes implicitly unwrapped optionals from `NSURLSession` extensions.
- Polishes the `debug` operator format.
- Adds optional `cellType` parameter to Table/Collection view `rx_itemsWithCellIdentifier` method.
- Polish for calculator example in `RxExample` app.
- Documents and adds unit tests for tail recursive optimizations of `concat` operator.
- Moves `Event` equality operator to `RxTests` project.
- Adds `seealso` references to `reactivex.io`.
- Polishes headers in source files and adds tests to enforce standard header format.
- Adds `driveOnScheduler` to enable scheduler mocking for `Driver` during unit tests.
- Adds assertions to `drive*` family of functions that makes sure they are always called from main thread.
- Refactoring and polishing of internal ObjC runtime interception architecture.

#### Deprecated
- Changes `ConnectableObservable`, generic argument is now type of elements in observable sequence and not type of underlying subject. (BREAKING CHANGE)
- Removes `RxBox` and `RxMutable` box from public interface. (BREAKING CHANGE)
- `SchedulerType` now isn't parametrized on `Time` and `TimeInterval`.
- Deprecates `Variable` implementing `ObservableType` in favor of `asObservable()`.
  - Now variable also sends `.Completed` to observable sequence returned from `asObservable` when deallocated.
    If you were (mis)using variable to return single value
    `
    Variable(1).map { x in ... }
    `
    ... you can just use `just` operator
    `
    Observable.just(1).map { x in ... }
    `
- Deprecates free functions in favor of `Observable` factory methods, and deprecates versions of operators with hidden external parameters (scheduler, count) in favor of ones with explicit parameter names.
  E.g.
  
  `Observable.just(1)` instead of `just(1)`
  
  `Observable.empty()` instead of `empty()`
  
  `Observable.error()` instead of `failWith()`
  
  `Observable.of(1, 2, 3)` instead of `sequenceOf(1, 2, 3)`
  
  `.debounce(0.2, scheduler: MainScheduler.sharedInstance)` instead of `.debounce(0.2, MainScheduler.sharedInstance)`
  
  `Observable.range(start:0, count: 10)` instead of `range(0, 10)`
  
  `Observable.generate(initialState: 0, condition: { $0 < 10 }) { $0 + 1 }` instead of `generate(0, condition: { $0 < 10 }) { $0 + 1 }`
  
  `Observable<Int>.interval(1, scheduler: MainScheduler.sharedInstance)` instead of `interval(1, MainScheduler.sharedInstance)`
  
  ...
  
  If you want to continue using free functions form, you can define your free function aliases for `Observable` factory methods (basically copy deprecated methods).
- Deprecates `UIAlertView` extensions.
  - These extensions could be stored locally if needed.
- Deprecates `UIActionSheet` extensions.
  - These extensions could be stored locally if needed.
- Deprecates `rx_controlEvents` in favor of `rx_controlEvent`.
- Deprecates `MainScheduler.sharedInstance` in favor of `MainScheduler.instance`
- Deprecates `ConcurrentMainScheduler.sharedInstance` in favor of `ConcurrentMainScheduler.instance`
- Deprecates factory methods from `Drive` in favor of `Driver` factory methods.
- Deprecates `sampleLatest` in favor of `withLatestFrom`.
- Deprecates `ScopedDisposable` and `scopedDispose()` in favor of `DisposeBag`.

#### Anomalies
- Improves and documents resource leak code in `RxExample`.
- Replaces `unowned` reference with `weak` references in `RxCocoa` project.
- Fixes `debug` operator not using `__FILE__` and `__LINE__` properly.
- Fixes anomaly with `timeout` operator.
- Fixes problem with spell-checker and `UIText*` losing focus.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2356344/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2356344,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-rc.0,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-rc.0,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-rc.0,2.0.0-rc.0,False,True
2241842,2015-12-06T23:58:20Z,2015-12-07T00:17:57Z,Type.self,"This is a beta version of RxSwift 2.0.

This is last beta version. Next release will be first RC.

#### Updated
- Adds `ignoreElements` operator.
- Adds `timeout` operator (2 overloads).
- Adds `shareReplayLatestWhileConnected` operator.
- Changes `Driver` to internally use `shareReplayLatestWhileConnected` for subscription sharing instead of `shareReplay(1)`.
- Adds `flatMapFirst` to `Driver` unit.
- Adds `replayAll` operator.
- Adds `createUnbounded` factory method to `ReplaySubject`.
- Adds optional type hints to `empty`, `failWith` and `never` (`empty(Int)` now works and means empty observable sequence of `Int`s).
- Adds `rx_hidden` to `UIView`.
- Adds `rx_alpha` to `UIView`.
- Adds `rx_attributedText` to `UILabel`.
- Adds `rx_animating` to `UIActivityIndicatorView`.
- Adds `rx_constant` to `NSLayoutConstraint`.
- Removes implicitly unwrapped optional from `NSURLSession.rx_response`.
- Exposes `rx_createDataSourceProxy`, `rx_createDelegateProxy` on `UITableView`/`UICollectionView`.
- Exposes `rx_createDelegateProxy` on `UITextView`.
- Exposes `rx_createDelegateProxy` on `UIScrollView`.
- Exposes `RxCollectionViewDataSourceProxy`.
- Exposes `RxCollectionViewDelegateProxy`.
- Exposes `RxScrollViewDelegateProxy`.
- Exposes `RxTableViewDataSourceProxy`.
- Exposes `RxTableViewDelegateProxy`.
- Deprecates `proxyForObject` in favor of `proxyForObject<P : DelegateProxyType>(type: P.Type, _ object: AnyObject) -> P`.
- Deprecates `rx_modelSelected<T>()` in favor of `rx_modelSelected<T>(modelType: T.Type)`.
- Adds `func bindTo(variable: Variable<E>) -> Disposable` extension to `ObservableType`.
- Exposes `ControlEvent` init.
- Exposes `ControlProperty` init.
- Refactoring of example app
  - Divides examples into sections
  - Adds really simple examples of how to do simple calculated bindings with vanilla Rx.
  - Adds really simple examples of table view extensions (sectioned and non sectioned version).
  - Refactoring of `GitHub sign in example` to use MVVM paradigm.

#### Fixed
- Fixes documentation for `flatMapFirst`
- Fixes problem with delegate proxies not detecting all delegate methods in delegate proxy hierarchy.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2241842/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2241842,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-beta.4,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-beta.4,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-beta.4,2.0.0-beta.4,False,True
2131344,2015-11-16T09:24:37Z,2015-11-16T10:30:09Z,The art of state,"This is a beta version of RxSwift 2.0.

#### Updated
- Improves KVO mechanism.
  - Type of observed object is now first argument `view.rx_observe(CGRect.self, ""frame"")`
  - Support for observing ObjC bridged enums and `RawRepresentable` protocol
  - Support for easier extending of KVO using `KVORepresentable` protocol
  - Deprecates KVO extensions that don't accept type as first argument in favor of ones that do.
- Adds `flatMapLatest` (also added to `Driver` unit).
- Adds `flatMapFirst` operator (also added to `Driver` unit).
- Adds `retryWhen` operator.
- Adds `window` operator.
- Adds `single` operator.
- Adds `single` (blocking version) operator.
- Adds `rx_primaryAction` on `UIButton` for `tvOS`.
- Transforms error types in `RxSwift`/`RxCocoa` projects from `NSError`s to Swift enum types.
  - `RxError`
  - `RxCocoaError`
  - `RxCocoaURLError`
  - ...
- `NSURLSession` extensions now return `Observable<(NSData!, NSHTTPURLResponse)>` instead of `Observable<(NSData!, NSURLResponse!)>`.
- Optimizes consecutive map operators. For example `map(validate1).map(validate2).map(parse)` is now internally optimized to one `map` operator.
- Adds overloads for `just`, `sequenceOf`, `toObservable` that accept scheduler.
- Deprecates `asObservable` extension of `SequenceType` in favor of `toObservable`.
- Adds `toObservable` extension to `Array`.
- Improves table view animated data source example.
- Polishing of `RxDataSourceStarterKit`
  - `differentiateForSectionedView` operator
  - `rx_itemsAnimatedWithDataSource` extension
- Makes blocking operators run current thread's runloop while blocking and thus disabling deadlocks.

#### Fixed
- Fixes example with `Variable` in playgrounds so it less confusing regarding memory management.
- Fixes `UIImageView` extensions to use `UIImage?` instead of `UIImage!`.
- Fixes improper usage of `CustomStringConvertible` and replaces it with `CustomDebugStringConvertible`.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2131344/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2131344,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-beta.3,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-beta.3,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-beta.3,2.0.0-beta.3,False,True
2056010,2015-11-02T10:14:42Z,2015-11-02T11:02:52Z,Heapster,"This is a beta version of RxSwift 2.0.

#### Updated
- Optimizations. System now performs significantly fewer allocations and is several times faster then 2.0.0-beta.1
- Makes `AnonymousObservable` private in favor of `create` method.
- Adds `toArray` operator (non blocking version).
- Adds `withLatestFrom` operator, and also extends `Driver` with that operation.
- Adds `elementAt` operator (non blocking version).
- Adds `takeLast` operator.
- Improves `RxExample` app. Adds retries example when network becomes available again.
- Adds composite extensions to `Bag` (`on`, `disposeAllIn`).
- Renames mistyped extension on `ObserverType` from `onComplete` to `onCompleted`.

#### Fixed
- Fixes minimal platform version in OSX version of library to 10.9

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/2056010/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/2056010,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-beta.2,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-beta.2,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-beta.2,2.0.0-beta.2,False,True
1987616,2015-10-20T09:16:31Z,2015-10-20T09:53:39Z,Juraj,"This is a beta version of RxSwift 2.0.

#### Updated
- Adds `Driver` unit. This unit uses Swift compiler to prove certain properties about observable sequences. Specifically
  - that fallback error handling is put in place
  - results are observed on main thread
  - work is performed only when there is a need (at least one subscriber)
  - computation results are shared between different observers (replay latest element)
- Renames `ObserverOf` to `AnyObserver`.
- Adds new interface `ObservableConvertibleType`.
- Adds `BlockingObservable` to `RxBlocking` and makes it more consistent with `RxJava`.
- Renames `func subscribe(next:error:completed:disposed:)` to `func subscribe(onNext:onError:onCompleted:onDisposed:)`
- Adds concat convenience method `public func concat<O : ObservableConvertibleType where O.E == E>(second: O) -> RxSwift.Observable<Self.E>`
- Adds `skipUntil` operator.
- Adds `takeWhile` operator.
- Renames `takeWhile` indexed version to `takeWhileWithIndex`
- Adds `skipWhile` operator.
- Adds `skipWhileWithIndex` operator.
- Adds `using` operator.
- Renames `func doOn(next:error:completed:)` to `func doOn(onNext:onError:onCompleted:)`.
- Makes `RecursiveImmediateSchedulerOf` private.
- Makes `RecursiveSchedulerOf` private.
- Adds `ConcurrentMainScheduler`.
- Adds overflow error so now in case of overflow, operators will return `RxErrorCode.Overflow`.
- Adds `rx_modelAtIndexPath` to `UITableView` and `UICollectionView`.
- Adds `var rx_didUpdateFocusInContextWithAnimationCoordinator: ControlEvent<(context:animationCoordinator:)>` to `UITableView` and `UICollectionView`
- Makes `resultSelector` argument in `combineLatest` explicit `func combineLatest<O1, O2, R>(source1: O1, _ source2: O2, resultSelector: (O1.E, O2.E) throws -> R) -> RxSwift.Observable<R>`.
- Makes `resultSelector` argument in `zip` explicit `func combineLatest<O1, O2, R>(source1: O1, _ source2: O2, resultSelector: (O1.E, O2.E) throws -> R) -> RxSwift.Observable<R>`.
- Adds activity indicator example in `RxExample` app.
- Adds two way binding example in `RxExample` app.
- many other small features

#### Fixed
- Problem with xcodebuild 7.0.1 treating tvOS shared schemes as osx schemes.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1987616/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1987616,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-beta.1,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-beta.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-beta.1,2.0.0-beta.1,False,True
1907875,2015-10-04T11:03:57Z,2015-10-04T11:06:15Z,Screenzilla,"This is a alpha version of RxSwift 2.0.

#### Updated
- Adds `tvOS` support
- Adds `watchOS` support
- Adds auto loading example to example app
- Restores old `Variable` behavior. Variable doesn't send anything on dealloc.
- Adds performance tests target.
- Adds more detailed resource tracing during unit tests (important for further optimizations).
- Adds `UIStepper` extensions.
- Adds `UIBarButtonItem` enabled property wrapper.
- Adds response data to userInfo of error for `rx_response` extensions of `NSURLSession`.
- Adds `onNext`, `onError` and `onCompleted` convenience methods to `ObserverType`.

#### Fixed
- Fixes problem on some systems with unregistering `CurrentThreadScheduler` from current thread.
- Fixes retry parameter naming (`maxAttemptCount`).
- Fixes a lot of unit test warnings.
- Removes embedding of Swift library with built frameworks.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1907875/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1907875,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-alpha.4,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-alpha.4,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-alpha.4,2.0.0-alpha.4,False,True
1806111,2015-09-13T14:15:52Z,2015-09-13T14:41:47Z,Anamorphism,"This is a alpha version of RxSwift 2.0.
- Renames `ImmediateScheduler` protocol to `ImmediateSchedulerType`
- Renames `Scheduler` protocol to `SchedulerType`
- Adds `CurrentThreadScheduler`
- Adds `generate` operator
- Cleanup of dead observer code.
- Removes `SpinLock`s in disposables in favor of more performant `OSAtomicCompareAndSwap32`.
- Adds `buffer` operator (version with time and count).
- Adds `range` operator.
- Adds `repeat` operator.

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1806111/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1806111,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-alpha.3,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-alpha.3,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-alpha.3,2.0.0-alpha.3,False,True
1787185,2015-09-09T10:19:52Z,2015-09-09T10:28:01Z,l3O,"This is a alpha version of RxSwift 2.0.
- Renames `ScopedDispose` to `ScopedDisposable`
- Deprecates `observeSingleOn` in favor of `observeOn`
- Adds inline documentation
- Renames `from` to `asObservable` extension method on `SequenceType`
- Renames `catchErrorResumeNext` in favor of `catchErrorJustReturn`
- Deprecates `catchErrorToResult`, the preferred way is to use Swift `do/try/catch` mechanism.
- Deprecates `RxResult`, the preferred way is to use Swift `do/try/catch` mechanism.
- Deprecates `sendNext` on `Variable` in favor of just using `value` setter.
- Renames `rx_searchText` to `rx_text` on `UISearchBar+Rx`.
- Changes parameter type for `rx_imageAnimated` to be transitionType (kCATransitionFade, kCATransitionMoveIn, ...).

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1787185/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1787185,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0.0-alpha.2,https://github.com/ReactiveX/RxSwift/releases/tag/2.0.0-alpha.2,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0.0-alpha.2,2.0.0-alpha.2,False,True
1750161,2015-09-01T11:55:52Z,2015-09-01T11:33:45Z,NS,"This is a alpha version of RxSwift 2.0.

New version of the language helped us to improve a lot of things and this is a short summary of changes.
- Removes deprecated APIs
- Adds `ObservableType`
- Moved from using `>-` operator to protocol extensions `.`
- Adds support for Swift 2.0 error handling `try`/`do`/`catch`

You can now just write

``` swift
    API.fetchData(URL)
      .map { rawData in
          if invalidData(rawData) {
              throw myParsingError
          }

          ...

          return parsedData
      }
```
- RxCocoa introduces `bindTo` extensions

``` swift
    combineLatest(firstName.rx_text, lastName.rx_text) { $0 + "" "" + $1 }
            .map { ""Greeting \($0)"" }
            .bindTo(greetingLabel.rx_text)
```

... works for `UITableView`/`UICollectionView` too

``` swift
viewModel.rows
            .bindTo(resultsTableView.rx_itemsWithCellIdentifier(""WikipediaSearchCell"")) { (_, viewModel, cell: WikipediaSearchCell) in
                cell.viewModel = viewModel
            }
            .addDisposableTo(disposeBag)
```
- Adds new operators (array version of `zip`, array version of `combineLatest`, ...)
- Renames `catch` to `catchError`
- Change from `disposeBag.addDisposable` to `disposable.addDisposableTo`
- Deprecates `aggregate` in favor of `reduce`
- Deprecates `variable` in favor of `shareReplay(1)` (to be consistent with RxJS version)

Check out [Migration guide to RxSwift 2.0](https://github.com/ReactiveX/RxSwift/blob/develop/Documentation/Migration.md)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1750161/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1750161,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/2.0-alpha.1,https://github.com/ReactiveX/RxSwift/releases/tag/2.0-alpha.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/2.0-alpha.1,2.0-alpha.1,False,True
1680932,2015-08-17T08:32:11Z,2015-08-17T08:45:36Z,,"#### Updated
- Adds Calculator example app
- Performance improvements for Queue

#### Fixed
- Crash in `rx_didChangeAuthorizationStatus`. [#89](https://github.com/ReactiveX/RxSwift/issues/89)

493 Unit tests
23 files changed, 833 insertions(+), 136 deletions(-)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1680932/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1680932,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.9.1,https://github.com/ReactiveX/RxSwift/releases/tag/1.9.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.9.1,1.9.1,False,False
1618827,2015-08-02T22:09:58Z,2015-08-02T21:58:29Z,Bellevue,"- Documentation
- Improves `observeOn` for concurrent schedulers
- Adds official iOS 7 support
- Adds KVO specializations for `CGPoint`, `CGRect` and `CGSize`
- Adds automation tests
- Adds CI
- Fixes a couple of problems

493 Unit tests
189 files changed, 6074 insertions(+), 1511 deletions(-)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1618827/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1618827,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.9,https://github.com/ReactiveX/RxSwift/releases/tag/1.9,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.9,1.9,False,False
1567168,2015-07-21T20:41:19Z,2015-07-21T20:51:00Z,,"- Fixes problem with finite observables being bound to collection/table view
- Adds `UITextView+Rx`
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1567168/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1567168,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.8.1,https://github.com/ReactiveX/RxSwift/releases/tag/1.8.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.8.1,1.8.1,False,False
1526853,2015-07-12T19:50:31Z,2015-07-12T19:55:18Z,Pole,"- `rx_deallocating`
- `rx_deallocated`
- enables weak KVO observing
- adds blocking operators (`toArray`, `first`, `last`) and new `RxBlocking` project
- `CLLocationManager` integration
- `UIGestureRecognizer` integration
- `UIActionSheet` integration
- `UIAlertView` integration
- `UISegmentedControl` integration
- `UISwitch` integration
- enables partial Carthage integration

73 files changed, 4386 insertions(+), 702 deletions(-)
481 unit tests passed
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1526853/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1526853,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.8,https://github.com/ReactiveX/RxSwift/releases/tag/1.8,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.8,1.8,False,False
1497684,2015-07-05T21:17:40Z,2015-07-05T21:30:18Z,Dane,"- RxCocoa revamp, enables easy delegate wrapping `rx_delegate.observe(""scrollView:willDisplayCell:"")`
- Adds reactive data sources
- RxDataSourceKit - automatic animated updates from streams
- Removes `AnyObject` constraint from Table/CollectionView array subscription methods 
- Adds concurrent dispatch queue scheduler
- Adds `skip` operator with count and time interval
- Renames `Subject` to `PublishSubject`
- Lots of new playgrounds
- New examples in example app

437 unit tests total
154 files changed, 8386 insertions(+), 2222 deletions(-)
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1497684/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1497684,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.7,https://github.com/ReactiveX/RxSwift/releases/tag/1.7,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.7,1.7,False,False
1414501,2015-06-14T17:38:51Z,2015-06-14T17:44:27Z,Aneetha,"- adds `flatMap`
- adds `scan`
- adds `catch` overload version with `SequenceOf`
- alias `debounce` for `throttle`
- adds `take` (both count and time versions)
- adds `retry`
- adds `delaySubscription`
- adds `subscribeOn`
- adds `amb`
- renames `foldl` to `reduce`
- small changes in `DisposeBag` and `ScopedDispose`, they aren't disposables any more.
  
  75 files changed, 5790 insertions(+), 1339 deletions(-)
  409 unit tests total
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1414501/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1414501,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.6,https://github.com/ReactiveX/RxSwift/releases/tag/1.6,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.6,1.6,False,False
1386639,2015-06-07T23:45:16Z,2015-06-07T23:52:28Z,KUNA,"- general observeOn operator
- schedulers revamped
- interval operator
- timer operator
- takeUntil operator
- takeWhile operator
- a couple of new RxCocoa extensions
- fixes problem with zip and hot observables
  
  115 files changed, 4084 insertions(+), 831 deletions(-)
  335 unit tests total
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1386639/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1386639,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.5,https://github.com/ReactiveX/RxSwift/releases/tag/1.5,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.5,1.5,False,False
1332600,2015-05-24T23:10:43Z,2015-05-24T23:29:27Z,DeLorean,"- Renames `Box` to `RxBox` and `Result` to `RxResult` (sorry if this broke someones code, but the change is made in good faith and hoping it would help with naming collisions) This will be easier once Swift adds generic aliases.
- Ports Scala's `Try` type as `RxResult`. So much better now.
- Deprecates operators `>==`, `>>!`, `>>>` in favor of `flatMap`, `recoverWith`. They will be obsoleted in upcoming releases. The only operator that will remain in RxSwift is function application operator `>-` because it looks like nobody is using that operator, and it does improve readability. Also replaced all of internal occurrences of deprecated operators from codebase with method calls. This will improve code readability for new users significantly, and reduce irritation.
- Performance - sinks now don't proxy through ObserverOf, but dispatch events directly to next sink
- Ports `BehaviorSubjects` and aliases `Variable` to `BehaviorSubject`
- Ports `zip` operator with all of the unit tests
- Adds OSX playground
- Adds a couple of Cocoa UI extensions

109 files changed, 7006 insertions(+), 1174 deletions(-)

https://www.youtube.com/watch?v=Y6ljFaKRTrI
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1332600/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1332600,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.4,https://github.com/ReactiveX/RxSwift/releases/tag/1.4,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.4,1.4,False,False
1314422,2015-05-19T19:28:17Z,2015-05-19T19:33:17Z,Divide and Conquer,"- Officially adds OSX support (still small amount of features, but useful)
- Adds simple example for OSX (it would be good idea to silence speakers before while running it :)
- Adds additional checks to RxCocoa
- Polishes documentation
- Adds set of pre release checks
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1314422/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1314422,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.3,https://github.com/ReactiveX/RxSwift/releases/tag/1.3,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.3,1.3,False,False
1280273,2015-05-10T21:44:04Z,2015-05-10T21:51:09Z,,"Makes RxSwift CocoaPods installation platform agnostic.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1280273/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1280273,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.2.1,https://github.com/ReactiveX/RxSwift/releases/tag/1.2.1,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.2.1,1.2.1,False,False
1278693,2015-05-09T22:28:26Z,2015-05-09T22:40:13Z,,"Moves generic operators from RxCocoa to RxSwift.
Adds next convenience method to Variable.
Updates documentation.
",https://api.github.com/users/kzaher,1641148,kzaher,https://api.github.com/repos/ReactiveX/RxSwift/releases/1278693/assets,https://api.github.com/repos/ReactiveX/RxSwift/releases/1278693,master,https://api.github.com/repos/ReactiveX/RxSwift/tarball/1.2,https://github.com/ReactiveX/RxSwift/releases/tag/1.2,https://api.github.com/repos/ReactiveX/RxSwift/zipball/1.2,1.2,False,False
