id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8253196,2017-10-23T10:43:32Z,2017-10-25T12:07:49Z,Tyk Gateway 2.3.11,"Tyk Gateway v2.3.11 continue addressing bugs in Python middleware and rate limiter.

* Fix Python bundle load on hot reloads 
* Fixed potential rate-limiting issue, allowing to bypass rate limits 

This release is fully compatible with Dashboard v1.3.9
",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/8253196/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/8253196,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.11,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.11,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.11,v2.3.11,False,False
8156919,2017-10-17T10:15:51Z,2017-10-17T21:41:40Z,Tyk Gateway v2.3.10,"We have released Tyk Gateway v2.3.10 which addresses serious bugs in how Python middleware is executed and a the distributed rate limiter:

- Distributed rate limiter would randmoly crash after long periods of uptime, this has now been fixed.
- Python plugins in some OS versions would delete bundles on reload due to a `PYTHONPATH` misconfiguration
- Removed bug where the bundles directory is not created automatically

This release is fully compatible with Dashboard v1.3.9",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/8156919/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/8156919,release-2.3,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.10,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.10,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.10,v2.3.10,False,False
7753209,2017-09-13T15:15:29Z,2017-09-14T12:34:16Z,v2.3.9,"### Tyk Gateway 2.3.9

* Fixed `http_server_options.skip_url_cleaning` option
* Fixed few possible JSVM leaks
* Improved JSVM middleware error messages",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/7753209/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/7753209,release-2.3,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.9,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.9,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.9,v2.3.9,False,False
7413822,2017-08-15T15:44:13Z,2017-08-17T15:29:50Z,Tyk Gateway v2.3.8 and Tyk Dashboard v1.3.8,"## Tyk Gateway v2.3.8
* Support for custom error messages in middleware https://github.com/TykTechnologies/tyk/pull/986
* Fix API reloads when `http_server_options.override_defaults` turned on https://github.com/TykTechnologies/tyk/issues/940
* Add `proxy_default_timeout` option to configure default proxy timeout https://github.com/TykTechnologies/tyk/pull/983
* Allow URLs to be rewritten in coprocess middleware https://github.com/TykTechnologies/tyk/pull/928
* Fixed crash when loading multiple Python plugins https://github.com/TykTechnologies/tyk/issues/969
* Fixed memory leak when `optimisations_use_async_session_write` is turned on https://github.com/TykTechnologies/tyk/issues/966
* Fix JSVM `rawlog` function to properly support log hooks like syslog or graylog https://github.com/TykTechnologies/tyk/issues/998
* Fix panic when loading duplicate APIs https://github.com/TykTechnologies/tyk/issues/938
* Key metadata now support numeric values https://github.com/TykTechnologies/tyk/issues/944
* API definition `config_data` now support complex JSON objects https://github.com/TykTechnologies/tyk/issues/951


## Tyk Dashboard 1.3.8
* Fix swagger docs validation badge
* Fix API spec validation for URL containing dot `.` symbol
* New Dashboard API to verify developer credentials `/portal/developers/verify_credentials` https://tyk.io/docs/tyk-dashboard-api/portal-developers/

With the new Portal API, it is now possible to create completely custom developer portals and even embed them into your own software. We prepared a guide on creating own developer portal: https://tyk.io/docs/publish/customise/custom-developer-portal/

In addition, our deb and rpm packages now properly handle config files upgrades and do not override user changes.",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/7413822/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/7413822,release-2.3,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.8,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.8,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.8,v2.3.8,False,False
7065317,2017-07-17T15:09:13Z,2017-07-17T15:10:08Z,Tyk Gateway v2.3.7 and Tyk Dashboard v1.3.7,"### Tyk Gateway v2.3.7

* Added HTTPS support for Plugin Bundle downloader https://github.com/TykTechnologies/tyk/issues/925
* Fix path duplication when using URL rewrite https://github.com/TykTechnologies/tyk/issues/855
* JSVM middleware now has `rawlog` function, which prints unformatted data bypassing logger formatting https://github.com/TykTechnologies/tyk/issues/844
* JSVM middleware and VirtualEndpoint now support passing custom data from API definition using `config_data` object https://github.com/TykTechnologies/tyk/issues/829
* Added support for TLS connection with MDCB (Hybrid) using `slave_option.use_ssl` and `slave_options.ssl_insecure_skip_verify` https://github.com/TykTechnologies/tyk/pull/842
* Fix uptime tests bug, when traffic was sent to dead host https://github.com/TykTechnologies/tyk/issues/825
* Fix JSVM leak introduced in 2.3.5 https://github.com/TykTechnologies/tyk/issues/804
* Fix hot reload issues when used in MDCB or Hybrid environments

### Tyk Dashboard v1.3.7

* Added `config_data` field to API designer user interface
* Updated Swagger documentation to support latest specification changes 
* Added option to allow admin users reset password without additional permissions `security.allow_admin_reset_password`

### MDCB v1.3.0
* Added support for secure TLS connections with Gateway
* Improved Gateway authentification mechanism to fix hot reload issues

**UPGRADE NOTICE**
New gateway version v2.3.7 require MDCB v1.3.0, thus MDCB should be upgraded first.",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/7065317/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/7065317,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.7,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.7,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.7,v2.3.7,False,False
6631136,2017-06-09T14:55:14Z,2017-06-09T18:16:43Z,Tyk Gateway v2.3.6 and Tyk Dashboard v1.3.6,"### Tyk Gateway v2.3.6

* Improved handling of duplicate listen paths: now instead of ignoring API, it will bind it to random slug.
* Now you can inject request correlation ID (for example X-Request-ID) to your requests using Context Data variables https://tyk.io/tyk-documentation/transform-traffic/request-headers/#request-headers-context-variables. For example: `""X-Request-ID"":""$tyk_context.request_id""`.
* Fixed multiple issues while using Python plugins.
* Coprocess middleware (Python, Lua, gRPC), now able to override response code, headers and body using `ReturnOverrides`. See https://github.com/TykTechnologies/tyk/pull/763.

### Tyk Dashboard v1.3.6

#### Password reset
Added ability to reset user passwords.
By default user can reset only their own password. 

Add a new permission `ResetPassword`, but it can be granted only via the admin API using new endpoints: `/admin/users/:userId/actions/allow_reset_passwords` `/admin/users/:userId/actions/disallow_reset_passwords`

You need to make the request using the `PUT` HTTP method, for example: 
`curl -X PUT -H ""admin-auth: <your secret>"" http://<dashboard>/admin/users/:userId/actions/allow_reset_passwords`


#### Password recovery
It's now possible for users to recover their dashboard password using email. To enable this feature, ensure that you have configured email https://tyk.io/tyk-documentation/configure/outbound-email-configuration/. Do not forget about the new `email_backend.dashboard_domain` option which should be your public dashboard hostname.

#### Other

* Updated user interface branding.
* Added support for Mongo SSL protocol, using new `mongo_ssl_insecure_skip_verify` and `mongo_use_ssl` boolean variables.
* Current user now can't revoke themselves.
* Dashboard session timeout now configurable using `dashboard_session_lifetime` option and reduced to 1 hour by default.
* Fixed missing API name on analytics pages for newly created APIs.
* Fixed Dashboard API key reset, if there were issues with old key.

*Binaries built with Go 1.7.6*",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/6631136/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/6631136,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.6,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.6,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.6,v2.3.6,False,False
6342434,2017-05-11T13:18:34Z,2017-05-11T13:19:28Z,Tyk Gateway v2.3.5 and Tyk Dashboard v1.3.5,"## Tyk Gateway v2.3.5
*  New: Added `http_server_options.ssl_insecure_skip_verify` boolean option to allow self-signed certificates for Gateway. #693
* New: Added `proxy_ssl_insecure_skip_verify` boolean option to skip SSL check for upstream APIs with self-signed certificates. #693 
* Fix: Control API was not working when both `hostname` and `control_api_hostname` set. #670 
* Fix: Uptime tests when `failure_trigger_sample_size` set to `1`. #632 
* Fix: Uptime tests when `uptime_tests.time_wait` is not explicitly set in config. #669 
* Fix: Log flooding when management_node is turned on. #660
* Fix: `/keys/*` endpoint when `api_id` param is provided but API not loaded on this node (due to tags). Now tagged gateways have access to all keys. #663
* Fix: Reduced default values for uptime test in default tyk.config. Old ones has 20 minutes wait time. #668
* Fix: Duplicated hostnames in uptime logs. #678
* Fix: IP whitelisting using `X-Fowarder-IP` header. #704
* Fix: Potential memory leak in hot reload with JSVM enabled. #496

## Tyk Dashboard v1.3.5
### New: Dashboard and Portal login rate limiting 

Login rate limiting applies both to dashboard and developer portal.
Once user reached limit, they will see an error, and will not be able to login into dashboard/portal.

Added new configuration section:
```json
""security"": {
  ""login_failure_username_limit"": 3,
  ""login_failure_ip_limit"": 10,
  ""login_failure_expiration"": 900
}
```
By default, limit values are zero and `login_failure_expiration` is 15 minutes (900).

### New: Audit log
Now you can enable audit log by setting `security.audit_log_path` configuration option. It will log all user actions and responses statuses to it. Security information like `password` gets removed from this log.

### Other
* New: Added new `host_config.secure_cookie` boolean option which enables ""secure"" cookies, working only under `https`. 
* Fix: Dashboard for authorization now internally uses HTTP Only cookies instead of Headers to improve defense against Cross-Site scripting attacks.
* Fix: Ensure that API responses not cached by explicitly adding Cache-Control: no-cache header. 
* Fix: Potential Content-Type sniffing issues by setting `X-Content-Type-Options: nosniff` header. 
* Set proper mime types for font assets.
* Fix: Deny API Catalogue documentation access, if catalog was set to inactive or portal is only for logged-in users.
* Fix: Policy selector in the developer view only shows 10 policies, it should show all of them. 
* Fix: Saving developer should not flush their password.
* Fix: Fix broken URLs to get free or commercial license on first start screen.
* Fix: Use canonical casing for `X-Frame-Options` header.
* Fix: Improved protection for Cross-Frame scripting.
* Fix: Fixed checks for duplicate listen path and slugs (including Swagger import). To make it work, ensure that `enable_duplicate_slugs` option is set to `false`.
* Fix: Swagger APIs import now properly set Slug and ListenPath based on `basePath`.
* Fix: Attached key to a policy does not inherit the expiration date.
* UX: Hide access token generator for disabled users.
",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/6342434/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/6342434,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.5,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.5,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.5,v2.3.5,False,False
5955864,2017-04-03T08:48:10Z,2017-04-03T12:36:35Z,Tyk Gateway v2.3.4 and Tyk Dashboard v1.3.4,"### Tyk Gateway v2.3.4
* Added new `management_node` boolean configuration option. When turned on, it will exclude the node from distributed rate limiter. 
* `/tyk/api` endpoint, used for managing APIs, now can be accessed without trailing slash to avoid confusion. 

### Tyk Dashboard v1.3.4: security focused release
* Fix: Deactivating a user now disables their API access and logs them out from existing dashboard sessions.
* Fix: Updating user permissions now does not empty user password.
* Fix: Updating user permissions now updates both current API session and all opened dashboard sessions, and does not require user to re-login.
* User access to OAuth tokens now controlled using separate permission group.
* Disabled auto-completion for all forms with passwords.
* Enable HSTS for all requests to improve HTTPS security.
* Added new `disable_parallel_sessions` boolean configuration option. When turned on it allows only one active dashboard session. When a user logs in, all of their other active sessions are automatically logged out.
* Using Admin API you now can set the password. If the password field is empty, it gets ignored.",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/5955864/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/5955864,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.4,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.4,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.4,v2.3.4,False,False
5921658,2017-02-23T18:15:37Z,2017-03-30T12:00:38Z,v2.3.3,"## Tyk gateway v2.3.3

This version is a patch update and fully backwards compatible with other 2.3 releases. We recommend upgrading to this version for improved stability:

This version will work with the latest version of Tyk Dashboard, no changes are required.

Changelog for v2.3.3
* Fixed a bug which could crash hybrid gateways if MDCB returned a nil object
* Modified hot reload behaviour to be more robust, addresses potential memory leak
* Redis reconnect and connect logic has been updated for better handling

## Tyk Dashboard version 1.3.2
This is a patch release to beef up security of dashboard users and fix some security concerns with the users API.

Changelog:
### Password validation and constraints

Added more verbose password rules for user creation, it is now possible to use the password.json schema in the tyk dashboard schemas/ directory to set complex

Example of password.json with full validation:

{
    ""title"": ""User password schema"",
    ""type"": ""string"",

    ""minLength"": 6,
    ""multiCase"": true,
    ""minNumeric"": 2,
    ""minSpecial"": 2,
    ""disableSequential"": true
}

### Password hash exposed in users/ API

The users API will no longer expose the password hash as part of the call, this aplies to both portal and dashboard users.",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/5921658/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/5921658,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.3,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.3,v2.3.3,False,False
5273841,2017-01-31T10:56:35Z,2017-02-08T11:06:36Z,Tyk v2.3.2 and Dashboard v1.3.1 Patches,"### Tyk Gateway v2.3.2
- Added `http_server_options.skip_url_cleaning` option to allow having double slashes in URL.  Fixes #340 
- Fixed `tyk-hybrid-docker` container: ensure the docker container always restarts https://github.com/TykTechnologies/tyk-hybrid-docker/issues/1
- Added `--httpprof` command line option to enable standard HTTP Go profiler, eg: `/debug/pprof/` #392
- Allow ""/tyk/apis"" without trailing slash #381 
- Improve OAuth error messages #382
- HTTP OPTION requests now not cached #397 
- Added gRPC Java bindings #358

### Tyk Dashboard 1.3.1
- Added labels for displaying the user name and the organisation name
- Fixed search in ""Analytics by key"" view
- Fixed importing API when api_model field set
- Fixed uptime tests for requests with body data
- Fixes policy import so that malformed outbound objects will work without breaking compatibility with other components
",https://api.github.com/users/buger,14009,buger,https://api.github.com/repos/TykTechnologies/tyk/releases/5273841/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/5273841,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.3.2,https://github.com/TykTechnologies/tyk/releases/tag/v2.3.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.3.2,v2.3.2,False,False
3955461,2016-08-23T19:29:12Z,2016-08-23T20:07:05Z,Patch v2.2.0.4,"Fixes a load balancer issue
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/3955461/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/3955461,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.2.0.4,https://github.com/TykTechnologies/tyk/releases/tag/v2.2.0.4,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.2.0.4,v2.2.0.4,False,False
3577904,2016-07-03T18:58:27Z,2016-07-03T19:35:46Z,Gateway v2.2 and Dashboard v1.2,"# v2.2
- Fixed URL Rewriter to better handle query strings
- Added XML transform support for requests and responses, simply set the data type to `xml` int he transforms section and create your template the same way you would for JSON. 

### XML transform demo

For this XML:

```
    <?xml version=""1.0"" encoding=""utf-8""?>
    <servers version=""1"">
        <server>
            <serverName>Shanghai_VPN</serverName>
            <serverIP>127.0.0.1</serverIP>
        </server>
        <server>
            <serverName>Beijing_VPN</serverName>
            <serverIP>127.0.0.2</serverIP>
        </server>
    </servers>
```

And this Template:

```
    {
    {{range $x, $s := .servers.server}}    ""{{$s.serverName}}"": ""{{$s.serverIP}}""{{if not $x}},{{end}}
    {{end}}
    }
```

You get this output:

```
    {
        ""Shanghai_VPN"": ""127.0.0.1"",
        ""Beijing_VPN"": ""127.0.0.2""

    }
```
- Added request method transform: This is very simple at the moment, and only chagnes the type of method, it does not data massaging, to enaqble, add to your extended paths:
  
  method_transforms: [
          {
            path: ""post"",
            method: ""GET"",
            to_method: ""POST""
          }
  ],
- Out of the box, tyk will ship with HA settings enabled where possible (this means using the new non-transactional rate limiter)
- Added a new concept called ""Partitioned Policies"", with policies that are partitioned, only sections of the policy will be applied to the underlying token so that tokens can be generated with a dynamic ACL, but still subscribe to a fixed quota and rate limit level. THIS MEANS THAT THE TOKEN MUST HAVE A FULL SET OF ACL RULES AND QUOTAS BEFORE USING AND PARTITIONED POLICIES ARE NOT SUITABLE FOR PORTAL USE.

### To set up a partitioned policy

Add the following section to the policy object:

```
""partitions"": {
    ""quota"": false,
    ""rate_limit"": false,
    ""acl"": false
}
```

Then set the partitions that you want to overwrite to ""true"", the partitions that are marked as true will then be applied to the token instead of the full policy. 
- Added context variable support, this middleware will extract the path, the path parts (break on `/`), and try to pull all form-related data (url-form-encoded or query string params) and put them into a context variable that is available to other middleware. Currently this is only integrated with the body transform middleware as `_tyk_context`. To enable set `""enable_context_vars"": true` in the API Definition. Transform sample:

Path: {{._tyk_context.path}}

```
Path Elements:
{{ range $i, $v := ._tyk_context.path_parts }}
--> {{$v}}
{{ end }}

Form/QueryString Data: {{._tyk_context.request_data}} 
Token: {{._tyk_context.token}}
```
- Context variables also available in headers using `$tyk_context.` namespace
- WARNING: POTENTIALLY BREAKING CHANGE: Flush interval is now in milliseconds, not seconds, before upgrading, if you are using flush interval, make sure that the value has been updated.
- Context variables also available in URL rewriter
- Added Websockets support (beta), websockets can now be proxied like a regular HTP request, tyk will detect the upgrade and initiate a proxy to the upstream websocket host. This can be TLS enabled and Tyk can proxy over HTTPS -> WSS upstream. 
- Websockets execute at the end of the middleware chain, so all the benefits of CB and auth middleware can be enabled (within the limits of the WebSockets protocol)
- No analytics are gatthered for these requests, but rate limiting, quotas and auth will work fully for initial connection requsts (e.g . to prevent connection flooding)
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/3577904/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/3577904,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v2.2,https://github.com/TykTechnologies/tyk/releases/tag/v2.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/v2.2,v2.2,False,False
2847954,2016-03-19T21:37:42Z,2016-03-19T23:29:43Z,Tyk Analytics v0.9.7.3 - Email Driver Patch Update,"This is a mini-release that integrates the email driver changes to support more email back ends such as SendGrid, Mailgun and Amazon SES:

**SendGrid**

```
""email_backend"": {
        ""enable_email_notifications"": true,
        ""code"": ""sendgrid"",
        ""settings"": {
            ""ClientKey"": ""KEY""
        },
        ""default_from_email"": ""from@domain.com"",
        ""default_from_name"": ""A guy at a place""
},
```

**MailGun**

```
""email_backend"": {
        ""enable_email_notifications"": true,
        ""code"": ""mailgun"",
        ""settings"": {
            ""Domain"": ""KEY"",
            ""PrivateKey"": ""KEY"",
            ""PublicKey"": ""KEY""
        },
        ""default_from_email"": ""from@domain.com"",
        ""default_from_name"": ""A guy at a place""
},
```

**AmazonSES**

```
""email_backend"": {
        ""enable_email_notifications"": true,
        ""code"": ""amazonses"",
        ""settings"": {
            ""Endpoint"": ""Endpoint"",
            ""AccessKeyId"": ""Access-key"",
            ""SecretAccessKey"": ""KEY""
        },
        ""default_from_email"": ""from@domain.com"",
        ""default_from_name"": ""A guy at a place""
},
```
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/2847954/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/2847954,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v0.9.7.3,https://github.com/TykTechnologies/tyk/releases/tag/v0.9.7.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/v0.9.7.3,v0.9.7.3,False,False
2425837,2016-01-14T09:55:23Z,2016-01-14T10:09:13Z,Security Release v1.9.1.1 & 0.9.7.2,"This is a security release to address [CVE-2015-8618](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8618)

Updates are available via our package repository as usual for easy upgrade an installation. Tarballs attached to this release.

**Changelog:**
- Fixes potential security issue with TLS on 32-bit systems (CVE-2015-8618)
- IP Whitelisting now supports CIDR-notation for IP ranges
- Recompiled Gateway, Dashboard and Host Manager binary with Go 1.5.3

**Upgrade Notes:**

Should be an in-place upgrade, no changes necessary.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/2425837/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/2425837,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.9.1.1,https://github.com/TykTechnologies/tyk/releases/tag/1.9.1.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.9.1.1,1.9.1.1,False,False
2406572,2016-01-11T16:21:44Z,2016-01-11T16:55:27Z,Tyk Bugfix Release v1.9.1 & Tyk Dashboard v0.9.7.1,"# Tyk Gateway 1.9.1

This is a drop-in replacement, you should be able to either just switch the binaries or update the package (make sure to backup your configurations!)
- Added new feature: Detailed logging, enable by setting `analytics_config.enable_detailed_recording` to true, two new fields will be added to analytics data: rawRequest and rawResponse, these will be in wire format and are _NOT_ anonymised. This adds additional processing complexity to request throughput so could degrade performance.
- Added a check for connection failures
- Updating a key with a quota reset set to true will also remove any rate limit sentinels
- URL Rewrites and cache interactions now work properly, although you need to define the cached entry as the rewritten pattern in a seperate entry.
- Org quotas monitors now only fire when the renewal is in the future, not the past.
- **Fixed bug where quotas would not reset** (regression introduced by switch to Redis Cluster), Tyk will automatically correct quota entries that are incorrect. No additional changes should be required
- Using golang builtins for time checking

# Tyk Dashboard v0.9.7.1
- Fixed FF logout bug (301 redirects were being cached in browser)
- Added SSO endpoints for portal and dashboard for Identity Broker
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/2406572/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/2406572,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.9.1,https://github.com/TykTechnologies/tyk/releases/tag/v1.9.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.9.1,v1.9.1,False,False
2219729,2015-12-02T17:02:34Z,2015-12-02T18:56:38Z,Tyk Gateway v1.9 and Tyk Dashboard v0.9.7,"In version 1.9 we have focused extensively on two things: Improved and expanded data and ease of deployment.

### Ease of deployment

Tyk is already pretty easy to deploy, being a single binary that can be dropped into a system and run right there and then without any compilation, interpreters or dependencies.

We've been speaking to our clients' DevOps teams, and one thing they particularly enjoy seeing is a secure, effective and reliable pattern for deploying third-party applications to their systems.

The other thing we've heard a lot of feedback about is the host maanger, and how having NGinX as a dependency is limiting as it's ""another moving part"".

What have we done to address these things?

**We got rid of the host manager** Tyk no longer needs the host manager in order to route domains to their underlying services or portals. As of v1.9 you can configure a domain for:
- The Tyk gateway itself (catch-all)
- The dashboard
- The control API (for secure access)
- On a per-API basis
- On a per-portal basis

All form within the dashboard or the configuration files.

And if you are running the full Tyk stack on a single instance, then we've made it easy for users to use Tyk the same way we used to use NginX - by having the Tyk nodes proxy the domain for the portal to the relevant organisation portal pages just like any other API.

**We've standardised our deployment packages**\* As of v1.9 Tyk ships as DEB and signed RPM packages, and are provided to end-users using our GPG-signed package repository. This means that you can use APT or YUM to install Tyk and Tyk Dashboard to your servers in a repeatable and industry standard way.

We've also gone a step further and have provided init scripts for Upstart, SysV and Systemd, which means starting and stopping Tyk is as simple as `sudo service tyk-gateway start|stop|restart|status`.

We think that these two changes make it much easier for you to install, setup, manage and deploy Tyk ro any Linux distribution. We have signed repositories for Ubuntu LTS releases, Red Hat Enterprise Linux 6 and 7, and Debian Jessie.

We'll still provide the tarballs to manually install tyk on our Github Repo page, but encourage users to use our package repositories to install Tyk on supported systems.

### Improved Data

This version of tyk introduces a new feature: Uptime Awareness, with this feature, we have your tyk nodes actively poll your endpoints with specific uptime tests. Over time, Tyk collects analytics on Latency, errors and overall availability. Providing a granular view in your dashbaord to dig deeper into failures and issues.

We've made this feature as flexible as possible, enabling you to configure these tests dynamically using Service Discovery tools such as etcd or consul, while also making it possible to hook up ""Host Up"" and ""Host Down"" events to webhooks or custom javascript applications to interact with, and react to, any incidents in your infrastructure.

When enabled, Tyk can integrate this feature with it's round-robin load-balancing to remove unhealthy hosts from circulation until they come back on-line.

### Bug fixes and UX

We've overhauled the dashboard UX, making it more robust and a little faster / easier to use. The biggest change is in how we render the graphs, whih we hope you enjoy.

We've spent a lot of time fixing bugs, improving logger output and overall trying to make things more robust, performant and better.

As always, we're open to feedback on our Github repo, or in our Community forum.

### ChangeLog v1.9
- Gateway Mongo Driver updated to be compatible with MongoDB v3.0
- Fixed OAuth client listings with redis cluster
- Some latency improvements
- Key detection now checks a local in-memory cache before reaching out to Redis, keys are cached for 10 seconds, with a 5 second purge rate (so a maximum key existence of 15s). Policies will still take instant effect on keys
- key session cache is configurable, set `local_session_cache.cached_session_timeout` (default 10) and `local_session_cache.cached_session_eviction` (default 5) to the cache ttl and eviction scan times
- key session cache can be disabled: `local_session_cache.disable_cached_session_state`
- Test update to reduce number of errors, cleaner output
- Healthcheck data now stored in a sorted set, much cleaner and faster, now works with redis cluster!
- Bug fixed: Empty or invalid listen path no longer crashes proxy
- Bug fixed: Basic Auth (and Oauth BA) passwords are now hashed, this is backward compatible, plaintext passwords will still work
- OAuth access token expiry can now be set (in seconds) in the `tyk.conf` file using `oauth_token_expire:3600`
- Proxy now records accurate status codes for upstream requests for better error reporting
- Added refresh token invalidation API: `DELETE /tyk/oauth/refresh/{key}?api_id={api_id}`
- Global header injection now works, can be enabled on a per-version basis by adding `global_headers:{""header_name"": ""header value""}` to the version object in the API Definition, global injections also supports key metadata variables.
- Global header deletion now works: add `""global_headers_remove"":[""header_name"", ""header_name""]` to your version object
- Added request size limiter, request size limiter middleware will insist on content-length to be set, and check first against content-length value, and then actual request size value. To implement, add this to your version info:
  
  ```
  ""size_limits"": [
      {
        ""path"": ""widget/id"",
        ""method"": ""PUT"",
        ""size_limit"": 25
      }
   ]
  ```
- Request size limits can also be enforced globally, these are checked first, to implement, add `""global_size_limit"": 30` to your version data.
- Adding a `key_expires_in: seconds` property to a policy definition will cause any key that is created or added using this policy to have a finite lifetime, it will expire in `now()+key_expiry` seconds, handy for free trials
- Dependency update (logrus)
- Added support for JSON Web Token (JWT), currently HMAC Signing and RSA Public/Private key signing is supported. To enable JWT on an API, add `""enable_jwt"": true,` to your API Definition. Then set your tokens up with these new fields when you create them:
  
  ```
  ""jwt_data"": {
      ""secret"": ""Secret""
  }
  ```
- HMAC JWT secrets can be any string, but the secret is shared. RSA secrets must be a PEM encoded PKCS1 or PKCS8 RSA private key, these can be generated on a linux box using:
  
  > openssl genrsa -out key.rsa 
  > openssl rsa -in key.rsa -pubout > key.rsa.pub
- Tyk JWT's MUST use the ""kid"" header attribute, as this is the internal access token (when creating a key) that is used to set the rate limits, policies and quotas for the user. The benefit here is that if RSA is used, then al that is stored in a Tyk installation that uses hashed keys is the hashed ID of the end user and their public key, and so very secure.
- Fixed OAuth Password flow bug where a user could generate more than one token for the same API
- Added realtime uptime monitoring, uptime monitoring means you can create a series of check requests for your upstream hosts (they do not need to be the same as the APIs being managed), and have the gateway poll them for uptime, if a host goes down (non-200 code or TCP Error) then an Event is fired (`HostDown`), when it goes back up again another event is fired (`HostUp`), this can be combined with the webhook feature for realtime alerts
- Realtime monitoring also records statistics to the database so they can be analysed or graphed later
- Real time monitoring can also be hooked into the load balancer to have the load balancer skip bad hosts for dynamic configuration
- When hosts go up and down, sentinels are activated in Redis so all nodes in a Tyk cluster can benefit
- Only one Tyk node will ever do the polling, they use a rudimentary capture-the-flag redis key to identify who is the uptime tester
- Monitoring can also be disabled if you want a non-active node to manage uptime tests and analytics purging
- The uptime test list can be refreshed live by hot-reloading Tyk
- Active monitoring can be used together with Circuit breaker to have the circuit breaker manage failing methods, while the uptime test can take a whole host offline if it becomes unresponsive
- To configure uptime tests, in your tyk.conf:
  
  ```
  ""uptime_tests"": {
      ""disable"": false, // disable uptime tests on the node completely
      ""config"": {
          ""enable_uptime_analytics"": true,
          ""failure_trigger_sample_size"": 1,
          ""time_wait"": 5,
          ""checker_pool_size"": 50
      }
  }
  ```
- Check lists usually sit with API configurations, so in your API Definition:
  
  ```
  uptime_tests: {
      check_list: [
        {
          ""url"": ""http://google.com:3000/""
        },
        {
          ""url"": ""http://posttestserver.com/post.php?dir=tyk-checker-target-test&beep=boop"",
          ""method"": ""POST"",
          ""headers"": {
            ""this"": ""that"",
            ""more"": ""beans""
          },
          ""body"": ""VEhJUyBJUyBBIEJPRFkgT0JKRUNUIFRFWFQNCg0KTW9yZSBzdHVmZiBoZXJl""
        }
      ]
    },
  ```
- The body is base64 encoded in the second example, the first example will perform a simple GET, NOTE: using the simplified form will not enforce a timeout, while the more verbose form will fail with a 500ms timeout.
- Uptime tests can be configured from a service (e.g. etcd or consul), simply set this up in the API Definition (this is etcd):
  
  ```
  ""uptime_tests"": {
      ""check_list"": [],
      ""config"": {
        ""recheck_wait"": 12,
        ""service_discovery"": {
          ""use_discovery_service"": true,
          ""query_endpoint"": ""http://127.0.0.1:4001/v2/keys/uptimeTest"",
          ""data_path"": ""node.value""
        }
      }
  },
  ```
- Uptime tests by service discovery will load initially from the endpoint, it will not re-poll the service until it detects an error, at which point it will schedule a reload of the endpoint data. If used in conjunction with upstream target service discovery it enables dynamic reconfiguring (and monitoring) of services.
- The document that Tyk requires is a JSON string encoded version of the `check_list` parameter of the `uptime_tests` field, for etcd:
  
  ```
  curl -L http://127.0.0.1:4001/v2/keys/uptimeTest -XPUT -d value='[{""url"": ""http://domain.com:3000/""}]'
  ```
- Fixed a bug where incorrect version data would be recorded in analytics for APis that use the first URL parameter as the version (domain.com/v1/blah)
- Added domain name support (removes requirement for host manager). The main Tyk instance can have a hostname (e.g. apis.domain.com), and API Definitions can support their own domains (e.g. mycoolservice.com), multiple API definitions can have the same domain name so long as their listen_paths do not clash (so you can API 1 on mycoolservice.com/api1 and API 2 on mycoolservice.com/api2 if you set the listen_path for API 1 and API2 respectively.)
- Domains are loaded dynamically and strictly matched, so if calls for a listen path or API ID on the main tyk hostname will not work for APIs that have custom domain names set, this means services can be nicely segregated.
- If the hostname is blank, then the router is open and anything will be matched (if you are using host manager, this is the option you want as it leaves domain routing up to NginX downstream)
- Set up the main tyk instance hostname by adding `""hostname"": ""domain.com""` to the config
- Enable custom api-specific domains by setting `enable_custome_domains` in the tyk.conf to true
- Make an API use a custom domain by adding a `domain` element to the root object
- Custom domains will work with your SSL certs
- Refactored API loader so that it used pointers all the way down, this lessens the amount of data that needs copying in RAM (will only really affect systems running 500+ APIs)
- JSVM is now disabled by default, if you are not using JS middleware, you can reduce Tyk footprint significantly by not enabling it. To re-enable set `""enable_jsvm"": true` in tyk.conf
- Fixed CORS so that if OPTIONS passthrough is enabled an upstream server can handle all pre-flight requests without any Tyk middleware intervening
- Dashboard config requires a home_dir field in order to work outside of it's home dir
- Added option to segragate control API from front-end, set `enable_api_segregation` to true and then add the hostname to `control_api_hostname`
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/2219729/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/2219729,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.9,https://github.com/TykTechnologies/tyk/releases/tag/v1.9,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.9,v1.9,False,False
2144387,2015-11-18T08:00:48Z,2015-11-18T08:09:54Z,HOTFIX: JSVM Bug (Vpath),"Fixes a bug in the JSVM with concurrently running code
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/2144387/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/2144387,hotfix/v1.8.3.3,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.3.3,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.3.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.3.3,v1.8.3.3,False,False
1815112,2015-09-15T12:17:15Z,2015-09-15T12:27:28Z,Tyk v1.8.3.2 and Dashboard v0.9.6.5,"- Redis cluster support, in tyk.conf: 

```
    ""storage"": {
        ""type"": ""redis"",
        ""enable_cluster"": true,
        ""hosts"" : {
            ""server1"": ""6379"",
            ""server2"": ""6379"",
            ""server23: ""6379"",
        },
        ""username"": """",
        ""password"": """",
        ""database"": 0,
        ""optimisation_max_idle"": 100
    },
```

**A Note on redis cluster support**

Redis cluster does not support multi-key operations or scans across key ranges, so the following operations: the health-check API, OAuth client listing, and key listing in unhashed setups, could cause inconsistent behaviour.
- Enable streaming endpoints by setting a flush interval in your tyk.conf file:

```
    ""http_server_options"": {
        ""flush_interval"": 1
    }
```
- Enabled password grant type in OAuth:
  - Create new client
  - Create a basic auth key for each user (warning, passwords are not encrypted yet - this, like basic auth, is not considered particularly safe. Password hashing will be included in a later version)
  - Set the `allowed_access_types` array to include `password`
  - Generate a valid access request with the client_id:client_secret as a Basic auth header and the u/p in the form of the body.
  - POST to: `/oauth/token/` endpoint on your OAuth-enabled API
  - If successfull, the user will get: 
  
  ```
  {""access_token"":""4i0VmSYMQ2iN7ivX0LaYBw"",""expires_in"":3600,""refresh_token"":""B_99PjEmQquufNWs8QYbow"",""token_type"":""bearer""}
  ```
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1815112/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1815112,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.3.2,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.3.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.3.2,v1.8.3.2,False,False
1792977,2015-09-10T09:35:44Z,2015-09-10T09:45:31Z,Tyk v1.8.3.1 and Dashboard 0.9.6.4,"- Bug fixes (URL-based version handling)
- SSL Support

Dashboard:
- Fixed a documentation bug that affected new catalogue entries (documentation would not show)
- Improved swagger preview methods.

To enable SSL edit the `tyk.conf` to include your certificates:

```
 ""http_server_options"": {
    ""use_ssl"": true,
    ""certificates"": [
        {
            ""domain_name"": ""banana.com"",
            ""cert_file"": ""new.cert.cert"",
            ""key_file"": ""new.cert.key""
        }
    ]
},
```
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1792977/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1792977,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.3.1,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.3.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.3.1,v1.8.3.1,False,False
1787210,2015-09-09T10:27:09Z,2015-09-09T10:37:21Z,Tyk v1.8.3 and Dashboard v0.9.6.3,"- Bug fixes
- Service discovery module re-built, now supports lists (a la Consul) and many more configurations
- AddedURL-based versioning (only respects _first_ value after listen path (e.g. `/listen_path/**VERSION**/resource/id)`

Notes:
- For list based service discovery commands, set the `endpoint_returns_list` value to true or change it in the dashboard, this will treat the requested object as a list
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1787210/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1787210,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.3,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.3,v1.8.3,False,False
1777825,2015-09-06T09:42:49Z,2015-09-07T13:18:05Z,Tyk v1.8.2 and Dashboard v0.9.6.2,"### Changelog
- Bug fixes
- More local assets (removed CDN from dashboard)
- Developer key management support (in-place policy updates) for better developer key lifecycle mgmt
- Catalogue entries are now no longer linked to APIs

### Upgrade Warning

This update is fully backwards compatible, however:

This update migrates API Catalogue (portal) entries into a new format. Portal entries used to need to be linked to an API. As of this version, this is no longer the case. instead, API Entries are linked to a policy ID. In turn, Key requests are also linked to policies instead of to APIs.

Reasoning: Policies give access to multiple APIs, allowing users to package APIs into bundles and tiers. In the previous portal incarnation this was fine so long as you only ever gave access to a single APi per portal entry. Realistically this does not make sense.

Old API Catalogue entries and key requests will still work as normal, including links to keys and key data in the developer profile section.

However all new catalogue entries created int he dashboard will be for this new version of key requests.

This update is fully backwards compatible, so existing policies/entries and key requests will work just as before. Only new catalogue entries will be affected.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1777825/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1777825,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.2,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.2,v1.8.2,False,False
1762406,2015-09-02T08:46:43Z,2015-09-03T11:40:41Z,Tyk v1.8.1 and Dashboard v0.9.6.1,"Changelog
- Fixed redis diconnect bug
- Fixed Mongo reload bug on host manager
- New onboarding flow in Dashboard
- Swagger documentation support in portal now respects host data and URLs as set in the dashboard conf
- when a key request is approved, the request metadata and user meta data are attached to the session object
- Various documentation improvements
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1762406/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1762406,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8.1,https://github.com/TykTechnologies/tyk/releases/tag/v1.8.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8.1,v1.8.1,False,False
1720117,2015-08-26T07:33:31Z,2015-08-26T09:37:30Z,Tyk 1.8 and Tyk Dashboard 0.9.6,"## Tyk v1.8

Large update to Tyk, major improvements and new features.
New: Dashbaord also has FreeBSD versions

## Full Changelog:
- Security option added for shared nodes: Set `disable_virtual_path_blobs=true` to stop virtual paths from loading blob fields
- Added session meta data variables to transform middleware: 
  
  You can reference session metadata attached to a key in the header injector using: 
  
  ```
  $tyk_meta.KEY_NAME
  ```
  
  And in the body transform template through:
  
  ```
  ._tyk_meta.KEYNAME
  ```
  
  You must enable sesison parsing in the TemplateData of the body tranform entry though by adding:
  
  ```
  ""enable_session"": true
  ```
  
  To the path entry
- Added CORS support, add a CORS section to your API definition:
  
  ```
   CORS: {
      enable: false,
      allowed_origins: [
        ""http://foo.com""
      ]
   },
  ```
- Full CORS Options are:
  
  ```
  CORS struct {
      Enable             bool     `bson:""enable"" json:""enable""`
      AllowedOrigins     []string `bson:""allowed_origins"" json:""allowed_origins""`
      AllowedMethods     []string `bson:""allowed_methods"" json:""allowed_methods""`
      AllowedHeaders     []string `bson:""allowed_headers"" json:""allowed_headers""`
      ExposedHeaders     []string `bson:""exposed_headers"" json:""exposed_headers""`
      AllowCredentials   bool     `bson:""allow_credentials"" json:""allow_credentials""`
      MaxAge             int      `bson:""max_age"" json:""max_age""`
      OptionsPassthrough bool     `bson:""options_pasthrough"" json:""options_pasthrough""`
      Debug              bool     `bson:""debug"" json:""debug""`
  } `bson:""CORS"" json:""CORS""`
  ```
- Fixed cache bug
- When using node segments, tags will be transferred into analytics data as well as any token-level tags, so for example, you could tag each node independently, and then view the trafic that went through those nodes by ID or group them in aggregate
- You can now segment gateways that use a DB-backed configurations for example if you vae APIs in different regions, or only wish to service a segment of your APIs (e.g. ""Health APIs"", ""Finance APIs""). So you can have a centralised API registry using the dashboard, and then Tag APIs according to their segment(s), then configure your Tyk nodes to only load those API endpoints, so node 1 may only serve health APIs, while node 2 might serve a mixture and node 3 will serve only finance APIs. To enable, simply configure your node and add to `tyk.conf` and `host_manager.conf` (if using):
  
  ```
  ""db_app_conf_options"": {
          ""node_is_segmented"": false,
           ""tags"": [""test2""]
     }
  ```
- You will need to add a `tags: []` sectino to your API definition in the DB to enable this feature, or set it in the dashboard.
- Dynamic endpoints support response middleware
- Dynamic endpoints support caching
- Dynamic endpoints also count towards analytics
- JSVM now has access to a `TykBatchRequest` function to make batch requests in virtual paths. Use case: Create a virtual endpoint that interacts with multiple upstream APIs, gathers the data, processes the aggregates somehow and returns them as a single body. This can then be cached to save on load.
- Added virtual path support, you can now have a JS Function respond to a request, makes mocking MUCh more flexible, TODO: expose batch methods to JSVM. To activate, add to extended paths:
  
  ```
  virtual: [
      {
        response_function_name: ""thisTest"",
        function_source_type: ""file"",
        function_source_uri: ""middleware/testVirtual.js"",
        path: ""virtualtest"",
        method: ""GET"",
        use_session: true
      }
  ]
  ```
- Virtual endpoint functions are pretty clean:
  
  ```
  function thisTest(request, session, config) {
      log(""Virtual Test running"")
  
      log(""Request Body: "")
      log(request.Body)
  
      log(""Session: "")
      log(session)
  
      log(""Config:"")
      log(config)
  
      log(""param-1:"")
      log(request.Params[""param1""])
  
      var responseObject = {
          Body: ""THIS IS A  VIRTUAL RESPONSE""
          Headers: {
              ""test"": ""virtual"", 
              ""test-2"": ""virtual""
          },
          Code: 200
      }
  
      return TykJsResponse(responseObject, session.meta_data)
  
  }
  log(""Virtual Test initialised"")
  ```
- Added refresh tests for OAuth
- URL Rewrite in place, you can specify URLs to rewrite in the `extended_paths` seciton f the API Definition like so:
  
  ```
  ""url_rewrites"": [
      {
        ""path"": ""virtual/{wildcard1}/{wildcard2}"",
        ""method"": ""GET"",
        ""match_pattern"": ""virtual/(.*)/(\d+)"",
        ""rewrite_to"": ""new-path/id/$2/something/$1""
      }
    ]
  ```
- You can now add a `""tags"":[""tag1, ""tag2"", tag3""] field to token and policy definitions, these tags are transferred through to the analytics record when recorded. They will also be available to dynamic middleware. This means there is more flexibility with key ownership and reporting by segment.`
- Cleaned up server output, use `--debug` to see more detailed debug data. Keeps log size down
- TCP Errors now actually raise an error
- Added circuit breaker as a path-based option. To enable, add a new sectino to your versions `extended_paths` list:
  
  ```
  circuit_breakers: [
      {
        path: ""get"",
        method: ""GET"",
        threshold_percent: 0.5,
        samples: 5,
        return_to_service_after: 60
      }
  ```
  
    ]

Circuit breakers are individual on a singlie host, they do not centralise or pool back-end data, this is for speed. This means that in a load balanced environment where multiple Tyk nodes are used, some traffic can spill through as other nodes reach the sampling rate limit. This is for pure speed, adding a redis counter layer or data-store on every request to a servcie would jsut add latency.

Circuit breakers use a thresh-old-breaker pattern, so of sample size x if y% requests fail, trip the breaker.

The circuit breaker works across hosts (i.e. if you have multiple targets for an API, the samnple is across _all_ upstream requests)

When a circuit breaker trips, it will fire and event: `BreakerTriggered` which you can define actions for in the `event_handlers` section:

``````
```
event_handlers: {
    events: {
      BreakerTriggered: [
        {
          handler_name: ""eh_log_handler"",
          handler_meta: {
            prefix: ""LOG-HANDLER-PREFIX""
          }
        },
        {
          handler_name: ""eh_web_hook_handler"",
          handler_meta: {
            method: ""POST"",
            target_path: ""http://posttestserver.com/post.php?dir=tyk-event-test"",
            template_path: ""templates/breaker_webhook.json"",
            header_map: {
              ""X-Tyk-Test-Header"": ""Tyk v1.BANANA""
            },
            event_timeout: 10
          }
        }
      ]
    }
  },
```
``````

Status codes are:

``````
```
// BreakerTripped is sent when a breaker trips
BreakerTripped = 0

// BreakerReset is sent when a breaker resets
BreakerReset = 1
```
``````
- Added round-robin load balancing support, to enable, set up in the API Definition under the `proxy` section:
  
  ```
  ...
  ""enable_load_balancing"": true,
  ""target_list"": [
      ""http://server1"", 
      ""http://server2"", 
      ""http://server3""
  ],
  ...
  ```
- Added REST-based Servcie discovery for both single and load balanced entries (tested with etcd, but anything that returns JSON should work), to enable add a service discovery section to your Proxy section:
  
  ```
  // Solo
  service_discovery : {
    use_discovery_service: true,
    query_endpoint: ""http://127.0.0.1:4001/v2/keys/services/single"",
    use_nested_query: true,
    parent_data_path: ""node.value"",
    data_path: ""hostname"",
    port_data_path: ""port"",
    use_target_list: false,
    cache_timeout: 10
  },
  
  
  // With LB
  ""enable_load_balancing"": true,
  service_discovery: {
    use_discovery_service: true,
    query_endpoint: ""http://127.0.0.1:4001/v2/keys/services/multiobj"",
    use_nested_query: true,
    parent_data_path: ""node.value"",
    data_path: ""array.hostname"",
    port_data_path: ""array.port"",
    use_target_list: true,
    cache_timeout: 10
  },
  ```
- For service discovery, multiple assumptions are made:
  - The response data is in JSON
  - The response data can have a nested value set that will be an encoded JSON string, e.g. from etcd:
  
  ```
  $ curl -L http://127.0.0.1:4001/v2/keys/services/solo
  
  {
      ""action"": ""get"",
      ""node"": {
          ""key"": ""/services/single"",
          ""value"": ""{\""hostname\"": \""http://httpbin.org\"", \""port\"": \""80\""}"",
          ""modifiedIndex"": 6,
          ""createdIndex"": 6
      }
  }
  ```
  
  ```
  $ curl -L http://127.0.0.1:4001/v2/keys/services/multiobj
  
  {
      ""action"": ""get"",
      ""node"": {
          ""key"": ""/services/multiobj"",
          ""value"": ""{\""array\"":[{\""hostname\"": \""http://httpbin.org\"", \""port\"": \""80\""},{\""hostname\"": \""http://httpbin.org\"", \""port\"": \""80\""}]}"",
          ""modifiedIndex"": 9,
          ""createdIndex"": 9
      }
  }
  ```
  
  Here the key value is actually an encoded JSON string, which needs to be decoded separately to get to the data. 
  - In some cases port data will be separate from host data, if you specify a `port_data_path`, the values will be zipped together and concatenated into a valid proxy string.
  - If use_target_list is enabled, then enable_load_balancing msut also be enabled, as Tyk will treat the list as a target list.
  - The nested data object in a service registry key MUST be a JSON Object, **not just an Array**.
- Fixed bug where version parameter on POST requests would empty request body, streamlined request copies in general.
- it is now possible to use JSVM middleware on Open (Keyless) APIs
- It is now possible to configure the timeout parameters around the http server in the tyk.conf file:
  
  ```
  ""http_server_options"": {
      ""override_defaults"": true,
      ""read_timeout"": 10,
      ""write_timeout"": 10
  }
  ```
  - It is now possible to set hard timeouts on a path-by-path basis, e.g. if you have a long-running microservice, but do not want to hold up a dependent client should a query take too long, you can enforce a timeout for that path so the requesting client is not held up forever (or maange it's own timeout). To do so, add this to the extended_paths section of your APi definition:
    
    ```
    ...
    extended_paths: {
        ...
        transform_response_headers: [],
        hard_timeouts: [
          {
            path: ""delay/5"",
            method: ""GET"",
            timeout: 3
          }
        ]
    }
    ...
    ```
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1720117/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1720117,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.8,https://github.com/TykTechnologies/tyk/releases/tag/v1.8,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.8,v1.8,False,False
1585561,2015-07-25T09:32:54Z,2015-07-25T09:36:11Z,Hotfix 1.7.3,"This release fixes a bug with Oauth Refresh tokens not being valid after consecutive use
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1585561/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1585561,hotifx/oauth-refresh,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.7.3,https://github.com/TykTechnologies/tyk/releases/tag/1.7.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.7.3,1.7.3,False,False
1546060,2015-07-16T10:56:00Z,2015-07-16T13:37:51Z,Hotfix v1.7.2,"In certain configurations, Tyk can run out of open file descriptors because the golang Http server respects the keep-alive header, this can cause problems with high-trafic APIs.

With this hotfix you can add `""close_connections"": true` to your tyk.conf file and tyk will not keep open TCP connections.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1546060/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1546060,hotfix/keepalives2,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.7.2,https://github.com/TykTechnologies/tyk/releases/tag/1.7.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.7.2,1.7.2,False,False
1483381,2015-07-01T11:18:12Z,2015-07-01T12:41:32Z,Tyk v1.7.1,"Major speed and reliability optimisations.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1483381/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1483381,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.7.1,https://github.com/TykTechnologies/tyk/releases/tag/1.7.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.7.1,1.7.1,False,False
1449777,2015-06-22T10:29:49Z,2015-06-23T11:11:06Z,Tyk v1.7 and Dashboard v0.9.5,"Update: Dashboard 0.9.5.3
- Hotfix for listen_path issues when adding a new API

Update: Dashboard 0.9.5.2
- Fixes a compromise on editing listen path in forced API defaults mode. Listen path now editable again.

UPDATE: Dashboard 0.9.5.1
- Includes bug fix for very large data sets (stats not showing).

## The full changelog for 1.7:
- Open APIs now support caching, body transforms and header transforms
- Added RPC storage backend for cloud-based suport. RPC server is built in vayala/gorpc, signature for the methods that need to be provideda are in the `rpc_storage_handler.go` file (see the dispatcher).
- Added `oauth_refresh_token_expire` setting in configuration, allows for customisation of refresh token expiry in OAuth flows
- Changed refresh token expiry to be 14 days by default
- Basic swagger file supoprt in command line, use `--import-swagger=petstore.json` to import a swagger definition, will create a Whitelisted API.
- Created quota monitoring for orgs and user keys, uses a webhook. To configure update `tyk.conf` to include the global check rate and target data:

```
    ""monitor"": {
          ""enable_trigger_monitors"": false,
          ""configuration"": {
          ""method"": ""POST"",
              ""target_path"": ""http://posttestserver.com/post.php?dir=tyk-monitor-test"",
              ""template_path"": ""templates/monitor_template.json"",
              ""header_map"": {""x-tyk-monitor-secret"": ""12345""},
              ""event_timeout"": 10
          },
          ""global_trigger_limit"": 80.0,
          ""monitor_user_keys"": false,
          ""monitor_org_keys"": true
    }
```
- It is also possible to add custom rate monitors on a per-key basis, `SessionObject` has been updated to include a ""monitor"" section which lets you define custom limits to trigger a quota event, add this to your key objects:

```
    ""monitor"": {
          ""trigger_limits"": [80.0, 60.0, 50.0]
      }
```
- If a custom limit is the same as a global one the event will only fire once. The output will look like this:

```
    {
        ""event"": ""TriggerExceeded"",
        ""message"": ""Quota trigger reached"",
        ""org"": ""53ac07777cbb8c2d53000002"",
        ""key"": ""53ac07777cbb8c2d53000002c74f43ddd714489c73ea5c3fc83a6b1e"",
        ""trigger_limit"": ""80"",
    }
```
- Added response body transforms (JSON only), uses the same syntax as regular transforms, must be placed into `transform_response` list and the trasnformer must be registered under the new `response_transforms` list, otherwise it will not be activated.

```
    {
      name: ""response_body_transform"",
      options: {}
    }
```
- Added Response middleware chain and interface to handle response middleware. Response middleware must be declared under `response_processors` otherwise it is not loaded. Specifying options under the extended paths section will not be enough to enable response processors

```
    {
      name: ""header_injector"",
      options: {
        ""add_headers"": {""name"": ""value""},
        ""remove_headers"": [""name""]
      }
    }
```
- Added response header injection (uses the same code as the regular injector), add your path definitions to the `extended_paths.transform_response_headers` filed.
- Added `SupressDefaultOrgStore` - uses a default redis connection to handle unfound Org lookups, this is merely patching a potential hole
- Added support for Sentry DSN - monitoring can be added and enabled by adding to your `tyk.conf`:

```
    ...
    ""use_sentry"": true,
    ""sentry_code"": ""https://your-dsn-string"",
    ...
```
- Modification: Analyitcs purger (redis) now uses redis lists, much cleaner, and purge is a transaction which means multiple gateways can purge at the same time safely without risk of duplication
- Added `enforce_org_data_age` config parameter that allows for setting the expireAt in seconds for analytics data on an organisation level. (Requires the addition of a `data_expires` filed in the Session object that is larger than 0)
- Triggers now for dashboard/portal events, can be webhook or email:

```
    api_event: {
      webhook: ""http://posttestserver.com/post.php?dir=tyk-events"",
      email: ""xxx@xxx.io""
    },
    key_event: {
      webhook: ""http://posttestserver.com/post.php?dir=tyk-key-events"",
      email: ""xxx@xxx.io""
    },
    key_request_event: {
      webhook: ""http://posttestserver.com/post.php?dir=tyk-key-events"",
      email: ""xxx@xxx.io""
    }
```
- Fixed bug: Basic auth users can nw be created
- Fixed bug: Basic Auth type can now be selected in API creation
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1449777/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1449777,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.7,https://github.com/TykTechnologies/tyk/releases/tag/1.7,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.7,1.7,False,False
1222393,2015-04-25T12:30:09Z,2015-07-02T11:10:53Z,Tyk 1.6 and Tyk Dashboard 0.9.4.5,"UPDATE: Dashboard version 0.9.4.5 Hotfix: Large data sets now supported in analytics. Fixes bug where analytics do not show up.

Major release - now with a portal :-)

# v1.6
- Added LDAP StorageHandler, enables basic key lookups from an LDAP service
- Added Policies feature, you can now define key policies for keys you generate:
  - Create a policies/policies.json file
  - Set the appropriate arguments in tyk.conf file:
    
    ```
    ""policies"": {
        ""policy_source"": ""file"",
        ""policy_record_name"": ""./policies/policies.json""
    }
    ```
  - Create a policy, they look like this:
    
    ```
    {
        ""default"": {
            ""rate"": 1000,
            ""per"": 1,
            ""quota_max"": 100,
            ""quota_renewal_rate"": 60,
            ""access_rights"": {
                ""41433797848f41a558c1573d3e55a410"": {
                    ""api_name"": ""My API"",
                    ""api_id"": ""41433797848f41a558c1573d3e55a410"",
                    ""versions"": [
                        ""Default""
                    ]
                }
            },
            ""org_id"": ""54de205930c55e15bd000001"",
            ""hmac_enabled"": false
        }
    }
    ```
  - Add a `apply_policy_id` field to your Session object when you create a key with your policy ID (in this case the ID is `default`)
  - Reload Tyk
  - Policies will be applied to Keys when they are loaded form Redis, and the updated i nRedis so they can be ueried if necessary
- Policies can invalidate whole keysets by copying over the `InActive` field, set this to true in a policy and all keys that have the policy set will be refused access.
- Added granular path white-list: It is now possible to define at the key level what access permissions a key has, this is a white-list of regex keys and apply to a whole API definition. Granular permissions are applied _after_ version-based (global) ones in the api-definition. These granular permissions take the form a new field in the access rights field in either a policy definition or a session object in the new `allowed_urls` field:
  
  ```
  {
      ""default"": {
          ""rate"": 1000,
          ""per"": 1,
          ""quota_max"": 100,
          ""quota_renewal_rate"": 60,
          ""access_rights"": {
              ""41433797848f41a558c1573d3e55a410"": {
                  ""api_name"": ""My API"",
                  ""api_id"": ""41433797848f41a558c1573d3e55a410"",
                  ""versions"": [
                      ""Default""
                  ],
                  ""allowed_urls"": [
                      {   
                          ""url"": ""/resource/(.*),
                          ""methods"": [""GET"", ""POST""] 
                      }
                  ]
              }
          },
          ""org_id"": ""54de205930c55e15bd000001"",
          ""hmac_enabled"": false
      }
  }
  ```
- Added `hash_keys` config option. Setting this to `true` willc ause Tyk to store all keys in Redis in a hashed representation. This will also obfuscate keys in analytics data, using the hashed representation instead. Webhooks will continue to make the full API key available. This change is not backwards compatible if enabled on an existing installation.
- Added `cache_options.enable_upstream_cache_control` flag to API definitions
  - Upstream cache control is exclusive, caching must be enabled on the API, and the path to listen for upstream headers _must be defined in the `extended_paths` section_, otherwise the middleware will not activate for the path
  - Modified caching middleware to listen for two response headers: `x-tyk-cache-action-set` and `x-tyk-cache-action-set-ttl`.
  - If an upstream application replies with the header `x-tyk-cache-action-set` set to `1` (or anything non empty), and upstream control is enabled. Tyk will cache the response. 
  - If the upstream application sets `x-tyk-cache-action-set-ttl` to a numeric value, and upstream control is enabled, the cached object will be created for whatever number of seconds this value is set to.
- Added `auth.use_param` option to API Definitions, set to tru if you want Tyk to check for the API Token in the request parameters instead of the header, it will look for the value set in `auth.auth_header_name` and is _case sensitive_
- Host manager now supports Portal NginX tempalte maangement, will generate portal configuration files for NginX on load for each organisation in DB
- Host manager will now gracefully attempt reconnect if Redis goes down
- _Tyk will now reload on notifications from Redis_ (dashboard signal) for cluster reloads (see below), new option in config `SuppressRedisSignalReload` will suppress this behaviour (for example, if you are still using old host manager)
- Added new group reload endpoint (for management via LB), sending a GET to /tyk/reload/group will now send a pub/sub notification via Redis which will cause all listening nodes to reload gracefully.
- Host manager can now be set to manage Tyk or not, this means host manager can be deployed alongside NGinX without managing Tyk, and Tyk nodes reloading on their own using redis pub/sub
- Rate limiter now uses a rolling window, makes gaming the limiter by staddling the TTL harder
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1222393/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1222393,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.6,https://github.com/TykTechnologies/tyk/releases/tag/1.6,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.6,1.6,False,False
1168955,2015-04-15T07:43:10Z,2015-04-15T07:52:27Z,Hotfix Release for OAuth Server,"OAuth server was having problems with client creation and extraction during authentication flow, this hotfix addresses this issue.
- There is a _known bug in the Tyk Dashboard_, OAuth client management does not work, the REST API should be used to generate new OAuth clients. This has been remedied in the master branch and will be fully unctional in version 1.6 (0.9.4 of Dashboard)

This release only has the binaries for the main supported linux architectures. They can be applied as a drop-in replacement to the binary on your system
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/1168955/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/1168955,v1.5.1,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.5.1,https://github.com/TykTechnologies/tyk/releases/tag/1.5.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.5.1,1.5.1,False,False
944723,2015-02-12T09:25:47Z,2015-02-12T09:42:54Z,Tyk v1.5 and Dashboard v0.9.3,"- Added caching middleware
- Added optimisation settings for out-of-thread session updates and redis idle pool connections
- Added cache option to cache safe requests, means individual paths need not be defined, but all GET, OPTIONS and HEAD requests will be cached
- Added request transformation middleware, thus far only tested with JSON input. Add a golanfg template to the extended path config like so:
  
  ```
  ""transform"": [
      {
          ""path"": ""/"",
          ""template_data"": {
              ""template_mode"": ""file"",
              ""template_source"": ""./templates/transform_test.tmpl""
          }
      }
  ]
  ```
- Added header transformation middleware, simple implementation, but will delte and add headers before request is outbound:
  
  ```
  ""transform_headers"": [
      {
          ""delete_headers"": [""Content-Type"", ""authorization""],
          ""add_headers"": {""x-tyk-test-inject"": ""new-value""},
          ""path"": ""/post""
      }
  ]
  ```
- Clock skew for HMAC requests is now configurable
- Event handlers now also receive an encoded version of the inbound request as a base64-encoded string.
- License requirements removed
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/944723/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/944723,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.5,https://github.com/TykTechnologies/tyk/releases/tag/1.5,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.5,1.5,False,False
884475,2015-01-26T18:06:28Z,2015-01-26T19:34:08Z,Tyk Version 1.4 and Tyk Dashboard v0.9.2,"# Changelog
- Added expiry TTL to `tykcommon`, data expiry headers will be added to all analytics records, set `expire_analytics_after` to `0` to have data live indefinetely (currently 100 years), set to anything above zero for data in MongoDB to be removed after x seconds. **requirement**: You must create an expiry TTL index on the tyk_analytics collection manually (http://docs.mongodb.org/manual/tutorial/expire-data/). If you do not wish mongo to manage data expiry at all, simply do not create the index.
- Added a JS Virtual Machine so dynamic JS middleware can be run PRE and POST middleware chain
- Added a global JS VM
- Added an `eh_dynamic_handler` event handler type that runs JS event handlers
- Added Session management API and HttpRequest API to event handler JSVM.
- Added JS samples
- Fixed a bug where requests that happened at identical times could influence the quota wrongly
- Modified default quota behaviour: On create or update, key quotas are reset. _unless_ a new param `?suppress_reset=1` accompanies the REST request. This way a key can be updated and have the quote in Redis reset to Max, OR it can be edited without affecting the quota
- Rate limiter now uses new Redis based rate limiting pattern
- Added a `?reset_quota=1` parameter check to `/tyk/orgs/key` endpoint so that quotas can be reset for organisation-wide locks
- Organisations can now have quotas
- Keys and organisations can be made inactive without deleting
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/884475/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/884475,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.4,https://github.com/TykTechnologies/tyk/releases/tag/1.4,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.4,1.4,False,False
842032,2015-01-07T14:37:42Z,2015-01-11T18:51:49Z,Tyk Dashboard 0.9.1,"Tyk Dashboard 0.9.1 - Minor update, now supporting monthly licenses.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/842032/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/842032,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.3.0.1,https://github.com/TykTechnologies/tyk/releases/tag/1.3.0.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.3.0.1,1.3.0.1,False,False
817795,2014-12-30T17:22:27Z,2015-01-05T08:46:32Z,Tyk Version 1.3 and Tyk Dashboard v0.9,"Key features in this version are API mocking support, Blueprint importing and several health-check and end-user quota updates. Error and debug output has also been cleaned up for clutter free logging.

## Full change log:
- It is now possible to set IP's that shouldn't be tracked by analytics by setting the `ignored_ips` flag in the config file (e.g. for health checks) 
- Many core middleware configs moved into tyk common, tyk common can now be cross-seeded into other apps if necessary and is go gettable.
- Added a healthcheck function, calling `GET /tyk/health` with an `api_id` param, and the `X-Tyk-Authorization` header will return upstream latency average, requests per second, throttles per second, quota violations per second and key failure events per second. Can be easily extended to add more data.
- Tyk now reports quote status in response headers (Issue #27)
- Calling `/{api-id}/tyk/rate-limits` with an authorised header will return the rate limit for the current user without affecting them. Fixes issue #27
- Extended path listing (issue #16) now enabled, legacy paths will still work. You can now create an extended path set which supports forced replies (for mocking) as well as limiting by method, so `GET /widget/1234` will work and `POST /windget/1234` will not.
- You can now import API Blueprint files (JSON format) as new version definitions for your API, this includes mocking out responses. Blueprints can be added to existing API's as new versions or generate independent API definitions. 
  - Create a new definition from blueprint: `./tyk --import-blueprint=blueprint.json --create-api --org-id=<id> --upstream-target=""http://widgets.com/api/""`
  - Add a version to a definition: `./tyk --import-blueprint=blueprint.json --for-api=<api_id> --as-version=""2.0""`
  - Create a mock for either: use the `--as-mock` parameter.
- More tests, many many more tests
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/817795/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/817795,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.3,https://github.com/TykTechnologies/tyk/releases/tag/1.3,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.3,1.3,False,False
735127,2014-11-26T10:51:33Z,2014-11-26T11:11:02Z,Tyk Version 1.2.1 and Tyk Dashboard v0.8,"# Tyk v1.2.1
- No major updates, some core changes in the binary to make portability easier, minor bugfixes

# Tyk Dashboard 0.8
- IP Whitelisting support 
- Multi-tenant compatibility 
- Batch request support 
- Webhook support added to interface
- Listen path override on existing APIs
- Minor UI tweaks, updates and improvements
- Import API from source definition function
- Fixed bug in demo where data from today would not display in the dashboard view
- Fully self-contained, overall package is trimmer

# Upgrading

It is recommended to test the new version of Dashboard against your existing database installation to ensure that there re no schema conflicts. There shouldn't be any, Tyk Dashboard v0.8 supports the full API Definition schema of Tyk v1.0+ it is recommended to back up your database before updating.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/735127/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/735127,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.2.1,https://github.com/TykTechnologies/tyk/releases/tag/v1.2.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.2.1,v1.2.1,False,False
698461,2014-11-06T17:57:38Z,2014-11-12T16:24:31Z,Tyk Version 1.2 release and Tyk Dashboard 0.7.1 (beta) compatability release,"Tyk version 1.2 is a stability an extensibility release, with key structural changes in how the session managers and identity providers behave. They have been 
completely refactored into interfaces and can now be extended programatically. New features such as IP white listing and an event subsystem with web hooks have also been
added alongside some bug-fixes. this version makes a breaking change to the REST API on some requests and will not work with v0.7 of the dashboard, however a 1.7.1 
compatabiulity release has been issued to ensure ongoing compatibility.

### The full change log:
- Refactored AuthManager and SessionManagers so that any identity provider / Session data handler can be used
- Added SessionExpiry to AdpiDefinition, keys can expire on a date, and can be dropped form a session store set by this value, this increases security as re-auth can be forced with this
- Enables switching out storage managers per identity or session provider, so now it is fully mix and match
- API Requests require an `api_id` form value (either param or body) as keys are now stored (federated) on a per API basis and can live in multiple stores. THIS IS A BREAKING CHANGE
- Will not work with Dashboard 0.7
- Added IP white listing middleware, completely self-contained, very rudimentary, only explicit IP's allowed (doesn't handle subnets etc.), hould work with IPv4 and IPv6
- Added an Event subsystem and framework for extending and creating custom event handlers (e.g. for webhooks)
- Moved path checking to be before key checks in both Open and Closed API definitions (adopted from hotfix v1.1.1)
- Webhook event handler now exists, works like any other event handler, can be templated specifically for any output format and tailored to any method type.
- Batch request support
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/698461/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/698461,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.2,https://github.com/TykTechnologies/tyk/releases/tag/1.2,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.2,1.2,False,False
676173,2014-11-04T09:07:36Z,2014-11-04T09:14:06Z,Version 1.1.1 Minor bugfixes,"## Changes v1.1.1
- Path allowances (Ignored / Blacklist / Whitelist) on a version will now happen before an auth check, meaning ignored paths will allow anyone through
- Setting purge_delay to 0 will cause the service to not ever purge the redis DB of analytics data - handy for tyk clusters that only require one node to do the purging
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/676173/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/676173,v1.1.1,https://api.github.com/repos/TykTechnologies/tyk/tarball/v1.1.1,https://github.com/TykTechnologies/tyk/releases/tag/v1.1.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/v1.1.1,v1.1.1,False,False
493880,2014-08-15T10:56:39Z,2014-08-15T14:29:50Z,Tyk API Gateway v.1.1,"Small version bump to incorporate latest round of bugfixes and dependency updates, main breaking change is that  the Tyk API now expects american spelling of ""authorize"". So the tyk header now must be `x-tyk-authorization`, all documentation has been updated.

This version is compatible with Tyk Dashboard v0.7 beta

Updated Release: Now includes tarballs for Tyk Dashboard 0.7
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/493880/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/493880,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.1,https://github.com/TykTechnologies/tyk/releases/tag/1.1,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.1,1.1,False,False
488352,2014-08-13T10:40:17Z,2014-08-13T10:44:32Z,Tyk API Gateway v.1.0,"Initial stable release of Tyk.
",https://api.github.com/users/lonelycode,2444409,lonelycode,https://api.github.com/repos/TykTechnologies/tyk/releases/488352/assets,https://api.github.com/repos/TykTechnologies/tyk/releases/488352,master,https://api.github.com/repos/TykTechnologies/tyk/tarball/1.0,https://github.com/TykTechnologies/tyk/releases/tag/1.0,https://api.github.com/repos/TykTechnologies/tyk/zipball/1.0,1.0,False,False
