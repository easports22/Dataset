id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8192222,2017-10-19T01:14:46Z,2017-10-20T06:07:47Z,aiohttp 2.3.1 release,"Changes
------------

- Relax attribute lookup in warning about old-styled middleware (#2340)
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/8192222/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/8192222,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v2.3.1,https://github.com/aio-libs/aiohttp/releases/tag/v2.3.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v2.3.1,v2.3.1,False,False
8161954,2017-10-18T06:33:50Z,2017-10-18T08:41:17Z,aiohttp 2.3.0 release,"On behalf of aiohttp development team I'm pleased to announce next aiohttp release.

It contains very long list of new features and bug fixes (see it below).

Most important changes are:

* `ClientSession` supports `trust_env` parameter for getting proxy configuration from environment variables (disabled by default).
* New alternatives for filing route table: route table (https://github.com/aio-libs/aiohttp/blob/master/examples/web_srv_route_table.py) and router decorators (https://github.com/aio-libs/aiohttp/blob/master/examples/web_srv_route_deco.py)
* `Request.remote` property for accessing to IP of connected client.
* Support `brotli` encoding
* Support websockets compression

The full list of changes:

Features
--------

- Add SSL related params to `ClientSession.request` (#1128)
- Make enable_compression work on HTTP/1.0 (#1828)
- Deprecate registering synchronous web handlers (#1993)
- Switch to `multidict 3.0`. All HTTP headers preserve casing now but compared
  in case-insensitive way. (#1994)
- Improvement for `normalize_path_middleware`. Added possibility to handle URLs
  with query string. (#1995)
- Use towncrier for CHANGES.txt build (#1997)
- Implement `trust_env=True` param in `ClientSession`. (#1998)
- Added variable to customize proxy headers (#2001)
- Implement `router.add_routes` and router decorators. (#2004)
- Deprecated `BaseRequest.has_body` in favor of
  `BaseRequest.can_read_body` Added `BaseRequest.body_exists`
  attribute that stays static for the lifetime of the request (#2005)
- Provide `BaseRequest.loop` attribute (#2024)
- Make `_CoroGuard` awaitable and fix `ClientSession.close` warning message
  (#2026)
- Responses to redirects without Location header are returned instead of
  raising a RuntimeError (#2030)
- Added `get_client`, `get_server`, `setUpAsync` and `tearDownAsync` methods to
  AioHTTPTestCase (#2032)
- Add automatically a SafeChildWatcher to the test loop (#2058)
- add ability to disable automatic response decompression (#2110)
- Add support for throttling DNS request, avoiding the requests saturation when
  there is a miss in the DNS cache and many requests getting into the connector
  at the same time. (#2111)
- Use request for getting access log information instead of message/transport
  pair. Add `RequestBase.remote` property for accessing to IP of client
  initiated HTTP request. (#2123)
- json() raises a ContentTypeError exception if the content-type does not meet
  the requirements instead of raising a generic ClientResponseError. (#2136)
- Make the HTTP client able to return HTTP chunks when chunked transfer
  encoding is used. (#2150)
- add `append_version` arg into `StaticResource.url` and
  `StaticResource.url_for` methods for getting an url with hash (version) of
  the file. (#2157)
- Fix parsing the Forwarded header. * commas and semicolons are allowed inside
  quoted-strings; * empty forwarded-pairs (as in for=_1;;by=_2) are allowed; *
  non-standard parameters are allowed (although this alone could be easily done
  in the previous parser). (#2173)
- Don't require ssl module to run. aiohttp does not require SSL to function.
  The code paths involved with SSL will only be hit upon SSL usage. Raise
  `RuntimeError` if HTTPS protocol is required but ssl module is not present.
  (#2221)
- Accept coroutine fixtures in pytest plugin (#2223)
- Call `shutdown_asyncgens` before event loop closing on Python 3.6. (#2227)
- Speed up Signals when there are no receivers (#2229)
- Raise `InvalidURL` instead of `ValueError` on fetches with invalid URL.
  (#2241)
- Move `DummyCookieJar` into `cookiejar.py` (#2242)
- `run_app`: Make `print=None` disable printing (#2260)
- Support `brotli` encoding (generic-purpose lossless compression algorithm)
  (#2270)
- Add server support for WebSockets Per-Message Deflate. Add client option to
  add deflate compress header in WebSockets request header. If calling
  ClientSession.ws_connect() with `compress=15` the client will support deflate
  compress negotiation. (#2273)
- Support `verify_ssl`, `fingerprint`, `ssl_context` and `proxy_headers` by
  `client.ws_connect`. (#2292)
- Added `aiohttp.ClientConnectorSSLError` when connection fails due
  `ssl.SSLError` (#2294)
- `aiohttp.web.Application.make_handler` support `access_log_class` (#2315)
- Build HTTP parser extension in non-strict mode by default. (#2332)


Bugfixes
--------

- Clear auth information on redirecting to other domain (#1699)
- Fix missing app.loop on startup hooks during tests (#2060)
- Fix issue with synchronous session closing when using `ClientSession` as an
  asynchronous context manager. (#2063)
- Fix issue with `CookieJar` incorrectly expiring cookies in some edge cases.
  (#2084)
- Force use of IPv4 during test, this will make tests run in a Docker container
  (#2104)
- Warnings about unawaited coroutines now correctly point to the user's code.
  (#2106)
- Fix issue with `IndexError` being raised by the `StreamReader.iter_chunks()`
  generator. (#2112)
- Support HTTP 308 Permanent redirect in client class. (#2114)
- Fix `FileResponse` sending empty chunked body on 304. (#2143)
- Do not add `Content-Length: 0` to GET/HEAD/TRACE/OPTIONS requests by default.
  (#2167)
- Fix parsing the Forwarded header according to RFC 7239. (#2170)
- Securely determining remote/scheme/host #2171 (#2171)
- Fix header name parsing, if name is split into multiple lines (#2183)
- Handle session close during connection, `KeyError:
  <aiohttp.connector._TransportPlaceholder>` (#2193)
- Fixes uncaught `TypeError` in `helpers.guess_filename` if `name` is not a
  string (#2201)
- Raise OSError on async DNS lookup if resolved domain is an alias for another
  one, which does not have an A or CNAME record. (#2231)
- Fix incorrect warning in `StreamReader`. (#2251)
- Properly clone state of web request (#2284)
- Fix C HTTP parser for cases when status line is split into different TCP
  packets. (#2311)
- Fix `web.FileResponse` overriding user supplied Content-Type (#2317)


Improved Documentation
----------------------

- Add a note about possible performance degradation in `await resp.text()` if
  charset was not provided by `Content-Type` HTTP header. Pass explicit
  encoding to solve it. (#1811)
- Drop `disqus` widget from documentation pages. (#2018)
- Add a graceful shutdown section to the client usage documentation. (#2039)
- Document `connector_owner` parameter. (#2072)
- Update the doc of web.Application (#2081)
- Fix mistake about access log disabling. (#2085)
- Add example usage of on_startup and on_shutdown signals by creating and
  disposing an aiopg connection engine. (#2131)
- Document `encoded=True` for `yarl.URL`, it disables all yarl transformations.
  (#2198)
- Document that all app's middleware factories are run for every request.
  (#2225)
- Reflect the fact that default resolver is threaded one starting from aiohttp
  1.1 (#2228)


Deprecations and Removals
-------------------------

- Drop deprecated `Server.finish_connections` (#2006)
- Drop %O format from logging, use %b instead. Drop %e format from logging,
  environment variables are not supported anymore. (#2123)
- Drop deprecated secure_proxy_ssl_header support (#2171)
- Removed TimeService in favor of simple caching. TimeService also had a bug
  where it lost about 0.5 seconds per second. (#2176)
- Drop unused response_factory from static files API (#2290)
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/8161954/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/8161954,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v2.3.0,https://github.com/aio-libs/aiohttp/releases/tag/v2.3.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v2.3.0,v2.3.0,False,False
6770921,2017-06-20T11:38:29Z,2017-06-20T11:43:52Z,aiohttp 2.2.0 released,"CHANGES
---------------


- Add doc for add_head, update doc for add_get. #1944

- Fixed consecutive calls for `Response.write_eof`.

- Retain method attributes (e.g. :code:`__doc__`) when registering synchronous
  handlers for resources. #1953

- Added signal TERM handling in `run_app` to gracefully exit #1932

- Fix websocket issues caused by frame fragmentation. #1962

- Raise RuntimeError is you try to set the Content Length and enable
  chunked encoding at the same time #1941

- Small update for `unittest_run_loop`

- Use CIMultiDict for ClientRequest.skip_auto_headers #1970

- Fix wrong startup sequence: test server and `run_app()` are not raise
  `DeprecationWarning` now #1947

- Make sure cleanup signal is sent if startup signal has been sent #1959

- Fixed server keep-alive handler, could cause 100% cpu utilization #1955

- Connection can be destroyed before response get processed if
  `await aiohttp.request(..)` is used #1981

- MultipartReader does not work with -OO #1969

- Fixed `ClientPayloadError` with blank `Content-Encoding` header #1931

- Support `deflate` encoding implemented in `httpbin.org/deflate` #1918

- Fix BadStatusLine caused by extra `CRLF` after `POST` data #1792

- Keep a reference to `ClientSession` in response object #1985

- Deprecate undocumented `app.on_loop_available` signal #1978
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/6770921/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/6770921,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v2.2.0,https://github.com/aio-libs/aiohttp/releases/tag/v2.2.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v2.2.0,v2.2.0,False,False
6516494,2017-05-26T14:29:24Z,2017-05-26T15:24:24Z,aiohttp 2.1.0 release,"Changes
-------------

- Added support for experimental `async-tokio` event loop written in Rust
  https://github.com/PyO3/tokio

- Write to transport ``\r\n`` before closing after keepalive timeout,
  otherwise client can not detect socket disconnection. #1883

- Only call `loop.close` in `run_app` if the user did *not* supply a loop.
  Useful for allowing clients to specify their own cleanup before closing the
  asyncio loop if they wish to tightly control loop behavior

- Content disposition with semicolon in filename #917

- Added `request_info` to response object and `ClientResponseError`. #1733

- Added `history` to `ClientResponseError`. #1741

- Allow to disable redirect url re-quoting #1474

- Handle RuntimeError from transport #1790

- Dropped ""%O"" in access logger #1673

- Added `args` and `kwargs` to `unittest_run_loop`. Useful with other
  decorators, for example `@patch`. #1803

- Added `iter_chunks` to response.content object. #1805

- Avoid creating TimerContext when there is no timeout to allow
  compatibility with Tornado. #1817 #1180

- Add `proxy_from_env` to `ClientRequest` to read from environment
  variables. #1791

- Add DummyCookieJar helper. #1830

- Fix assertion errors in Python 3.4 from noop helper. #1847

- Do not unquote `+` in match_info values #1816

- Use Forwarded, X-Forwarded-Scheme and X-Forwarded-Host for better scheme and
  host resolution. #1134

- Fix sub-application middlewares resolution order #1853

- Fix applications comparison #1866

- Fix static location in index when prefix is used #1662

- Make test server more reliable #1896

- Use Forwarded, X-Forwarded-Scheme and X-Forwarded-Host for better scheme and
  host resolution. #1134

- Extend list of web exceptions, add HTTPUnprocessableEntity,
  HTTPFailedDependency, HTTPInsufficientStorage status codes #1920
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/6516494/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/6516494,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v2.1.0,https://github.com/aio-libs/aiohttp/releases/tag/v2.1.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v2.1.0,v2.1.0,False,False
6066231,2017-04-12T22:22:06Z,2017-04-12T22:37:15Z,aiohttp 2.0.7,"Changes
---------

- Fix *pypi* distribution

- Fix exception description #1807

- Handle socket error in FileResponse #1773

- Cancel websocket heartbeat on close #1793",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/6066231/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/6066231,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.7,https://github.com/aio-libs/aiohttp/releases/tag/2.0.7,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.7,2.0.7,False,False
6000118,2017-04-06T14:53:01Z,2017-04-06T14:53:54Z,aiohttp 2.0.6,"Changes
---------

- Fix ``web.run_app`` not to bind to default host-port pair if only socket is
  passed #1786

- Keeping blank values for `request.post()` and `multipart.form()` #1765

- TypeError in ResponseHandler.data_received #1770",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/6000118/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/6000118,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.6,https://github.com/aio-libs/aiohttp/releases/tag/2.0.6,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.6,2.0.6,False,False
5912736,2017-03-29T17:33:57Z,2017-03-29T18:06:14Z,aiohttp 2.0.5,"Changes
---------

- Memory leak with aiohttp.request #1756

- Disable cleanup closed ssl transports by default.

- Exception in request handling if the server responds before the body is sent #1761",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5912736/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5912736,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.5,https://github.com/aio-libs/aiohttp/releases/tag/2.0.5,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.5,2.0.5,False,False
5884721,2017-03-27T18:41:43Z,2017-03-27T18:55:28Z,aiohttp 2.0.4,"Changes
---------

- Memory leak with aiohttp.request #1756

- Encoding is always UTF-8 in POST data #1750

- Do not add ""Content-Disposition"" header by default #1755",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5884721/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5884721,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.4,https://github.com/aio-libs/aiohttp/releases/tag/2.0.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.4,2.0.4,False,False
5864336,2017-03-24T21:24:24Z,2017-03-24T21:26:20Z,aiohttp 2.0.3,"Changes
---------

- Call https website through proxy will cause error #1745

- Fix exception on multipart/form-data post if content-type is not set #1743
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5864336/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5864336,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.3-1,https://github.com/aio-libs/aiohttp/releases/tag/2.0.3-1,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.3-1,2.0.3-1,False,False
5840976,2017-03-21T22:11:35Z,2017-03-23T06:45:44Z,aiohttp 2.0.2,"Changes
---------

- Fixed Application.on_loop_available signal #1739

- Remove debug code",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5840976/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5840976,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.2,https://github.com/aio-libs/aiohttp/releases/tag/2.0.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.2,2.0.2,False,False
5820322,2017-03-21T14:59:11Z,2017-03-21T16:43:12Z,aiohttp 2.0.1,"Changes
---------

- Fix allow-head to include name on route #1737

- Fixed AttributeError in WebSocketResponse.can_prepare #1736
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5820322/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5820322,2.0,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.1,https://github.com/aio-libs/aiohttp/releases/tag/2.0.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.1,2.0.1,False,False
5806252,2017-03-20T17:12:02Z,2017-03-20T17:12:48Z,aiohttp 2.0.0,"For this release we completely refactored low-level implementation of http handling.
Finally `uvloop` gives performance improvement. Overall performance improvement
should be around 70-90% compared to 1.x version.

We took opportunity to refactor long standing api design problems across whole package.
Client exceptions handling has been cleaned up and now much more straight forward. Client payload
management simplified and allows to extend with any custom type. Client connection pool
implementation has been redesigned as well, now there is no need for actively releasing response objects,
aiohttp handles connection release automatically.

Another major change, we moved aiohttp development to public organization https://github.com/aio-libs

With this amount of api changes we had to make backward incompatible changes. Please check this migration document http://aiohttp.readthedocs.io/en/latest/migration.html

Please report problems or annoyance with with api to https://github.com/aio-libs/aiohttp

Changes
=======

2.0.0 (2017-03-20)
------------------

- Added `json` to `ClientSession.request()` method #1726

- Added session's `raise_for_status` parameter, automatically calls raise_for_status() on any request. #1724

- `response.json()` raises `ClientReponseError` exception if response's
  content type does not match #1723

- Cleanup timer and loop handle on any client exception.

- Deprecate `loop` parameter for Application's constructor


`2.0.0rc1` (2017-03-15)
-----------------------

- Properly handle payload errors #1710

- Added `ClientWebSocketResponse.get_extra_info()` #1717

- It is not possible to combine Transfer-Encoding and chunked parameter,
  same for compress and Content-Encoding #1655

- Connector's `limit` parameter indicates total concurrent connections.
  New `limit_per_host` added, indicates total connections per endpoint. #1601

- Use url's `raw_host` for name resolution #1685

- Change `ClientResponse.url` to `yarl.URL` instance #1654

- Add max_size parameter to web.Request reading methods #1133

- Web Request.post() stores data in temp files #1469

- Add the `allow_head=True` keyword argument for `add_get` #1618

- `run_app` and the Command Line Interface now support serving over
  Unix domain sockets for faster inter-process communication.

- `run_app` now supports passing a preexisting socket object. This can be useful
  e.g. for socket-based activated applications, when binding of a socket is
  done by the parent process.

- Implementation for Trailer headers parser is broken #1619

- Fix FileResponse to not fall on bad request (range out of file size)

- Fix FileResponse to correct stream video to Chromes

- Deprecate public low-level api #1657

- Deprecate `encoding` parameter for ClientSession.request() method

- Dropped aiohttp.wsgi #1108

- Dropped `version` from ClientSession.request() method

- Dropped websocket version 76 support #1160

- Dropped: `aiohttp.protocol.HttpPrefixParser`  #1590

- Dropped: Servers response's `.started`, `.start()` and `.can_start()` method  #1591

- Dropped:  Adding `sub app` via `app.router.add_subapp()` is deprecated
  use `app.add_subapp()` instead #1592

- Dropped: `Application.finish()` and `Application.register_on_finish()`  #1602

- Dropped: `web.Request.GET` and `web.Request.POST`

- Dropped: aiohttp.get(), aiohttp.options(), aiohttp.head(),
  aiohttp.post(), aiohttp.put(), aiohttp.patch(), aiohttp.delete(), and
  aiohttp.ws_connect() #1593

- Dropped: `aiohttp.web.WebSocketResponse.receive_msg()` #1605

- Dropped: `ServerHttpProtocol.keep_alive_timeout` attribute and
  `keep-alive`, `keep_alive_on`, `timeout`, `log` constructor parameters #1606

- Dropped: `TCPConnector's`` `.resolve`, `.resolved_hosts`, `.clear_resolved_hosts()`
  attributes and `resolve` constructor  parameter #1607

- Dropped `ProxyConnector` #1609
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5806252/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5806252,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.0,https://github.com/aio-libs/aiohttp/releases/tag/2.0.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.0,2.0.0,False,False
5769078,2017-03-16T14:55:40Z,2017-03-16T16:19:17Z,aiohttp 1.3.5,"CHANGES
----------

- Fixed None timeout support #1720
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5769078/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5769078,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.5,https://github.com/aio-libs/aiohttp/releases/tag/1.3.5,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.5,1.3.5,False,False
5747462,2017-03-15T17:28:10Z,2017-03-15T17:49:38Z,aiohttp 2.0.0rc1,"Major aiohttp2.0 release!
=========================

Warning! This is not final release. It contains backward incompatible change,
please check compatibility before installing on production systems.

For this release we completely refactored low-level implementation of http handling.
Finally `uvloop` gives performance improvement. Overall performance improvement
should be around 70-90% compared to 1.x version.

We took opportunity to refactor long standing api design problem across whole package.
Client exceptions handling has been cleaned up and now much more strait forward. Client payload
management simplified and allows to extends with any custom types. Client collection pool
implementation has been redesigned as well, now there is no need for actively releasing responses,
aiohttp handles connection release automatically.

Another major change, we moved aiohttp development to public organization https://github.com/aio-libs
The aiohttp community would like to thank `Keepsafe` (https://www.getkeepsafe.com) for it's support in the early days of the project.

Alas we had to make backward incompatible changes. Please check this migration document http://aiohttp.readthedocs.io/en/latest/migration.html

Please report problems or annoyance with with api to https://github.com/aio-libs/aiohttp

You can install and test this release with::

```
pip install https://github.com/aio-libs/aiohttp/archive/2.0.0rc1.tar.gz#egg=aiohttp-2.0.0rc1
```",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5747462/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5747462,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/2.0.0rc1,https://github.com/aio-libs/aiohttp/releases/tag/2.0.0rc1,https://api.github.com/repos/aio-libs/aiohttp/zipball/2.0.0rc1,2.0.0rc1,False,True
5747183,2017-03-15T02:05:36Z,2017-03-15T02:42:42Z,aiohttp 1.3.4,"CHANGES
=======

- Revert timeout handling in client request

- Fix StreamResponse representation after eof

- Fix file_sender to not fall on bad request (range out of file size)

- Fix file_sender to correct stream video to Chromes

- Fix NotImplementedError server exception #1703

- Clearer error message for URL without a host name. #1691

- Silence deprecation warning in __repr__ #1690

- IDN + HTTPS = `ssl.CertificateError` #1685",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5747183/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5747183,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.4,https://github.com/aio-libs/aiohttp/releases/tag/1.3.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.4,1.3.4,False,False
5505400,2017-02-20T02:03:46Z,2017-02-20T02:15:16Z,aiohttp 1.3.3,"## CHANGES
- Fixed memory leak in time service #1656
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5505400/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5505400,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.3,https://github.com/aio-libs/aiohttp/releases/tag/1.3.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.3,1.3.3,False,False
5482108,2017-02-16T19:11:49Z,2017-02-16T19:12:32Z,aiohttp 1.3.2,"## CHANGES
- Awaiting on WebSocketResponse.send_\* does not work #1645
- Fix multiple calls to client ws_connect when using a shared header dict #1643
- Make CookieJar.filter_cookies() accept plain string parameter. #1636
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5482108/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5482108,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.2,https://github.com/aio-libs/aiohttp/releases/tag/1.3.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.2,1.3.2,False,False
5408817,2017-02-09T14:27:58Z,2017-02-09T14:51:02Z,aiohttp 1.3.1,"## CHANGES
- Handle CLOSING in `WebSocketResponse.__anext__`
- Fixed AttributeError 'drain' for server websocket handler #1613
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5408817/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5408817,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.1,https://github.com/aio-libs/aiohttp/releases/tag/1.3.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.1,1.3.1,False,False
5399380,2017-02-08T18:08:36Z,2017-02-08T18:40:49Z,aiohttp 1.3.0,"## CHANGES
- Multipart writer validates the data on append instead of on a request send #920
- Multipart reader accepts multipart messages with or without their epilogue
  to consistently handle valid and legacy behaviors #1526 #1581
- Separate read + connect + request timeouts # 1523
- Do not swallow Upgrade header #1587
- Fix polls demo run application #1487
- Ignore unknown 1XX status codes in client #1353
- Fix sub-Multipart messages missing their headers on serialization #1525
- Do not use readline when reading the content of a part
  in the multipart reader #1535
- Add optional flag for quoting `FormData` fields #916
- 416 Range Not Satisfiable if requested range end > file size #1588
- Having a `:` or `@` in a route does not work #1552
- Added `receive_timeout` timeout for websocket to receive complete message. #1325
- Added `heartbeat` parameter for websocket to automatically send `ping` message. #1024 #777
- Remove `web.Application` dependency from `web.UrlDispatcher` #1510
- Accepting back-pressure from slow websocket clients #1367
- Do not pause transport during set_parser stage #1211
- Lingering close doesn't terminate before timeout #1559
- `setsockopt` may raise `OSError` exception if socket is closed already #1595
- Lots of CancelledError when requests are interrupted #1565
- Allow users to specify what should happen to decoding errors
  when calling a responses `text()` method #1542
- Back port std module `http.cookies` for python3.4.2 #1566
- Maintain url's fragment in client response #1314
- Allow concurrently close WebSocket connection #754
- Gzipped responses with empty body raises ContentEncodingError #609
- Return 504 if request handle raises TimeoutError.
- Refactor how we use keep-alive and close lingering timeouts.
- Close response connection if we can not consume whole http
  message during client response release
- Abort closed ssl client transports, broken servers can keep socket open un-limit time #1568
- Log warning instead of `RuntimeError` is websocket connection is closed.
- Deprecated: `aiohttp.protocol.HttpPrefixParser`
  will be removed in 1.4 #1590
- Deprecated: Servers response's `.started`, `.start()` and `.can_start()` method
  will be removed in 1.4 #1591
- Deprecated: Adding `sub app` via `app.router.add_subapp()` is deprecated
  use `app.add_subapp()` instead, will be removed in 1.4 #1592
- Deprecated: aiohttp.get(), aiohttp.options(), aiohttp.head(), aiohttp.post(),
  aiohttp.put(), aiohttp.patch(), aiohttp.delete(), and aiohttp.ws_connect()
  will be removed in 1.4 #1593
- Deprecated: `Application.finish()` and `Application.register_on_finish()`
  will be removed in 1.4 #1602
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/5399380/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/5399380,1.3,https://api.github.com/repos/aio-libs/aiohttp/tarball/1.3.0,https://github.com/aio-libs/aiohttp/releases/tag/1.3.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/1.3.0,1.3.0,False,False
4946938,2016-12-17T04:01:52Z,2016-12-17T04:37:29Z,aiohttp 1.2.0,"# CHANGES
- Extract `BaseRequest` from `web.Request`, introduce `web.Server`
  (former `RequestHandlerFactory`), introduce new low-level web server
  which is not coupled with `web.Application` and routing #1362
- Make `TestServer.make_url` compatible with `yarl.URL` #1389
- Implement range requests for static files #1382
- Support task attribute for StreamResponse #1410
- Drop `TestClient.app` property, use `TestClient.server.app` instead
  (BACKWARD INCOMPATIBLE)
- Drop `TestClient.handler` property, use `TestClient.server.handler` instead
  (BACKWARD INCOMPATIBLE)
- `TestClient.server` property returns a test server instance, was
  `asyncio.AbstractServer` (BACKWARD INCOMPATIBLE)
- Follow gunicorn's signal semantics in `Gunicorn[UVLoop]WebWorker` #1201
- Call worker_int and worker_abort callbacks in
  `Gunicorn[UVLoop]WebWorker` #1202
- Has functional tests for client proxy #1218
- Fix bugs with client proxy target path and proxy host with port #1413
- Fix bugs related to the use of unicode hostnames #1444
- Preserve cookie quoting/escaping #1453
- FileSender will send gzipped response if gzip version available #1426
- Don't override `Content-Length` header in `web.Response` if no body
  was set #1400
- Introduce `router.post_init()` for solving #1373
- Fix raise error in case of multiple calls of `TimeServive.stop()`
- Allow to raise web exceptions on router resolving stage #1460
- Add a warning for session creation outside of coroutine #1468
- Avoid a race when application might start accepting incoming requests
  but startup signals are not processed yet e98e8c6
- Raise a `RuntimeError` when trying to change the status of the HTTP response
  after the headers have been sent #1480
- Fix bug with https proxy acquired cleanup #1340
- Use UTF-8 as the default encoding for multipart text parts #1484
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4946938/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4946938,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.2.0,https://github.com/aio-libs/aiohttp/releases/tag/v1.2.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.2.0,v1.2.0,False,False
4654336,2016-11-14T17:14:58Z,2016-11-14T17:15:59Z,aiohttp 1.1.4,"Bugfix release.

## Changes
- Make `TestServer.make_url` compatible with `yarl.URL` #1389
- Generate informative exception on redirects from server which
  doesn't provide redirection headers #1396
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4654336/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4654336,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.1.4,https://github.com/aio-libs/aiohttp/releases/tag/v1.1.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.1.4,v1.1.4,False,False
4629736,2016-11-10T20:57:38Z,2016-11-10T21:05:21Z,aiohttp 1.1.3,"## Fixes
- Support _root_ resources for sub-applications #1379
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4629736/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4629736,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.1.3,https://github.com/aio-libs/aiohttp/releases/tag/v1.1.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.1.3,v1.1.3,False,False
4604539,2016-11-08T15:50:24Z,2016-11-08T16:20:19Z,aiohttp 1.1.2,"Bugfix release.

Fixed bugs:
- Allow starting variables with an underscore #1379
- Properly process UNIX sockets by gunicorn worker #1375
- Fix ordering for `FrozenList`
- Don't propagate pre and post signals to sub-application #1377
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4604539/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4604539,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.1.2,https://github.com/aio-libs/aiohttp/releases/tag/v1.1.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.1.2,v1.1.2,False,False
4568287,2016-11-04T08:55:02Z,2016-11-04T08:56:12Z,aiohttp 1.1.1,"## Changes
- Fix documentation generation #1120
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4568287/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4568287,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.1.1,https://github.com/aio-libs/aiohttp/releases/tag/v1.1.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.1.1,v1.1.1,False,False
4564227,2016-11-03T20:49:08Z,2016-11-03T20:52:15Z,aiohttp 1.1.0 releae,"## Main news are: 
- sub-application support
- using YARL library for working with URLs on both client and server side
- performance improvements

## Full list of changes:
- Drop deprecated `WSClientDisconnectedError` (BACKWARD INCOMPATIBLE)
- Use `yarl.URL` in client API. The change is 99% backward compatible
  but `ClientResponse.url` is an `yarl.URL` instance now. #1217
- Close idle keep-alive connections on shutdown #1222
- Modify regex in AccessLogger to accept underscore and numbers #1225
- Use `yarl.URL` in web server API. `web.Request.rel_url` and
  `web.Request.url` are added. URLs and templates are percent-encoded
  now. #1224
- Accept `yarl.URL` by server redirections #1278
- Return `yarl.URL` by `.make_url()` testing utility #1279
- Properly format IPv6 addresses by `aiohttp.web.run_app` #1139
- Use `yarl.URL` by server API #1288
  - Introduce `resource.url_for()`, deprecate `resource.url()`.
  - Implement `StaticResource`.
  - Inherit `SystemRoute` from `AbstractRoute`
  - Drop old-style routes: `Route`, `PlainRoute`, `DynamicRoute`,
    `StaticRoute`, `ResourceAdapter`.
- Revert `resp.url` back to `str`, introduce `resp.url_obj` #1292
- Raise ValueError if BasicAuth login has a "":"" character #1307
- Fix bug when ClientRequest send payload file with opened as
  open('filename', 'r+b') #1306
- Enhancement to AccessLogger (pass _extra_ dict) #1303
- Show more verbose message on import errors #1319
- Added save and load functionality for `CookieJar` #1219
- Added option on `StaticRoute` to follow symlinks #1299
- Force encoding of `application/json` content type to utf-8 #1339
- Fix invalid invocations of `errors.LineTooLong` #1335
- Websockets: Stop `async for` iteration when connection is closed #1144
- Ensure TestClient HTTP methods return a context manager #1318
- Raise `ClientDisconnectedError` to `FlowControlStreamReader` read function
  if `ClientSession` object is closed by client when reading data. #1323
- Document deployment without `Gunicorn` #1120
- Add deprecation warning for MD5 and SHA1 digests when used for fingerprint
  of site certs in TCPConnector. #1186
- Implement sub-applications #1301
- Don't inherit `web.Request` from `dict` but implement
  `MutableMapping` protocol.
- Implement frozen signals
- Don't inherit `web.Application` from `dict` but implement
  `MutableMapping` protocol.
- Support freezing for web applications
- Accept access_log parameter in `web.run_app`, use `None` to disable logging
- Don't flap `tcp_cork` and `tcp_nodelay` in regular request handling.
  `tcp_nodelay` is still enabled by default.
- Improve performance of web server by removing premature computing of
  Content-Type if the value was set by `web.Response` constructor.
  
  While the patch boosts speed of trivial `web.Response(text='OK',
  content_type='text/plain)` very well please don't expect significant
  boost of your application -- a couple DB requests and business logic
  is still the main bottleneck.
- Boost performance by adding a custom time service #1350
- Extend `ClientResponse` with `content_type` and `charset`
  properties like in `web.Request`. #1349
- Disable aiodns by default #559
- Don't flap `tcp_cork` in client code, use TCP_NODELAY mode by default.
- Implement `web.Request.clone()` #1361
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4564227/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4564227,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.1.0,https://github.com/aio-libs/aiohttp/releases/tag/v1.1.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.1.0,v1.1.0,False,False
4361500,2016-10-11T17:14:54Z,2016-10-11T17:40:38Z,aiohttp 1.0.5 release,"## CHANGES
- Fix StreamReader._read_nowait to return all available
  data up to the requested amount. It boosts a performance in edge cases #1297
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4361500/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4361500,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.0.5,https://github.com/aio-libs/aiohttp/releases/tag/v1.0.5,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.0.5,v1.0.5,False,False
4300842,2016-10-04T16:05:49Z,2016-10-04T16:10:28Z,aiohttp 1.0.4 bugfix release,"## Changes
- Fix FlowControlStreamReader.read_nowait so that it checks
  whether the transport is paused #1206
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4300842/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4300842,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.0.4,https://github.com/aio-libs/aiohttp/releases/tag/v1.0.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.0.4,v1.0.4,False,False
4201195,2016-09-22T09:15:02Z,2016-09-22T09:22:36Z,aiohttp 1.0.2 bugfix release,"## Changes
- Make CookieJar compatible with 32-bit systems #1188
- Add missing `WSMsgType` to `web_ws.__all__`, see #1200
- Fix `CookieJar` ctor when called with `loop=None` #1203
- Fix broken upper-casing in wsgi support #1197
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4201195/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4201195,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.0.2,https://github.com/aio-libs/aiohttp/releases/tag/v1.0.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.0.2,v1.0.2,False,False
4155740,2016-09-16T19:15:20Z,2016-09-16T20:00:52Z,aiohttp 1.0.1 bugfix release,"# CHANGES
- Restore `aiohttp.web.MsgType` alias for `aiohttp.WSMsgType` for sake
  of backward compatibility #1178
- Tune alabaster schema.
- Use `text/html` content type for displaying index pages by static
  file handler.
- Fix `AssertionError` in static file handling #1177
- Fix access log formats `%O` and `%b` for static file handling
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4155740/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4155740,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.0.1,https://github.com/aio-libs/aiohttp/releases/tag/v1.0.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.0.1,v1.0.1,False,False
4151989,2016-09-16T12:31:40Z,2016-09-16T12:50:07Z,aiohttp 1.0 release,"The first _officially_ stable release.
We are working hard on **aiohttp** stability.
This release is tagged as `1.0` -- the library is mature enough for this.
Backward compatibility with previous releases is kept as usual.
Deprecation period is 1.5 years.

The list of changes is pretty long, but the most significant ones are:

## Common
- HTTP headers are title-cased (`Content-Length`) now, they was upper-cased (`CONTENT-LENGTH`) in previous releases.
- `aiohttp.Timeout` is alias for `async_timeout.timeout`

## Client
- Client cookies support was rewritten in backward incompatible manner to split cookies with the same name but belonging to different domains #1173
- `ProxyConnector` is deprecated, regular methods like `ClientSession.get()` accepts `proxy` and `proxy_auth` parameters explicitly #998
- Default settings for `aiohttp.TCPConnector` uses asynchronous DNS requests and cache for given DNS resolutions #1152

## Server
- Router has handy methods for route adding like `app.router.add_get()`, `app.router.add_post()` etc. #986
- `Request` has `.multipart()` methods for easy access to multipart encoded data #1067 

## Testing
- Significant improvements in aiohttp testing suite: new parameters for tuning test server and client are added

## Full list of changes
- Change default size for client session's connection pool from
  unlimited to 20 #977
- Add IE support for cookie deletion. #994
- Remove deprecated `WebSocketResponse.wait_closed` method (BACKWARD
  INCOMPATIBLE)
- Remove deprecated `force` parameter for `ClientResponse.close`
  method (BACKWARD INCOMPATIBLE)
- Avoid using of mutable CIMultiDict kw param in make_mocked_request
  #997
- Make WebSocketResponse.close a little bit faster by avoiding new
  task creating just for timeout measurement
- Add `proxy` and `proxy_auth` params to `client.get()` and family,
  deprecate `ProxyConnector` #998
- Add support for websocket send_json and receive_json, synchronize
  server and client API for websockets #984
- Implement router shourtcuts for most useful HTTP methods, use
  `app.router.add_get()`, `app.router.add_post()` etc. instead of
  `app.router.add_route()` #986
- Support SSL connections for gunicorn worker #1003
- Move obsolete examples to legacy folder
- Switch to multidict 2.0 and title-cased strings #1015
- `{FOO}e` logger format is case-sensitive now
- Fix logger report for unix socket 8e8469b
- Rename aiohttp.websocket to aiohttp._ws_impl
- Rename aiohttp.MsgType tp aiohttp.WSMsgType
- Introduce aiohttp.WSMessage officially
- Rename Message -> WSMessage
- Remove deprecated decode param from resp.read(decode=True)
- Use 5min default client timeout #1028
- Relax HTTP method validation in UrlDispatcher #1037
- Pin minimal supported asyncio version to 3.4.2+ (`loop.is_close()`
  should be present)
- Remove aiohttp.websocket module (BACKWARD IMCOMPATIBLE)
  Please use high-level client and server approaches
- Link header for 451 status code is mandatory
- Fix test_client fixture to allow multiple clients per test #1072
- make_mocked_request now accepts dict as headers #1073
- Add Python 3.5.2/3.6+ compatibility patch for async generator
  protocol change #1082
- Improvement test_client can accept instance object #1083
- Simplify ServerHttpProtocol implementation #1060
- Add a flag for optional showing directory index for static file
  handling #921
- Define `web.Application.on_startup()` signal handler #1103
- Drop ChunkedParser and LinesParser #1111
- Call `Application.startup` in GunicornWebWorker #1105
- Fix client handling hostnames with 63 bytes when a port is given in
  the url #1044
- Implement proxy support for ClientSession.ws_connect #1025
- Return named tuple from WebSocketResponse.can_prepare #1016
- Fix access_log_format in `GunicornWebWorker` #1117
- Setup Content-Type to application/octet-stream by default #1124
- Deprecate debug parameter from app.make_handler(), use
  `Application(debug=True)` instead #1121
- Remove fragment string in request path #846
- Use aiodns.DNSResolver.gethostbyname() if available #1136
- Fix static file sending on uvloop when sendfile is available #1093
- Make prettier urls if query is empty dict #1143
- Fix redirects for HEAD requests #1147
- Default value for `StreamReader.read_nowait` is -1 from now #1150
- `aiohttp.StreamReader` is not inherited from `asyncio.StreamReader` from now
  (BACKWARD INCOMPATIBLE) #1150
- Streams documentation added #1150
- Add `multipart` coroutine method for web Request object #1067
- Publish ClientSession.loop property #1149
- Fix static file with spaces #1140
- Fix piling up asyncio loop by cookie expiration callbacks #1061
- Drop `Timeout` class for sake of `async_timeout` external library.
  `aiohttp.Timeout` is an alias for `async_timeout.timeout`
- `use_dns_cache` parameter of `aiohttp.TCPConnector` is `True` by
  default (BACKWARD INCOMPATIBLE) #1152
- `aiohttp.TCPConnector` uses asynchronous DNS resolver if available by
  default (BACKWARD INCOMPATIBLE) #1152
- Conform to RFC3986 - do not include url fragments in client requests #1174
- Drop `ClientSession.cookies` (BACKWARD INCOMPATIBLE) #1173
- Refactor `AbstractCookieJar` public API (BACKWARD INCOMPATIBLE) #1173
- Fix clashing cookies with have the same name but belong to different
  domains (BACKWARD INCOMPATIBLE) #1125
- Support binary Content-Transfer-Encoding #1169
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/4151989/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/4151989,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v1.0.0,https://github.com/aio-libs/aiohttp/releases/tag/v1.0.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v1.0.0,v1.0.0,False,False
3795724,2016-08-02T17:56:49Z,2016-08-02T18:01:01Z,aiohttp 0.22.5,"Pin miltidict version to >=1.2.2,<2.0.0

It fixes a bug with broken multidict dependecy
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3795724/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3795724,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.5,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.5,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.5,v0.22.5,False,False
3759635,2016-07-28T11:21:14Z,2016-07-28T11:23:11Z,"Technical release, required for pinning multidict<2.0",,https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3759635/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3759635,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.4,v0.22.4,False,False
3744487,2016-07-26T19:55:02Z,2016-07-26T19:56:16Z,aiohttp 0.22.3 release,"## Changes
- Do not filter cookies if unsafe flag provided #1005

Thanks to Misha Behersky for finding and fixing!
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3744487/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3744487,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.3,v0.22.3,False,False
3724545,2016-07-23T13:06:42Z,2016-07-23T13:21:25Z,aiohttp 0.22.2 release,"Bugfix release that introduces _usafe_ cookie jar which should not be used in production but very useful for test writing.

## Changes
- Suppress CancelledError when Timeout raises TimeoutError #970
- Don't expose `aiohttp.__version__`
- Add unsafe parameter to CookieJar #968
- Use unsafe cookie jar in test client tools
- Expose aiohttp.CookieJar name
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3724545/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3724545,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.2,v0.22.2,False,False
3672754,2016-07-16T11:28:08Z,2016-07-16T11:34:02Z,aiohttp 0.22.1 bugfix release,"The release fixes a very annoying regression: client API was broken when code accepts cookie with expiration date larger than 24 days.

Update is highly recommended.
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3672754/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3672754,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.1,v0.22.1,False,False
3664872,2016-07-15T08:26:05Z,2016-07-15T08:54:25Z,aiohttp 0.22.0 release,"After long pause we proud to present new aiohttp major release.

## The main changes:
- Fixed security issue with leaking cookies in client session: #799 
- Added aiodns support: #819 
- Added public api for testing: #900 #902 #914
- Added narrative tutorial
- Dropped features deprecated in 0.14 and 0.15 releases (more than year ago).
- multidict is spitted into separate library
- aiohttp now is published as linux wheels as well as old good gzipped tarball.

## Full list of changes:
- Fix bug in serving static directory #803
- Fix command line arg parsing #797
- Fix a documentation chapter about cookie usage #790
- Handle empty body with gzipped encoding #758
- Support 451 Unavailable For Legal Reasons http status  #697
- Fix Cookie share example and few small typos in docs #817
- UrlDispatcher.add_route with partial coroutine handler #814
- Optional support for aiodns #728
- Add ServiceRestart and TryAgainLater websocket close codes #828
- Fix prompt message for `web.run_app` #832
- Allow to pass None as a timeout value to disable timeout logic #834
- Fix leak of connection slot during connection erro #835
- Gunicorn worker with uvloop support `aiohttp.worker.GunicornUVLoopWebWorker` #878
- Don't send body in response to HEAD request #838
- Skip the preamble in MultipartReader #881
- Implement BasicAuth decode classmethod. #744
- Don't crash logger when transport is None #889
- Use a create_future compatibility wrapper instead of creating
  Futures directly #896
- Add test utilities to aiohttp #902
- Improve Request.**repr** #875
- Skip DNS resolving if provided host is already an ip address #874
- Add headers to ClientSession.ws_connect #785
- Document that server can send pre-compressed data #906
- Don't add Content-Encoding and Transfer-Encoding if no body #891
- Add json() convenience methods to websocket message objects #897
- Add client_resp.raise_for_status() #908
- Implement cookie filter #799
- Include an example of middleware to handle error pages #909
- Fix error handling in StaticFileMixin #856
- Add mocked request helper #900
- Fix empty ALLOW Response header for cls based View #929
- Respect CONNECT method to implement a proxy server #847
- Add pytest_plugin #914
- Add tutorial
- Add backlog option to support more than 128 (default value in
  ""create_server"" function) concurrent connections #892
- Allow configuration of header size limits #912
- Separate sending file logic from StaticRoute dispatcher #901
- Drop deprecated share_cookies connector option (BACKWARD INCOMPATIBLE)
- Drop deprecated support for tuple as auth paramter.
  Use aiohttp.BasicAuth instead (BACKWARD INCOMPATIBLE)
- Remove deprecated `request.payload` property, use `content` instead.
  (BACKWARD INCOMPATIBLE)
- Drop all mentions about api changes in documentaion for versions
  older than 0.16
- Allow to override default cookie jar #963
- Add manylinux wheel builds
- Dup a socket for sendfile usage #964

Thanks to all for contributions!
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3664872/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3664872,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.22.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.22.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.22.0,v0.22.0,False,False
3164327,2016-05-05T11:27:04Z,2016-05-05T12:10:07Z,aiohttp 0.21.6 release,"Fixed link to documentation: now http://aiohttp.readthedocs.io/en/v0.21.6/ works

## Changes
- Drop initial query parameters on redirects #853
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/3164327/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/3164327,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/4v0.21.6,https://github.com/aio-libs/aiohttp/releases/tag/4v0.21.6,https://api.github.com/repos/aio-libs/aiohttp/zipball/4v0.21.6,4v0.21.6,False,False
2799266,2016-03-13T11:10:33Z,2016-03-12T17:24:17Z,0.21.4 aiohttp release,"Minor release, has a couple of bug fixes

## CHANGES
- Fix ResourceAdapter: dont add method to allowed if resource is not
  match #826
- Fix Resouce: append found method to returned allowed methods
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2799266/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2799266,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.21.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.21.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.21.4,v0.21.4,False,False
2624224,2016-02-16T14:53:20Z,2016-02-16T15:00:30Z,aiohttp 0.21.2 release,"Bugfix release for fixing subtle regression

## Changes
- Fix a regression: support for handling ~/path in static file routes was
  broken #782
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2624224/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2624224,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.21.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.21.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.21.2,v0.21.2,False,False
2624214,2016-02-10T18:36:07Z,2016-02-16T14:59:38Z,aiohttp 0.21.1 release,"Bugfix release to restore aiohttp_debugtoolar functionality.

## Changes
- Make new resources classes public #767
- Add `router.resources()` view
- Fix cmd-line parameter names in doc
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2624214/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2624214,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.21.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.21.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.21.1,v0.21.1,False,False
2552415,2016-02-04T11:13:46Z,2016-02-04T12:51:26Z,aiohttp 0.21.0 release,"The release has many changes, most interesting are:
- Web router is deeply refactored
- Added utility function for application running
- Added command line command for running a web server
- Added raw http headers (not converted into utf-8)
- Client CORK/NODELAY optimization
- Full-functional demo added

## Full list of changes:
- Introduce on_shutdown signal #722
- Implement raw input headers #726
- Implement web.run_app utility function #734
- Introduce on_cleanup signal
- Deprecate Application.finish() / Application.register_on_finish() in favor of
  on_cleanup.
- Get rid of bare aiohttp.request(), aiohttp.get() and family in docs #729
- Deprecate bare aiohttp.request(), aiohttp.get() and family #729
- Refactor keep-alive support #737:
  - Enable keepalive for HTTP 1.0 by default
  - Disable it for HTTP 0.9 (who cares about 0.9, BTW?)
  - For keepalived connections
    - Send `Connection: keep-alive` for HTTP 1.0 only
    - don't send `Connection` header for HTTP 1.1
  - For non-keepalived connections
    - Send `Connection: close` for HTTP 1.1 only
    - don't send `Connection` header for HTTP 1.0
- Add version parameter to ClientSession constructor,
  deprecate it for session.request() and family #736  
- Enable access log by default #735
- Deprecate app.router.register_route() (the method was not documented
  intentionally BTW).
- Deprecate app.router.named_routes() in favor of app.router.named_resources()
- route.add_static accepts pathlib.Path now #743
- Add command line support: `$ python -m aiohttp.web package.main` #740
- FAQ section was added to docs. Enjoy and fill free to contribute new topics
- Add async context manager support to ClientSession
- Document ClientResponse's host, method, url properties
- Use CORK/NODELAY in client API #748
- ClientSession.close and Connector.close are coroutines now
- Close client connection on exception in ClientResponse.release()
- Allow to read multipart parts without content-length specified #750
- Add support for unix domain sockets to gunicorn worker #470
- Add test for default Expect handler #601
- Add the first demo project
- Rename `loader` keyword argument in `web.Request.json` method. #646
- Add local socket binding for TCPConnector #678
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2552415/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2552415,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.21.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.21.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.21.0,v0.21.0,False,False
2390630,2016-01-07T21:43:17Z,2016-01-07T21:48:04Z,aiohttp 0.20.2 release,"aiohttp 0.20.2 bugfix

The main reason for making the release is fixing memory leak #723 -- very old, small but annoying problem.

Couple minor fixed was published also.

## Changes
- Enable use of `await` for a class based view #717
- Check address family to fill wsgi env properly #718
- Fix memory leak in headers processing (thanks to Marco Paolini) #723
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2390630/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2390630,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.20.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.20.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.20.2,v0.20.2,False,False
2355212,2015-12-30T15:46:26Z,2015-12-30T15:49:07Z,aiohttp 0.20.1 release,"Bugfix release, mostly for fixing benoitc/gunicorn#1055

## Full list of changes:
- Raise RuntimeError is Timeout context manager was used outside of
  task context.
- Add number of bytes to stream.read_nowait #700
- Use X-FORWARDED-PROTO for wsgi.url_scheme when available
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2355212/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2355212,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.20.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.20.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.20.1,v0.20.1,False,False
2345130,2015-12-28T05:31:31Z,2015-12-28T05:40:23Z,aiohttp 0.20.0 release,"The release has many optimizations as well as other improvements and bug fixes.

## The most notable ones:
- Use TCP_CORK/TCP_NOPUSH and TCP_NODELAY for disabling Nagle algorithm
- Reduce amount of syscalls for chunked encoding transfer
- Improve performance of websocket mask applying
- Round server timeouts to seconds for grouping pending calls
- Implement Class Based Views
- Fix broken support for https proxies with authentication

## Full list of changes:
- Extend list of web exceptions, add HTTPMisdirectedRequest,
  HTTPUpgradeRequired, HTTPPreconditionRequired, HTTPTooManyRequests,
  HTTPRequestHeaderFieldsTooLarge, HTTPVariantAlsoNegotiates,
  HTTPNotExtended, HTTPNetworkAuthenticationRequired status codes #644
- Do not remove AUTHORIZATION header by WSGI handler #649
- Fix broken support for https proxies with authentication #617
- Get REMOTE_\* and SEVER_\* http vars from headers when listening on
  unix socket #654
- Add HTTP 308 support #663
- Add Tf format (time to serve request in seconds, %06f format) to
  access log #669
- Remove one and a half years long deprecated
  ClientResponse.read_and_close() method
- Optimize chunked encoding: use a single syscall instead of 3 calls
  on sending chunked encoded data
- Use TCP_CORK and TCP_NODELAY to optimize network latency and
  throughput #680
- Websocket XOR performance improved #687
- Avoid sending cookie attributes in Cookie header #613
- Round server timeouts to second for grouping pending call.  That
  leads to less amount of poller syscalls e.g epoll.poll(). #702
- Close connection on websocket handshake error #703
- Implement class based views #684
- Add _headers_ parameter to ws_connect() #709
- Drop unused function `parse_remote_addr()` #708
- Close session on exception #707
- Store http code and headers in WSServerHandshakeError #706
- Make some low-level message properties readonly #710
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2345130/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2345130,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.20.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.20.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.20.0,v0.20.0,False,False
2185142,2015-11-25T15:46:55Z,2015-11-25T15:53:19Z,aiohttp 0.19.0,"Major aiohttp 0.19.0 release 

## Highlighted features

`async for` support for websockets and client multiparts,
support redirects history for client requests,
`Timeout` context manager for limiting execution time of inner block.

## Full list of changes
- Memory leak in ParserBuffer #579
- Suppport gunicorn's `max_requests` settings in gunicorn worker
- Fix wsgi environment building #573
- Improve access logging #572
- Drop unused host and port from low-level server #586
- Add Python 3.5 `async for` implementation to server websocket #543
- Add Python 3.5 `async for` implementation to client websocket
- Add Python 3.5 `async with` implementation to client websocket
- Add charset parameter to web.Response constructor #593
- Forbid passing both Content-Type header and content_type or charset
  params into web.Response constructor
- Forbid duplicating of web.Application and web.Request #602
- Add an option to pass Origin header in ws_connect #607
- Add json_response function #592
- Make concurrent connections respect limits #581
- Collect history of responses if redirects occur #614
- Enable passing pre-compressed data in requests #621
- Expose named routes via UrlDispatcher.named_routes() #622
- Allow disabling sendfile by environment variable AIOHTTP_NOSENDFILE #629
- Use ensure_future if available
- Always quote params for Content-Disposition #641
- Support async for in multipart reader #640
- Add Timeout context manager #611
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2185142/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2185142,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.19.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.19.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.19.0,v0.19.0,False,False
2122597,2015-11-13T15:46:58Z,2015-11-13T15:50:47Z,aiohttp 0.18.4 ,"Bugfix release.

## Changes
- Relax rule for router names again by adding dash to allowed
  characters: they may contain identifiers, dashes, dots and columns
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2122597/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2122597,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.18.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.18.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.18.4,v0.18.4,False,False
2015044,2015-10-25T12:33:25Z,2015-10-25T12:34:44Z,aiohttp 0.18.3 bugfix release,"## Changes
- Fix formatting for _RequestContextManager helper #590 
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2015044/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2015044,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.18.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.18.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.18.3,v0.18.3,False,False
2004212,2015-10-22T18:30:45Z,2015-10-22T18:33:49Z,aiohttp 0.18.2,"Bugfix release, fixes regression with usage OpenSSL < 1.0.0 #584 
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/2004212/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/2004212,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.18.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.18.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.18.2,v0.18.2,False,False
1990158,2015-10-20T16:35:34Z,2015-10-20T16:37:14Z,aiohttp 0.18.1 ,"0.18.1 bugfix release

## Changes
- Relax rule for router names: they may contain dots and columns
  starting from now
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1990158/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1990158,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.18.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.18.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.18.1,v0.18.1,False,False
1980648,2015-10-19T08:10:46Z,2015-10-19T08:17:06Z,aiohttp 0.18.0,"Major **aiohttp** release.

Added support for `async for` and `async with`, e.g.

```
async with client.get(url) as resp:
    async for line in resp.content:
        print(line)
```

auto-closes response object and iterates over response's content.

Server-side signals added (allows, for example, setup http headers for long-living responses in signal hook).

Python 3.3 support dropped.

Full list of changes is pretty huge:

## Changes
- Use errors.HttpProcessingError.message as HTTP error reason and
  message #459
- Optimize cythonized multidict a bit
- Change repr's of multidicts and multidict views
- default headers in ClientSession are now case-insensitive
- Make '=' char and 'wss://' schema safe in urls #477
- `ClientResponse.close()` forces connection closing by default from now #479
  N.B. Backward incompatible change: was `.close(force=False)
  Using`force`parameter for the method is deprecated: use`.release()` instead.
- Properly requote URL's path #480
- add `skip_auto_headers` parameter for client API #486
- Properly parse URL path in aiohttp.web.Request #489
- Raise RuntimeError when chunked enabled and HTTP is 1.0 #488
- Fix a bug with processing io.BytesIO as data parameter for client API #500
- Skip auto-generation of Content-Type header #507
- Use sendfile facility for static file handling #503
- Default `response_factory` in `app.router.add_static` now is
  `StreamResponse`, not `None`. The functionality is not changed if
  default is not specified.
- Drop `ClientResponse.message` attribute, it was always implementation detail.
- Streams are optimized for speed and mostly memory in case of a big
  HTTP message sizes #496
- Fix a bug for server-side cookies for dropping cookie and setting it
  again without Max-Age parameter.
- Don't trim redirect URL in client API #499
- Extend precision of access log ""D"" to milliseconds #527
- Deprecate `StreamResponse.start()` method in favor of
  `StreamResponse.prepare()` coroutine #525
  
  `.start()` is still supported but responses begun with `.start()`
  doesn't call signal for response preparing to be sent. 
- Add `StreamReader.__repr__`
- Drop Python 3.3 support, from now minimal required version is Python
  3.4.1 #541
- Add `async with` support for `ClientSession.request()` and family #536
- Ignore message body on 204 and 304 responses #505
- `TCPConnector` processed both IPv4 and IPv6 by default #559
- Add `.routes()` view for urldispatcher #519
- Route name should be a valid identifier name from now #567
- Implement server signals #562
- Drop an year-old deprecated _files_ parameter from client API.
- Added `async for` support for aiohttp stream #542
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1980648/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1980648,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.18.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.18.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.18.0,v0.18.0,False,False
1882489,2015-09-29T10:48:27Z,2015-09-29T10:52:46Z,aiohttp 0.17.4 release,"Minor **aiohttp** release.

The main change is making code pep-492 compatible.
So you can use await in client API, e.g.:

```
async def getter(url):
    resp = await aiohttp.get(url)
    try:
        text = await resp.read()
        return text
    finally:
        await resp.release()
```

## Changes
- Properly parse URL path in aiohttp.web.Request #489
- Add missing coroutine decorator, the code is await-compatible now
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1882489/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1882489,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.17.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.17.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.17.4,v0.17.4,False,False
1737916,2015-08-28T17:30:09Z,2015-08-28T17:43:29Z,aiohttp 0.17.3 ,"aiohttp 0.17.3 bugfix release

## Changes
- Remove Content-Length header on compressed responses #450
- Support Python 3.5
- Improve performance of transport in-use list #472
- Fix connection pooling #473
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1737916/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1737916,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.17.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.17.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.17.3,v0.17.3,False,False
1656641,2015-08-11T14:59:02Z,2015-08-11T15:15:40Z,aiohttp 0.17.2 release,"Bugfix release

## Changes
- Don't forget to pass `data` argument forward #462
- Fix multipart read bytes count #463
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1656641/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1656641,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.17.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.17.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.17.2,v0.17.2,False,False
1653459,2015-08-10T23:07:48Z,2015-08-10T23:18:35Z,aiohttp 0.17.1 release,"Bugfix release

Fixed multidict comparison (c727d25d328dbd3ddca5b8708aab28b9e6229416)
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1653459/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1653459,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.17.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.17.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.17.1,v0.17.1,False,False
1627816,2015-08-04T18:33:05Z,2015-08-04T18:50:00Z,Major aiohttp 0.17.0 release,"# Major release

Actually it doesn't introduce many new features but has a lot of bug fixes.

## New features are
- slightly improve client API by adding toplevel `get()`, `post()`, `put()`, `head()`, `delete()`, `options()`,
  `patch()` coroutines
- Add context manager support to `ClientSession` for session closing.
- Make `StaticRoute` supporting `Last-Modified` and `If-Modified-Since` headers
- Pass SSL context through proxy connector

Also please take a look on documentation: http://aiohttp.readthedocs.org/en/stable/ now has a comment section (powered by disqus) on the bottom of every page. We hope your comments will increase docs quality very well.

## Full list of changes
- Make StaticRoute support Last-Modified and If-Modified-Since headers #386
- Add Request.if_modified_since and Stream.Response.last_modified properties
- Fix deflate compression when writing a chunked response #395
- Request`s content-length header is cleared now after redirect from
  POST method #391
- Return a 400 if server received a non HTTP content #405
- Fix keep-alive support for aiohttp clients #406
- Allow gzip compression in high-level server response interface #403
- Rename TCPConnector.resolve and family to dns_cache #415
- Make UrlDispatcher ignore quoted characters during url matching #414
  Backward-compatibility warning: this may change the url matched by
  your queries if they send quoted character (like %2F for /) #414
- Use optional cchardet accelerator if present #418
- Borrow loop from Connector in ClientSession if loop is not set
- Add context manager support to ClientSession for session closing.
- Add toplevel get(), post(), put(), head(), delete(), options(),
  patch() coroutines.
- Fix IPv6 support for client API #425
- Pass SSL context through proxy connector #421
- Make the rule: path for add_route should start with slash
- Don't process request finishing by low-level server on closed event loop
- Don't override data if multiple files are uploaded with same key #433
- Ensure multipart.BodyPartReader.read_chunk read all the necessary data
  to avoid false assertions about malformed multipart payload
- Dont sent body for  204, 205 and 304 http exceptions #442
- Correctly skip Cython compilation in MSVC not found #453
- Add response factory to StaticRoute #456
- Don't append trailing CRLF for multipart.BodyPartReader #454
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1627816/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1627816,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.17.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.17.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.17.0,v0.17.0,False,False
1542020,2015-07-15T17:40:44Z,2015-07-15T17:46:14Z,aiohttp 0.16.6 bugfix release,"## Changes
- Skip compilation on Windows if vcvarsall.bat cannot be found #438
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1542020/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1542020,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.6,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.6,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.6,v0.16.6,False,False
1412253,2015-06-13T13:57:31Z,2015-06-13T14:01:17Z,aiohttp 0.16.5 bugfix release,"The release finally fixes all issues in multidicts related to Cython but for removing current exception if present.

The fixed bug is important enough: it may lead to Python interpreter crash with segfault in some cases.
aiohttp development team strongly recommends upgrading to new version.

See #410 for details.

## Changes
- Get rid of all comprehensions and yielding in _multidict #410 
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1412253/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1412253,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.5,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.5,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.5,v0.16.5,False,False
1411719,2015-06-13T06:11:10Z,2015-06-13T06:18:01Z,aiohttp 0.16.4 bugfix release,"## Changes
- Don't clear current exception in multidict's `__repr__` (cythonized versions) #410

The fixed bug is fairly serious: it may lead to Python interpreter crash with segfault in some cases.
aiohttp development team strongly recommends upgrading to new version.

See #410 for details.
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1411719/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1411719,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.4,v0.16.4,False,False
1356888,2015-05-30T19:28:12Z,2015-05-30T19:30:32Z,aiohttp 0.16.3 bugfix release,"## Changes
- Fix StaticRoute vulnerability to directory traversal attacks #380
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1356888/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1356888,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.3,v0.16.3,False,False
1345108,2015-05-27T21:25:44Z,2015-05-27T21:32:11Z,aiohttp 0.16.2,"Bugfix release, restore support for asyncio 3.4.0.

## Changes
- Update python version required for `__del__` usage: it's actially
  3.4.1 instead of 3.4.0
- Add check for presence of loop.is_closed() method before call the
  former #378
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1345108/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1345108,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.2,v0.16.2,False,False
1342440,2015-05-27T12:06:57Z,2015-05-27T12:09:14Z,aiohttp 0.16.1 release,"Bugfix release for fixing regression in static file handling #377 
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1342440/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1342440,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.1,v0.16.1,False,False
1338932,2015-05-26T17:19:14Z,2015-05-26T17:59:21Z,aiohttp 0.16.0 release,"Major release, new features added.

Client API refactored a bit, `ClientSession` is first-class citizen now and highly recommended to use instead of `aiohttp.request`. 

Full list of changes:
- Unset waiter future after cancellation #363
- Update request url with query parameters #372
- Support new `fingerprint` param of TCPConnector to enable verifying
  ssl certificates via md5, sha1, or sha256 digest #366
- Setup uploaded filename if field value is binary and transfer
  encoding is not specified #349
- Implement `ClientSession.close()` method
- Implement `connector.closed` readonly property
- Implement `ClientSession.closed` readonly property
- Implement `ClientSession.connector` readonly property
- Implement `ClientSession.detach` method
- Add `__del__` to client-side objects: sessions, connectors,
  connections, requests, responses.
- Refactor connections cleanup by connector #357
- Add `limit` parameter to connector constructor #358
- Add `request.has_body` property #364
- Add `response_class` parameter to `ws_connect()` #367
- `ProxyConnector` doesn't support keep-alive requests by default
  starting from now #368
- Add `connector.force_close` property
- Add ws_connect to ClientSession #374
- Support optional `chunk_size` parameter in `router.add_static()`
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/1338932/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1338932,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.16.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.16.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.16.0,v0.16.0,False,False
1201968,2015-04-22T16:55:21Z,2015-04-22T16:57:56Z,aiohttp 0.15.3 release,"## CHANGES
- Fix graceful shutdown handling
- Fix `Expect` header handling for not found and not allowed routes #340
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/1201968/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1201968,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.15.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.15.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.15.3,v0.15.3,False,False
1185668,2015-04-19T03:51:07Z,2015-04-19T04:03:00Z,aiohttp 0.15.2 release,"I am happy to announce new release of aiohttp. We did a lot of performance optimizations for new release.
It should be 50-70% faster in raw performance than previous version. Numbers look very cool, but for those who uses aiohttp in production situation slightly different, it won't give more than 1-2% of performance increase.

## CHANGES
- Flow control subsystem refactoring
- Http server performace optimizations
- Allow to match any request method with `*`
- Explicitly call drain on transport #316
- Make chardet module dependency mandatory #318
- Support keep-alive for HTTP 1.0 #325
- Do not chunk single file during upload #327
- Add ClientSession object for cookie storage and default headers #328
- Add `keep_alive_on` argument for http server handler.
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/1185668/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1185668,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.15.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.15.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.15.2,v0.15.2,False,False
1112964,2015-03-31T23:14:39Z,2015-03-31T23:18:26Z,aiohttp 0.15.1 release,"# CHANGES
- Pass Autobahn Testsuit tests
- Fixed websocket fragmentation
- Fixed websocket close procedure
- Fixed parser buffer limits
- Added `timeout` parameter to WebSocketResponse ctor
- Added `WebSocketResponse.close_code` attribute
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/1112964/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1112964,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.15.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.15.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.15.1,v0.15.1,False,False
1098763,2015-03-27T16:05:00Z,2015-03-27T16:21:06Z,aiohttp 0.15.0 release,"With 0.15.0 release we are very close to 1.0 version.

aiohttp now supports client side websockets. Server side websockets support has been refactored. I think web sockets api is stable now. Also we introduced new multipart system, client side for now but we are working on server side integration as well. New version of aiohttp now supports `Except` header out of box. Thanks all contributors for hard work!

Enjoy!

## Changes
- Client WebSockets support
- New Multipart system #273
- Support for ""Except"" header #287 #267
- Set default Content-Type for post requests #184
- Fix issue with construction dynamic route with regexps and trailing slash #266
- Add repr to web.Request
- Add repr to web.Response
- Add repr for NotFound and NotAllowed match infos
- Add repr for web.Application
- Add repr to UrlMappingMatchInfo #217
- Gunicorn 19.2.x compatibility
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/1098763/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/1098763,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.15.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.15.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.15.0,v0.15.0,False,False
898099,2015-01-29T19:25:46Z,2015-01-29T19:27:39Z,aiohttp 0.14.4 bugfix release,"## Changes
- Fix issue with error during constructing of url with regex parts #264
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/898099/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/898099,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.14.4,https://github.com/aio-libs/aiohttp/releases/tag/v0.14.4,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.14.4,v0.14.4,False,False
892771,2015-01-28T12:41:02Z,2015-01-28T12:43:56Z,aiohttp 0.14.3 bugfix release,"## Changes
- Use path='/' by default for cookies #261
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/892771/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/892771,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.14.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.14.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.14.3,v0.14.3,False,False
877408,2015-01-23T07:39:20Z,2015-01-23T07:44:51Z,aiohttp 0.14.2 bugfix release,"## The list of fixes:
- Connections leak in BaseConnector #253
- Do not swallow websocket reader exceptions #255
- web.Request's read, text, json are memorized #250
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/877408/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/877408,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.14.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.14.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.14.2,v0.14.2,False,False
856288,2015-01-15T20:55:03Z,2015-01-15T21:19:54Z,aiohttp 0.14 release,"0.14 is the great release.

We have finished a hard work to stabilize `aiohttp.web` now.

Almost any new wish appeared in our mind may be implemented with the current code by third-party libraries: CORS, sessions, authorization, rendering and so on without the need for making changes in `aiohttp` itself.

That's a very strong sign on `aiohttp.web` design: the library is good and it is as tiny as possible.

## 0.14.0 (15/01/2014)
- HttpMessage._add_default_headers does not overwrite existing headers #216
- Expose multidict classes at package level
- add `aiohttp.web.WebSocketResponse`
- According to RFC 6455 websocket subprotocol preference order is
  provided by client, not by server
- websocket's ping and pong accept optional message parameter
- multidict views do not accept `getall` parameter anymore, it
  returns the full body anyway.
- multidicts have optional Cython optimization, cythonized version of multidicts is
  about 5 times faster than pure Python.
- multidict.getall() returns `list`, not `tuple`.
- Backward imcompatible change: now there are two mutable multidicts
  (`MultiDict`, `CIMultiDict`) and two immutable multidict proxies
  (`MultiDictProxy` and `CIMultiDictProxy`). Previous edition of
  multidicts was not a part of public API BTW.
- Router refactoring to push Not Allowed and Not Found in middleware processing
- Convert `ConnectionError` to `aiohttp.DisconnectedError` and don't
  eat `ConnectionError` exceptions from web handlers.
- Remove hop headers from Response class, wsgi response still uses hop headers.
- Allow to send raw chunked encoded response.
- Allow to encode output bytes stream into chunked encoding.
- Allow to compress output bytes stream with `deflate` encoding.
- Server has 75 seconds keepalive timeout now, was non-keepalive by default.
- Application doesn't accept `**kwargs` anymore (#243).
- Request is inherited from dict now for making per-request storage to
  middlewares (#242).
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/856288/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/856288,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.14.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.14.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.14.1,v0.14.1,False,False
817231,2014-12-31T11:30:10Z,2014-12-31T11:34:21Z,Minor 0.13.1 release,"## Changes
- Add `aiohttp.web.StreamResponse.started` property #213
- Html escape traceback text in `ServerHttpProtocol.handle_error`
- Mention handler and middlewares in `aiohttp.web.RequestHandler.handle_request`
  on error (#218)
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/817231/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/817231,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.13.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.13.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.13.1,v0.13.1,False,False
813864,2014-12-29T18:31:01Z,2014-12-29T18:35:42Z,Release 0.13.0,"aiohttp 0.13 major release

## Changes
- `StreamResponse.charset` converts value to lower-case on assigning.
- Chain exceptions when raise `ClientRequestError`.
- Support custom regexps in route variables #204
- Fixed graceful shutdown, disable keep-alive on connection closing.
- Decode http message with `utf-8` encoding, some servers send headers in utf-8 encoding #207
- Support `aiohtt.web` middlewares #209
- Add ssl_context to TCPConnector #206
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/813864/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/813864,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.13.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.13.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.13.0,v0.13.0,False,False
779442,2014-12-12T19:53:00Z,2014-12-12T20:08:18Z,aiohttp 0.12.0,"# CHANGES
- Deep refactoring of `aiohttp.web` in backward-incompatible manner.
  Sorry, we have to do this.
- Automatically force aiohttp.web handlers to coroutines in
  `UrlDispatcher.add_route()` #186
- Rename `Request.POST()` function to `Request.post()`
- Added POST attribute
- Response processing refactoring: constructor does't accept Request instance anymore.
- Pass application instance to finish callback
- Exceptions refactoring
- Do not unquote query string in `aiohttp.web.Request`
- Fix concurrent access to payload in `RequestHandle.handle_request()`
- Add access logging to `aiohttp.web`
- Gunicorn worker for `aiohttp.web`
- Removed deprecated `AsyncGunicornWorker`
- Removed deprecated HttpClient
",https://api.github.com/users/fafhrd91,598990,fafhrd91,https://api.github.com/repos/aio-libs/aiohttp/releases/779442/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/779442,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.12.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.12.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.12.0,v0.12.0,False,False
742623,2014-11-29T16:34:19Z,2014-11-29T16:41:51Z,aiohttp 0.11.0,"**aiohttp 0.11.0** **major** relase.

Added named  routes with building url by route name.

## Changes:
- Support named routes in `aiohttp.web.UrlDispatcher` #179
- Make websocket subprotocols conform to spec #181
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/742623/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/742623,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.11.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.11.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.11.0,v0.11.0,False,False
717428,2014-11-19T16:49:48Z,2014-11-19T16:51:00Z,aiohttp 0.10.2,"**aiohttp 0.10.2** minor bugfix release.

## Changes
- Don't unquote `environ['PATH_INFO']` in wsgi.py #177
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/717428/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/717428,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.10.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.10.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.10.2,v0.10.2,False,False
709883,2014-11-17T13:03:03Z,2014-11-17T13:08:00Z,aiohttp 0.10.1,"**aiohttp 0.10.1** minor bugfix release.

## Changes
- aiohttp.web.HTTPException and descendants now files response body
  with string like `404: NotFound`
- Fix multidict `__iter__` regression, the method should iterate over keys, not (key, value) pairs.
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/709883/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/709883,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.10.1,https://github.com/aio-libs/aiohttp/releases/tag/v0.10.1,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.10.1,v0.10.1,False,False
701136,2014-11-13T12:46:51Z,2014-11-13T12:51:27Z,aiohttp 0.10.0,"**aiohttp 0.10.0** is a major release.

The main feature is brand new _aiohttp.web_ package.

We made several minor tweaks and bugfixes also.

## Changes:
- Add aiohttp.web subpackage for highlevel http server support.
- Add _reason_ optional parameter to aiohttp.protocol.Response ctor.
- Fix aiohttp.client bug for sending file without content-type.
- Change error text for connection closed between server responses
  from 'Can not read status line' to explicit 'Connection closed by
  server'
- Drop closed connections from connector #173
- Set server.transport to None on .closing() #172
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/701136/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/701136,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.10.0,https://github.com/aio-libs/aiohttp/releases/tag/v0.10.0,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.10.0,v0.10.0,False,False
665267,2014-10-30T12:52:06Z,2014-10-30T12:57:07Z,aiohttp 0.9.3,"**aiohttp 0.9.3** is a minor bugfix release, issued to fix compatibility problems with asyncio 3.4.1+

## Changes:
- Fix compatibility with asyncio 3.4.1+ #170
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/665267/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/665267,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.9.3,https://github.com/aio-libs/aiohttp/releases/tag/v0.9.3,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.9.3,v0.9.3,False,False
632009,2014-10-16T17:48:59Z,2014-10-16T17:54:05Z,aiohttp 0.9.2,"**aiohttp 0.9.2** is a minor bugfix release.

## Changes:
- Improve redirect handling #157
- Send raw files as is #153
- Better websocket support #150
",https://api.github.com/users/asvetlov,356399,asvetlov,https://api.github.com/repos/aio-libs/aiohttp/releases/632009/assets,https://api.github.com/repos/aio-libs/aiohttp/releases/632009,master,https://api.github.com/repos/aio-libs/aiohttp/tarball/v0.9.2,https://github.com/aio-libs/aiohttp/releases/tag/v0.9.2,https://api.github.com/repos/aio-libs/aiohttp/zipball/v0.9.2,v0.9.2,False,False
