id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
4571670,2016-11-04T14:59:16Z,2016-11-04T15:05:31Z,5.0.0,"As part of this release we had [14 issues](https://github.com/akavache/Akavache/issues?milestone=3&state=closed) closed.

**Breaking changes**
- [**#317**](https://github.com/akavache/Akavache/pull/317) Update the SQLite dependency to support Android 7
- [**#291**](https://github.com/akavache/Akavache/pull/291) Akavache 5.0 Discussion
- [**#283**](https://github.com/akavache/Akavache/pull/283) Remove the support for WinRT80, since it can't even be opened in VS2015

**Feature**
- [**#255**](https://github.com/akavache/Akavache/pull/255) Allow UTC DateTimes to be forced.

**Bugs**
- [**#282**](https://github.com/akavache/Akavache/pull/282) Pin the Splat dependency in the nuspec file to the same version we're building Akavache with
- [**#258**](https://github.com/akavache/Akavache/pull/258) InsertAllObjects self recursion

**Improvements**
- [**#319**](https://github.com/akavache/Akavache/pull/319) Implemented automatic CI release workflow
- [**#318**](https://github.com/akavache/Akavache/pull/318) Implemented continuous integration
- [**#289**](https://github.com/akavache/Akavache/pull/289) Index the TypeName in the database to make bulk object queries faster
- [**#288**](https://github.com/akavache/Akavache/pull/288) Added CacheElement.Expiration index
- [**#260**](https://github.com/akavache/Akavache/pull/260) Lazily initialize the various SQLite operations
- [**#259**](https://github.com/akavache/Akavache/pull/259) Remove some unused code

**Documentation**
- [**#311**](https://github.com/akavache/Akavache/pull/311) Added issue/pr templates and contrib guidelines
- [**#293**](https://github.com/akavache/Akavache/pull/293) Added Shutdown instructions to README.

### Where to get it

You can download this release from [nuget.org](https://www.nuget.org/packages/akavache/5.0.0)
",https://api.github.com/users/ghuntley,127353,ghuntley,https://api.github.com/repos/akavache/Akavache/releases/4571670/assets,https://api.github.com/repos/akavache/Akavache/releases/4571670,master,https://api.github.com/repos/akavache/Akavache/tarball/5.0.0,https://github.com/akavache/Akavache/releases/tag/5.0.0,https://api.github.com/repos/akavache/Akavache/zipball/5.0.0,5.0.0,False,False
2023370,2015-10-27T04:54:46Z,2015-10-27T05:04:22Z,Akavache 4.1.2,"## [What's New](https://github.com/akavache/Akavache/compare/4.1.1...4.1.2)

### Bug Fixes
- Fix hang on initialization (#229, thanks @pureween)
- Prevent shutdown for caches that aren't being used (#243, thanks @jcomtois)
- Fix a deadlock in Flush / Vacuum (#254, thanks @niik)
- Add a new property to force time zone for Akavache.SQLite3 (#255, thanks @kentcb)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/2023370/assets,https://api.github.com/repos/akavache/Akavache/releases/2023370,develop,https://api.github.com/repos/akavache/Akavache/tarball/4.1.2,https://github.com/akavache/Akavache/releases/tag/4.1.2,https://api.github.com/repos/akavache/Akavache/zipball/4.1.2,4.1.2,False,False
2023349,2015-10-27T04:51:08Z,2015-10-27T04:53:00Z,Akavache 4.1.1,"## [What's New](https://github.com/akavache/Akavache/compare/4.1.0...4.1.1)
- Fix Vacuum (#214, thanks @niik)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/2023349/assets,https://api.github.com/repos/akavache/Akavache/releases/2023349,develop,https://api.github.com/repos/akavache/Akavache/tarball/4.1.1,https://github.com/akavache/Akavache/releases/tag/4.1.1,https://api.github.com/repos/akavache/Akavache/zipball/4.1.1,4.1.1,False,False
822070,2015-01-03T23:02:18Z,2015-01-03T23:07:40Z,Akavache 4.1.0,"## [What's New](https://github.com/akavache/Akavache/compare/4.0.4...4.1.0)

### Xamarin.iOS / Xamarin.Mac 64-bit support

Akavache now supports the Xamarin Unified profile for iOS and Mac - if you use the Migration tool, it is highly advised to remove and re-add the Akavache packages manually. 

### Bug Fixes
- Fix DownloadUrl and friends to correctly store content
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/822070/assets,https://api.github.com/repos/akavache/Akavache/releases/822070,master,https://api.github.com/repos/akavache/Akavache/tarball/4.1.0,https://github.com/akavache/Akavache/releases/tag/4.1.0,https://api.github.com/repos/akavache/Akavache/zipball/4.1.0,4.1.0,False,False
682233,2014-11-06T05:14:57Z,2014-11-06T05:17:02Z,Akavache 4.0.4,"## [What's New](https://github.com/akavache/Akavache/compare/4.0.3...4.0.4)
- Add a feature to DownloadUrl to specify an explicit key (#181, thanks @RocketPop)
- Ensure that GetCreatedAt never throws (#184, thanks @flagbug)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/682233/assets,https://api.github.com/repos/akavache/Akavache/releases/682233,master,https://api.github.com/repos/akavache/Akavache/tarball/4.0.4,https://github.com/akavache/Akavache/releases/tag/4.0.4,https://api.github.com/repos/akavache/Akavache/zipball/4.0.4,4.0.4,False,False
522449,2014-08-28T22:13:43Z,2014-08-28T22:19:04Z,Akavache 4.0.3,"## [What's New](https://github.com/akavache/Akavache/compare/4.0.2...4.0.3)

### Bug Fixes
- Fix `GetCreatedAt` to return correct times (#177, thanks @niik)
- Ensure waiting on Shutdown doesn't block
- Small performance improvement
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/522449/assets,https://api.github.com/repos/akavache/Akavache/releases/522449,master,https://api.github.com/repos/akavache/Akavache/tarball/4.0.3,https://github.com/akavache/Akavache/releases/tag/4.0.3,https://api.github.com/repos/akavache/Akavache/zipball/4.0.3,4.0.3,False,False
514129,2014-08-26T00:41:30Z,2014-08-26T00:44:24Z,Akavache 4.0.2,"## [What's New](https://github.com/akavache/Akavache/compare/4.0.1...4.0.2)
- Update to v0.5.0 of SQLitePCL-Raw, (#171  thanks @shiftkey)
- Improve performance on mobile devices by firing less timers (#176)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/514129/assets,https://api.github.com/repos/akavache/Akavache/releases/514129,master,https://api.github.com/repos/akavache/Akavache/tarball/4.0.2,https://github.com/akavache/Akavache/releases/tag/4.0.2,https://api.github.com/repos/akavache/Akavache/zipball/4.0.2,4.0.2,False,False
479709,2014-08-08T15:30:20Z,2014-08-08T15:38:51Z,Akavache 4.0.1,"## [What's New](https://github.com/akavache/Akavache/compare/4.0.0...4.0.1)

### Bug Fixes
- Fix several bugs related to using Akavache.Sqlite3 on Windows Phone 8.1 (WinRT)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/479709/assets,https://api.github.com/repos/akavache/Akavache/releases/479709,master,https://api.github.com/repos/akavache/Akavache/tarball/4.0.1,https://github.com/akavache/Akavache/releases/tag/4.0.1,https://api.github.com/repos/akavache/Akavache/zipball/4.0.1,4.0.1,False,False
467814,2014-08-03T09:24:47Z,2014-08-03T09:29:25Z,Akavache 4.0,"## [Welcome to Akavache 4.0](https://github.com/akavache/Akavache/compare/3.2.0...4.0.0)

After 8 months of work and 424 commits from 7 authors, Akavache 4.0 is now released! Thanks to the contributors for this release:
- Johan Laanstra
- Oren Novotny
- Brendan Forster
- Phil Haack
- Herman Banken
- Oskar Hermansson

In particular, a huge thanks goes to Johan, who migrated the SQLite-based backend to Eric Sink's SQLitePcl.Raw - a ton of work!

### A Universal Akavache

Akavache 4.0 now supports a native SQLite on all platforms, as well as including support for new platforms:
- Xamarin.Android
- Xamarin.iOS
- Xamarin.Mac
- Xamarin Forms (iOS + Android + WP8)
- .NET 4.5
- Universal Windows Apps (WPA81)
- Windows Phone 8.0 Apps (Silverlight-based)
- Windows Store Apps (WinRT)

Akavache is also much smaller, because it no longer depends on ReactiveUI, instead depending on a much smaller library called [Splat](https://github.com/paulcbetts/splat). Akavache also has now moved to the latest version of the Reactive Extensions, v2.2.5.

### SQLite Performance is Significantly Improved

![](http://cl.ly/image/3c3u35100e1w/content#png)

The SQLite driver has been completely rewritten in Akavache 4.0 for performance, especially when used by multiple threads at the same time. Synthetic benchmarks on the new SQLite backend show that it is **8x faster** at reading random data, and a whopping **82x faster** than the previous version at writing random data.

This improvement was done without any on-disk metadata changes - existing SQLite databases are immediately compatible. This new driver also completely resolves the ""locking"" issues that people would see when executing many operations in parallel.

### Garbage Collection and Cleanup

Akavache now allows applications to explicitly schedule cleanup of the underlying database, via a new `Vacuum` API. This will drop all expired keys from the database, as well as its name implies, execute a `VACUUM` operation on SQLite to compact the database.

## Migration Notes
- Akavache now no longer ships the deprecated filesystem backend. You can now find this backend in the `Akavache.Deprecated` NuGet package. You should plan to move away from this backend and into the SQLite-based backend in your next release.
- `GetAllKeys` is now an asynchronous operation. 
- `TestBlobCache` is now called `InMemoryBlobCache`
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/467814/assets,https://api.github.com/repos/akavache/Akavache/releases/467814,master,https://api.github.com/repos/akavache/Akavache/tarball/4.0.0,https://github.com/akavache/Akavache/releases/tag/4.0.0,https://api.github.com/repos/akavache/Akavache/zipball/4.0.0,4.0.0,False,False
118403,2013-12-11T01:40:09Z,2013-12-11T01:48:25Z,Akavache 3.2.0,"## [What's New](https://github.com/akavache/Akavache/compare/3.1.2...3.2.0)

### Akavache.Portable.dll is no more, Long Live Akavache.dll

Starting with this release, Akavache Core is now always just `Akavache.dll`. Instead of a separate `Akavache.Portable.dll` that you include into _every_ build, there is now a portable version of `Akavache.dll`. Link to the portable version in your PLibs and the platform versions in your apps.

### Bug fixes
- Work around a bug in the Xamarin AOT compiler which would cause failures in Xamarin.iOS on device
- Fixed a bug resulting from the latest Splat update where using Bitmap loading would result in a compiler error
- Fix package references that were missing
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/118403/assets,https://api.github.com/repos/akavache/Akavache/releases/118403,master,https://api.github.com/repos/akavache/Akavache/tarball/3.2.0,https://github.com/akavache/Akavache/releases/tag/3.2.0,https://api.github.com/repos/akavache/Akavache/zipball/3.2.0,3.2.0,False,False
99255,2013-11-20T23:39:49Z,2013-11-20T23:43:36Z,Akavache 3.1.2,"## [What's New](https://github.com/akavache/Akavache/compare/3.1.1...3.1.2)

Bug Fixes:
- Ensure that GetAndFetchLatest uses the correct cache key (#89, thanks @nigel-sampson)
- Object invalidation should use type-prefixing (#91, thanks @nigel-sampson)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/99255/assets,https://api.github.com/repos/akavache/Akavache/releases/99255,master,https://api.github.com/repos/akavache/Akavache/tarball/3.1.2,https://github.com/akavache/Akavache/releases/tag/3.1.2,https://api.github.com/repos/akavache/Akavache/zipball/3.1.2,3.1.2,False,False
65370,2013-10-12T08:55:44Z,2013-10-12T08:58:30Z,Akavache 3.1.1,"## [What's New](https://github.com/github/akavache/compare/3.0.2...3.1.0)

### Bulk Operations

BlobCache now supports overloads and new methods to add / get / invalidate multiple objects in the same API call. Previously if you wanted to insert many objects into the cache at the same time, it could be potentially very expensive / wasteful. Check out #79 for the details. For example:

``` cs
var interestingKeys = await BlobCache.UserAccount.GetObjectsAsync<string>(new[] { ""Foo"", ""Bar"", ""Baz"", });

interestingKeys[""Foo""]
>>> It worked!
```

### Speed!

Akavache now correctly parallelizes connections to SQLite as well as fixes some threading errors that you might have been seeing (#66).

### Hide our version of SQLite3

Our version of @praeclarum's SQLite3 bindings were exposed as public classes, which conflicted with the official versions, this release makes them internal (#72). 

### Modern Xamarin support

Akavache is now built against the official Xamarin Rx binaries. This means that on MonoMac, you need to be up-to-date on the latest Mono install. 

### Other Stuff
- Bug fixes for WP8 (#68, thanks @petegoo)
- Fixed a glitch in DownloadUrl (#64, thanks @niik)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/65370/assets,https://api.github.com/repos/akavache/Akavache/releases/65370,master,https://api.github.com/repos/akavache/Akavache/tarball/3.1.1,https://github.com/akavache/Akavache/releases/tag/3.1.1,https://api.github.com/repos/akavache/Akavache/zipball/3.1.1,3.1.1,False,False
23721,2013-08-09T13:20:14Z,2013-08-09T13:26:04Z,Akavache 3.0.2,"## [What's New](https://github.com/github/akavache/compare/3.0.1...3.0.2)

### Bug Fixes
- Fix bugs around manual dependency registration
- Correctly handle invalidation in GetAndFetchLatest
- Handle unsynchronized access to variable in SQLite3 driver
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/23721/assets,https://api.github.com/repos/akavache/Akavache/releases/23721,master,https://api.github.com/repos/akavache/Akavache/tarball/3.0.2,https://github.com/akavache/Akavache/releases/tag/3.0.2,https://api.github.com/repos/akavache/Akavache/zipball/3.0.2,3.0.2,False,False
3022,2013-07-03T18:56:33Z,2013-07-03T19:06:32Z,Akavache 3.0.1,"## [What's New](https://github.com/github/Akavache/pull/47)

Akavache 3.0 is now released! A special thanks to @onovotny for his huge contribution to PLib support in this release.

### Portable Library Support

Akavache 3.0 can now be used with Portable Libraries, including handling images and downloading URLs, via [the Splat helper library](https://github.com/xpaulbettsx/splat). This means that with Akavache, nearly all of your serialization and network access layer can be cross-platform. 

### Cleaned up initialization support

Just like in ReactiveUI 5.0, Akavache now has a much cleaner initialization setup, which is also reliant on RxUI 5.0's `RxApp.DependencyResolver`. Many libraries now initialize themselves automatically if possible (on iOS / Cocoa), and other platforms now only require you to set `BlobCache.ApplicationName`. 

### Platforms Supported

Note that for this release, .NET 4.0-based platforms such as Silverlight and WP7 are no longer supported. Bug fixes will still be ported to the Akavache 2.x series when appropriate, you can use the NuGet Package Console to configure your app to only download 2.x updates. Here are the officially supported platforms:
- Xamarin.iOS
- Xamarin.Mac
- Xamarin.Android
- .NET 4.5 Desktop (WPF)
- Windows Phone 8
- Windows Store (WinRT)
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/3022/assets,https://api.github.com/repos/akavache/Akavache/releases/3022,master,https://api.github.com/repos/akavache/Akavache/tarball/3.0.1,https://github.com/akavache/Akavache/releases/tag/3.0.1,https://api.github.com/repos/akavache/Akavache/zipball/3.0.1,3.0.1,False,False
345,2013-06-18T23:13:33Z,2013-06-18T23:21:19Z,Akavache 2.6.7,"# [What's New](https://github.com/github/akavache/compare/2.6.5...2.6.7)

## Notable changes since 2.6.5
- Handle serializing simple types as values in SQLite3 backend
- Correctly handle opening paths containing Unicode characters in SQLite3 backend
- Fix race condition on dispose where disposing a single BlobCache could affect other blob caches.
- Remove WP8 SQLite3-based backend, as WP8 disables P/Invoke on device at runtime.
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/345/assets,https://api.github.com/repos/akavache/Akavache/releases/345,master,https://api.github.com/repos/akavache/Akavache/tarball/2.6.7,https://github.com/akavache/Akavache/releases/tag/2.6.7,https://api.github.com/repos/akavache/Akavache/zipball/2.6.7,2.6.7,False,False
244,2013-05-01T22:36:44Z,2013-05-01T22:42:01Z,Akavache 2.6.5,"## [What's New](https://github.com/github/Akavache/compare/2.6.4...2.6.5)

Bugfix release, fixes problem with using `BlobCache.Secure`
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/244/assets,https://api.github.com/repos/akavache/Akavache/releases/244,develop,https://api.github.com/repos/akavache/Akavache/tarball/2.6.5,https://github.com/akavache/Akavache/releases/tag/2.6.5,https://api.github.com/repos/akavache/Akavache/zipball/2.6.5,2.6.5,False,False
212,2013-04-02T22:12:02Z,2013-04-02T22:21:04Z,Akavache 2.6.4,"## [What's New](http://github.com/github/akavache/compare/2.6.2...2.6.4)
- Akavache.SQLite3 now configures itself AutoMagically™ if it's included in your project, no need to manually set `BlobCache.LocalMachine` et al.
- Remove key operation serialization from old-school Akavache - you need to `await` all calls to BlobCache, no more sloppy coding!
- Support for Xamarin.Mac, Xamarin.iOS, and Xamarin.Android - on Cocoa-based platforms, your `ApplicationName` is automatically configured to be your Bundle ID, no need to set it by-hand.
- Fix a bug in SQLite3 engine where `GetOrFetchObject` with an expiration wouldn't work.
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/212/assets,https://api.github.com/repos/akavache/Akavache/releases/212,develop,https://api.github.com/repos/akavache/Akavache/tarball/2.6.4,https://github.com/akavache/Akavache/releases/tag/2.6.4,https://api.github.com/repos/akavache/Akavache/zipball/2.6.4,2.6.4,False,False
179,2013-03-13T23:17:34Z,2013-03-13T23:31:12Z,Akavache 2.6.2,"## [What's New](https://github.com/github/akavache/compare/2.6.1...2.6.2)

## Completion for Object Methods

Now all object invalidation methods (like `InvalidateObject`, `InvalidateAllObjects`, etc) return `IObservable<Unit>` so you can `await` them

## Miscellaneous fixes
- Fixes to PersistentBlobCache Dispose so that it properly flushes metadata on exit
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/179/assets,https://api.github.com/repos/akavache/Akavache/releases/179,develop,https://api.github.com/repos/akavache/Akavache/tarball/2.6.2,https://github.com/akavache/Akavache/releases/tag/2.6.2,https://api.github.com/repos/akavache/Akavache/zipball/2.6.2,2.6.2,False,False
165,2013-03-06T00:01:46Z,2013-03-06T02:04:07Z,,"## [What's New](https://github.com/github/akavache/compare/2.6.0...2.6.1)

### Shut It All Down

Akavache now has an easy way to shut itself down. Make sure to run this on app shutdown:

``` cs
BlobCache.Shutdown().Wait()
```

Or if you're on WinRT:

``` cs
var deferral = e.SuspendingOperation.GetDeferral();
await BlobCache.Shutdown();
deferral.Complete()
```

### Other Stuff
- Fix a bug where in certain situations, Akavache would deadlock ([2917a5e](https://github.com/github/Akavache/commit/2917a5ea60c320545a73fe888754381a3fa9ebbb))
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/165/assets,https://api.github.com/repos/akavache/Akavache/releases/165,develop,https://api.github.com/repos/akavache/Akavache/tarball/2.6.1,https://github.com/akavache/Akavache/releases/tag/2.6.1,https://api.github.com/repos/akavache/Akavache/zipball/2.6.1,2.6.1,False,False
101,2013-03-05T01:03:42Z,2013-03-05T01:15:50Z,Akavache 2.6.0,"## [What's New](https://github.com/github/akavache/compare/2.5.1...2.6.0)

### Race Condition Changes

Consider the following piece of code:

``` cs
BlobCache.UserAccount.Invalidate(""TheKey"");
BlobCache.UserAccount.InsertObject(""TheKey"", new MyAwesomeKey());
```

This code is technically incorrect, yet will often appear to work correctly depending on the backing BlobCache. The reason is, that the invalidate and Insert happen concurrently, meaning it is possible for the Insert to succeed, then the Invalidate to remove the **new** key (never mind that it isn't necessary to actually Invalidate before Insert). To fix this, in Akavache 2.6.0, operations done to the same key are guaranteed to happen in order.

### Shutdown Changes

Disposing a BlobCache is asynchronous, yet the `Dispose` method call has no way to signal when it is complete. A new `Shutdown` Observable exists to facilitate this. So, to flush the blob cache properly, now run:

``` cs
BlobCache.UserAccount.Dispose();
BlobCache.UserAccount.Shutdown.Wait();
```

## Other Changes
- Bug fixes around leaking file handles in certain circumstances
- Fixes to more clearly throw error messages when Akavache is used incorrectly
",https://api.github.com/users/paulcbetts,1396,paulcbetts,https://api.github.com/repos/akavache/Akavache/releases/101/assets,https://api.github.com/repos/akavache/Akavache/releases/101,develop,https://api.github.com/repos/akavache/Akavache/tarball/2.6.0,https://github.com/akavache/Akavache/releases/tag/2.6.0,https://api.github.com/repos/akavache/Akavache/zipball/2.6.0,2.6.0,False,False
