id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6776879,2017-06-20T18:48:48Z,2017-06-20T18:57:25Z,beets 1.4.5,"Version 1.4.5 adds some oft-requested features. When you're importing files, you can now manually set fields on the new music. Date queries have gotten much more powerful: you can write precise queries down to the second, and we now have *relative* queries like `-1w`, which means *one week ago*.

Here are the new features:

- You can now set fields to certain values during import, using either a `--set field=value` command-line flag or a new `set_fields` configuration option under the `importer` section. Thanks to @bartkl. #1881 #2581
- Date queries can now include times, so you can filter your music down to the second. Thanks to @discopatrick. #2506 #2528
- Date queries can also be *relative*. You can say `added:-1w..` to match music added in the last week, for example. Thanks to @euri10. #2598
- A new `gmusic` lets you interact with your Google Play Music library. Thanks to @tigranl. #2553 #2586
- `replaygain`: We now keep R128 data in separate tags from classic ReplayGain data for formats that need it (namely, Ogg Opus). A new `r128` configuration option enables this behavior for specific formats. Thanks to @autrimpo. #2557 #2560
- The `move` command gained a new `--export` flag, which copies files to an external location without changing their paths in the library database. Thanks to @SpirosChadoulos. #435 #2510

There are also some bug fixes:

- `lastgenre`: Fix a crash when using the `prefer_specific` and `canonical` options together. Thanks to @yacoob. #2459 #2583
- `web`: Fix a crash on Windows under Python 2 when serving non-ASCII filenames. Thanks to @robot3498712. #2592 #2593
- `metasync`: Fix a crash in the Amarok backend when filenames contain quotes. Thanks to @aranc23. #2595 #2596
- More informative error messages are displayed when the file format is not recognized. #2599
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/6776879/assets,https://api.github.com/repos/beetbox/beets/releases/6776879,master,https://api.github.com/repos/beetbox/beets/tarball/v1.4.5,https://github.com/beetbox/beets/releases/tag/v1.4.5,https://api.github.com/repos/beetbox/beets/zipball/v1.4.5,v1.4.5,False,False
6671707,2017-06-10T20:28:17Z,2017-06-10T20:36:53Z,beets 1.4.4,"This release built up a longer-than-normal list of nifty new features. We now support DSF audio files and the importer can hard-link your files, for example.

Here's a full list of new features:

- Added support for DSF files, once a future version of Mutagen is released that supports them. Thanks to @docbobo. #459 #2379
- A new hardlink config option instructs the importer to create hard links on filesystems that support them. Thanks to @jacobwgillespie. #2445
- A new `kodiupdate` lets you keep your Kodi library in sync with beets. Thanks to @Pauligrinder. #2411
- A new bell configuration option under the `import` section enables a terminal bell when input is required. Thanks to @SpirosChadoulos. #2366 #2495
- A new field, `composer_sort`, is now supported and fetched from MusicBrainz. Thanks to @dosoe. #2519 #2529
- The MusicBrainz backend and `discogs` now both provide a new attribute called `track_alt` that stores more nuanced, possibly non-numeric track index data. For example, some vinyl or tape media will report the side of the record using a letter instead of a number in that field. #1831 #2363
- `web`: Added a new endpoint, `/item/path/foo`, which will return the item info for the file at the given path, or 404.
- `web`: Added a new config option, `include_paths`, which will cause paths to be included in item API responses if set to true.
- The `%aunique` template function for aunique now takes a third argument that specifies which brackets to use around the disambiguator value. The argument can be any two characters that represent the left and right brackets. It defaults to `[]` and can also be blank to turn off bracketing. #2397 #2399
- Added a `--move` or `-m` option to the importer so that the files can be moved to the library instead of being copied or added ""in place."" #2252 #2429
- `badfiles`: Added a `--verbose` or `-v` option. Results are now displayed only for corrupted files by default and for all the files when the verbose option is set. #1654 #2434
- `embedart`: The explicit `embedart` command now asks for confirmation before embedding art into music files. Thanks to
    @Stunner\. #1999
- You can now run beets by typing `python -m beets`. #2453
- `smartplaylist`: Different playlist specifications that generate identically-named playlist files no longer conflict; instead, the resulting lists of tracks are concatenated. #2468
- `missing`: A new mode lets you see missing albums from artists you have in your library. Thanks to @qlyoung. #2481
- `web` : Add new `reverse_proxy` config option to allow serving the web plugins under a reverse proxy.
- Importing a release with multiple release events now selects the event based on your preferred countries. #2501
- `play`: A new `-y` or `--yes` parameter lets you skip the warning message if you enqueue more items than the warning threshold usually allows.
- Fix a bug where commands which forked subprocesses would sometimes prevent further inputs. This bug mainly affected `convert`. Thanks to @jansol. #2488 #2524

There are also quite a few fixes:

- In the replace configuration option, we now replace a leading hyphen (-) with an underscore. #549 #2509
- `absubmit`: We no longer filter audio files for specific formats---we will attempt the submission process for all formats. #2471
- `mpdupdate`: Fix Python 3 compatibility. #2381
- `replaygain`: Fix Python 3 compatibility in the `bs1770gain` backend. #2382
- `bpd`: Report playback times as integers. #2394
- `mpdstats`: Fix Python 3 compatibility. The plugin also now requires version 0.4.2 or later of the `python-mpd2` library. #2405
- `mpdstats`: Improve handling of MPD status queries.
- `badfiles`: Fix Python 3 compatibility.
- Fix some cases where album-level ReplayGain/SoundCheck metadata would be written to files incorrectly. #2426
- `badfiles`: The command no longer bails out if the validator command is not found or exits with an error. #2430 #2433
- `lyrics`: The Google search backend no longer crashes when the server responds with an error. #2437
- `discogs`: You can now authenticate with Discogs using a personal access token. #2447
- Fix Python 3 compatibility when extracting rar archives in the importer. Thanks to @Lompik. #2443 #2448
- `duplicates`: Fix Python 3 compatibility when using the `copy` and `move` options. #2444
- `mbsubmit`: The tracks are now sorted properly. Thanks to
    @awesomer. #2457
- `thumbnails`: Fix a string-related crash on Python 3. #2466
- `beatport`: More than just 10 songs are now fetched per album. #2469
- On Python 3, the terminal\_encoding setting is respected again for output and printing will no longer crash on systems configured with a limited encoding.
- `convert`: The default configuration uses FFmpeg's built-in AAC codec instead of faac. Thanks to @jansol. #2484
- Fix the importer's detection of multi-disc albums when other subdirectories are present. #2493
- Invalid date queries now print an error message instead of being silently ignored. Thanks to @discopatrick. #2513 #2517
- When the SQLite database stops being accessible, we now print a friendly error message. Thanks to @Mary011196. #1676 #2508
- `web`: Avoid a crash when sending binary data, such as Chromaprint fingerprints, in music attributes. #2542 #2532
- Fix a hang when parsing templates that end in newlines. #2562
- Fix a crash when reading non-ASCII characters in configuration files on Windows under Python 3. #2456 #2565 #2566

We removed backends from two metadata plugins because of bitrot:

- `lyrics`: The Lyrics.com backend has been removed. (It stopped working because of changes to the site's URL structure.) #2548 #2549
- `fetchart`: The documentation no longer recommends iTunes Store artwork lookup because the unmaintained [python-itunes](https://github.com/ocelma/python-itunes) is broken. Want to adopt it? #2371 #1610",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/6671707/assets,https://api.github.com/repos/beetbox/beets/releases/6671707,master,https://api.github.com/repos/beetbox/beets/tarball/v1.4.4,https://github.com/beetbox/beets/releases/tag/v1.4.4,https://api.github.com/repos/beetbox/beets/zipball/v1.4.4,v1.4.4,False,False
5106408,2017-01-09T15:38:06Z,2017-01-09T15:42:28Z,beets 1.4.3,"Happy new year! This new version includes a cornucopia of new features from contributors, including new tags related to classical music and a new AcousticBrainz Submit plugin for performing acoustic analysis on your music. The Random plugin has a new mode that lets you generate time-limited music---for example, you might generate a random playlist that lasts the perfect length for your walk to work. We also access as many Web services as possible over secure connections now---HTTPS everywhere!

The most visible new features are:
- We now support the composer, lyricist, and arranger tags. The MusicBrainz data source will fetch data for these fields when the next version of python-musicbrainzngs_ is released. Thanks to @ibmibmibm. #506 #507 #1547 #2333
- A new `absubmit` lets you run acoustic analysis software and upload the results for others to use. Thanks to @inytar. #2253 #2342
- `play`: The plugin now provides an importer prompt choice to play the music you're about to import. Thanks to @diomekes. #2008 #2360
- We now use SSL to access Web services whenever possible. That includes MusicBrainz itself, several album art sources, some lyrics sources, and other servers. Thanks to @tigranl. #2307
- `random`: A new `--time` option lets you generate a random playlist that takes a given amount of time. Thanks to @diomekes. #2305 #2322

Some smaller new features:
- `zero`: A new `zero` command manually triggers the zero plugin. Thanks to @SJoshBrown. #2274 #2329
- `acousticbrainz`: The plugin will avoid re-downloading data for files that already have it by default. You can override this behavior using a new `force` option. Thanks to @SusannaMaria. #2347 #2349
- `bpm`: The `import.write` configuration option now decides whether or not to write tracks after updating their BPM. #1992

And the fixes:
- `bpd`: Fix a crash on non-ASCII MPD commands. #2332
- `scrub`: Avoid a crash when files cannot be read or written. #2351
- `scrub`: The image type values on scrubbed files are preserved instead of being reset to ""other."" #2339
- `web`: Fix a crash on Python 3 when serving files from the filesystem. #2353
- `discogs`: Improve the handling of releases that contain subtracks. #2318
- `discogs`: Fix a crash when a release does not contain format information, and increase robustness when other fields are missing. #2302
- `lyrics`: The plugin now reports a beets-specific User-Agent header when requesting lyrics. #2357
- `embyupdate`: The plugin now checks whether an API key or a password is provided in the configuration.
- `play`: The misspelled configuration option `warning_treshold` is no longer supported.

For plugin developers: when providing new importer prompt choices (see append_prompt_choices), you can now provide new candidates for the user to consider. For example, you might provide an alternative strategy for picking between the available alternatives or for looking up a release on MusicBrainz.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/5106408/assets,https://api.github.com/repos/beetbox/beets/releases/5106408,master,https://api.github.com/repos/beetbox/beets/tarball/v1.4.3,https://github.com/beetbox/beets/releases/tag/v1.4.3,https://api.github.com/repos/beetbox/beets/zipball/v1.4.3,v1.4.3,False,False
4946782,2016-12-17T03:05:45Z,2016-12-17T03:17:45Z,beets 1.4.2,"This is just a little bug fix release. With 1.4.2, we're also confident enough to recommend that anyone who's interested give Python 3 a try: bugs may still lurk, but we've deemed things safe enough for broad adoption. If you can, please install beets with `pip3` instead of `pip2` this time and let us know how it goes!

Here are the fixes:
- `badfiles`: Fix a crash on non-ASCII filenames. #2299
- The `%asciify{}` path formatting function and the asciify-paths setting properly substitute path separators generated by converting some Unicode characters, such as ½ and ¢, into ASCII.
- `convert`: Fix a logging-related crash when filenames contain curly braces. Thanks to @kierdavis. #2323
- We've rolled back some changes to the included zsh completion script that were causing problems for some users. #2266

Also, we've removed some special handling for logging in the `discogs` that we believe was unnecessary. If spurious log messages appear in this version, please let us know by filing a bug.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/4946782/assets,https://api.github.com/repos/beetbox/beets/releases/4946782,master,https://api.github.com/repos/beetbox/beets/tarball/v1.4.2,https://github.com/beetbox/beets/releases/tag/v1.4.2,https://api.github.com/repos/beetbox/beets/zipball/v1.4.2,v1.4.2,False,False
4762823,2016-11-26T03:13:54Z,2016-11-26T03:31:14Z,beets 1.4.1,"Version 1.4 has **alpha-level** Python 3 support. Thanks to the heroic efforts of @jrobeson, beets should run both under Python 2.7, as before, and now under Python 3.4 and above. The support is still new: it undoubtedly contains bugs, so it may replace all your music with Limp Bizkit—but if you're brave and you have backups, please try installing on Python 3. Let us know how it goes.

If you package beets for distribution, here's what you'll want to know:
- This version of beets now depends on the [six](https://pythonhosted.org/six/) library.
- We also bumped our minimum required version of Mutagen to 1.33 (from 1.27).
- Please don't package beets as a Python 3 application _yet_, even though most things work under Python 3.4 and later.

This version also makes a few changes to the command-line interface and configuration that you may need to know about:
- `duplicates`: The `duplicates` command no longer accepts multiple field arguments in the form `-k title albumartist album`. Each argument must be prefixed with `-k`, as in `-k title -k albumartist -k album`.
- The old top-level `colors` configuration option has been removed (the setting is now under `ui`).
- The deprecated `list_format_album` and `list_format_item` configuration options have been removed (see format_album and format_item).

The are a few new features:
- `mpdupdate`, `mpdstats`: When the `host` option is not set, these plugins will now look for the `$MPD_HOST` environment variable before falling back to `localhost`. Thanks to @tarruda. #2175
- `web`: Added an `expand` option to show the items of an album. #2050
- `embyupdate`: The plugin can now use an API key instead of a password to authenticate with Emby. #2045 #2117
- `acousticbrainz`: The plugin now adds a `bpm` field.
- `beet --version` now includes the Python version used to run beets.
- /reference/pathformat can now include unescaped commas (`,`) when they are not part of a function call. #2166 #2213
- The `update` command takes a new `-F` flag to specify the fields to update. Thanks to @dangmai. #2229 #2231

And there are a few bug fixes too:
- `convert`: The plugin no longer asks for confirmation if the query did not return anything to convert. #2260 #2262
- `embedart`: The plugin now uses `jpg` as an extension rather than `jpeg`, to ensure consistency with the plugins/fetchart. Thanks to @tweitzel. #2254 #2255
- `embedart`: The plugin now works for all jpeg files, including those that are only recognizable by their magic bytes. #1545 #2255
- `web`: The JSON output is no longer pretty-printed (for a space savings). #2050
- `permissions`: Fix a regression in the previous release where the plugin would always fail to set permissions (and log a warning). #2089
- `beatport`: Use track numbers from Beatport (instead of determining them from the order of tracks) and set the `medium_index` value.
- With per_disc_numbering enabled, some metadata sources (notably, the `beatport`) would not set the track number at all. This is fixed. #2085
- `play`: Fix `$args` getting passed verbatim to the play command if it was set in the configuration but `-A` or `--args` was omitted.
- With ignore_hidden enabled, non-UTF-8 filenames would cause a crash. This is fixed. #2168
- `embyupdate`: Fixes authentication header problem that caused a problem that it was not possible to get tokens from the Emby API.
- `lyrics`: Some titles use a colon to separate the main title from a subtitle. To find more matches, the plugin now also searches for lyrics using the part part preceding the colon character. #2206
- Fix a crash when a query uses a date field and some items are missing that field. #1938
- `discogs`: Subtracks are now detected and combined into a single track, two-sided mediums are treated as single discs, and tracks have `media`, `medium_total` and `medium` set correctly. #2222 #2228.
- `missing`: `missing` is now treated as an integer, allowing the use of (for example) ranges in queries.
- `smartplaylist`: Playlist names will be sanitized to ensure valid filenames. #2258
- The ID3 APIC tag now uses the Latin-1 encoding when possible instead of a Unicode encoding. This should increase compatibility with other software, especially with iTunes and when using ID3v2.3. Thanks to @lazka. #899 #2264 #2270

The last release, 1.3.19, also erroneously reported its version as ""1.3.18"" when you typed `beet version`. This has been corrected.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/4762823/assets,https://api.github.com/repos/beetbox/beets/releases/4762823,master,https://api.github.com/repos/beetbox/beets/tarball/v1.4.1,https://github.com/beetbox/beets/releases/tag/v1.4.1,https://api.github.com/repos/beetbox/beets/zipball/v1.4.1,v1.4.1,False,False
3523811,2016-06-26T00:52:32Z,2016-06-26T00:55:01Z,beets 1.3.19,"This is primarily a bug fix release: it cleans up a couple of regressions that appeared in the last version. But it also features the triumphant return of the `beatport` and a modernized `bpd`.

It's also the first version where beets passes all its tests on Windows! May this herald a new age of cross-platform reliability for beets.

New features:
- `beatport`: This metadata source plugin has arisen from the dead! It now works with Beatport's new OAuth-based API. Thanks to
  @jbaiter. #1989 #2067
- `bpd`: The plugin now uses the modern GStreamer 1.0 instead of the old 0.10. Thanks to @philippbeckmann. #2057 #2062
- A new `--force` option for the `remove` command allows removal of items without prompting beforehand. #2042
- A new duplicate_action importer config option controls how duplicate albums or tracks treated in import task. #185

Some fixes for Windows:
- Queries are now detected as paths when they contain backslashes (in addition to forward slashes). This only applies on Windows.
- `embedart`: Image similarity comparison with ImageMagick should now work on Windows.
- `fetchart`: The plugin should work more reliably with non-ASCII paths.

And other fixes:
- `replaygain`: The `bs1770gain` backend now correctly calculates sample peak instead of true peak. This comes with a major speed increase. #2031
- `lyrics`: Avoid a crash and a spurious warning introduced in the last version about a Google API key, which appeared even when you hadn't enabled the Google lyrics source.
- Fix a hard-coded path to `bash-completion` to work better with Homebrew installations. Thanks to @bismark. #2038
- Fix a crash introduced in the previous version when the standard input was connected to a Unix pipe. #2041
- Fix a crash when specifying non-ASCII format strings on the command line with the `-f` option for many commands. #2063
- `fetchart`: Determine the file extension for downloaded images based on the image's magic bytes. The plugin prints a warning if result is not consistent with the server-supplied `Content-Type` header. In previous versions, the plugin would use a `.jpg` extension for all images. #2053
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/3523811/assets,https://api.github.com/repos/beetbox/beets/releases/3523811,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.19,https://github.com/beetbox/beets/releases/tag/v1.3.19,https://api.github.com/repos/beetbox/beets/zipball/v1.3.19,v1.3.19,False,False
3342525,2016-05-31T17:42:56Z,2016-05-31T17:54:35Z,beets 1.3.18,"This update adds a new `hook` that lets you integrate beets with command-line tools and an `export` that can dump data from the beets database as JSON. You can also automatically translate lyrics using a machine translation service.

The `echonest` plugin has been removed in this version because the API it used is [shutting down](https://developer.spotify.com/news-stories/2016/03/29/api-improvements-update/). You might want to try the `acousticbrainz` instead.

Some of the larger new features:
- The new `hook` lets you execute commands in response to beets events.
- The new `export` can export data from beets' database as JSON. Thanks to @GuilhermeHideki.
- `lyrics`: The plugin can now translate the fetched lyrics to your native language using the Bing translation API. Thanks to @Kraymer.
- `fetchart`: Album art can now be fetched from [fanart.tv](https://fanart.tv/).

Smaller new things:
- There are two new functions available in templates: `%first` and `%ifdef`. See template-functions.
- `convert`: A new `album_art_maxwidth` setting lets you resize album art while copying it.
- `convert`: The `extension` setting is now optional for conversion formats. By default, the extension is the same as the name of the configured format.
- `importadded`: A new `preserve_write_mtimes` option lets you preserve mtime of files even when beets updates their metadata.
- `fetchart`: The `enforce_ratio` option now lets you tolerate images that are _almost_ square but differ slightly from an exact 1:1 aspect ratio.
- `fetchart`: The plugin can now optionally save the artwork's source in an attribute in the database.
- The terminal_encoding configuration option can now also override the _input_ encoding. (Previously, it only affected the encoding of the standard _output_ stream.)
- A new ignore_hidden configuration option lets you ignore files that your OS marks as invisible.
- `web`: A new `values` endpoint lets you get the distinct values of a field. Thanks to @sumpfralle. #2010

Fixes:
- Fix a problem with the `stats` command in exact mode when filenames on Windows use non-ASCII characters. #1891
- Fix a crash when iTunes Sound Check tags contained invalid data. #1895
- `mbcollection`: The plugin now redacts your MusicBrainz password in the `beet config` output. #1907
- `scrub`: Fix an occasional problem where scrubbing on import could undo the id3v23 setting. #1903
- `lyrics`: Add compatibility with some changes to the LyricsWiki page markup. #1912 #1909
- `lyrics`: Fix retrieval from Musixmatch by improving the way we guess the URL for lyrics on that service. #1880
- `edit`: Fail gracefully when the configured text editor command can't be invoked. #1927
- `fetchart`: Fix a crash in the Wikipedia backend on non-ASCII artist and album names. #1960
- `convert`: Change the default `ogg` encoding quality from 2 to 3 (to fit the default from the `oggenc(1)` manpage). #1982
- `convert`: The `never_convert_lossy_files` option now considers AIFF a lossless format. #2005
- `web`: A proper 404 error, instead of an internal exception, is returned when missing album art is requested. Thanks to
  @sumpfralle. #2011
- Tolerate more malformed floating-point numbers in metadata tags. #2014
- The ignore configuration option now includes the `lost+found` directory by default.
- `acousticbrainz`: AcousticBrainz lookups are now done over HTTPS. Thanks to @Freso. #2007
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/3342525/assets,https://api.github.com/repos/beetbox/beets/releases/3342525,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.18,https://github.com/beetbox/beets/releases/tag/v1.3.18,https://api.github.com/repos/beetbox/beets/zipball/v1.3.18,v1.3.18,False,False
2570315,2016-02-08T06:38:54Z,2016-02-08T06:57:43Z,beets 1.3.17,"This release introduces one new plugin to fetch audio information from the [AcousticBrainz](http://acousticbrainz.org/) project and another plugin to make it easier to submit your handcrafted metadata back to MusicBrainz. The importer also gained two oft-requested features: a way to skip the initial search process by specifying an ID ahead of time, and a way to _manually_ provide metadata in the middle of the import process (via the `edit` plugin).

Also, as of this release, the beets project has some new Internet homes! Our new domain name is [beets.io](http://beets.io/), and we have a shiny new GitHub organization: [beetbox](https://github.com/beetbox).

Here are the big new features:
- A new `acousticbrainz` fetches acoustic-analysis information from the [AcousticBrainz](http://acousticbrainz.org/) project. Thanks to @opatel99, and thanks to [Google Code-In](https://codein.withgoogle.com/)! #1784
- A new `mbsubmit` lets you print music's current metadata in a format that the MusicBrainz data parser can understand. You can trigger it during an interactive import session. #1779
- A new `--search-id` importer option lets you manually specify IDs (i.e., MBIDs or Discogs IDs) for imported music. Doing this skips the initial candidate search, which can be important for huge albums where this initial lookup is slow. Also, the `enter Id` prompt choice now accepts several IDs, separated by spaces. #1808
- `edit`: You can now edit metadata _on the fly_ during the import process. The plugin provides two new interactive options: one to edit _your music's_ metadata, and one to edit the _matched metadata_ retrieved from MusicBrainz (or another data source). This feature is still in its early stages, so please send feedback if you find anything missing. #1846 #396

There are even more new features:
- `fetchart`: The Google Images backend has been restored. It now requires an API key from Google. Thanks to @lcharlick. #1778
- `info`: A new option will print only fields' names and not their values. Thanks to @GuilhermeHideki. #1812
- The `fields` command now displays flexible attributes. Thanks to @GuilhermeHideki. #1818
- The `modify` command lets you interactively select which albums or items you want to change. #1843
- The `move` command gained a new `--timid` flag to print and confirm which files you want to move. #1843
- The `move` command no longer prints filenames for files that don't actually need to be moved. #1583

Fixes:
- `play`: Fix a regression in the last version where there was no default command. #1793
- `lastimport`: The plugin now works again after being broken by some unannounced changes to the Last.fm API. #1574
- `play`: Fixed a typo in a configuration option. The option is now `warning_threshold` instead of `warning_treshold`, but we kept the old name around for compatibility. Thanks to @JesseWeinstein. #1802 #1803
- `edit`: Editing metadata now moves files, when appropriate (like the `modify` command). #1804
- The `stats` command no longer crashes when files are missing or inaccessible. #1806
- `fetchart`: Possibly fix a Unicode-related crash when using some versions of pyOpenSSL. #1805
- `replaygain`: Fix an intermittent crash with the GStreamer backend. #1855
- `lastimport`: The plugin now works with the beets API key by default. You can still provide a different key the configuration.
- `replaygain`: Fix a crash using the Python Audio Tools backend. #1873
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/2570315/assets,https://api.github.com/repos/beetbox/beets/releases/2570315,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.17,https://github.com/beetbox/beets/releases/tag/v1.3.17,https://api.github.com/repos/beetbox/beets/zipball/v1.3.17,v1.3.17,False,False
2348605,2015-12-29T00:56:28Z,2015-12-29T00:58:13Z,beets 1.3.16,"The big news in this release is a new interactive editor plugin. It's really nifty: you can now change your music's metadata by making changes in a visual text editor, which can sometimes be far more efficient than the built-in modify-cmd` command. No more carefully retyping the same artist name with slight capitalization changes.

This version also adds an oft-requested ""not"" operator to beets' queries, so you can exclude music from any operation. It also brings friendlier formatting (and querying!) of song durations.

The big new stuff:
- A new `edit` lets you manually edit your music's metadata using your favorite text editor. #164 #1706
- Queries can now use ""not"" logic. Type a `^` before part of a query to _exclude_ matching music from the results. For example, `beet list -a beatles ^album:1` will find all your albums by the Beatles except for their singles compilation, ""1."" See not_query. #819 #1728
- A new `embyupdate` can trigger a library refresh on an [Emby](http://emby.media) server when your beets database changes.
- Track length is now displayed as ""M:SS"" rather than a raw number of seconds. Queries on track length also accept this format: for example, `beet list length:5:30..` will find all your tracks that have a duration over 5 minutes and 30 seconds. You can turn off this new behavior using the `format_raw_length` configuration option. #1749

Smaller changes:
- Three commands, `modify`, `update`, and `mbsync`, would previously move files by default after changing their metadata. Now, these commands will only move files if you have the config-import-copy or config-import-move options enabled in your importer configuration. This way, if you configure the importer not to touch your filenames, other commands will respect that decision by default too. Each command also sprouted a `--move` command-line option to override this default (in addition to the `--nomove` flag they already had). #1697
- A new configuration option, `va_name`, controls the album artist name for various-artists albums. The setting defaults to ""Various Artists,"" the MusicBrainz standard. In order to match MusicBrainz, the `discogs` also adopts the same setting.
- `info`: The `info` command now accepts a `-f/--format` option for customizing how items are displayed, just like the built-in `list` command. #1737

Some changes for developers:
- Two new plugin hooks , `albuminfo_received` and `trackinfo_received`, let plugins intercept metadata as soon as it is received, before it is applied to music in the database. #872
- Plugins can now add options to the interactive importer prompts. See append_prompt_choices. #1758

Fixes:
- `plexupdate`: Fix a crash when Plex libraries use non-ASCII collection names. #1649
- `discogs`: Maybe fix a crash when using some versions of the `requests` library. #1656
- Fix a race in the importer when importing two albums with the same artist and name in quick succession. The importer would fail to detect them as duplicates, claiming that there were ""empty albums"" in the database even when there were not. #1652
- plugins/lastgenre: Clean up the reggae-related genres somewhat. Thanks to @Freso. #1661
- The importer now correctly moves album art files when re-importing. #314
- `fetchart`: In auto mode, the plugin now skips albums that already have art attached to them so as not to interfere with re-imports. #314
- `fetchart`: The plugin now only resizes album art if necessary, rather than always by default. #1264
- `fetchart`: Fix a bug where a database reference to a non-existent album art file would prevent the command from fetching new art. #1126
- `thumbnails`: Fix a crash with Unicode paths. #1686
- `embedart`: The `remove_art_file` option now works on import (as well as with the explicit command). #1662 #1675
- `metasync`: Fix a crash when syncing with recent versions of iTunes. #1700
- `duplicates`: Fix a crash when merging items. #1699
- `smartplaylist`: More gracefully handle malformed queries and missing configuration.
- Fix a crash with some files with unreadable iTunes SoundCheck metadata. #1666
- `thumbnails`: Fix a nasty segmentation fault crash that arose with some library versions. #1433
- `convert`: Fix a crash with Unicode paths in `--pretend` mode. #1735
- Fix a crash when sorting by nonexistent fields on queries. #1734
- Probably fix some mysterious errors when dealing with images using ImageMagick on Windows. #1721
- Fix a crash when writing some Unicode comment strings to MP3s that used older encodings. The encoding is now always updated to UTF-8. #879
- `fetchart`: The Google Images backend has been removed. It used an API that has been shut down. #1760
- `lyrics`: Fix a crash in the Google backend when searching for bands with regular-expression characters in their names, like Sunn O))). #1673
- `scrub`: In `auto` mode, the plugin now _actually_ only scrubs files on import, as the documentation always claimed it did---not every time files were written, as it previously did. #1657
- `scrub`: Also in `auto` mode, album art is now correctly restored. #1657
- Possibly allow flexible attributes to be used with the `%aunique` template function. #1775
- `lyrics`: The Genius backend is now more robust to communication errors. The backend has also been disabled by default, since the API it depends on is currently down. #1770
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/2348605/assets,https://api.github.com/repos/beetbox/beets/releases/2348605,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.16,https://github.com/beetbox/beets/releases/tag/v1.3.16,https://api.github.com/repos/beetbox/beets/zipball/v1.3.16,v1.3.16,False,False
1977399,2015-10-18T00:45:21Z,2015-10-18T00:47:01Z,beets 1.3.15,"This release adds a new plugin for checking file quality and a new source for lyrics. The larger features are:
- A new `badfiles` helps you scan for corruption in your music collection. Thanks to @fxthomas. #1568
- `lyrics`: You can now fetch lyrics from Genius.com. Thanks to @sadatay. #1626 #1639
- `zero`: The plugin can now use a ""whitelist"" policy as an alternative to the (default) ""blacklist"" mode. Thanks to @adkow. #1621 #1641

And there are smaller new features too:
- Add new color aliases for standard terminal color names (e.g., cyan and magenta). Thanks to @mathstuf. #1548
- `play`: A new `--args` option lets you specify options for the player command. #1532
- `play`: A new `raw` configuration option lets the command work with players (such as VLC) that expect music filenames as arguments, rather than in a playlist. Thanks to @nathdwek. #1578
- `play`: You can now configure the number of tracks that trigger a ""lots of music"" warning. #1577
- `embedart`: A new `remove_art_file` option lets you clean up if you prefer _only_ embedded album art. Thanks to @jackwilsdon. #1591 #733
- `plexupdate`: A new `library_name` option allows you to select which Plex library to update. #1572 #1595
- A new `include` option lets you import external configuration files.

This release has plenty of fixes:
- `lastgenre`: Fix a bug that prevented tag popularity from being considered. Thanks to @svoos. #1559
- Fixed a bug where plugins wouldn't be notified of the deletion of an item's art, for example with the `clearart` command from the `embedart`. Thanks to @nathdwek. #1565
- `fetchart`: The Google Images source is disabled by default (as it was before beets 1.3.9), as is the Wikipedia source (which was causing lots of unnecessary delays due to DBpedia downtime). To re-enable these sources, add `wikipedia google` to your `sources` configuration option.
- The `list` command's help output now has a small query and format string example. Thanks to @pkess. #1582
- `fetchart`: The plugin now fetches PNGs but not GIFs. (It still fetches JPEGs.) This avoids an error when trying to embed images, since not all formats support GIFs. #1588
- Date fields are now written in the correct order (year-month-day), which eliminates an intermittent bug where the latter two fields would not get written to files. Thanks to @jdetrey. #1303 #1589
- `replaygain`: Avoid a crash when the PyAudioTools backend encounters an error. #1592
- The case sensitivity of path queries is more useful now: rather than just guessing based on the platform, we now check the case sensitivity of your filesystem. #1586
- Case-insensitive path queries might have returned nothing because of a wrong SQL query.
- Fix a crash when a query contains a ""+"" or ""-"" alone in a component. #1605
- Fixed unit of file size to powers of two (MiB, GiB, etc.) instead of powers of ten (MB, GB, etc.). #1623
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/1977399/assets,https://api.github.com/repos/beetbox/beets/releases/1977399,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.15,https://github.com/beetbox/beets/releases/tag/v1.3.15,https://api.github.com/repos/beetbox/beets/zipball/v1.3.15,v1.3.15,False,False
1619536,2015-08-03T05:42:03Z,2015-08-03T05:48:49Z,beets 1.3.14,"This is mainly a bugfix release, but we also have a nifty new plugin for [ipfs](http://ipfs.io) and a bunch of new configuration options.

The new features:
- A new `ipfs` plugin lets you share music via a new, global, decentralized filesystem. #1397
- `duplicates`: You can now merge duplicate track metadata (when detecting duplicate items), or duplicate album tracks (when detecting duplicate albums).
- `duplicates`: Duplicate resolution now uses an ordering to prioritize duplicates. By default, it prefers music with more complete metadata, but you can configure it to use any list of attributes.
- `metasync`: Added a new backend to fetch metadata from iTunes. This plugin is still in an experimental phase. #1450
- The `move` command has a new `--pretend` option, making the command show how the items will be moved without actually changing anything.
- The importer now supports matching of ""pregap"" or HTOA (hidden track-one audio) tracks when they are listed in MusicBrainz. (This feature depends on a new version of the `musicbrainzngs` library that is not yet released, but will start working when it is available.) Thanks to @ruippeixotog. #1104 #1493
- `plexupdate`: A new `token` configuration option lets you specify a key for Plex Home setups. Thanks to @edcarroll. #1494
- `zero`: A new `update_database` configuration option nulls out fields in the database along with files' tags. #1516

Fixes:
- `fetchart`: Complain when the `enforce_ratio` or `min_width` options are enabled but no local imaging backend is available to carry them out. #1460
- `importfeeds`: Avoid generating incorrect m3u filename when both of the `m3u` and `m3u_multi` options are enabled. #1490
- `duplicates`: Avoid a crash when misconfigured. #1457
- `mpdstats`: Avoid a crash when the music played is not in the beets library. Thanks to @CodyReichert. #1443
- Fix a crash with ArtResizer on Windows systems (affecting `embedart`, `fetchart`, and `thumbnails`). #1448
- `permissions`: Fix an error with non-ASCII paths. #1449
- Fix sorting by paths when the sort_case_insensitive option is enabled. #1451
- `embedart`: Avoid an error when trying to embed invalid images into MPEG-4 files.
- `fetchart`: The Wikipedia source can now better deal artists that use non-standard capitalization (e.g., alt-J, dEUS).
- `web`: Fix searching for non-ASCII queries. Thanks to
  @oldtopman. #1470
- `mpdupdate`: We now recommend the newer `python-mpd2` library instead of its unmaintained parent. Thanks to @Somasis. #1472
- The importer interface and log file now output a useful list of files (instead of the word ""None"") when in album-grouping mode. #1475 #825
- Fix some logging errors when filenames and other user-provided strings contain curly braces. #1481
- Regular expression queries over paths now work more reliably with non-ASCII characters in filenames. #1482
- Fix a bug where the autotagger's ignored setting was sometimes, well, ignored. #1487
- Fix a bug with Unicode strings when generating image thumbnails. #1485
- `keyfinder`: Fix handling of Unicode paths. #1502
- `fetchart`: When album art is already present, the message is now printed in the `text_highlight_minor` color (light gray). Thanks to
  @Somasis. #1512
- Some messages in the console UI now use plural nouns correctly. Thanks to
  @JesseWeinstein. #1521
- Sorting numerical fields (such as track) now works again. #1511
- `replaygain`: Missing GStreamer plugins now cause a helpful error message instead of a crash. #1518
- Fix an edge case when producing sanitized filenames where the maximum path length conflicted with the replace rules. Thanks to Ben Ockmore. #496 #1361
- Fix an incompatibility with OS X 10.11 (where `/usr/sbin` seems not to be on the user's path by default).
- Fix an incompatibility with certain JPEG files. Here's a relevant [Python bug](http://bugs.python.org/issue16512). Thanks to @nathdwek. #1545
- Fix the group_albums importer mode so that it works correctly when files are not already in order by album. #1550
- The `fields` command no longer separates built-in fields from plugin-provided ones. This distinction was becoming increasingly unreliable.
- `duplicates`: Fix a Unicode warning when paths contained non-ASCII characters. #1551
- `fetchart`: Work around a urllib3 bug that could cause a crash. #1555 #1556
- When you edit the configuration file with `beet config -e` and the file does not exist, beets creates an empty file before editing it. This fixes an error on OS X, where the `open` command does not work with non-existent files. #1480
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/1619536/assets,https://api.github.com/repos/beetbox/beets/releases/1619536,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.14,https://github.com/beetbox/beets/releases/tag/v1.3.14,https://api.github.com/repos/beetbox/beets/zipball/v1.3.14,v1.3.14,False,False
1212559,2015-04-24T15:55:23Z,2015-04-24T15:57:14Z,beets 1.3.13,"This is a tiny bug-fix release. It copes with a dependency upgrade that broke beets. There are just two fixes:
- Fix compatibility with Jellyfish version 0.5.0.
- `embedart`: In `auto` mode (the import hook), the plugin now respects the `write` config option under `import`. If this is disabled, album art is no longer embedded on import in order to leave files untouched---in effect, `auto` is implicitly disabled. #1427
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/1212559/assets,https://api.github.com/repos/beetbox/beets/releases/1212559,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.13,https://github.com/beetbox/beets/releases/tag/v1.3.13,https://api.github.com/repos/beetbox/beets/zipball/v1.3.13,v1.3.13,False,False
1185487,2015-04-19T00:05:05Z,2015-04-19T00:20:38Z,beets 1.3.12,"This little update makes queries more powerful, sorts music more intelligently, and removes a performance bottleneck. There's an experimental new plugin for synchronizing metadata with music players.

Packagers should also note a new dependency in this version: the [Jellyfish](https://github.com/sunlightlabs/jellyfish) Python library makes our text comparisons (a big part of the auto-tagging process) go much faster.

New features:
- Queries can now use **""or"" logic**: if you use a comma to separate parts of a query, items and albums will match _either_ side of the comma. For example, `beet ls foo , bar` will get all the items matching `foo` or matching `bar`. See combiningqueries. #1423
- The autotagger's **matching algorithm is faster**. We now use the [Jellyfish](https://github.com/sunlightlabs/jellyfish) library to compute string similarity, which is better optimized than our hand-rolled edit distance implementation. #1389
- Sorting is now **case insensitive** by default. This means that artists will be sorted lexicographically regardless of case. For example, the artist alt-J will now properly sort before YACHT. (Previously, it would have ended up at the end of the list, after all the capital-letter artists.) You can turn this new behavior off using the sort_case_insensitive configuration option. See query-sort. #1429
- An experimental new `metasync` lets you get metadata from your favorite music players, starting with Amarok. #1386
- `fetchart`: There are new settings to control what constitutes ""acceptable"" images. The `minwidth` option constrains the minimum image width in pixels and the `enforce_ratio` option requires that images be square. #1394

Little fixes and improvements:
- `fetchart`: Remove a hard size limit when fetching from the Cover Art Archive.
- The output of the `fields` command is now sorted. Thanks to @multikatt. #1402
- `replaygain`: Fix a number of issues with the new `bs1770gain` backend on Windows. Also, fix missing debug output in import mode. #1398
- Beets should now be better at guessing the appropriate output encoding on Windows. (Specifically, the console output encoding is guessed separately from the encoding for command-line arguments.) A bug was also fixed where beets would ignore the locale settings and use UTF-8 by default. #1419
- `discogs`: Better error handling when we can't communicate with Discogs on setup. #1417
- `importadded`: Fix a crash when importing singletons in-place. #1416
- `fuzzy`: Fix a regression causing a crash in the last release. #1422
- Fix a crash when the importer cannot open its log file. Thanks to @barsanuphe. #1426
- Fix an error when trying to write tags for items with flexible fields called `date` and `original_date` (which are not built-in beets fields). #1404
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/1185487/assets,https://api.github.com/repos/beetbox/beets/releases/1185487,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.12,https://github.com/beetbox/beets/releases/tag/v1.3.12,https://api.github.com/repos/beetbox/beets/zipball/v1.3.12,v1.3.12,False,False
1128411,2015-04-06T04:24:53Z,2015-04-06T04:28:29Z,beets 1.3.11,"In this release, we refactored the logging system to be more flexible and more useful. There are more granular levels of verbosity, the output from plugins should be more consistent, and several kinds of logging bugs should be impossible in the future.

There are also two new plugins: one for filtering the files you import and an evolved plugin for using album art as directory thumbnails in file managers. There's a new source for album art, and the importer now records the source of match data. This is a particularly huge release---there's lots more below.

There's one big change with this release: **Python 2.6 is no longer supported**. You'll need Python 2.7. Please trust us when we say this let us remove a surprising number of ugly hacks throughout the code.

Major new features and bigger changes:
- There are now **multiple levels of output verbosity**. On the command line, you can make beets somewhat verbose with `-v` or very verbose with `-vv`. For the importer especially, this makes the first verbose mode much more manageable, while still preserving an option for overwhelmingly verbose debug output. #1244
- A new `filefilter` plugin lets you write regular expressions to automatically **avoid importing** certain files. Thanks to @mried. #1186
- A new `thumbnails` plugin generates cover-art **thumbnails for album folders** for Freedesktop.org-compliant file managers. (This replaces the `freedesktop`, which only worked with the Dolphin file manager.)
- `replaygain`: There is a new backend that uses the [bs1770gain](http://bs1770gain.sourceforge.net) analysis tool. Thanks to @jmwatte. #1343
- A new `filesize` field on items indicates the number of bytes in the file. #1291
- A new `searchlimit` configuration option allows you to specify how many search results you wish to see when looking up releases at MusicBrainz during import. #1245
- The importer now records the data source for a match in a new flexible attribute `data_source` on items and albums. #1311
- The colors used in the terminal interface are now configurable via the new config option `colors`, nested under the option `ui`. (Also, the `color` config option has been moved from top-level to under `ui`. Beets will respect the old color setting, but will warn the user with a deprecation message.) #1238
- `fetchart`: There's a new Wikipedia image source that uses DBpedia to find albums. Thanks to Tom Jaspers. #1194
- In the `config` command, the output is now redacted by default. Sensitive information like passwords and API keys is not included. The new `--clear` option disables redaction. #1376

You should probably also know about these core changes to the way beets works:
- As mentioned above, Python 2.6 is no longer supported.
- The `tracktotal` attribute is now a _track-level field_ instead of an album-level one. This field stores the total number of tracks on the album, or if the per_disc_numbering config option is set, the total number of tracks on a particular medium (i.e., disc). The field was causing problems with that per_disc_numbering mode: different discs on the same album needed different track totals. The field can now work correctly in either mode.
- To replace `tracktotal` as an album-level field, there is a new `albumtotal` computed attribute that provides the total number of tracks on the album. (The per_disc_numbering option has no influence on this field.)
- The `list_format_album` and `list_format_item` configuration keys now affect (almost) every place where objects are printed and logged. (Previously, they only controlled the `list` command and a few other scattered pieces.) #1269
- Relatedly, the `beet` program now accept top-level options `--format-item` and `--format-album` before any subcommand to control how items and albums are displayed. #1271
- `list_format_album` and `list_format_album` have respectively been renamed format_album and format_item. The old names still work but each triggers a warning message. #1271
- Path queries  are automatically triggered only if the
  path targeted by the query exists. Previously, just having a slash somewhere
  in the query was enough, so beet ls AC/DC` wouldn't work to refer to the artist.

There are also lots of medium-sized features in this update:
- `duplicates`: The command has a new `--strict` option that will only report duplicates if all attributes are explicitly set. #1000
- `smartplaylist`: Playlist updating should now be faster: the plugin detects, for each playlist, whether it needs to be regenerated, instead of obliviously regenerating all of them. The `splupdate` command can now also take additional parameters that indicate the names of the playlists to regenerate.
- `play`: The command shows the output of the underlying player command and lets you interact with it. #1321
- The summary shown to compare duplicate albums during import now displays the old and new filesizes. #1291
- `lastgenre`: Add _comedy_, _humor_, and _stand-up_ as well as a longer list of classical music genre tags to the built-in whitelist and canonicalization tree. #1206 #1239 #1240
- `web`: Add support for _cross-origin resource sharing_ for more flexible in-browser clients. Thanks to Andre Miller. #1236 #1237
- plugins/mbsync: A new `-f/--format` option controls the output format when listing unrecognized items. The output is also now more helpful by default. #1246
- `fetchart`: A new option, `-n`, extracts the cover art of all matched albums into their respective directories. Another new flag, `-a`, associates the extracted files with the albums in the database. #1261
- `info`: A new option, `-i`, can display only a specified subset of properties. #1287
- The number of missing/unmatched tracks is shown during import. #1088
- `permissions`: The plugin now also adjusts the permissions of the directories. (Previously, it only affected files.) #1308 #1324
- `ftintitle`: You can now configure the format that the plugin uses to add the artist to the title. Thanks to @amishb. #1377

And many little fixes and improvements:
- `replaygain`: Stop applying replaygain directly to source files when using the mp3gain backend. #1316
- Path queries are case-sensitive on non-Windows OSes. #1165
- `lyrics`: Silence a warning about insecure requests in the new MusixMatch backend. #1204
- Fix a crash when `beet` is invoked without arguments. #1205 #1207
- `fetchart`: Do not attempt to import directories as album art. #1177 #1211
- `mpdstats`: Avoid double-counting some play events. #773 #1212
- Fix a crash when the importer deals with Unicode metadata in `--pretend` mode. #1214
- `smartplaylist`: Fix `album_query` so that individual files are added to the playlist instead of directories. #1225
- Remove the `beatport` plugin. Beatport_ has shut off public access to their API and denied our request for an account. We have not heard from the company since 2013, so we are assuming access will not be restored.
- Incremental imports now (once again) show a ""skipped N directories"" message.
- `embedart`: Handle errors in ImageMagick's output. #1241
- `keyfinder`: Parse the underlying tool's output more robustly. #1248
- `embedart`: We now show a comprehensible error message when `beet embedart -f FILE` is given a non-existent path. #1252
- Fix a crash when a file has an unrecognized image type tag. Thanks to Matthias Kiefer. #1260
- `importfeeds` and `smartplaylist`: Automatically create parent directories for playlist files (instead of crashing when the parent directory does not exist). #1266
- The write-cmd` command no longer tries to ""write"" non-writable fields, such as the bitrate. #1268
- The error message when MusicBrainz is not reachable on the network is now much clearer. Thanks to Tom Jaspers. #1190 #1272
- Improve error messages when parsing query strings with shlex. #1290
- `embedart`: Fix a crash that occured when used together with the _check_ plugin. #1241
- `scrub`: Log an error instead of stopping when the `beet scrub` command cannot write a file. Also, avoid problems on Windows with Unicode filenames. #1297
- `discogs`: Handle and log more kinds of communication errors. #1299 #1305
- `lastgenre`: Bugs in the `pylast` library can no longer crash beets.
- `convert`: You can now configure the temporary directory for conversions. Thanks to @autochthe. #1382 #1383
- `rewrite`: Fix a regression that prevented the plugin's rewriting from applying to album-level fields like `$albumartist`. #1393
- `play`: The plugin now sorts items according to the configuration in album mode.
- `fetchart`: The name for extracted art files is taken from the `art_filename` configuration option. #1258
- When there's a parse error in a query (for example, when you type a malformed date in a date query), beets now stops with an error instead of silently ignoring the query component.

For developers:
- The `database_change` event now sends the item or album that is subject to a change.
- The `OptionParser` is now a `CommonOptionsParser` that offers facilities for adding usual options (`--album`, `--path` and `--format`). See add_subcommands. #1271
- The logging system in beets has been overhauled. Plugins now each have their own logger, which helps by automatically adjusting the verbosity level in import mode and by prefixing the plugin's name. Logging levels are dynamically set when a plugin is called, depending on how it is called (import stage, event or direct command). Finally, logging calls can (and should!) use modern `{}`-style string formatting lazily. See plugin-logging in the plugin API docs.
- A new `import_task_created` event lets you manipulate import tasks immediately after they are initialized. It's also possible to replace the originally created tasks by returning new ones using this event.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/1128411/assets,https://api.github.com/repos/beetbox/beets/releases/1128411,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.11,https://github.com/beetbox/beets/releases/tag/v1.3.11,https://api.github.com/repos/beetbox/beets/zipball/v1.3.11,v1.3.11,False,False
825719,2015-01-05T20:20:33Z,2015-01-05T20:22:46Z,beets 1.3.10,"This version adds a healthy helping of new features and fixes a critical MPEG-4--related bug. There are more lyrics sources, there new plugins for managing permissions and integrating with [Plex](https://plex.tv/), and the importer has a new `--pretend` flag that shows which music _would_ be imported.

One backwards-compatibility note: the `lyrics` now requires the requests_ library. If you use this plugin, you will need to install the library by typing `pip install requests` or the equivalent for your OS.

Also, as an advance warning, this will be one of the last releases to support Python 2.6. If you have a system that cannot run Python 2.7, please consider upgrading soon.

The new features are:
- A new `permissions` makes it easy to fix permissions on music files as they are imported. Thanks to xsteadfastx. #1098
- A new `plexupdate` lets you notify a [Plex](https://plex.tv/) server when the database changes. Thanks again to xsteadfastx. #1120
- The import-cmd` command now has a `--pretend` flag that lists the files that will be imported. Thanks to mried. #1162
- `lyrics`: Add [Musixmatch](https://www.musixmatch.com/) source and introduce a new `sources` config option that lets you choose exactly where to look for lyrics and in which order.
- `lyrics`: Add Brazilian and Spanish sources to Google custom search engine.
- Add a warning when importing a directory that contains no music. #1116 #1127
- `zero`: Can now remove embedded images. #1129 #1100
- The `config` command can now be used to edit the configuration even when it has syntax errors. #1123 #1128
- `lyrics`: Added a new `force` config option. #1150

As usual, there are loads of little fixes and improvements:
- Fix a new crash with the latest version of Mutagen (1.26).
- `lyrics`: Avoid fetching truncated lyrics from the Google backed by merging text blocks separated by empty ` tags before scraping.
- We now print a better error message when the database file is corrupted.
- `discogs`: Only prompt for authentication when running the `import` command. #1123
- When deleting fields with the `modify` command, do not crash when the field cannot be removed (i.e., when it does not exist, when it is a built-in field, or when it is a computed field). #1124
- The deprecated `echonest_tempo` plugin has been removed. Please use the `echonest` instead.
- `echonest`: Fingerprint-based lookup has been removed in accordance with [API changes](http://developer.echonest.com/forums/thread/3650). #1121
- `echonest`: Avoid a crash when the song has no duration information. #896
- `lyrics`: Avoid a crash when retrieving non-ASCII lyrics from the Google backend. #1135 #1136
- `smartplaylist`: Sort specifiers are now respected in queries. Thanks to djl. #1138 #1137
- `ftintitle` and `lyrics`: Featuring artists can now be detected when they use the Spanish word _con_. #1060 #1143
- `mbcollection`: Fix an ""HTTP 400"" error caused by a change in the MusicBrainz API. #1152
- The `%` and `_` characters in path queries do not invoke their special SQL meaning anymore. #1146
- `convert`: Command-line argument construction now works on Windows. Thanks to mluds. #1026 #1157 #1158
- `embedart`: Fix an erroneous missing-art error on Windows. Thanks to mluds. #1163
- `importadded`: Now works with in-place and symlinked imports. #1170
- `ftintitle`: The plugin is now quiet when it runs as part of the import process. Thanks to Freso. #1176 #1172
- `ftintitle`: Fix weird behavior when the same artist appears twice in the artist string. Thanks to Marc Addeo. #1179 #1181
- `lastgenre`: Match songs more robustly when they contain dashes. Thanks to djl. #1156
- The `config` command can now use `$EDITOR` variables with arguments.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/825719/assets,https://api.github.com/repos/beetbox/beets/releases/825719,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.10,https://github.com/beetbox/beets/releases/tag/v1.3.10,https://api.github.com/repos/beetbox/beets/zipball/v1.3.10,v1.3.10,False,False
711852,2014-11-17T23:53:39Z,2014-11-17T23:57:05Z,beets 1.3.9,"This release adds two new standard plugins to beets: one for synchronizing Last.fm listening data and one for integrating with Linux desktops. And at long last, imports can now create symbolic links to music files instead of copying or moving them. We also gained the ability to search for album art on the iTunes Store and a new way to compute ReplayGain levels.

The major new features are:
- A new `lastimport` lets you download your play count data from Last.fm into a flexible attribute. Thanks to Rafael Bodill.
- A new `freedesktop` creates metadata files for Freedesktop.org-compliant file managers. Thanks to kerobaros. #1056, #707
- A new link option in the `import` section creates symbolic links during import instead of moving or copying. Thanks to Rovanion Luckey. #710, #114
- `fetchart`: You can now search for art on the iTunes Store. There's also a new `sources` config option that lets you choose exactly where to look for images and in which order.
- `replaygain`: A new Python Audio Tools backend was added. Thanks to Francesco Rubino. #1070
- `embedart`: You can now automatically check that new art looks similar to existing art---ensuring that you only get a better ""version"" of the art you already have. See image-similarity-check.
- `ftintitle`: The plugin now runs automatically on import. To disable this, unset the `auto` config flag.

There are also core improvements and other substantial additions:
- The `media` attribute is now a _track-level field_ instead of an album-level one. This field stores the delivery mechanism for the music, so in its album-level incarnation, it could not represent heterogeneous releases---for example, an album consisting of a CD and a DVD. Now, tracks accurately indicate the media they appear on. Thanks to Heinz Wiesinger.
- Re-imports of your existing music now preserve its added date and flexible attributes. Thanks to Stig Inge Lea Bjørnsen.
- Slow queries, such as those over flexible attributes, should now be much faster when used with certain commands---notably, the `play`.
- `bpd`: Add a new configuration option for setting the default volume. Thanks to IndiGit.
- `embedart`: A new `ifempty` config option lets you only embed album art when no album art is present. Thanks to kerobaros.
- `discogs`: Authenticate with the Discogs server. The plugin now requires a Discogs account due to new API restrictions. Thanks to multikatt. #1027, #1040

And countless little improvements and fixes:
- Standard cover art in APEv2 metadata is now supported. Thanks to Matthias Kiefer. #1042
- `convert`: Avoid a crash when embedding cover art fails.
- `mpdstats`: Fix an error on start (introduced in the previous version). Thanks to Zach Denton.
- `convert`: The `--yes` command-line flag no longer expects an argument.
- `play`: Remove the temporary .m3u file after sending it to the player.
- The importer no longer tries to highlight partial differences in numeric quantities (track numbers and durations), which was often confusing.
- Date-based queries that are malformed (not parse-able) no longer crash beets and instead fail silently.
- `duplicates`: Emit an error when the `checksum` config option is set incorrectly.
- The migration from pre-1.1, non-YAML configuration files has been removed. If you need to upgrade an old config file, use an older version of beets temporarily.
- `discogs`: Recover from HTTP errors when communicating with the Discogs servers. Thanks to Dustin Rodriguez.
- `embedart`: Do not log ""embedding album art into..."" messages during the import process.
- Fix a crash in the autotagger when files had only whitespace in their metadata.
- `play`: Fix a potential crash when the command outputs special characters. #1041
- `web`: Queries typed into the search field are now treated as separate query components. #1045
- Date tags that use slashes instead of dashes as separators are now interpreted correctly. And WMA (ASF) files now map the `comments` field to the ""Description"" tag (in addition to ""WM/Comments""). Thanks to Matthias Kiefer. #1043
- `embedart`: Avoid resizing the image multiple times when embedding into an album. Thanks to kerobaros. #1028, #1036
- `discogs`: Avoid a situation where a trailing comma could be appended to some artist names. #1049
- The output of the `stats` command is slightly different: the approximate size is now marked as such, and the total number of seconds only appears in exact mode.
- `convert`: A new `copy_album_art` option puts images alongside converted files. Thanks to Ángel Alonso. #1050, #1055
- There is no longer a ""conflict"" between two plugins that declare the same field with the same type. Thanks to Peter Schnebel. #1059 #1061
- `chroma`: Limit the number of releases and recordings fetched as the result of an Acoustid match to avoid extremely long processing times for very popular music. #1068
- Fix an issue where modifying an album's field without actually changing it would not update the corresponding tracks to bring differing tracks back in line with the album. #856
- `echonest`: When communicating with the Echo Nest servers fails repeatedly, log an error instead of exiting. #1096
- `lyrics`: Avoid an error when the Google source returns a result without a title. Thanks to Alberto Leal. #1097
- Importing an archive will no longer leave temporary files behind in `/tmp`. Thanks to multikatt. #1067, #1091
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/711852/assets,https://api.github.com/repos/beetbox/beets/releases/711852,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.9,https://github.com/beetbox/beets/releases/tag/v1.3.9,https://api.github.com/repos/beetbox/beets/zipball/v1.3.9,v1.3.9,False,False
565587,2014-09-18T02:17:03Z,2014-09-18T02:22:28Z,beets 1.3.8,"This release has two big new chunks of functionality. Queries now support **sorting** and user-defined fields can now have **types**.

If you want to see all your songs in reverse chronological order, just type `beet list year-`. It couldn't be easier.

Flexible field types mean that some functionality that has previously only worked for built-in fields, like range queries, can now work with plugin- and user-defined fields too. For starters, the /plugins/echonest/ and `mpdstats` now mark the types of the fields they provide---so you can now say, for example, `beet ls liveness:0.5..1.5` for the Echo Nest ""liveness"" attribute. The `types` makes it easy to specify field types in your config file.

One upgrade note: if you use the `discogs`, you will need to upgrade the Discogs client library to use this version. Just type `pip install -U discogs-client`.

Other new features:
- `info`: Target files can now be specified through library queries (in addition to filenames). The `--library` option prints library fields instead of tags. Multiple files can be summarized together with the new `--summarize` option.
- `mbcollection`: A new option lets you automatically update your collection on import. Thanks to Olin Gay.
- `convert`: A new `never_convert_lossy_files` option can prevent lossy transcoding. Thanks to Simon Kohlmeyer.
- `convert`: A new `--yes` command-line flag skips the confirmation.

Still more fixes and little improvements:
- Invalid state files don't crash the importer.
- `lyrics`: Only strip featured artists and parenthesized title suffixes if no lyrics for the original artist and title were found.
- Fix a crash when reading some files with missing tags.
- `discogs`: Compatibility with the new 2.0 version of the [discogs_client](https://github.com/discogs/discogs_client) Python library. If you were using the old version, you wil need to upgrade to the latest version of the library to use the correspondingly new version of the plugin (e.g., with `pip install -U discogs-client`). Thanks to Andriy Kohut.
- Fix a crash when writing files that can't be read. Thanks to Jocelyn De La Rosa.
- The `stats` command now counts album artists. The album count also more accurately reflects the number of albums in the database.
- `convert`: Avoid crashes when tags cannot be written to newly converted files.
- Formatting templates with item data no longer confusingly shows album-level data when the two are inconsistent.
- Resuming imports and beginning incremental imports should now be much faster when there is a lot of previously-imported music to skip.
- `lyrics`: Remove `<script>` tags from scraped lyrics. Thanks to Bombardment.
- `play`: Add a `relative_to` config option. Thanks to BrainDamage.
- Fix a crash when a MusicBrainz release has zero tracks.
- The `--version` flag now works as an alias for the `version` command.
- `lastgenre`: Remove some unhelpful genres from the default whitelist. Thanks to gwern.
- `importfeeds`: A new `echo` output mode prints files' paths to standard error. Thanks to robotanarchy.
- `replaygain`: Restore some error handling when `mp3gain` output cannot be parsed. The verbose log now contains the bad tool output in this case.
- `convert`: Fix filename extensions when converting automatically.
- The `write` plugin event allows plugins to change the tags that are written to a media file.
- `zero`: Do not delete database values; only media file tags are affected.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/565587/assets,https://api.github.com/repos/beetbox/beets/releases/565587,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.8,https://github.com/beetbox/beets/releases/tag/v1.3.8,https://api.github.com/repos/beetbox/beets/zipball/v1.3.8,v1.3.8,False,False
509392,2014-08-22T19:48:43Z,2014-08-22T19:51:03Z,beets 1.3.7,"This release of beets fixes all the bugs, and you can be confident that you will never again find any bugs in beets, ever. It also adds support for plain old AIFF files and adds three more plugins, including a nifty one that lets you measure a song's tempo by tapping out the beat on your keyboard. The importer deals more elegantly with duplicates and you can broaden your cover art search to the entire web with Google Image Search.

The big new features are:
- Support for AIFF files. Tags are stored as ID3 frames in one of the file's IFF chunks. Thanks to Evan Purkhiser for contributing support to [Mutagen](https://bitbucket.org/lazka/mutagen).
- The new `importadded` reads files' modification times to set their ""added"" date. Thanks to Stig Inge Lea Bjørnsen.
- The new `bpm` lets you manually measure the tempo of a playing song. Thanks to aroquen.
- The new `spotify` generates playlists for your [Spotify](https://www.spotify.com/) account. Thanks to Olin Gay.
- A new required configuration option for the importer skips matches that are missing certain data. Thanks to oprietop.
- When the importer detects duplicates, it now shows you some details about the potentially-replaced music so you can make an informed decision. Thanks to Howard Jones.
- `fetchart`: You can now optionally search for cover art on Google Image Search. Thanks to Lemutar.
- A new asciify-paths configuration option replaces all non-ASCII characters in paths.

And the multitude of little improvements and fixes:
- Compatibility with the latest version of [Mutagen](https://bitbucket.org/lazka/mutagen), 1.23.
- `web`: Lyrics now display readably with correct line breaks. Also, the detail view scrolls to reveal all of the lyrics. Thanks to Meet Udeshi.
- `play`: The `command` config option can now contain arguments (rather than just an executable). Thanks to Alessandro Ghedini.
- Fix an error when using the modify command to remove a flexible attribute. Thanks to Pierre Rust.
- `info`: The command now shows audio properties (e.g., bitrate) in addition to metadata. Thanks Alessandro Ghedini.
- Avoid a crash on Windows when writing to files with special characters in their names.
- `play`: Playing albums now generates filenames by default (as opposed to directories) for better compatibility. The `use_folders` option restores the old behavior. Thanks to Lucas Duailibe.
- Fix an error when importing an empty directory with the `--flat` option.
- `mpdstats`: The last song in a playlist is now correctly counted as played. Thanks to Johann Klähn.
- `zero`: Prevent accidental nulling of dangerous fields (IDs and paths). Thanks to brunal.
- The remove command now shows the paths of files that will be deleted. Thanks again to brunal.
- Don't display changes for fields that are not in the restricted field set. This fixes write showing changes for fields that are not written to the file.
- The write command avoids displaying the item name if there are no changes for it.
- When using both the `convert` and the `scrub`, avoid scrubbing the source file of conversions. (Fix a regression introduced in the previous release.)
- `replaygain`: Logging is now quieter during import. Thanks to Yevgeny Bezman.
- `fetchart`: When loading art from the filesystem, we now prioritize covers with more keywords in them. This means that `cover-front.jpg` will now be taken before `cover-back.jpg` because it contains two keywords rather than one. Thanks to Fabrice Laporte.
- `lastgenre`: Remove duplicates from canonicalized genre lists. Thanks again to Fabrice Laporte.
- The importer now records its progress when skipping albums. This means that incremental imports will no longer try to import albums again after you've chosen to skip them, and erroneous invitations to resume ""interrupted"" imports should be reduced. Thanks to jcassette.
- `bucket`: You can now customize the definition of alphanumeric ""ranges"" using regular expressions. And the heuristic for detecting years has been improved. Thanks to sotho.
- Already-imported singleton tracks are skipped when resuming an import.
- `chroma`: A new `auto` configuration option disables fingerprinting on import. Thanks to ddettrittus.
- `convert`: A new `--format` option to can select the transcoding preset from the command-line.
- `convert`: Transcoding presets can now omit their filename extensions (extensions default to the name of the preset).
- `convert`: A new `--pretend` option lets you preview the commands the plugin will execute without actually taking any action. Thanks to Dietrich Daroch.
- Fix a crash when a float-valued tag field only contained a `+` or `-` character.
- Fixed a regression in the core that caused the `scrub` not to work in `auto` mode. Thanks to Harry Khanna.
- The write command now has a `--force` flag. Thanks again to Harry Khanna.
- `mbsync`: Track alignment now works with albums that have multiple copies of the same recording. Thanks to Rui Gonçalves.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/509392/assets,https://api.github.com/repos/beetbox/beets/releases/509392,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.7,https://github.com/beetbox/beets/releases/tag/v1.3.7,https://api.github.com/repos/beetbox/beets/zipball/v1.3.7,v1.3.7,False,False
314107,2014-05-11T01:12:25Z,2014-05-11T01:22:34Z,beets 1.3.6,"This is primarily a bugfix release, but it also brings two new plugins: one for playing music in desktop players and another for organizing your directories into ""buckets."" It also brings huge performance optimizations to queries—your `beet ls` commands will now go much faster.

New features:
- The new `play` lets you start your desktop music player with the songs that match a query. Thanks to David Hamp-Gonsalves.
- The new `bucket` provides a `%bucket{}` function for path formatting to generate folder names representing ranges of years or initial letter. Thanks to Fabrice Laporte.
- Item and album queries are much faster.
- `ftintitle`: A new option lets you remove featured artists entirely instead of moving them to the title. Thanks to SUTJael.

And those all-important bug fixes:
- `mbsync`: Fix a regression in 1.3.5 that broke the plugin entirely.
- Shell completion now searches more common paths for its `bash_completion` dependency.
- Fix encoding-related logging errors in `convert` and `replaygain`.
- `replaygain`: Suppress a deprecation warning emitted by later versions of PyGI.
- Fix a crash when reading files whose iTunes SoundCheck tags contain non-ASCII characters.
- The `%if{}` template function now appropriately interprets the condition as false when it contains the string ""false"". Thanks to Ayberk Yilmaz.
- `convert`: Fix conversion for files that include a video stream by ignoring it. Thanks to brunal.
- `fetchart`: Log an error instead of crashing when tag manipulation fails.
- `convert`: Log an error instead of crashing when embedding album art fails.
- `convert`: Embed cover art into converted files. Previously they were embedded into the source files.
- New plugin event: `before_item_moved`. Thanks to Robert Speicher.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/314107/assets,https://api.github.com/repos/beetbox/beets/releases/314107,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.6,https://github.com/beetbox/beets/releases/tag/v1.3.6,https://api.github.com/repos/beetbox/beets/zipball/v1.3.6,v1.3.6,False,False
274026,2014-04-16T04:17:23Z,2014-04-16T04:26:37Z,beets 1.3.5,"This is a short-term release that adds some great new stuff to beets. There's support for tracking and calculating musical keys, the ReplayGain plugin was expanded to work with more music formats via GStreamer, we can now import directly from compressed archives, and the lyrics plugin is more robust.

One note for upgraders and packagers: this version of beets has a new dependency in [enum34](https://pypi.python.org/pypi/enum34), which is a backport of the new [enum](https://docs.python.org/3.4/library/enum.html) standard library module.

The major new features are:
- Beets can now import zip, tar and rar archives. Just type `beet import music.zip` to have beets transparently extract the files to import.
- `replaygain`: Added support for calculating ReplayGain values with GStreamer as well the mp3gain program. This enables ReplayGain calculation for any audio format. Thanks to Yevgeny Bezman.
- `lyrics`: Lyrics should now be found for more songs. Searching is now sensitive to featured artists and parenthesized title suffixes. When a song has multiple titles, lyrics from all the named songs are now concatenated. Thanks to Fabrice Laporte and Paul Phillips.

In particular, a full complement of features for supporting musical keys are new in this release:
- A new `initial_key` field is available in the database and files' tags. You can set the field manually using a command like `beet modify initial_key=Am`.
- The `echonest` plugin sets the `initial_key` field if the data is available.
- A new `keyfinder` runs a command-line tool to get the key from audio data and store it in the `initial_key` field.

There are also many bug fixes and little enhancements:
- `echonest`: Truncate files larger than 50MB before uploading for analysis.
- `fetchart`: Fix a crash when the server does not specify a content type. Thanks to Lee Reinhardt.
- `convert`: The `--keep-new` flag now works correctly and the library includes the converted item.
- The importer now logs a message instead of crashing when errors occur while opening the files to be imported.
- `embedart`: Better error messages in exceptional conditions.
- Silenced some confusing error messages when searching for a non-MusicBrainz ID. Using an invalid ID (of any kind—Discogs IDs can be used there too) at the ""Enter ID:"" importer prompt now just silently returns no results. More info is in the verbose logs.
- `mbsync`: Fix application of album-level metadata. Due to a regression a few releases ago, only track-level metadata was being updated.
- On Windows, paths on network shares (UNC paths) no longer cause ""invalid filename"" errors.
- `replaygain`: Fix crashes when attempting to log errors.
- The modify-cmd command can now accept query arguments that contain = signs. An argument is considered a query part when a : appears before any =s. Thanks to mook.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/274026/assets,https://api.github.com/repos/beetbox/beets/releases/274026,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.5,https://github.com/beetbox/beets/releases/tag/v1.3.5,https://api.github.com/repos/beetbox/beets/zipball/v1.3.5,v1.3.5,False,False
258535,2014-04-05T18:39:11Z,2014-04-05T18:48:26Z,beets 1.3.4,"This release brings a hodgepodge of medium-sized conveniences to beets. A new `config` command manages your configuration, we now have bash completion, and the `modify` command can delete attributes. There are also some significant performance optimizations to the autotagger's matching logic.

One note for upgraders: if you use the fetchart plugin, it has a new dependency, the [requests](http://www.python-requests.org/) module.

New stuff:
- Added a `config` command to manage your configuration. It can show you what you currently have in your config file, point you at where the file should be, or launch your text editor to let you modify the file. Thanks to geigerzaehler.
- Beets now ships with a shell command completion script! See completion. Thanks to geigerzaehler.
- The `modify` command now allows removing flexible attributes. For example, `beet modify artist:beatles oldies!` deletes the `oldies` attribute from matching items. Thanks to brilnius.
- Internally, beets has laid the groundwork for supporting multi-valued fields. Thanks to geigerzaehler.
- The importer interface now shows the URL for MusicBrainz matches. Thanks to johtso.
- smartplaylist: Playlists can now be generated from multiple queries (combined with ""or"" logic). Album-level queries are also now possible and automatic playlist regeneration can now be disabled. Thanks to brilnius.
- echonest: Echo Nest similarity now weights the tempo in better proportion to other metrics. Also, options were added to specify custom thresholds and output formats. Thanks to Adam M.
- Added the `after_write` plugin event.
- lastgenre: Separator in genre lists can now be configured. Thanks to brilnius.
- We now only use ""primary"" aliases for artist names from MusicBrainz. This eliminates some strange naming that could occur when the languages config option was set. Thanks to Filipe Fortes.
- The performance of the autotagger's matching mechanism is vastly improved. This should be noticeable when matching against very large releases such as box sets.
- The `import` command can now accept individual files as arguments even in non-singleton mode. Files are imported as one-track albums.

Fixes:
- Error messages involving paths no longer escape non-ASCII characters (for legibility).
- Fixed a regression that made it impossible to use the `modify` command to add new flexible fields. Thanks to brilnius.
- echonest: Avoid crashing when the audio analysis fails. Thanks to Pedro Silva.
- duplicates: Fix checksumming command execution for files with quotation marks in their names. Thanks again to Pedro Silva.
- Fix a crash when importing with both of the `group_albums` and `incremental` options enabled. Thanks to geigerzaehler.
- Give a sensible error message when `BEETSDIR` points to a file. Thanks again to geigerzaehler.
- Fix a crash when reading WMA files whose boolean-valued fields contain strings. Thanks to johtso.
- fetchart: The plugin now sends ""beets"" as the User-Agent when making scraping requests. This helps resolve some blocked requests. The plugin now also depends on the [requests](http://www.python-requests.org/) Python library.
- The `write` command now only shows the changes to fields that will actually be written to a file.
- duplicates: Spurious reports are now avoided for tracks with missing values (e.g., no MBIDs). Thanks to Pedro Silva.
- The default replace sanitation options now remove leading whitespace by default. Thanks to brilnius.
- importfeeds: Fix crash when importing albums containing `/` with the `m3u_multi` format.
- Avoid crashing on Mutagen bugs while writing files' tags.
- convert: Display a useful error message when the FFmpeg executable can't be found.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/258535/assets,https://api.github.com/repos/beetbox/beets/releases/258535,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.4,https://github.com/beetbox/beets/releases/tag/v1.3.4,https://api.github.com/repos/beetbox/beets/zipball/v1.3.4,v1.3.4,False,False
202261,2014-02-27T04:31:06Z,2014-02-27T04:46:47Z,beets 1.3.3,"Version 1.3.3 brings a bunch changes to how item and album fields work internally. Along with laying the groundwork for some great things in the future, this brings a number of improvements to how you interact with beets. Here's what's new with fields in particular:
- Plugin-provided fields can now be used in queries. For example, if you use the `inline` plugin to define a field called `era`, you can now filter your library based on that field by typing something like `beet list era:goldenage`.
- Album-level flexible attributes and plugin-provided attributes can now be used in path formats (and other item-level templates).
- Date-based queries are now possible. Try getting every track you added in February 2014 with `beet ls added:2014-02` or in the whole decade with `added:2010..`. Thanks to Stig Inge Lea Bjørnsen.
- The modify-cmd command is now better at parsing and formatting fields. You can assign to boolean fields like `comp`, for example, using either the words ""true"" or ""false"" or the numerals 1 and 0. Any boolean-esque value is normalized to a real boolean. The update-cmd and write-cmd commands also got smarter at formatting and colorizing changes.

For developers, the short version of the story is that Item and Album objects provide _uniform access_ across fixed, flexible, and computed attributes. You can write `item.foo` to access the `foo` field without worrying about where the data comes from.

Unrelated new stuff:
- The importer has a new interactive option (_G_ for ""Group albums""), command-line flag (`--group-albums`), and config option (group_albums) that lets you split apart albums that are mixed together in a single directory. Thanks to geigerzaehler.
- A new `--config` command-line option lets you specify an additional configuration file. This option _combines_ config settings with your default config file. (As part of this change, the `BEETSDIR` environment variable no longer combines---it _replaces_ your default config file.) Thanks again to geigerzaehler.
- `ihate`: The plugin's configuration interface was overhauled. Its configuration is now much simpler---it uses beets queries instead of an ad-hoc per-field configuration. This is _backwards-incompatible_---if you use this plugin, you will need to update your configuration. Thanks to BrainDamage.

Other little fixes:
- `echonest`: Tempo (BPM) is now always stored as an integer. Thanks to Heinz Wiesinger.
- Fix Python 2.6 compatibility in some logging statements in `chroma` and `lastgenre`.
- Prevent some crashes when things go really wrong when writing file metadata at the end of the import process.
- New plugin events: `item_removed` (thanks to Romuald Conty) and `item_copied` (thanks to Stig Inge Lea Bjørnsen).
- The `pluginpath` config option can now point to the directory containing plugin code. (Previously, it awkwardly needed to point at a directory containing a `beetsplug` directory, which would then contain your code. This is preserved as an option for backwards compatibility.) This change should also work around a long-standing issue when using `pluginpath` when beets is installed using pip. Many thanks to geigerzaehler.
- `web`: The `/item/` and `/album/` API endpoints now produce full details about albums and items, not just lists of IDs. Thanks to geigerzaehler.
- Fix a potential crash when using image resizing with the `fetchart` or `embedart` without ImageMagick installed.
- Also, when invoking `convert` for image resizing fails, we now log an error instead of crashing.
- `fetchart`: The `beet fetchart` command can now associate local images with albums (unless `--force` is provided). Thanks to brilnius.
- `fetchart`: Command output is now colorized. Thanks again to brilnius.
- The modify-cmd command avoids writing files and committing to the database when nothing has changed. Thanks once more to brilnius.
- The importer now uses the album artist field when guessing existing metadata for albums (rather than just the track artist field). Thanks to geigerzaehler.
- `fromfilename`: Fix a crash when a filename contained only a track number (e.g., `02.mp3`).
- `convert`: Transcoding should now work on Windows.
- `duplicates`: The `move` and `copy` destination arguments are now treated as directories. Thanks to Pedro Silva.
- The modify-cmd command now skips confirmation and prints a message if no changes are necessary. Thanks to brilnius.
- `fetchart`: When using the `remote_priority` config option, local image files are no longer completely ignored.
- `echonest`: Fix an issue causing the plugin to appear twice in the output of the `beet version` command.
- `lastgenre`: Fix an occasional crash when no tag weight was returned by Last.fm.
- `mpdstats`: Restore the `last_played` field. Thanks to Johann Klähn.
- The modify-cmd command's output now clearly shows when a file has been deleted.
- Album art in files with Vorbis Comments is now marked with the ""front cover"" type. Thanks to Jason Lefley.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/202261/assets,https://api.github.com/repos/beetbox/beets/releases/202261,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.3,https://github.com/beetbox/beets/releases/tag/v1.3.3,https://api.github.com/repos/beetbox/beets/zipball/v1.3.3,v1.3.3,False,False
129886,2013-12-23T00:17:02Z,2013-12-23T00:26:51Z,beets 1.3.2,"This update brings new plugins for fetching acoustic metrics and listening statistics, many more options for the duplicate detection plugin, and flexible options for fetching multiple genres.

The ""core"" of beets gained a new built-in command: `beet write` updates the metadata tags for files, bringing them back into sync with your database. Thanks to Heinz Wiesinger.

We added some plugins and overhauled some existing ones:
- The new `echonest` plugin can fetch a wide range of [acoustic attributes](http://developer.echonest.com/acoustic-attributes.html) from The Echo Nest, including the ""speechiness"" and ""liveness"" of each track. The new plugin supersedes an older version (`echonest_tempo`) that only fetched the BPM field. Thanks to Pedro Silva and Peter Schnebel.
- The `duplicates` plugin got a number of new features, thanks to Pedro Silva:
  - The `keys` option lets you specify the fields used detect duplicates.
  - You can now use checksumming (via an external command) to find duplicates instead of metadata via the `checksum` option.
  - The plugin can perform actions on the duplicates it find. The new `copy`, `move`, `delete`, `delete_file`, and `tag` options perform those actions.
- The new `mpdstats` plugin collects statistics about your listening habits from [MPD](http://mpd.wikia.com/wiki/Music_Player_Daemon_Wiki). Thanks to Peter Schnebel and Johann Klähn.
- `lastgenre`: The new `multiple` option has been replaced with the `count` option, which lets you limit the number of genres added to your music. (No more thousand-character genre fields!) Also, the `min_weight` field filters out nonsense tags to make your genres more relevant. Thanks to Peter Schnebel and rashley60.
- `lyrics`: A new `--force` option optionally re-downloads lyrics even when files already have them. Thanks to Bitdemon.

As usual, there are also innumerable little fixes and improvements:
- When writing ID3 tags for ReplayGain normalization, tags are written with both upper-case and lower-case TXXX frame descriptions. Previous versions of beets used only the upper-case style, which seems to be more standard, but some players (namely, Quod Libet and foobar2000) seem to only use lower-case names.
- `missing`: Avoid a possible error when an album's `tracktotal` field is missing.
- `ftintitle`: Fix an error when the sort artist is missing.
- `echonest_tempo`: The plugin should now match songs more reliably (i.e., fewer ""no tempo found"" messages). Thanks to Peter Schnebel.
- `convert`: Fix an ""Item has no library"" error when using the `auto` config option.
- `convert`: Fix an issue where files of the wrong format would have their transcoding skipped (and files with the right format would be needlessly transcoded). Thanks to Jakob Schnitzer.
- Fix an issue that caused the id3v23 option to work only occasionally.
- Also fix using id3v23 in conjunction with the `scrub` and `embedart` plugins. Thanks to Chris Cogburn.
- `ihate`: Fix an error when importing singletons. Thanks to Mathijs de Bruin.
- The clutter option can now be a whitespace-separated list in addition to a YAML list.
- Values for the replace option can now be empty (i.e., null is equivalent to the empty string).
- `lastgenre`: Fix a conflict between canonicalization and multiple genres.
- When a match has a year but not a month or day, the autotagger now ""zeros out"" the month and day fields after applying the year.
- For plugin developers: added an `optparse` callback utility function for performing actions based on arguments. Thanks to Pedro Silva.
- `scrub`: Fix scrubbing of MPEG-4 files. Thanks to Yevgeny Bezman.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/129886/assets,https://api.github.com/repos/beetbox/beets/releases/129886,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.2,https://github.com/beetbox/beets/releases/tag/v1.3.2,https://api.github.com/repos/beetbox/beets/zipball/v1.3.2,v1.3.2,False,False
65696,2013-10-13T02:03:51Z,2013-10-13T02:15:43Z,beets 1.3.1,"This release boasts a host of new little features, many of them contributed by beets' amazing and prolific community. It adds support for [Opus](http://www.opus-codec.org/) files, transcoding to any format, and two new plugins: one that guesses metadata for ""blank"" files based on their filenames and one that moves featured artists into the title field.

Here's the new stuff:
- Add [Opus](http://www.opus-codec.org/) audio support. Thanks to Rowan Lewis.
- `convert`: You can now transcode files to any audio format, rather than just MP3. Thanks again to Rowan Lewis.
- The new `fromfilename` plugin guesses tags from the filenames during import when metadata tags themselves are missing. Thanks to Jan-Erik Dahlin.
- The `ftintitle`, by @Verrus, is now distributed with beets. It helps you rewrite tags to move ""featured"" artists from the artist field to the title field.
- The MusicBrainz data source now uses track artists over recording artists. This leads to better metadata when tagging classical music. Thanks to Henrique Ferreiro.
- `lastgenre`: You can now get multiple genres per album or track using the `multiple` config option. Thanks to rashley60 on GitHub.
- A new id3v23 config option makes beets write MP3 files' tags using the older ID3v2.3 metadata standard. Use this if you want your tags to be visible to Windows and some older players.

And some fixes:
- `fetchart`: Better error message when the image file has an unrecognized type.
- `mbcollection`: Detect, log, and skip invalid MusicBrainz IDs (instead of failing with an API error).
- `info`: Fail gracefully when used erroneously with a directory.
- `echonest_tempo`: Fix an issue where the plugin could use the tempo from the wrong song when the API did not contain the requested song.
- Fix a crash when a file's metadata included a very large number (one wider than 64 bits). These huge numbers are now replaced with zeroes in the database.
- When a track on a MusicBrainz release has a different length from the underlying recording's length, the track length is now used instead.
- With per_disc_numbering enabled, the `tracktotal` field is now set correctly (i.e., to the number of tracks on the disc).
- `scrub`: The `scrub` command now restores album art in addition to other (database-backed) tags.
- `mpdupdate`: Domain sockets can now begin with a tilde (which is correctly expanded to `$HOME`) as well as a slash. Thanks to Johann Klähn.
- `lastgenre`: Fix a regression that could cause new genres found during import not to be persisted.
- Fixed a crash when imported album art was also marked as ""clutter"" where the art would be deleted before it could be moved into place. This led to a ""image.jpg not found during copy"" error. Now clutter is removed (and directories pruned) much later in the process, after the `import_task_files` hook.
- `missing`: Fix an error when printing missing track names. Thanks to Pedro Silva.
- Fix an occasional KeyError in the update-cmd command introduced in 1.3.0.
- `scrub`: Avoid preserving certain non-standard ID3 tags such as NCON.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/65696/assets,https://api.github.com/repos/beetbox/beets/releases/65696,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.1,https://github.com/beetbox/beets/releases/tag/v1.3.1,https://api.github.com/repos/beetbox/beets/zipball/v1.3.1,v1.3.1,False,False
43019,2013-09-11T23:08:18Z,2013-09-11T23:35:49Z,beets 1.3.0,"Albums and items now have **flexible attributes**. This means that, when you want to store information about your music in the beets database, you're no longer constrained to the set of fields it supports out of the box (title, artist, track, etc.). Instead, you can use any field name you can think of and treat it just like the built-in fields.

For example, you can use the `modify` command to set a new field on a track:

```
$ beet modify mood=sexy artist:miguel
```

and then query your music based on that field:

```
$ beet ls mood:sunny
```

or use templates to see the value of the field:

```
$ beet ls -f '$title: $mood'
```

While this feature is nifty when used directly with the usual command-line suspects, it's especially useful for plugin authors and for future beets features. Stay tuned for great things built on this flexible attribute infrastructure.

One side effect of this change: queries that include unknown fields will now match _nothing_ instead of _everything_. So if you type `beet ls fieldThatDoesNotExist:foo`, beets will now return no results, whereas previous versions would spit out a warning and then list your entire library.

There's more detail than you could ever need [on the beets blog](http://beets.radbox.org/blog/flexattr.html).
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/43019/assets,https://api.github.com/repos/beetbox/beets/releases/43019,master,https://api.github.com/repos/beetbox/beets/tarball/v1.3.0,https://github.com/beetbox/beets/releases/tag/v1.3.0,https://api.github.com/repos/beetbox/beets/zipball/v1.3.0,v1.3.0,False,False
33869,2013-08-27T16:15:17Z,2013-08-27T16:27:32Z,beets 1.2.2,"This is a bugfix release. We're in the midst of preparing for a large change in beets 1.3, so 1.2.2 resolves some issues that came up over the last few weeks. Stay tuned!

The improvements in this release are:
- A new plugin event, `item_moved`, is sent when files are moved on disk. Thanks to dsedivec.
- `lyrics`: More improvements to the Google backend by Fabrice Laporte.
- `bpd`: Fix for a crash when searching, thanks to Simon Chopin.
- Regular expression queries (and other query types) over paths now work. (Previously, special query types were ignored for the `path` field.)
- `fetchart`: Look for images in the Cover Art Archive for the release group in addition to the specific release. Thanks to Filipe Fortes.
- Fix a race in the importer that could cause files to be deleted before they were imported. This happened when importing one album, importing a duplicate album, and then asking for the first album to be replaced with the second. The situation could only arise when importing music from the library directory and when the two albums are imported close in time.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/33869/assets,https://api.github.com/repos/beetbox/beets/releases/33869,master,https://api.github.com/repos/beetbox/beets/tarball/v1.2.2,https://github.com/beetbox/beets/releases/tag/v1.2.2,https://api.github.com/repos/beetbox/beets/zipball/v1.2.2,v1.2.2,False,False
6605,2013-06-22T22:44:24Z,2013-07-09T04:33:15Z,beets 1.2.1,"This release introduces a major internal change in the way that similarity scores are handled. It means that the importer interface can now show you exactly why a match is assigned its score and that the autotagger gained a few new options that let you customize how matches are prioritized and recommended.

The refactoring work is due to the continued efforts of Tai Lee. The changes you'll notice while using the autotagger are:
- The top 3 distance penalties are now displayed on the release listing, and all album and track penalties are now displayed on the track changes list. This should make it clear exactly which metadata is contributing to a low similarity score.
- When displaying differences, the colorization has been made more consistent and helpful: red for an actual difference, yellow to indicate that a distance penalty is being applied, and light gray for no penalty (e.g., case changes) or disambiguation data.

There are also three new (or overhauled) configuration options that let you customize the way that matches are selected:
- The `ignored` setting lets you instruct the importer not to show you matches that have a certain penalty applied.
- The `preferred` collection of settings specifies a sorted list of preferred countries and media types, or prioritizes releases closest to the original year for an album.
- The `max_rec` settings can now be used for any distance penalty component. The recommendation will be downgraded if a non-zero penalty is being applied to the specified field.

And some little enhancements and bug fixes:
- Multi-disc directory names can now contain ""disk"" (in addition to ""disc""). Thanks to John Hawthorn.
- `web`: Item and album counts are now exposed through the API for use with the Tomahawk resolver. Thanks to Uwe L. Korn.
- Python 2.6 compatibility for the `beatport` plugin, `missing`, and `duplicates`. Thanks to Wesley Bitter and Pedro Silva.
- Don't move the config file during a null migration. Thanks to Theofilos Intzoglou.
- Fix an occasional crash in the `beatport` when a length field was missing from the API response. Thanks to Timothy Appnel.
- `scrub`: Handle and log I/O errors.
- `lyrics`: The Google backend should now turn up more results. Thanks to Fabrice Laporte.
- `random`: Fix compatibility with Python 2.6. Thanks to Matthias Drochner.
",https://api.github.com/users/sampsyo,188033,sampsyo,https://api.github.com/repos/beetbox/beets/releases/6605/assets,https://api.github.com/repos/beetbox/beets/releases/6605,master,https://api.github.com/repos/beetbox/beets/tarball/v1.2.1,https://github.com/beetbox/beets/releases/tag/v1.2.1,https://api.github.com/repos/beetbox/beets/zipball/v1.2.1,v1.2.1,False,False
