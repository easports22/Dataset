id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8157031,2017-10-17T21:59:13Z,2017-10-18T00:09:39Z,1.17.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.17.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 &ndash; 3.4 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.3| 17.06.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.4

- Introduced version 3.4 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.

- Added support for `cache_from`, `network` and `target` options in build
  configurations

- Added support for the `order` parameter in the `update_config` section

- Added support for setting a custom name in volume definitions using
  the `name` parameter

#### Compose file version 2.3

- Added support for `shm_size` option in build configuration

#### Compose file version 2.x

- Added support for extension fields (`x-*`). Also available for v3.4 files

#### All formats

- Added new `--no-start` to the `up` command, allowing users to create all
  resources (networks, volumes, containers) without starting services.
  The `create` command is deprecated in favor of this new option

### Bugfixes

- Fixed a bug where `extra_hosts` values would be overridden by extension
  files instead of merging together

- Fixed a bug where the validation for v3.2 files would prevent using the
  `consistency` field in service volume definitions

- Fixed a bug that would cause a crash when configuration fields expecting
  unique items would contain duplicates

- Fixed a bug where mount overrides with a different mode would create a
  duplicate entry instead of overriding the original entry

- Fixed a bug where build labels declared as a list wouldn't be properly
  parsed

- Fixed a bug where the output of `docker-compose config` would be invalid
  for some versions if the file contained custom-named external volumes

- Improved error handling when issuing a build command on Windows using an
  unsupported file version

- Fixed an issue where networks with identical names would sometimes be
  created when running `up` commands concurrently.

Thanks to @AlexeyRokhin, @garribas, @FrenchBen, @vdemeester, @NikitaVlaznev, @jbarciauskas, @hoogenm, @edsrzf, @andrewhsu and @AndreaGiardini for contributing to this release!

## Integrity check

SHA sum | Binary name
 --- | ---
 `89e1db7a926d4b56ac9e2ae0133a6e279424e87e`  | `docker-compose-Darwin-x86_64`
 `27f3648e33ee5c8f68c1d05c9e51a5b6669f94bd`  | `docker-compose-Linux-x86_64`
 `4651ab956f1ca6ca4d575af6fd72a011dad82d16` |  `docker-compose-Windows-x86_64.exe`",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/8157031/assets,https://api.github.com/repos/docker/compose/releases/8157031,master,https://api.github.com/repos/docker/compose/tarball/1.17.0-rc1,https://github.com/docker/compose/releases/tag/1.17.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.17.0-rc1,1.17.0-rc1,False,True
7610910,2017-09-01T20:27:34Z,2017-09-01T22:44:28Z,1.16.1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.3| 17.06.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### Bugfixes

- Fixed bug that prevented using `extra_hosts` in several configuration files.

Thanks to @shin-, @andrewhsu and @seemethere for contributing to this release!",https://api.github.com/users/andrewhsu,57640,andrewhsu,https://api.github.com/repos/docker/compose/releases/7610910/assets,https://api.github.com/repos/docker/compose/releases/7610910,release,https://api.github.com/repos/docker/compose/tarball/1.16.1,https://github.com/docker/compose/releases/tag/1.16.1,https://api.github.com/repos/docker/compose/zipball/1.16.1,1.16.1,False,False
7597113,2017-08-30T22:52:29Z,2017-08-31T21:23:52Z,1.16.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.16.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.3| 17.06.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 2.3

- Introduced version 2.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.

- Added support for the `target` parameter in network configurations

- Added support for the `start_period` parameter in healthcheck
  configurations

#### Compose file version 2.x

- Added support for the `blkio_config` parameter in service definitions

- Added support for setting a custom name in volume definitions using
  the `name` parameter (not available for version 2.0)

#### All formats

- Added new CLI flag `--no-ansi` to suppress ANSI control characters in
  output

### Bugfixes

- Fixed a bug where nested `extends` instructions weren't resolved
  properly, causing ""file not found"" errors

- Fixed several issues with `.dockerignore` parsing

- Fixed issues where logs of TTY-enabled services were being printed
  incorrectly and causing `MemoryError` exceptions

- Fixed a bug where printing application logs would sometimes be interrupted
  by a `UnicodeEncodeError` exception on Python 3

- The `$` character in the output of `docker-compose config` is now
  properly escaped

- Fixed a bug where running `docker-compose top` would sometimes fail
  with an uncaught exception

- Fixed a bug where `docker-compose pull` with the `--parallel` flag
  would return a `0` exit code when failing

- Fixed an issue where keys in `deploy.resources` were not being validated

- Fixed an issue where the `logging` options in the output of
  `docker-compose config` would be set to `null`, an invalid value

- Fixed the output of the `docker-compose images` command when an image
  would come from a private repository using an explicit port number

- Fixed the output of `docker-compose config` when a port definition used
  `0` as the value for the published port

Thanks to @cecton, @albers, @lawliet89, @AlexeyRokhin, @NikitaVlaznev, @kirinrastogi, @jbarciauskas, @edsrzf and @carlwgeorge for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/7597113/assets,https://api.github.com/repos/docker/compose/releases/7597113,master,https://api.github.com/repos/docker/compose/tarball/1.16.0,https://github.com/docker/compose/releases/tag/1.16.0,https://api.github.com/repos/docker/compose/zipball/1.16.0,1.16.0,False,False
7549304,2017-08-25T23:11:48Z,2017-08-28T21:36:01Z,1.16.0-rc2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.16.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.3| 17.06.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 2.3

- Introduced version 2.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.

- Added support for the `target` parameter in network configurations

- Added support for the `start_period` parameter in healthcheck
  configurations

#### Compose file version 2.x

- Added support for the `blkio_config` parameter in service definitions

- Added support for setting a custom name in volume definitions using
  the `name` parameter (not available for version 2.0)

#### All formats

- Added new CLI flag `--no-ansi` to suppress ANSI control characters in
  output

### Bugfixes

- Fixed a bug where nested `extends` instructions weren't resolved
  properly, causing ""file not found"" errors

- Fixed several issues with `.dockerignore` parsing

- Fixed issues where logs of TTY-enabled services were being printed
  incorrectly and causing `MemoryError` exceptions

- Fixed a bug where printing application logs would sometimes be interrupted
  by a `UnicodeEncodeError` exception on Python 3

- The `$` character in the output of `docker-compose config` is now
  properly escaped

- Fixed a bug where running `docker-compose top` would sometimes fail
  with an uncaught exception

- Fixed a bug where `docker-compose pull` with the `--parallel` flag
  would return a `0` exit code when failing

- Fixed an issue where keys in `deploy.resources` were not being validated

- Fixed an issue where the `logging` options in the output of
  `docker-compose config` would be set to `null`, an invalid value

- Fixed the output of the `docker-compose images` command when an image
  would come from a private repository using an explicit port number

- Fixed the output of `docker-compose config` when a port definition used
  `0` as the value for the published port

Thanks to @cecton, @albers, @lawliet89, @AlexeyRokhin, @NikitaVlaznev, @kirinrastogi, @jbarciauskas, @edsrzf and @carlwgeorge for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/7549304/assets,https://api.github.com/repos/docker/compose/releases/7549304,master,https://api.github.com/repos/docker/compose/tarball/1.16.0-rc2,https://github.com/docker/compose/releases/tag/1.16.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.16.0-rc2,1.16.0-rc2,False,True
7468953,2017-08-18T22:37:14Z,2017-08-21T20:08:47Z,1.16.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.16.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 &ndash; 3.4 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.3| 17.06.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.4

- Introduced version 3.4 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.

#### Compose file version 2.3

- Introduced version 2.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.

- Added support for the `target` parameter in network configurations
  (also available in 3.4)

- Added support for the `start_period` parameter in healthcheck
  configurations

#### Compose file version 2.x

- Added support for the `blkio_config` parameter in service definitions

- Added support for setting a custom name in volume definitions using
  the `name` parameter (not available for version 2.0)

#### All formats

- Added new CLI flag `--no-ansi` to suppress ANSI control characters in
  output

### Bugfixes

- Fixed a bug where nested `extends` instructions weren't resolved
  properly, causing ""file not found"" errors

- Fixed several issues with `.dockerignore` parsing

- Fixed issues where logs of TTY-enabled services were being printed
  incorrectly and causing `MemoryError` exceptions

- The `$` character in the output of `docker-compose config` is now
  properly escaped

- Fixed a bug where running `docker-compose top` would sometimes fail
  with an uncaught exception

- Fixed a bug where `docker-compose pull` with the `--parallel` flag
  would return a `0` exit code when failing

- Fixed an issue where keys in `deploy.resources` were not being validated

- Fixed an issue where the `logging` options in the output of
  `docker-compose config` would be set to `null`, an invalid value

- Fixed the output of `docker-compose config` when a port definition used
  `0` as the value for the published port

Thanks to @lawliet89, @AlexeyRokhin, @NikitaVlaznev, @kirinrastogi, @jbarciauskas, @edsrzf, @cecton, @carlwgeorge and @albers for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/7468953/assets,https://api.github.com/repos/docker/compose/releases/7468953,master,https://api.github.com/repos/docker/compose/tarball/1.16.0-rc1,https://github.com/docker/compose/releases/tag/1.16.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.16.0-rc1,1.16.0-rc1,False,True
7180528,2017-07-25T23:19:49Z,2017-07-26T22:07:20Z,1.15.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.15.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 2.2

- Added support for the `network` parameter in build configurations.

#### Compose file version 2.1 and up

- The `pid` option in a service's definition now supports a `service:<name>`
  value.

- Added support for the `storage_opt` parameter in in service definitions.
  This option is not available for the v3 format

#### All formats

- Added `--quiet` flag to `docker-compose pull`, suppressing progress output

- Some improvements to CLI output

### Bugfixes

- Volumes specified through the `--volume` flag of `docker-compose run` now
  complement volumes declared in the service's defintion instead of replacing
  them

- Fixed a bug where using multiple Compose files would unset the scale value
  defined inside the Compose file.

- Fixed an issue where the `credHelpers` entries in the `config.json` file
  were not being honored by Compose

- Fixed a bug where using multiple Compose files with port declarations
  would cause failures in Python 3 environments

- Fixed a bug where some proxy-related options present in the user's
  environment would prevent Compose from running

- Fixed an issue where the output of `docker-compose config` would be invalid
  if the original file used `Y` or `N` values

- Fixed an issue preventing `up` operations on a previously created stack on
  Windows Engine.


Thanks to @AlexeyRokhin, @edsrzf, @NikitaVlaznev, @jbarciauskas, @thaJeztah, @protoss-player, @kirinrastogi, @IPv4v6, @Dineshs91, @ColinHebert and @andyneff for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/7180528/assets,https://api.github.com/repos/docker/compose/releases/7180528,master,https://api.github.com/repos/docker/compose/tarball/1.15.0,https://github.com/docker/compose/releases/tag/1.15.0,https://api.github.com/repos/docker/compose/zipball/1.15.0,1.15.0,False,False
7036810,2017-07-13T23:40:05Z,2017-07-14T00:18:26Z,1.15.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.15.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 2.2

- Added support for the `network` parameter in build configurations.

#### Compose file version 2.1 and up

- The `pid` option in a service's definition now supports a `service:<name>`
  value.

- Added support for the `storage_opt` parameter in in service definitions.
  This option is not available for the v3 format

#### All formats

- Added `--quiet` flag to `docker-compose pull`, suppressing progress output

- Some improvements to CLI output

### Bugfixes

- Volumes specified through the `--volume` flag of `docker-compose run` now
  complement volumes declared in the service's defintion instead of replacing
  them

- Fixed a bug where using multiple Compose files would unset the scale value
  defined inside the Compose file.

- Fixed an issue where the `credHelpers` entries in the `config.json` file
  were not being honored by Compose

- Fixed a bug where using multiple Compose files with port declarations
  would cause failures in Python 3 environments

- Fixed a bug where some proxy-related options present in the user's
  environment would prevent Compose from running

- Fixed an issue where the output of `docker-compose config` would be invalid
  if the original file used `Y` or `N` values


Thanks to @edsrzf, @AlexeyRokhin, @thaJeztah, @protoss-player, @NikitaVlaznev, @jbarciauskas, @IPv4v6, @Dineshs91, @ColinHebert and @andyneff for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/7036810/assets,https://api.github.com/repos/docker/compose/releases/7036810,master,https://api.github.com/repos/docker/compose/tarball/1.15.0-rc1,https://github.com/docker/compose/releases/tag/1.15.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.15.0-rc1,1.15.0-rc1,False,True
6732391,2017-06-16T00:10:46Z,2017-06-19T20:19:53Z,1.14.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.3

- Introduced version 3.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.
  Note: the `credential_spec` and `configs` keys only apply to Swarm services
  and will be ignored by Compose

#### Compose file version 2.2

- Added the following parameters in service definitions: `cpu_count`,
  `cpu_percent`, `cpus`

#### Compose file version 2.1

- Added support for build labels. This feature is also available in the
  2.2 and 3.3 formats.

#### All formats

- Added shorthand `-u` for `--user` flag in `docker-compose exec`

- Differences in labels between the Compose file and remote network
  will now print a warning instead of preventing redeployment.

### Bugfixes

- Fixed a bug where service's dependencies were being rescaled to their
  default scale when running a `docker-compose run` command

- Fixed a bug where `docker-compose rm` with the `--stop` flag was not
  behaving properly when provided with a list of services to remove

- Fixed a bug where `cache_from` in the build section would be ignored when
  using more than one Compose file.

- Fixed a bug where override files would not be picked up by Compose if they
  had the `.yaml` extension

- Fixed a bug on Windows Engine where networks would be incorrectly flagged
  for recreation

- Fixed a bug where services declaring ports would cause crashes on some
  versions of Python 3

- Fixed a bug where the output of `docker-compose config` would sometimes
  contain invalid port definitions


Thanks to @AlexeyRokhin, @ColinHebert, @eliat123, @albers, @wrfly, @swoopla, @mengskysama, @londoncalling, @friism and @brainnwaveDuncan for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/6732391/assets,https://api.github.com/repos/docker/compose/releases/6732391,master,https://api.github.com/repos/docker/compose/tarball/1.14.0,https://github.com/docker/compose/releases/tag/1.14.0,https://api.github.com/repos/docker/compose/zipball/1.14.0,1.14.0,False,False
6625126,2017-06-06T19:39:16Z,2017-06-06T22:26:34Z,1.14.0-rc2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.14.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.3

- Introduced version 3.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.
  Note: the `credential_spec` and `configs` keys only apply to Swarm services
  and will be ignored by Compose

#### Compose file version 2.2

- Added the following parameters in service definitions: `cpu_count`,
  `cpu_percent`, `cpus`

#### Compose file version 2.1

- Added support for build labels. This feature is also available in the
  2.2 and 3.3 formats.

#### All formats

- Added shorthand `-u` for `--user` flag in `docker-compose exec`

- Differences in labels between the Compose file and remote network
  will now print a warning instead of preventing redeployment.

### Bugfixes

- Fixed a bug where service's dependencies were being rescaled to their
  default scale when running a `docker-compose run` command

- Fixed a bug where `docker-compose rm` with the `--stop` flag was not
  behaving properly when provided with a list of services to remove

- Fixed a bug where `cache_from` in the build section would be ignored when
  using more than one Compose file.

- Fixed a bug where override files would not be picked up by Compose if they
  had the `.yaml` extension

- Fixed a bug on Windows Engine where networks would be incorrectly flagged
  for recreation

- Fixed a bug where services declaring ports would cause crashes on some
  versions of Python 3

- Fixed a bug where the output of `docker-compose config` would sometimes
  contain invalid port definitions


Thanks to @AlexeyRokhin, @ColinHebert, @eliat123, @albers, @wrfly, @swoopla, @mengskysama, @londoncalling, @friism and @brainnwaveDuncan for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/6625126/assets,https://api.github.com/repos/docker/compose/releases/6625126,master,https://api.github.com/repos/docker/compose/tarball/1.14.0-rc2,https://github.com/docker/compose/releases/tag/1.14.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.14.0-rc2,1.14.0-rc2,False,True
6520477,2017-05-30T19:09:41Z,2017-05-30T22:22:49Z,1.14.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.14.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.3 | 17.06.0+ |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.3

- Introduced version 3.3 of the `docker-compose.yml` specification.
  This version requires to be used with Docker Engine 17.06.0 or above.
  Note: the `credential_spec` key only applies to Swarm services and will
  be ignored by Compose

#### Compose file version 2.2

- Added the following parameters in service definitions: `cpu_count`,
  `cpu_percent`, `cpus`

#### Compose file version 2.1

- Added support for build labels. This feature is also available in the
  2.2 and 3.3 formats.

#### All formats

- Added shorthand `-u` for `--user` flag in `docker-compose exec`

- Differences in labels between the Compose file and remote network
  will now print a warning instead of preventing redeployment.

### Bugfixes

- Fixed a bug where service's dependencies were being rescaled to their
  default scale when running a `docker-compose run` command

- Fixed a bug where `docker-compose rm` with the `--stop` flag was not
  behaving properly when provided with a list of services to remove

- Fixed a bug where `cache_from` in the build section would be ignored when
  using more than one Compose file.

- Fixed a bug where override files would not be picked up by Compose if they
  had the `.yaml` extension

- Fixed a bug on Windows Engine where networks would be incorrectly flagged
  for recreation

- Fixed a bug where services declaring ports would cause crashes on some
  versions of Python 3

Thanks to @AlexeyRokhin, @ColinHebert, @eliat123, @albers, @wrfly, @swoopla, @mengskysama, @londoncalling, @friism and @brainnwaveDuncan for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/6520477/assets,https://api.github.com/repos/docker/compose/releases/6520477,master,https://api.github.com/repos/docker/compose/tarball/1.14.0-rc1,https://github.com/docker/compose/releases/tag/1.14.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.14.0-rc1,1.14.0-rc1,False,True
6245167,2017-05-01T22:25:43Z,2017-05-02T19:30:08Z,1.13.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.13.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### Breaking changes

- `docker-compose up` now resets a service's scaling to its default value.
  You can use the newly introduced `--scale` option to specify a custom
  scale value

### New features

#### Compose file version 2.2

- Introduced version 2.2 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.13.0 or above

- Added support for `init` in service definitions.

- Added support for `scale` in service definitions. The configuration's value
  can be overridden using the `--scale` flag in `docker-compose up`.
  Please note that the `scale` command is disabled for this file format

#### Compose file version 2.x

- Added support for `options` in the `ipam` section of network definitions

### Bugfixes

- Fixed a bug where paths provided to compose via the `-f` option were not
  being resolved properly

- Fixed a bug where the `ext_ip::target_port` notation in the ports section
  was incorrectly marked as invalid

- Fixed an issue where the `exec` command would sometimes not return control
  to the terminal when using the `-d` flag

- Fixed a bug where secrets were missing from the output of the `config`
  command for v3.2 files

- Fixed an issue where `docker-compose` would hang if no internet connection
  was available

- Fixed an issue where paths containing unicode characters passed via the `-f`
  flag were causing Compose to crash

- Fixed an issue where the output of `docker-compose config` would be invalid
  if the Compose file contained external secrets

- Fixed a bug where using `--exit-code-from` with `up` would fail if Compose
  was installed in a Python 3 environment

- Fixed a bug where recreating containers using a combination of `tmpfs` and
  `volumes` would result in an invalid config state


Thanks to @sdurrheimer, @albers, @kinghuang, @fate-grand-order and @brainnwaveDuncan for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/6245167/assets,https://api.github.com/repos/docker/compose/releases/6245167,master,https://api.github.com/repos/docker/compose/tarball/1.13.0,https://github.com/docker/compose/releases/tag/1.13.0,https://api.github.com/repos/docker/compose/zipball/1.13.0,1.13.0,False,False
6154447,2017-04-21T21:49:04Z,2017-04-24T18:13:38Z,1.13.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.13.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### Breaking changes

- `docker-compose up` now resets a service's scaling to its default value.
  You can use the newly introduced `--scale` option to specify a custom
  scale value

### New features

#### Compose file version 2.2

- Introduced version 2.2 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.13.0 or above

- Added support for `init` in service definitions.

- Added support for `scale` in service definitions. The configuration's value
  can be overridden using the `--scale` flag in `docker-compose up`.
  Please note that the `scale` command is disabled for this file format

#### Compose file version 2.x

- Added support for `options` in the `ipam` section of network definitions

### Bugfixes

- Fixed a bug where paths provided to compose via the `-f` option were not
  being resolved properly

- Fixed a bug where the `ext_ip::target_port` notation in the ports section
  was incorrectly marked as invalid

- Fixed an issue where the `exec` command would sometimes not return control
  to the terminal when using the `-d` flag

- Fixed a bug where secrets were missing from the output of the `config`
  command for v3.2 files

- Fixed an issue where `docker-compose` would hang if no internet connection
  was available

- Fixed an issue where paths containing unicode characters passed via the `-f`
  flag were causing Compose to crash

Thanks to @sdurrheimer, @albers, @kinghuang and @fate-grand-order for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/6154447/assets,https://api.github.com/repos/docker/compose/releases/6154447,master,https://api.github.com/repos/docker/compose/tarball/1.13.0-rc1,https://github.com/docker/compose/releases/tag/1.13.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.13.0-rc1,1.13.0-rc1,False,True
5961838,2017-04-03T20:19:16Z,2017-04-05T18:11:50Z,1.12.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.2

- Introduced version 3.2 of the `docker-compose.yml` specification.

- Added support for `cache_from` in the `build` section of services

- Added support for the new expanded ports syntax in service definitions

- Added support for the new expanded volumes syntax in service definitions

#### Compose file version 2.1

- Added support for `pids_limit` in service definitions

#### Compose file version 2.0 and up

- Added `--volumes` option to `docker-compose config` that lists named
  volumes declared for that project

- Added support for `mem_reservation` in service definitions (2.x only)

- Added support for `dns_opt` in service definitions (2.x only)

#### All formats

- Added a new `docker-compose images` command that lists images used by
  the current project's containers

- Added a `--stop` (shorthand `-s`) option to `docker-compose rm` that stops
  the running containers before removing them

- Added a `--resolve-image-digests` option to `docker-compose config` that
  pins the image version for each service to a permanent digest

- Added a `--exit-code-from SERVICE` option to `docker-compose up`. When
  used, `docker-compose` will exit on any container's exit with the code
  corresponding to the specified service's exit code

- Added a `--parallel` option to `docker-compose pull` that enables images
  for multiple services to be pulled simultaneously

- Added a `--build-arg` option to `docker-compose build`

- Added a `--volume <volume_mapping>` (shorthand `-v`) option to
  `docker-compose run` to declare runtime volumes to be mounted

- Added a `--project-directory PATH` option to `docker-compose` that will
  affect path resolution for the project

- When using `--abort-on-container-exit` in `docker-compose up`, the exit
  code for the container that caused the abort will be the exit code of
  the `docker-compose up` command

- Users can now configure which path separator character they want to use
  to separate the `COMPOSE_FILE` environment value using the
  `COMPOSE_PATH_SEPARATOR` environment variable

- Added support for port range to single port in port mappings
  (e.g. `8000-8010:80`)

### Bugfixes

- `docker-compose run --rm` now removes anonymous volumes after execution,
  matching the behavior of `docker run --rm`.

- Fixed a bug where override files containing port lists would cause a
  TypeError to be raised

- Fixed a bug where scaling services up or down would sometimes re-use
  obsolete containers

- Fixed a bug where the output of `docker-compose config` would be invalid
  if the project declared anonymous volumes

- Variable interpolation now properly occurs in the `secrets` section of
  the Compose file

- The `secrets` section now properly appears in the output of
  `docker-compose config`

- Fixed a bug where changes to some networks properties would not be
  detected against previously created networks

- Fixed a bug where `docker-compose` would crash when trying to write into
  a closed pipe

- Fixed an issue where Compose would not pick up on the value of
  `COMPOSE_TLS_VERSION` when used in combination with command-line TLS flags

Thanks to  @albers, @edsrzf, @kinghuang, @sdurrheimer, @null, @dnephin, @xulike666, @jyapayne, @tcc-jenkins, @JesusTinoco, @jcberthon, @fate-grand-order, @Vehsamrak, @rawkode, @pts-kevinqiu, @nkovacs, @nbarbey, @milin, @melkor217, @marcosnils, @lindt, @Knetic, @kevinetc123, @hholst80, @eddwardo, @dguo, @dbonev, @dattran-vn01, @bheesham and @allandequeiroz for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5961838/assets,https://api.github.com/repos/docker/compose/releases/5961838,master,https://api.github.com/repos/docker/compose/tarball/1.12.0,https://github.com/docker/compose/releases/tag/1.12.0,https://api.github.com/repos/docker/compose/zipball/1.12.0,1.12.0,False,False
5884780,2017-03-24T00:53:32Z,2017-03-27T19:08:08Z,1.12.0-rc2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.12.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 &ndash; 3.2 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.2

- Introduced version 3.2 of the `docker-compose.yml` specification.

- Added support for `cache_from` in the `build` section of services

- Added support for the new expanded ports syntax in service definitions

- Added support for the new expanded volumes syntax in service definitions

#### Compose file version 2.1

- Added support for `pids_limit` in service definitions

#### Compose file version 2.0 and up

- Added `--volumes` option to `docker-compose config` that lists named
  volumes declared for that project

- Added support for `mem_reservation` in service definitions (2.x only)

- Added support for `dns_opt` in service definitions (2.x only)

#### All formats

- Added a new `docker-compose images` command that lists images used by
  the current project's containers

- Added a `--stop` (shorthand `-s`) option to `docker-compose rm` that stops
  the running containers before removing them

- Added a `--resolve-image-digests` option to `docker-compose config` that
  pins the image version for each service to a permanent digest

- Added a `--exit-code-from SERVICE` option to `docker-compose up`. When
  used, `docker-compose` will exit on any container's exit with the code
  corresponding to the specified service's exit code

- Added a `--parallel` option to `docker-compose pull` that enables images
  for multiple services to be pulled simultaneously

- Added a `--build-arg` option to `docker-compose build`

- Added a `--volume <volume_mapping>` (shorthand `-v`) option to
  `docker-compose run` to declare runtime volumes to be mounted

- Added a `--project-directory PATH` option to `docker-compose` that will
  affect path resolution for the project

- When using `--abort-on-container-exit` in `docker-compose up`, the exit
  code for the container that caused the abort will be the exit code of
  the `docker-compose up` command

- Users can now configure which path separator character they want to use
  to separate the `COMPOSE_FILE` environment value using the
  `COMPOSE_PATH_SEPARATOR` environment variable

- Added support for port range to single port in port mappings
  (e.g. `8000-8010:80`)

### Bugfixes

- `docker-compose run --rm` now removes anonymous volumes after execution,
  matching the behavior of `docker run --rm`.

- Fixed a bug where override files containing port lists would cause a
  TypeError to be raised

- Fixed a bug where scaling services up or down would sometimes re-use
  obsolete containers

- Fixed a bug where the output of `docker-compose config` would be invalid
  if the project declared anonymous volumes

- Variable interpolation now properly occurs in the `secrets` section of
  the Compose file

- The `secrets` section now properly appears in the output of
  `docker-compose config`

- Fixed a bug where changes to some networks properties would not be
  detected against previously created networks

- Fixed a bug where `docker-compose` would crash when trying to write into
  a closed pipe

- Fixed an issue where Compose would not pick up on the value of
  COMPOSE_TLS_VERSION when used in combination with command-line TLS flags

Thanks to @edsrzf, @albers, @kinghuang, @dnephin, @xulike666, @jyapayne, @tcc-jenkins, @JesusTinoco, @jcberthon, @Vehsamrak, @rawkode, @pts-kevinqiu, @nkovacs, @nbarbey, @milin, @melkor217, @marcosnils, @lindt, @Knetic, @kevinetc123, @hholst80, @fate-grand-order, @eddwardo, @dguo, @dbonev, @dattran-vn01, @bheesham and @allandequeiroz for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5884780/assets,https://api.github.com/repos/docker/compose/releases/5884780,master,https://api.github.com/repos/docker/compose/tarball/1.12.0-rc2,https://github.com/docker/compose/releases/tag/1.12.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.12.0-rc2,1.12.0-rc2,False,True
5807566,2017-03-18T23:48:10Z,2017-03-20T19:05:54Z,1.12.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.12.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 ; 3.1 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### New features

#### Compose file version 3.2

- Introduced version 3.2 of the `docker-compose.yml` specification.

- Added support for `cache_from` in the `build` section of services

- Added support for the new expanded ports syntax in service definitions

- Added support for the new expanded volumes syntax in service definitions

#### Compose file version 2.1

- Added support for `pids_limit` in service definitions

#### Compose file version 2.0 and up

- Added `--volumes` option to `docker-compose config` that lists named
  volumes declared for that project

- Added support for `mem_reservation` in service definitions (2.x only)

- Added support for `dns_opt` in service definitions (2.x only)

#### All formats

- Added a new `docker-compose images` command that lists images used by
  the current project's containers

- Added a `--stop` (shorthand `-s`) option to `docker-compose rm` that stops
  the running containers before removing them

- Added a `--resolve-image-digests` option to `docker-compose config` that
  pins the image version for each service to a permanent digest

- Added a `--exit-code-from SERVICE` option to `docker-compose up`. When
  used, `docker-compose` will exit on any container's exit with the code
  corresponding to the specified service's exit code

- Added a `--parallel` option to `docker-compose pull` that enables images
  for multiple services to be pulled simultaneously

- Added a `--build-arg` option to `docker-compose build`

- Added a `--volume <volume_mapping>` (shorthand `-v`) option to
  `docker-compose run` to declare runtime volumes to be mounted

- Added a `--project-directory PATH` option to `docker-compose` that will
  affect path resolution for the project

- When using `--abort-on-container-exit` in `docker-compose up`, the exit
  code for the container that caused the abort will be the exit code of
  the `docker-compose up` command

- Users can now configure which path separator character they want to use
  to separate the `COMPOSE_FILE` environment value using the
  `COMPOSE_PATH_SEPARATOR` environment variable

- Added support for port range to single port in port mappings
  (e.g. `8000-8010:80`)

### Bugfixes

- `docker-compose run --rm` now removes anonymous volumes after execution,
  matching the behavior of `docker run --rm`.

- Fixed a bug where override files containing port lists would cause a
  TypeError to be raised

- Fixed a bug where scaling services up or down would sometimes re-use
  obsolete containers

- Fixed a bug where the output of `docker-compose config` would be invalid
  if the project declared anonymous volumes

- Variable interpolation now properly occurs in the `secrets` section of
  the Compose file

- The `secrets` section now properly appears in the output of
  `docker-compose config`

- Fixed a bug where changes to some networks properties would not be
  detected against previously created networks

- Fixed a bug where `docker-compose` would crash when trying to write into
  a closed pipe

Thanks to @edsrzf, @albers, @kinghuang, @dnephin, @xulike666, @jyapayne, @tcc-jenkins, @JesusTinoco, @jcberthon, @Vehsamrak, @rawkode, @pts-kevinqiu, @nkovacs, @nbarbey, @milin, @melkor217, @marcosnils, @lindt, @Knetic, @kevinetc123, @hholst80, @fate-grand-order, @eddwardo, @dguo, @dbonev, @dattran-vn01, @bheesham, @allandequeiroz for contributing to this release!",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5807566/assets,https://api.github.com/repos/docker/compose/releases/5807566,master,https://api.github.com/repos/docker/compose/tarball/1.12.0-rc1,https://github.com/docker/compose/releases/tag/1.12.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.12.0-rc1,1.12.0-rc1,False,True
5528618,2017-02-17T01:16:07Z,2017-02-22T00:02:30Z,1.11.2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 ; 3.1 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### Bugfixes
- Fixed a bug that was preventing secrets configuration from being
  loaded properly
- Fixed a bug where the `docker-compose config` command would fail
  if the config file contained secrets definitions
- Fixed an issue where Compose on some linux distributions would
  pick up and load an outdated version of the requests library
- Fixed an issue where socket-type files inside a build folder
  would cause `docker-compose` to crash when trying to build that
  service
- Fixed an issue where recursive wildcard patterns `**` were not being
  recognized in `.dockerignore` files.

Thanks to @dnephin for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5528618/assets,https://api.github.com/repos/docker/compose/releases/5528618,master,https://api.github.com/repos/docker/compose/tarball/1.11.2,https://github.com/docker/compose/releases/tag/1.11.2,https://api.github.com/repos/docker/compose/zipball/1.11.2,1.11.2,False,False
5411903,2017-02-09T18:18:13Z,2017-02-09T20:36:25Z,1.11.1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.11.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 ; 3.1 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Changes

### Bugfixes
- Fixed a bug where the 3.1 file format was not being recognized as valid
  by the Compose parser

Thanks to @dnephin for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5411903/assets,https://api.github.com/repos/docker/compose/releases/5411903,master,https://api.github.com/repos/docker/compose/tarball/1.11.1,https://github.com/docker/compose/releases/tag/1.11.1,https://api.github.com/repos/docker/compose/zipball/1.11.1,1.11.1,False,False
5400161,2017-02-08T19:30:29Z,2017-02-08T21:40:49Z,1.11.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.11.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 ; 3.1 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

### New Features

#### Compose file version 3.1
- Introduced version 3.1 of the `docker-compose.yml` specification. This
  version requires Docker Engine 1.13.0 or above. It introduces support
  for secrets. See the documentation for more information

#### Compose file version 2.0 and up
- Introduced the `docker-compose top` command that displays processes running
  for the different services managed by Compose.

### Bugfixes
- Fixed a bug where extending a service defining a healthcheck dictionary
  would cause `docker-compose` to error out.
- Fixed an issue where the `pid` entry in a service definition was being
  ignored when using multiple Compose files.

Thanks to @dnephin, @mattjbray, @xulike666, @urda, @tntC4stl3, @pts-kevinqiu, @muicoder, @graingert, @ankon for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5400161/assets,https://api.github.com/repos/docker/compose/releases/5400161,master,https://api.github.com/repos/docker/compose/tarball/1.11.0,https://github.com/docker/compose/releases/tag/1.11.0,https://api.github.com/repos/docker/compose/zipball/1.11.0,1.11.0,False,False
5376503,2017-02-03T23:27:42Z,2017-02-06T23:03:22Z,1.11.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.11.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 ; 3.1 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

### New Features

#### Compose file version 3.1
- Introduced version 3.1 of the `docker-compose.yml` specification. This
  version requires Docker Engine 1.13.0 or above. It introduces support
  for secrets. See the documentation for more information

#### Compose file version 2.0 and up
- Introduced the `docker-compose top` command that displays processes running
  for the different services managed by Compose.

### Bugfixes
- Fixed a bug where extending a service defining a healthcheck dictionary
  would cause `docker-compose` to error out.
- Fixed an issue where the `pid` entry in a service definition was being
  ignored when using multiple Compose files.

Thanks to @dnephin, @mattjbray, @xulike666, @urda, @tntC4stl3, @pts-kevinqiu, @muicoder, @graingert, @ankon for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5376503/assets,https://api.github.com/repos/docker/compose/releases/5376503,master,https://api.github.com/repos/docker/compose/tarball/1.11.0-rc1,https://github.com/docker/compose/releases/tag/1.11.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.11.0-rc1,1.11.0-rc1,False,True
5333120,2017-01-31T23:39:34Z,2017-02-01T21:54:10Z,1.10.1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.10.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Latest changes

### Bugfixes
- Fixed an issue where presence of older versions of the docker-py
  package would cause unexpected crashes while running Compose
- Fixed an issue where healthcheck dependencies would be lost when
  using multiple compose files for a project
- Fixed a few issues that made the output of the `config` command
  invalid
- Fixed an issue where adding volume labels to v3 Compose files would
  result in an error
- Fixed an issue on Windows where build context paths containing unicode
  characters were being improperly encoded
- Fixed a bug where Compose would occasionally crash while streaming logs
  when containers would stop or restart

Thanks to @dnephin  for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5333120/assets,https://api.github.com/repos/docker/compose/releases/5333120,master,https://api.github.com/repos/docker/compose/tarball/1.10.1,https://github.com/docker/compose/releases/tag/1.10.1,https://api.github.com/repos/docker/compose/zipball/1.10.1,1.10.1,False,False
5187486,2017-01-17T21:27:49Z,2017-01-17T23:25:19Z,1.10.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Compose file format compatibility matrix

| Compose file format | Docker Engine |
| --- | --- |
| 3.0 | 1.13.0+ |
| 2.1 | 1.12.0+ |
| 2.0 | 1.10.0+ |
| 1.0 | 1.9.1+ |

## Latest changes

### New Features

#### Compose file version 3.0
- Introduced version 3.0 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.13 or above and is
  specifically designed to work with the `docker stack` commands.

#### Compose file version 2.1 and up
- Healthcheck configuration can now be done in the service definition using
  the `healthcheck` parameter
- Containers dependencies can now be set up to wait on positive healthchecks
  when declared using `depends_on`. See the documentation for the updated
  syntax.
  **Note:** This feature will not be ported to version 3 Compose files.
- Added support for the `sysctls` parameter in service definitions
- Added support for the `userns_mode` parameter in service definitions
- Compose now adds identifying labels to networks and volumes it creates

#### Compose file version 2.0 and up
- Added support for the `stop_grace_period` option in service definitions.

### Bugfixes
- Colored output now works properly on Windows.
- Fixed a bug where docker-compose run would fail to set up link aliases
  in interactive mode on Windows.
- Networks created by Compose are now always made attachable
  (Compose files v2.1 and up).
- Fixed a bug where falsy values of `COMPOSE_CONVERT_WINDOWS_PATHS`
  (`0`, `false`, empty value) were being interpreted as true.
- Fixed a bug where forward slashes in some .dockerignore patterns weren't
  being parsed correctly on Windows

Thanks to @aanand, @dnephin, @mikedougherty, @graingert, @tntC4stl3, @strayobject, @NiR-, @lawliet89, @jtakkala, @ijc25 for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5187486/assets,https://api.github.com/repos/docker/compose/releases/5187486,master,https://api.github.com/repos/docker/compose/tarball/1.10.0,https://github.com/docker/compose/releases/tag/1.10.0,https://api.github.com/repos/docker/compose/zipball/1.10.0,1.10.0,False,False
5122934,2017-01-11T00:47:40Z,2017-01-11T19:35:28Z,1.10.0-rc2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.10.0-rc2 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.10.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

### New Features

#### Compose file version 3.0
- Introduced version 3.0 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.13 or above and is
  specifically designed to work with the `docker stack` commands.

#### Compose file version 2.1 and up
- Healthcheck configuration can now be done in the service definition using
  the `healthcheck` parameter
- Containers dependencies can now be set up to wait on positive healthchecks
  when declared using `depends_on`. See the documentation for the updated
  syntax.
  **Note:** This feature will not be ported to version 3 Compose files.
- Added support for the `sysctls` parameter in service definitions
- Added support for the `userns_mode` parameter in service definitions
- Compose now adds identifying labels to networks and volumes it creates

#### Compose file version 2.0 and up
- Added support for the `stop_grace_period` option in service definitions.

### Bugfixes
- Colored output now works properly on Windows.
- Fixed a bug where docker-compose run would fail to set up link aliases
  in interactive mode on Windows.
- Networks created by Compose are now always made attachable
  (Compose files v2.1 and up).
- Fixed a bug where falsy values of `COMPOSE_CONVERT_WINDOWS_PATHS`
  (`0`, `false`, empty value) were being interpreted as true.
- Fixed a bug where forward slashes in some .dockerignore patterns weren't
  being parsed correctly on Windows

Thanks to @aanand, @dnephin, @mikedougherty, @graingert, @tntC4stl3, @strayobject, @NiR-, @lawliet89, @jtakkala, @ijc25 for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5122934/assets,https://api.github.com/repos/docker/compose/releases/5122934,master,https://api.github.com/repos/docker/compose/tarball/1.10.0-rc2,https://github.com/docker/compose/releases/tag/1.10.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.10.0-rc2,1.10.0-rc2,False,True
5071395,2017-01-04T21:54:11Z,2017-01-04T22:54:14Z,1.10.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.10.0-rc1 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.10.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

### New Features

#### Compose file version 3.0
- Introduced version 3.0 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.13 or above and is
  specifically designed to work with the `docker stack` commands.
  - Added support for the `stop_grace_period` option in service definitions.

#### Compose file version 2.1 and up
- Healthcheck configuration can now be done in the service definition using
  the `healthcheck` parameter
- Containers dependencies can now be set up to wait on positive healthchecks
  when declared using `depends_on`. See the documentation for the updated
  syntax.
  **Note:** This feature will not be ported to version 3 Compose files.
- Added support for the `sysctls` parameter in service definitions
- Added support for the `userns_mode` parameter in service definitions
- Compose now adds identifying labels to networks and volumes it creates

### Bugfixes
- Colored output now works properly on Windows.
- Fixed a bug where docker-compose run would fail to set up link aliases
  in interactive mode on Windows.
- Networks created by Compose are now always made attachable
  (Compose files v2.1 and up).

Thanks to @aanand, @dnephin, @mikedougherty, @strayobject, @NiR-, @lawliet89, @jtakkala, @ijc25, @graingert for contributing to this release!
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/5071395/assets,https://api.github.com/repos/docker/compose/releases/5071395,master,https://api.github.com/repos/docker/compose/tarball/1.10.0-rc1,https://github.com/docker/compose/releases/tag/1.10.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.10.0-rc1,1.10.0-rc1,False,True
4669284,2016-11-15T23:10:36Z,2016-11-16T19:10:15Z,1.9.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.9.0 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.9.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking changes**
- When using Compose with Docker Toolbox/Machine on Windows, volume paths are
  no longer converted from `C:\Users` to `/c/Users`-style by default. To
  re-enable this conversion so that your volumes keep working, set the
  environment variable `COMPOSE_CONVERT_WINDOWS_PATHS=1`. Users of
  Docker for Windows are not affected and do not need to set the variable.

New Features
- Interactive mode for `docker-compose run` and `docker-compose exec` is
  now supported on Windows platforms. Please note that the `docker` binary
  is required to be present on the system for this feature to work.
- Introduced version 2.1 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.12 or above.
  - Added support for setting volume labels and network labels in
    `docker-compose.yml`.
  - Added support for the `isolation` parameter in service definitions.
  - Added support for link-local IPs in the service networks definitions.
  - Added support for shell-style inline defaults in variable interpolation.
    The supported forms are `${FOO-default}` (fall back if FOO is unset) and
    `${FOO:-default}` (fall back if FOO is unset or empty).
- Added support for the `group_add` and `oom_score_adj` parameters in
  service definitions.
- Added support for the `internal` and `enable_ipv6` parameters in network
  definitions.
- Compose now defaults to using the `npipe` protocol on Windows.
- Overriding a `logging` configuration will now properly merge the `options`
  mappings if the `driver` values do not conflict.

Bug Fixes
- Fixed several bugs related to `npipe` protocol support on Windows.
- Fixed an issue with Windows paths being incorrectly converted when
  using Docker on Windows Server.
- Fixed a bug where an empty `restart` value would sometimes result in an
  exception being raised.
- Fixed an issue where service logs containing unicode characters would
  sometimes cause an error to occur.
- Fixed a bug where unicode values in environment variables would sometimes
  raise a unicode exception when retrieved.
- Fixed an issue where Compose would incorrectly detect a configuration
  mismatch for overlay networks.

Thanks @aanand, @dnephin, @aeriksson, @bfirsh, @londoncalling, @ijc25, @SvenDowideit, @leonhartX, @albers, @Knetic, @johndmulhausen, @jgiannuzzi, @TomasTomecek, @staticshock, @stakodiak, @realityone, @mikedougherty, @jgsqware, @jfroche, @jamesottaway, @dbdd4us, @davidjb, @chrisclark, @allencloud, @adamchainz !
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4669284/assets,https://api.github.com/repos/docker/compose/releases/4669284,master,https://api.github.com/repos/docker/compose/tarball/1.9.0,https://github.com/docker/compose/releases/tag/1.9.0,https://api.github.com/repos/docker/compose/zipball/1.9.0,1.9.0,False,False
4608844,2016-11-08T23:22:19Z,2016-11-09T00:28:36Z,1.9.0-rc4,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.9.0-rc4 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.9.0-rc4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking changes**
- When using Compose with Docker Toolbox/Machine on Windows, volume paths are
  no longer converted from `C:\Users` to `/c/Users`-style by default. To
  re-enable this conversion so that your volumes keep working, set the
  environment variable `COMPOSE_CONVERT_WINDOWS_PATHS=1`. Users of
  Docker for Windows are not affected and do not need to set the variable.

New Features
- Interactive mode for `docker-compose run` and `docker-compose exec` is
  now supported on Windows platforms. Please note that the `docker` binary
  is required to be present on the system for this feature to work.
- Introduced version 2.1 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.12 or above.
  - Added support for setting volume labels and network labels in
    `docker-compose.yml`.
  - Added support for the `isolation` parameter in service definitions.
  - Added support for link-local IPs in the service networks definitions.
  - Added support for shell-style inline defaults in variable interpolation.
    The supported forms are `${FOO-default}` (fall back if FOO is unset) and
    `${FOO:-default}` (fall back if FOO is unset or empty).
- Added support for the `group_add` and `oom_score_adj` parameters in
  service definitions.
- Added support for the `internal` and `enable_ipv6` parameters in network
  definitions.
- Compose now defaults to using the `npipe` protocol on Windows.
- Overriding a `logging` configuration will now properly merge the `options`
  mappings if the `driver` values do not conflict.

Bug Fixes
- Fixed several bugs related to `npipe` protocol support on Windows.
- Fixed an issue with Windows paths being incorrectly converted when
  using Docker on Windows Server.
- Fixed a bug where an empty `restart` value would sometimes result in an
  exception being raised.
- Fixed an issue where service logs containing unicode characters would
  sometimes cause an error to occur.
- Fixed a bug where unicode values in environment variables would sometimes
  raise a unicode exception when retrieved.
- Fixed an issue where Compose would incorrectly detect a configuration
  mismatch for overlay networks.

Thanks@aanand, @dnephin, @aeriksson, @bfirsh, @londoncalling, @ijc25, @SvenDowideit, @leonhartX, @albers, @Knetic, @johndmulhausen, @jgiannuzzi, @TomasTomecek, @staticshock, @stakodiak, @realityone, @mikedougherty, @jgsqware, @jfroche, @jamesottaway, @dbdd4us, @davidjb, @chrisclark, @allencloud, @adamchainz !
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4608844/assets,https://api.github.com/repos/docker/compose/releases/4608844,master,https://api.github.com/repos/docker/compose/tarball/1.9.0-rc4,https://github.com/docker/compose/releases/tag/1.9.0-rc4,https://api.github.com/repos/docker/compose/zipball/1.9.0-rc4,1.9.0-rc4,False,True
4564622,2016-11-03T20:49:03Z,2016-11-03T21:42:10Z,1.9.0-rc3,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.9.0-rc3 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.9.0-rc3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking changes**
- When using Compose with Docker Toolbox/Machine on Windows, volume paths are
  no longer converted from `C:\Users` to `/c/Users`-style by default. To
  re-enable this conversion so that your volumes keep working, set the
  environment variable `COMPOSE_CONVERT_WINDOWS_PATHS=1`. Users of
  Docker for Windows are not affected and do not need to set the variable.

New Features
- Interactive mode for `docker-compose run` and `docker-compose exec` is
  now supported on Windows platforms. Please note that the `docker` binary
  is required to be present on the system for this feature to work.
- Introduced version 2.1 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.12 or above.
  - Added support for setting volume labels and network labels in
    `docker-compose.yml`.
  - Added support for the `isolation` parameter in service definitions.
  - Added support for link-local IPs in the service networks definitions.
  - Added support for shell-style inline defaults in variable interpolation.
    The supported forms are `${FOO-default}` (fall back if FOO is unset) and
    `${FOO:-default}` (fall back if FOO is unset or empty).
- Added support for the `group_add` and `oom_score_adj` parameters in
  service definitions.
- Added support for the `internal` and `enable_ipv6` parameters in network
  definitions.
- Compose now defaults to using the `npipe` protocol on Windows.
- Overriding a `logging` configuration will now properly merge the `options`
  mappings if the `driver` values do not conflict.

Bug Fixes
- Fixed several bugs related to `npipe` protocol support on Windows.
- Fixed an issue with Windows paths being incorrectly converted when
  using Docker on Windows Server.
- Fixed a bug where an empty `restart` value would sometimes result in an
  exception being raised.
- Fixed an issue where service logs containing unicode characters would
  sometimes cause an error to occur.
- Fixed a bug where unicode values in environment variables would sometimes
  raise a unicode exception when retrieved.
- Fixed an issue where Compose would incorrectly detect a configuration
  mismatch for overlay networks.

Thanks@aanand, @dnephin, @aeriksson, @bfirsh, @londoncalling, @ijc25, @SvenDowideit, @leonhartX, @albers, @Knetic, @johndmulhausen, @jgiannuzzi, @TomasTomecek, @staticshock, @stakodiak, @realityone, @mikedougherty, @jgsqware, @jfroche, @jamesottaway, @dbdd4us, @davidjb, @chrisclark, @allencloud, @adamchainz !
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4564622/assets,https://api.github.com/repos/docker/compose/releases/4564622,master,https://api.github.com/repos/docker/compose/tarball/1.9.0-rc3,https://github.com/docker/compose/releases/tag/1.9.0-rc3,https://api.github.com/repos/docker/compose/zipball/1.9.0-rc3,1.9.0-rc3,False,True
4505289,2016-10-27T19:49:26Z,2016-10-27T22:27:30Z,1.9.0-rc2,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.9.0-rc2 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.9.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking changes**
- When using Compose with Docker Toolbox/Machine on Windows, volume paths are
  no longer converted from `C:\Users` to `/c/Users`-style by default. To
  re-enable this conversion so that your volumes keep working, set the
  environment variable `COMPOSE_CONVERT_WINDOWS_PATHS=1`. Users of
  Docker for Windows are not affected and do not need to set the variable.

New Features
- Interactive mode for `docker-compose run` and `docker-compose exec` is
  now supported on Windows platforms. Please note that the `docker` binary
  is required to be present on the system for this feature to work.
- Introduced version 2.1 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.12 or above.
  - Added support for setting volume labels and network labels in
    `docker-compose.yml`.
  - Added support for the `isolation` parameter in service definitions.
  - Added support for link-local IPs in the service networks definitions.
  - Added support for shell-style inline defaults in variable interpolation.
    The supported forms are `${FOO-default}` (fall back if FOO is unset) and
    `${FOO:-default}` (fall back if FOO is unset or empty).
- Added support for the `group_add` and `oom_score_adj` parameters in
  service definitions.
- Added support for the `internal` and `enable_ipv6` parameters in network
  definitions.
- Compose now defaults to using the `npipe` protocol on Windows.
- Overriding a `logging` configuration will now properly merge the `options`
  mappings if the `driver` values do not conflict.

Bug Fixes
- Fixed several bugs related to `npipe` protocol support on Windows.
- Fixed an issue with Windows paths being incorrectly converted when
  using Docker on Windows Server.
- Fixed a bug where an empty `restart` value would sometimes result in an
  exception being raised.
- Fixed an issue where service logs containing unicode characters would
  sometimes cause an error to occur.
- Fixed a bug where unicode values in environment variables would sometimes
  raise a unicode exception when retrieved.

Thanks @aanand, @dnephin, @aeriksson, @bfirsh, @londoncalling, @ijc25, @SvenDowideit, @leonhartX, @albers, @Knetic, @johndmulhausen, @jgiannuzzi, @TomasTomecek, @staticshock, @stakodiak, @realityone, @jgsqware, @jfroche, @jamesottaway, @dbdd4us, @davidjb, @chrisclark, @allencloud, @adamchainz !
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4505289/assets,https://api.github.com/repos/docker/compose/releases/4505289,master,https://api.github.com/repos/docker/compose/tarball/1.9.0-rc2,https://github.com/docker/compose/releases/tag/1.9.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.9.0-rc2,1.9.0-rc2,False,True
4445557,2016-10-20T19:05:20Z,2016-10-20T21:54:29Z,1.9.0-rc1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.9.0-rc1 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.9.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking changes**
- When using Compose with Docker Toolbox/Machine on Windows, volume paths are
  no longer converted from `C:\Users` to `/c/Users`-style by default. To
  re-enable this conversion so that your volumes keep working, set the
  environment variable `COMPOSE_CONVERT_WINDOWS_PATHS=1`. Users of
  Docker for Windows are not affected and do not need to set the variable.

New Features
- Interactive mode for `docker-compose run` and `docker-compose exec` is
  now supported on Windows platforms. Please note that the `docker` binary
  is required to be present on the system for this feature to work.
- Introduced version 2.1 of the `docker-compose.yml` specification. This
  version requires to be used with Docker Engine 1.12 or above.
  - Added support for setting volume labels and network labels in
    `docker-compose.yml`.
  - Added support for the `isolation` parameter in service definitions.
  - Added support for link-local IPs in the service networks definitions.
  - Added support for shell-style inline defaults in variable interpolation.
    The supported forms are `${FOO-default}` (fall back if FOO is unset) and
    `${FOO:-default}` (fall back if FOO is unset or empty).
- Added support for the `group_add` and `oom_score_adj` parameters in
  service definitions.
- Added support for the `internal` and `enable_ipv6` parameters in network
  definitions.
- Compose now defaults to using the `npipe` protocol on Windows.
- Overriding a `logging` configuration will now properly merge the `options`
  mappings if the `driver` values do not conflict.

Bug Fixes
- Fixed several bugs related to `npipe` protocol support on Windows.
- Fixed an issue with Windows paths being incorrectly converted when
  using Docker on Windows Server.
- Fixed a bug where an empty `restart` value would sometimes result in an
  exception being raised.
- Fixed an issue where service logs containing unicode characters would
  sometimes cause an error to occur.
- Fixed a bug where unicode values in environment variables would sometimes
  raise a unicode exception when retrieved.

Thanks @aanand, @dnephin, @aeriksson, @bfirsh, @londoncalling, @ijc25, @SvenDowideit, @leonhartX, @albers, @Knetic, @johndmulhausen, @jgiannuzzi, @TomasTomecek, @staticshock, @stakodiak, @realityone, @jgsqware, @jfroche, @jamesottaway, @dbdd4us, @davidjb, @chrisclark, @allencloud, @adamchainz !
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4445557/assets,https://api.github.com/repos/docker/compose/releases/4445557,master,https://api.github.com/repos/docker/compose/tarball/1.9.0-rc1,https://github.com/docker/compose/releases/tag/1.9.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.9.0-rc1,1.9.0-rc1,False,True
4206408,2016-09-21T22:06:19Z,2016-09-22T18:28:02Z,1.8.1,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.8.1 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.8.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

Bug Fixes
- Fixed a bug where users using a credentials store were not able
  to access their private images.
- Fixed a bug where users using identity tokens to authenticate
  were not able to access their private images.
- Fixed a bug where an `HttpHeaders` entry in the docker configuration
  file would cause Compose to crash when trying to build an image.
- Fixed a few bugs related to the handling of Windows paths in volume
  binding declarations.
- Fixed a bug where Compose would sometimes crash while trying to
  read a streaming response from the engine.
- Fixed an issue where Compose would crash when encountering an API error
  while streaming container logs.
- Fixed an issue where Compose would erroneously try to output logs from
  drivers not handled by the Engine's API.
- Fixed a bug where options from the `docker-machine config` command would
  not be properly interpreted by Compose.
- Fixed a bug where the connection to the Docker Engine would
  sometimes fail when running a large number of services simultaneously.
- Fixed an issue where Compose would sometimes print a misleading
  suggestion message when running the `bundle` command.
- Fixed a bug where connection errors would not be handled properly by
  Compose during the project initialization phase.
- Fixed a bug where a misleading error would appear when encountering
  a connection timeout.

Thanks @aanand, @jgsqware 
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/4206408/assets,https://api.github.com/repos/docker/compose/releases/4206408,bump-1.8.1,https://api.github.com/repos/docker/compose/tarball/1.8.1,https://github.com/docker/compose/releases/tag/1.8.1,https://api.github.com/repos/docker/compose/zipball/1.8.1,1.8.1,False,False
3754370,2016-07-27T19:40:07Z,2016-07-27T19:50:42Z,1.8.0,"If you're a Mac or Windows user, the best way to install Compose and keep it up-to-date is **[Docker for Mac and Windows](https://www.docker.com/products/docker)**.

Note that Compose 1.8.0 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1. Docker for Mac and Windows will automatically install the latest version of Docker Engine for you.

Alternatively, you can use the usual commands to install or upgrade Compose:

```
curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking Changes**
- As announced in 1.7.0, `docker-compose rm` now removes containers
  created by `docker-compose run` by default.
- Setting `entrypoint` on a service now empties out any default
  command that was set on the image (i.e. any `CMD` instruction in the
  Dockerfile used to build it). This makes it consistent with
  the `--entrypoint` flag to `docker run`.

New Features
- Added `docker-compose bundle`, a command that builds a bundle file
  to be consumed by the new _Docker Stack_ commands in Docker 1.12.
- Added `docker-compose push`, a command that pushes service images
  to a registry.
- Compose now supports specifying a custom TLS version for
  interaction with the Docker Engine using the `COMPOSE_TLS_VERSION`
  environment variable.

Bug Fixes
- Fixed a bug where Compose would erroneously try to read `.env`
  at the project's root when it is a directory.
- `docker-compose run -e VAR` now passes `VAR` through from the shell
  to the container, as with `docker run -e VAR`.
- Improved config merging when multiple compose files are involved
  for several service sub-keys.
- Fixed a bug where volume mappings containing Windows drives would
  sometimes be parsed incorrectly.
- Fixed a bug in Windows environment where volume mappings of the
  host's root directory would be parsed incorrectly.
- Fixed a bug where `docker-compose config` would ouput an invalid
  Compose file if external networks were specified.
- Fixed an issue where unset buildargs would be assigned a string
  containing `'None'` instead of the expected empty value.
- Fixed a bug where yes/no prompts on Windows would not show before
  receiving input.
- Fixed a bug where trying to `docker-compose exec` on Windows
  without the `-d` option would exit with a stacktrace. This will
  still fail for the time being, but should do so gracefully.
- Fixed a bug where errors during `docker-compose up` would show
  an unrelated stacktrace at the end of the process.
- `docker-compose create` and `docker-compose start` show more
  descriptive error messages when something goes wrong.

Thanks @aanand, @dnephin, @bfirsh, @aeriksson, @SvenDowideit, @londoncalling, @ijc25, @johnharris85, @albers, @leonhartX, @Andrey9kin, @jgiannuzzi, @yorkedork, @werehuman, @twitherspoon, @TomasTomecek, @staticshock, @stakodiak, @spectralsun, @sanmai-NL, @metal3d, @Knetic, @jamesottaway, @denismakogon, @davidjb, @dannyprout, @CRogers, @chrisclark, @aronahl, @anton44eg, @andrerom, @allencloud, @adamchainz, @activatedgeek
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/3754370/assets,https://api.github.com/repos/docker/compose/releases/3754370,master,https://api.github.com/repos/docker/compose/tarball/1.8.0,https://github.com/docker/compose/releases/tag/1.8.0,https://api.github.com/repos/docker/compose/zipball/1.8.0,1.8.0,False,False
3602984,2016-07-07T01:05:11Z,2016-07-07T02:08:31Z,1.8.0 RC2,"Note that Compose 1.8.0 RC2 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.8.0 RC2 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.8.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

On top of [RC1's changes](https://github.com/docker/compose/releases/tag/1.8.0-rc1), RC2 contains the following:
- `docker-compose run -e VAR` now passes `VAR` through from the shell to the container, as with `docker run -e VAR`.
- `docker-compose bundle` no longer automatically pulls and pushes images if digests are missing, instead printing an error. You can force it to automatically push/pull with `--fetch-digests`.
- `docker-compose bundle` now generates a file with the correct extension (`.dab`).
- Bash and zsh completion have been updated to include the new commands.

Thanks @aeriksson, @shin-, @dnephin, @leonhartX, @bfirsh, @londoncalling, @albers, @staticshock, @stakodiak, @jgiannuzzi, @jamesottaway, @davidjb, @chrisclark, @allencloud, @adamchainz, @SvenDowideit and @Knetic!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/3602984/assets,https://api.github.com/repos/docker/compose/releases/3602984,master,https://api.github.com/repos/docker/compose/tarball/1.8.0-rc2,https://github.com/docker/compose/releases/tag/1.8.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.8.0-rc2,1.8.0-rc2,False,True
3443507,2016-06-14T19:35:46Z,2016-06-14T20:11:22Z,1.8.0-rc1,"Note that Compose 1.8.0-rc1 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.8.0-rc1 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.8.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

New Features
- Added `docker-compose bundle`, a command that builds a bundle file
  to be consumed by the new _Docker Stack_ commands in Docker 1.12.
  This command automatically pushes and pulls images as needed.
- Added `docker-compose push`, a command that pushes service images
  to a registry.
- As announced in 1.7.0, `docker-compose rm` now removes containers
  created by `docker-compose run` by default.
- Compose now supports specifying a custom TLS version for
  interaction with the Docker Engine using the `COMPOSE_TLS_VERSION`
  environment variable.

Bug Fixes
- Fixed a bug where Compose would erroneously try to read `.env`
  at the project's root when it is a directory.
- Improved config merging when multiple compose files are involved
  for several service sub-keys.
- Fixed a bug where volume mappings containing Windows drives would
  sometimes be parsed incorrectly.
- Fixed a bug in Windows environment where volume mappings of the
  host's root directory would be parsed incorrectly.
- Fixed a bug where `docker-compose config` would ouput an invalid
  Compose file if external networks were specified.
- Fixed an issue where unset buildargs would be assigned a string
  containing `'None'` instead of the expected empty value.
- Fixed a bug where yes/no prompts on Windows would not show before
  receiving input.
- Fixed a bug where trying to `docker-compose exec` on Windows
  without the `-d` option would exit with a stacktrace. This will
  still fail for the time being, but should do so gracefully.
- Fixed a bug where errors during `docker-compose up` would show
  an unrelated stacktrace at the end of the process.

Thanks @aanand, @dnephin, @bfirsh, @SvenDowideit, @sdurrheimer, @londoncalling, @johnharris85, @Andrey9kin, @yorkedork, @werehuman, @wenchma, @twitherspoon, @spectralsun, @sanmai-NL, @metal3d, @KalleDK, @jonlemmon, @denismakogon, @dannyprout, @CRogers, @aronahl, @anton44eg, @andrerom, @albers, @activatedgeek
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/3443507/assets,https://api.github.com/repos/docker/compose/releases/3443507,release,https://api.github.com/repos/docker/compose/tarball/1.8.0-rc1,https://github.com/docker/compose/releases/tag/1.8.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.8.0-rc1,1.8.0-rc1,False,True
3159902,2016-05-04T20:03:11Z,2016-05-04T22:23:53Z,1.7.1,"Note that Compose 1.7.1 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.7.1 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.7.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

Bug Fixes
- Fixed a bug where the output of `docker-compose config` for v1 files
  would be an invalid configuration file.
- Fixed a bug where `docker-compose config` would not check the validity
  of links.
- Fixed an issue where `docker-compose help` would not output a list of
  available commands and generic options as expected.
- Fixed an issue where filtering by service when using `docker-compose logs`
  would not apply for newly created services.
- Fixed a bug where unchanged services would sometimes be recreated in
  in the up phase when using Compose with Python 3.
- Fixed an issue where API errors encountered during the up phase would
  not be recognized as a failure state by Compose.
- Fixed a bug where Compose would raise a NameError because of an undefined
  exception name on non-Windows platforms.
- Fixed a bug where the wrong version of `docker-py` would sometimes be
  installed alongside Compose.
- Fixed a bug where the host value output by `docker-machine config default`
  would not be recognized as valid options by the `docker-compose`
  command line.
- Fixed an issue where Compose would sometimes exit unexpectedly  while
  reading events broadcasted by a Swarm cluster.
- Corrected a statement in the docs about the location of the `.env` file,
  which is indeed read from the current directory, instead of in the same
  location as the Compose file.

Thanks @aanand, @shin-, @dnephin, @bfirsh, @johnharris85, @werehuman, @twitherspoon, @metal3d, @aronahl, @andrerom
",https://api.github.com/users/shin-,1086876,shin-,https://api.github.com/repos/docker/compose/releases/3159902/assets,https://api.github.com/repos/docker/compose/releases/3159902,master,https://api.github.com/repos/docker/compose/tarball/1.7.1,https://github.com/docker/compose/releases/tag/1.7.1,https://api.github.com/repos/docker/compose/zipball/1.7.1,1.7.1,False,False
3012107,2016-04-13T15:37:49Z,2016-04-13T17:18:48Z,1.7.0,"Note that Compose 1.7.0 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.7.0 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.7.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking Changes**
-   `docker-compose logs` no longer follows log output by default. It now
  matches the behaviour of `docker logs` and exits after the current logs
  are printed. Use `-f` to get the old default behaviour.
-   Booleans are no longer allows as values for mappings in the Compose file
  (for keys `environment`, `labels` and `extra_hosts`). Previously this
  was a warning. Boolean values should be quoted so they become string values.

New Features
-   Compose now looks for a `.env` file in the directory where it's run and
  reads any environment variables defined inside, if they're not already
  set in the shell environment. This lets you easily set defaults for
  variables used in the Compose file, or for any of the `COMPOSE_*` or
  `DOCKER_*` variables.
-   Added a `--remove-orphans` flag to both `docker-compose up` and
  `docker-compose down` to remove containers for services that were removed
  from the Compose file.
-   Added a `--all` flag to `docker-compose rm` to include containers created
  by `docker-compose run`. This will become the default behavior in the next
  version of Compose.
-   Added support for all the same TLS configuration flags used by the `docker`
  client: `--tls`, `--tlscert`, `--tlskey`, etc.
-   Compose files now support the `tmpfs` and `shm_size` options.
-   Added the `--workdir` flag to `docker-compose run`
-   `docker-compose logs` now shows logs for new containers that are created
  after it starts.
-   The `COMPOSE_FILE` environment variable can now contain multiple files,
  separated by the host system's standard path separator (`:` on Mac/Linux,
  `;` on Windows).
-   You can now specify a static IP address when connecting a service to a
  network with the `ipv4_address` and `ipv6_address` options.
-   Added `--follow`, `--timestamp`, and `--tail` flags to the
  `docker-compose logs` command.
-   `docker-compose up`, and `docker-compose start` will now start containers
  in parallel where possible.
-   `docker-compose stop` now stops containers in reverse dependency order
  instead of all at once.
-   Added the `--build` flag to `docker-compose up` to force it to build a new
  image. It now shows a warning if an image is automatically built when the
  flag is not used.
-   Added the `docker-compose exec` command for executing a process in a running
  container.

Bug Fixes
-   `docker-compose down` now removes containers created by
  `docker-compose run`.
-   A more appropriate error is shown when a timeout is hit during `up` when
  using a tty.
-   Fixed a bug in `docker-compose down` where it would abort if some resources
  had already been removed.
-   Fixed a bug where changes to network aliases would not trigger a service
  to be recreated.
-   Fix a bug where a log message was printed about creating a new volume
  when it already existed.
-   Fixed a bug where interrupting `up` would not always shut down containers.
-   Fixed a bug where `log_opt` and `log_driver` were not properly carried over
  when extending services in the v1 Compose file format.
-   Fixed a bug where empty values for build args would cause file validation
  to fail.

Thanks @aanand, @shin-, @londoncalling, @albers, @seguins, @IlyaSkriblovsky, @cr7pt0gr4ph7, @clkao, @nubs, @moxiegirl, @AvdN, @yograterol, @TomasTomecek, @simonvanderveldt, @richardbann, @michael-k, @ltiao, @JesusTinoco, @humitos, @graingert, @flowrx, @dbonev, @bfirsh
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/3012107/assets,https://api.github.com/repos/docker/compose/releases/3012107,master,https://api.github.com/repos/docker/compose/tarball/1.7.0,https://github.com/docker/compose/releases/tag/1.7.0,https://api.github.com/repos/docker/compose/zipball/1.7.0,1.7.0,False,False
2996279,2016-04-11T17:26:16Z,2016-04-11T18:55:41Z,1.7.0 RC2,"Note that Compose 1.7.0 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.7.0 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.7.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking Changes**
-   `docker-compose logs` no longer follows log output by default. It now
  matches the behaviour of `docker logs` and exits after the current logs
  are printed. Use `-f` to get the old default behaviour.
-   Booleans are no longer allows as values for mappings in the Compose file
  (for keys `environment`, `labels` and `extra_hosts`). Previously this
  was a warning. Boolean values should be quoted so they become string values.

New Features
-   Compose now looks for a `.env` file in the directory where it's run and
  reads any environment variables defined inside, if they're not already
  set in the shell environment. This lets you easily set defaults for
  variables used in the Compose file, or for any of the `COMPOSE_*` or
  `DOCKER_*` variables.
-   Added a `--remove-orphans` flag to both `docker-compose up` and
  `docker-compose down` to remove containers for services that were removed
  from the Compose file.
-   Added a `--all` flag to `docker-compose rm` to include containers created
  by `docker-compose run`. This will become the default behavior in the next
  version of Compose.
-   Added support for all the same TLS configuration flags used by the `docker`
  client: `--tls`, `--tlscert`, `--tlskey`, etc.
-   Compose files now support the `tmpfs` and `shm_size` options.
-   Added the `--workdir` flag to `docker-compose run`
-   `docker-compose logs` now shows logs for new containers that are created
  after it starts.
-   The `COMPOSE_FILE` environment variable can now contain multiple files,
  separated by the host system's standard path separator (`:` on Mac/Linux,
  `;` on Windows).
-   You can now specify a static IP address when connecting a service to a
  network with the `ipv4_address` and `ipv6_address` options.
-   Added `--follow`, `--timestamp`, and `--tail` flags to the
  `docker-compose logs` command.
-   `docker-compose up`, and `docker-compose start` will now start containers
  in parallel where possible.
-   `docker-compose stop` now stops containers in reverse dependency order
  instead of all at once.
-   Added the `--build` flag to `docker-compose up` to force it to build a new
  image. It now shows a warning if an image is automatically built when the
  flag is not used.
-   Added the `docker-compose exec` command for executing a process in a running
  container.

Bug Fixes
-   `docker-compose down` now removes containers created by
  `docker-compose run`.
-   A more appropriate error is shown when a timeout is hit during `up` when
  using a tty.
-   Fixed a bug in `docker-compose down` where it would abort if some resources
  had already been removed.
-   Fixed a bug where changes to network aliases would not trigger a service
  to be recreated.
-   Fix a bug where a log message was printed about creating a new volume
  when it already existed.
-   Fixed a bug where interrupting `up` would not always shut down containers.
-   Fixed a bug where `log_opt` and `log_driver` were not properly carried over
  when extending services in the v1 Compose file format.
-   Fixed a bug where empty values for build args would cause file validation
  to fail.

Thanks @aanand, @shin-, @londoncalling, @albers, @seguins, @IlyaSkriblovsky, @cr7pt0gr4ph7, @clkao, @nubs, @moxiegirl, @AvdN, @yograterol, @TomasTomecek, @simonvanderveldt, @richardbann, @michael-k, @ltiao, @JesusTinoco, @humitos, @graingert, @flowrx, @dbonev, @bfirsh
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2996279/assets,https://api.github.com/repos/docker/compose/releases/2996279,master,https://api.github.com/repos/docker/compose/tarball/1.7.0-rc2,https://github.com/docker/compose/releases/tag/1.7.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.7.0-rc2,1.7.0-rc2,False,True
2882686,2016-03-24T18:31:37Z,2016-03-24T19:06:46Z,1.7.0 RC1,"Note that Compose 1.7.0 requires Docker Engine 1.10.0 or later for version 2 of the Compose File format, and Docker Engine 1.9.1 or later for version 1.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.7.0 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.7.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Here's what's new:

**Breaking Changes**
-   `docker-compose logs` no longer follows log output by default. It now
  matches the behaviour of `docker logs` and exits after the current logs
  are printed. Use `-f` to get the old default behaviour.
-   Booleans are no longer allows as values for mappings in the Compose file
  (for keys `environment`, `labels` and `extra_hosts`). Previously this
  was a warning. Boolean values should be quoted so they become string values.

New Features
-   Compose now looks for a `.env` file in the directory where it's run and
  reads any environment variables defined inside, if they're not already
  set in the shell environment. This lets you easily set defaults for
  variables used in the Compose file, or for any of the `COMPOSE_*` or
  `DOCKER_*` variables.
-   Added a `--remove-orphans` flag to both `docker-compose up` and
  `docker-compose down` to remove containers for services that were removed
  from the Compose file.
-   Added a `--all` flag to `docker-compose rm` to include containers created
  by `docker-compose run`. This will become the default behavior in the next
  version of Compose.
-   Added support for all the same TLS configuration flags used by the `docker`
  client: `--tls`, `--tlscert`, `--tlskey`, etc.
-   Compose files now support the `tmpfs` and `shm_size` options.
-   Added the `--workdir` flag to `docker-compose run`
-   `docker-compose logs` now shows logs for new containers that are created
  after it starts.
-   The `COMPOSE_FILE` environment variable can now contain multiple files,
  separated by the host system's standard path separator (`:` on Mac/Linux,
  `;` on Windows).
-   You can now specify a static IP address when connecting a service to a
  network with the `ipv4_address` and `ipv6_address` options.
-   Added `--follow`, `--timestamp`, and `--tail` flags to the
  `docker-compose logs` command.
-   `docker-compose up`, and `docker-compose start` will now start containers
  in parallel where possible.
-   `docker-compose stop` now stops containers in reverse dependency order
  instead of all at once.
-   Added the `--build` flag to `docker-compose up` to force it to build a new
  image. It now shows a warning if an image is automatically built when the
  flag is not used.
-   Added the `docker-compose exec` command for executing a process in a running
  container.

Bug Fixes
-   `docker-compose down` now removes containers created by
  `docker-compose run`.
-   A more appropriate error is shown when a timeout is hit during `up` when
  using a tty.
-   Fixed a bug in `docker-compose down` where it would abort if some resources
  had already been removed.
-   Fixed a bug where changes to network aliases would not trigger a service
  to be recreated.
-   Fix a bug where a log message was printed about creating a new volume
  when it already existed.
-   Fixed a bug where interrupting `up` would not always shut down containers.
-   Fixed a bug where `log_opt` and `log_driver` were not properly carried over
  when extending services in the v1 Compose file format.
-   Fixed a bug where empty values for build args would cause file validation
  to fail.

Thanks @aanand, @shin-, @londoncalling, @albers, @seguins, @IlyaSkriblovsky, @cr7pt0gr4ph7, @clkao, @nubs, @moxiegirl, @AvdN, @yograterol, @TomasTomecek, @simonvanderveldt, @richardbann, @michael-k, @ltiao, @JesusTinoco, @humitos, @graingert, @flowrx, @dbonev, @bfirsh
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2882686/assets,https://api.github.com/repos/docker/compose/releases/2882686,master,https://api.github.com/repos/docker/compose/tarball/1.7.0-rc1,https://github.com/docker/compose/releases/tag/1.7.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.7.0-rc1,1.7.0-rc1,False,True
2675398,2016-02-23T23:52:13Z,2016-02-24T00:36:34Z,1.6.2,"Note that Compose 1.6.2 requires Docker Engine 1.9.1 or later, or 1.10.0 if you're using version 2 of the Compose File format (see https://docs.docker.com/compose/compose-file/#versioning).

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.6.2 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Bug Fixes
-   Fixed a bug where connecting to a TLS-enabled Docker Engine would fail with a certificate verification error.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/2675398/assets,https://api.github.com/repos/docker/compose/releases/2675398,master,https://api.github.com/repos/docker/compose/tarball/1.6.2,https://github.com/docker/compose/releases/tag/1.6.2,https://api.github.com/repos/docker/compose/zipball/1.6.2,1.6.2,False,False
2673848,2016-02-23T20:08:56Z,2016-02-23T20:35:14Z,1.6.1,"Note that Compose 1.6.1 requires Docker Engine 1.9.1 or later, or 1.10.0 if you're using version 2 of the Compose File format (see https://docs.docker.com/compose/compose-file/#versioning).

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.6.1 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.6.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Bug Fixes
-   Fixed a bug where recreating a container multiple times would cause the new container to be started without the previous volumes.
-   Fixed a bug where Compose would set the value of unset environment variables to an empty string, instead of a key without a value.
-   Provide a better error message when Compose requires a more recent version of the Docker API.
-   Add a missing config field `network.aliases` which allows setting a network scoped alias for a service.
-   Fixed a bug where `run` would not start services listed in `depends_on`.
-   Fixed a bug where `networks` and `network_mode` where not merged when using extends or multiple Compose files.
-   Fixed a bug with service aliases where the short container id alias was only contained 10 characters, instead of the 12 characters used in previous versions.
-   Added a missing log message when creating a new named volume.
-   Fixed a bug where `build.args` was not merged when using `extends` or multiple Compose files.
-   Fixed some bugs with config validation when null values or incorrect types were used instead of a mapping.
-   Fixed a bug where a `build` section without a `context` would show a stack trace instead of a helpful validation error message.
-   Improved compatibility with swarm by only setting a container affinity to the previous instance of a service's container when the service uses an anonymous container volume. Previously the affinity was always set on all containers.
-   Fixed the validation of  `driver_opts` would cause an error if a number was used instead of a string.
-   Some improvements to the `run.sh` script used by the Compose container install option.
-   Fixed a bug with `up --abort-on-container-exit` where Compose would exit, but would not stop other containers.
-   Corrected the warning message that is printed when a boolean value is used as a value in a mapping.

Thanks @aanand, @shin-, @londoncalling, @sdurrheimer, @moxiegirl, @jrabbit, @cr7pt0gr4ph7, @nubs, @clkao, @dbonev, @AvdN, @albers
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2673848/assets,https://api.github.com/repos/docker/compose/releases/2673848,master,https://api.github.com/repos/docker/compose/tarball/1.6.1,https://github.com/docker/compose/releases/tag/1.6.1,https://api.github.com/repos/docker/compose/zipball/1.6.1,1.6.1,False,False
2554571,2016-02-04T19:43:26Z,2016-02-04T20:49:36Z,1.6.0,"Note that Compose 1.6.0 requires Docker Engine 1.9.1 or later, or 1.10.0 if you're using version 2 of the Compose File format (see the changelog below).

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/products/docker-toolbox)** will install Compose 1.6.0 for you, alongside the latest versions of Docker Engine, Machine and Kitematic.

Alternatively, you can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.6.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

## Major Features
-   Compose 1.6 introduces a new format for `docker-compose.yml` which lets you define networks and volumes in the Compose file as well as services. It also makes a few changes to the structure of some configuration options.
  
  You don't have to use it - your existing Compose files will run on Compose 1.6 exactly as they do today.
  
  Check the [upgrade guide](https://docs.docker.com/compose/compose-file#upgrading) for full details.
-   Support for networking has exited experimental status and is the recommended way to enable communication between containers.
  
  If you use the new file format, your app will use networking. If you aren't ready yet, just leave your Compose file as it is and it'll continue to work just the same.
  
  By default, you don't have to configure any networks. In fact, using networking with Compose involves even less configuration than using links. Consult the [networking guide](https://docs.docker.com/compose/networking) for how to use it.
  
  The experimental flags `--x-networking` and `--x-network-driver`, introduced in Compose 1.5, have been removed.
-   You can now pass arguments to a build if you're using the new file format:
  
  ```
  build:
    context: .
    args:
      buildno: 1
  ```
-   You can now specify both a `build` and an `image` key if you're using the new file format. `docker-compose build` will build the image and tag it with the name you've specified, while `docker-compose pull` will attempt to pull it.
-   There's a new `events` command for monitoring container events from the application, much like `docker events`. This is a good primitive for building tools on top of Compose for performing actions when particular things happen, such as containers starting and stopping.
-   There's a new `depends_on` option for specifying dependencies between services. This enforces the order of startup, and ensures that when you run `docker-compose up SERVICE` on a service with dependencies, those are started as well.

## New Features
-   Added a new command `config` which validates and prints the Compose configuration after interpolating variables, resolving relative paths, and merging multiple files and `extends`.
-   Added a new command `create` for creating containers without starting them.
-   Added a new command `down` to stop and remove all the resources created by `up` in a single command.
-   Added support for the `cpu_quota` configuration option.
-   Added support for the `stop_signal` configuration option.
-   Commands `start`, `restart`, `pause`, and `unpause` now exit with an error status code if no containers were modified.
-   Added a new `--abort-on-container-exit` flag to `up` which causes `up` to stop all container and exit once the first container exits.
-   Removed support for `FIG_FILE`, `FIG_PROJECT_NAME`, and no longer reads `fig.yml` as a default Compose file location.
-   Removed the `migrate-to-labels` command.
-   Removed the `--allow-insecure-ssl` flag.

## Bug Fixes
-   Fixed a validation bug that prevented the use of a range of ports in the `expose` field.
-   Fixed a validation bug that prevented the use of arrays in the `entrypoint` field if they contained duplicate entries.
-   Fixed a bug that caused `ulimits` to be ignored when used with `extends`.
-   Fixed a bug that prevented ipv6 addresses in `extra_hosts`.
-   Fixed a bug that caused `extends` to be ignored when included from multiple Compose files.
-   Fixed an incorrect warning when a container volume was defined in the Compose file.
-   Fixed a bug that prevented the force shutdown behaviour of `up` and `logs`.
-   Fixed a bug that caused `None` to be printed as the network driver name when the default network driver was used.
-   Fixed a bug where using the string form of `dns` or `dns_search` would cause an error.
-   Fixed a bug where a container would be reported as ""Up"" when it was in the restarting state.
-   Fixed a confusing error message when DOCKER_CERT_PATH was not set properly.
-   Fixed a bug where attaching to a container would fail if it was using a non-standard logging driver (or none at all).
-   Fixed a bug where some config options, such as `links` and `ports`, were not properly merged when using multiple Compose files.
-   Fixed a bug where setting COMPOSE_PROJECT_NAME to an empty string would result in an empty project name, rather than falling back to the directory name.

Thanks @dnephin, @shin-, @sdurrheimer, @albers, @dbonev, @moxiegirl, @scipetr, @schmunk42, @rtlong, @nubs, @mustafau, @jzvelc, @hourliert, @gutweiler, @alf, @SvenDowideit and @GarrettHeel!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/2554571/assets,https://api.github.com/repos/docker/compose/releases/2554571,master,https://api.github.com/repos/docker/compose/tarball/1.6.0,https://github.com/docker/compose/releases/tag/1.6.0,https://api.github.com/repos/docker/compose/zipball/1.6.0,1.6.0,False,False
2498321,2016-01-27T01:42:21Z,2016-01-27T02:18:26Z,1.6.0 RC2,"Note that Compose 1.6.0 requires Docker 1.9.1 or later.

If you're a Mac or Windows user, the [Docker Toolbox](https://www.docker.com/products/docker-toolbox) will install Compose 1.6.0 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

You can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.6.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

On top of **[RC1's considerable list of changes](https://github.com/docker/compose/releases/tag/1.6.0-rc1)**, RC2 contains the following:
-   `links` and `external_links` are now supported in the version 2 file format.
-   Added the `depends_on` key for expressing dependencies between services without creating links.
-   Added the `network_mode` key in the version 2 format as a replacement for version 1's `net`.
-   Containers now join networks with an additional alias: a short version of the container id.
-   Fixed a bug where multiple volumes (both prefixed with the project name and un-prefixed) would be created when a named volume was mounted into a service.
-   Configuration under the `networks` key is now properly validated.
-   Fixed a bug where containers started with `docker-compose run` didn't join networks defined for their service in `docker-compose.yml`.
-   Fixed a `docker-compose scale` bug which would cause all containers to be removed if they exited immediately.
-   Fixed a bug where `extends` didn't work in the version 2 format.
-   Fixed ""name is reserved"" errors when running against Docker 1.10.0 RC1.
-   Fixed a confusing error message when DOCKER_CERT_PATH was not set properly.
-   Fixed a bug where attaching to a container would fail if it was using a non-standard logging driver (or none at all).
-   Fixed various bugs with zsh completion.

Thanks @dnephin, @shin-, @sdurrheimer, @schmunk42, @jzvelc, @dbonev and @alf!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/2498321/assets,https://api.github.com/repos/docker/compose/releases/2498321,master,https://api.github.com/repos/docker/compose/tarball/1.6.0-rc2,https://github.com/docker/compose/releases/tag/1.6.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.6.0-rc2,1.6.0-rc2,False,True
2448250,2016-01-18T19:50:56Z,2016-01-18T21:06:56Z,1.6.0 RC1,"Note that Compose 1.6.0 requires Docker 1.9.0 or later.

If you're a Mac user, the Docker Toolbox will install Compose 1.6.0 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

You can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.6.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](https://docs.docker.com/compose/install/) for more install options and instructions.

Major Features:
-   Compose 1.6 introduces a new format for `docker-compose.yml` which lets
  you define networks and volumes in the Compose file as well as services. It
  also makes a few changes to the structure of some configuration options.
  
  You don't have to use it - your existing Compose files will run on Compose
  1.6 exactly as they do today.
  
  See the Compose file reference for more information:
  https://github.com/docker/compose/blob/1.6.0-rc1/docs/compose-file.md
-   Support for networking has exited experimental status and is the recommended
  way to enable communication between containers.
  
  If you use the new file format, your app will use networking. If you want to
  keep using links, just leave your Compose file as it is and it'll continue
  to work just the same.
  
  By default, you don't have to configure any networks. In fact, using
  networking with Compose involves even less configuration than using links.
  Consult the networking guide for how to use it:
  https://github.com/docker/compose/blob/1.6.0-rc1/docs/networking.md
  
  The experimental flags `--x-networking` and `--x-network-driver`, introduced
  in Compose 1.5, have been removed.
-   You can now pass arguments to a build if you're using the new file format:
  
  ```
  build:
    context: .
    args:
      buildno: 1
  ```
-   You can now specify both a `build` and an `image` key if you're using the
  new file format. `docker-compose build` will build the image and tag it with
  the name you've specified, while `docker-compose pull` will attempt to pull
  it.
-   There's a new `events` command for monitoring container events from
  the application, much like `docker events`. This is a good primitive for
  building tools on top of Compose for performing actions when particular
  things happen, such as containers starting and stopping.

New Features:
-   Added a new command `config` which validates and prints the Compose
  configuration after interpolating variables, resolving relative paths, and
  merging multiple files and `extends`.
-   Added a new command `create` for creating containers without starting them.
-   Added a new command `down` to stop and remove all the resources created by
  `up` in a single command.
-   Added support for the `cpu_quota` configuration option.
-   Added support for the `stop_signal` configuration option.
-   Commands `start`, `restart`, `pause`, and `unpause` now exit with an
  error status code if no containers were modified.
-   Added a new `--abort-on-container-exit` flag to `up` which causes `up` to
  stop all container and exit once the first container exits.
-   Removed support for `FIG_FILE`, `FIG_PROJECT_NAME`, and no longer reads
  `fig.yml` as a default Compose file location.
-   Removed the `migrate-to-labels` command.
-   Removed the `--allow-insecure-ssl` flag.

Bug Fixes:
-   Fixed a validation bug that prevented the use of a range of ports in
  the `expose` field.
-   Fixed a validation bug that prevented the use of arrays in the `entrypoint`
  field if they contained duplicate entries.
-   Fixed a bug that caused `ulimits` to be ignored when used with `extends`.
-   Fixed a bug that prevented ipv6 addresses in `extra_hosts`.
-   Fixed a bug that caused `extends` to be ignored when included from
  multiple Compose files.
-   Fixed an incorrect warning when a container volume was defined in
  the Compose file.
-   Fixed a bug that prevented the force shutdown behaviour of `up` and
  `logs`.
-   Fixed a bug that caused `None` to be printed as the network driver name
  when the default network driver was used.
-   Fixed a bug where using the string form of `dns` or `dns_search` would
  cause an error.
-   Fixed a bug where a container would be reported as ""Up"" when it was
  in the restarting state.

Thanks @aanand, @shin-, @dbonev, @albers, @vdemeester, @thaJeztah, @SvenDowideit, @seguins, @sdurrheimer, @moxiegirl, @TomasTomecek, @solarce, @simonvanderveldt, @scipetr, @punkstar, @jonaseck2, @jake-low, @hourliert, @gutweiler, @GarrettHeel
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2448250/assets,https://api.github.com/repos/docker/compose/releases/2448250,master,https://api.github.com/repos/docker/compose/tarball/1.6.0-rc1,https://github.com/docker/compose/releases/tag/1.6.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.6.0-rc1,1.6.0-rc1,False,True
2224276,2015-12-03T19:18:32Z,2015-12-04T00:55:08Z,1.5.2,"Note that Compose 1.5.2 requires Docker 1.7.1 or later.

If you're a Mac user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.5.2 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

You can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](http://docs.docker.com/compose/install/) for more install options and instructions.

## Here's what's new:
-   Fixed a bug which broke the use of `environment` and `env_file` with
  `extends`, and caused environment keys without values to have a `None`
  value, instead of a value from the host environment.
-   Fixed a regression in 1.5.1 that caused a warning about volumes to be
  raised incorrectly when containers were recreated.
-   Fixed a bug which prevented building a `Dockerfile` that used `ADD <url>`
-   Fixed a bug with `docker-compose restart` which prevented it from
  starting stopped containers.
-   Fixed handling of SIGTERM and SIGINT to properly stop containers
-   Add support for using a url as the value of `build`
-   Improved the validation of the `expose` option

Thanks @mnowster, @aanand, @viranch, @StefanScherer, @seguins, @simonvanderveldt, @jonaseck2
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2224276/assets,https://api.github.com/repos/docker/compose/releases/2224276,master,https://api.github.com/repos/docker/compose/tarball/1.5.2,https://github.com/docker/compose/releases/tag/1.5.2,https://api.github.com/repos/docker/compose/zipball/1.5.2,1.5.2,False,False
2117975,2015-11-12T20:02:12Z,2015-11-12T22:27:39Z,1.5.1,"Note that Compose 1.5.1 requires Docker 1.7.1 or later.

If you're a Mac user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.5.1 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

You can use the usual commands to install or upgrade:

```
curl -L https://github.com/docker/compose/releases/download/1.5.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

See the [install docs](http://docs.docker.com/compose/install/) for more install options and instructions.

## Here's what's new:
-   Add the `--force-rm` option to `build`.
-   Add the `ulimit` option for services in the Compose file.
-   Fixed a bug where `up` would error with ""service needs to be built"" if
  a service changed from using `image` to using `build`.
-   Fixed a bug that would cause incorrect output of parallel operations
  on some terminals.
-   Fixed a bug that prevented a container from being recreated when the
  mode of a `volumes_from` was changed.
-   Fixed a regression in 1.5.0 where non-utf-8 unicode characters would cause
  `up` or `logs` to crash.
-   Fixed a regression in 1.5.0 where Compose would use a success exit status
  code when a command fails due to an HTTP timeout communicating with the
  docker daemon.
-   Fixed a regression in 1.5.0 where `name` was being accepted as a valid
  service option which would override the actual name of the service.
-   When using `--x-networking` Compose no longer sets the hostname to the
  container name.
-   When using `--x-networking` Compose will only create the default network
  if at least one container is using the network.
-   When printing logs during `up` or `logs`, flush the output buffer after
  each line to prevent buffering issues from hiding logs.
-   Recreate a container if one of it's dependencies is being created.
  Previously a container was only recreated if it's dependencies already
  existed, but were being recreated as well.
-   Add a warning when a `volume` in the Compose file is being ignored
  and masked by a container volume from a previous container.
-   Improve the output of `pull` when run without a tty.
-   When using multiple Compose files, validate each before attempting to merge
  them together. Previously invalid files would result in not helpful errors.
-   Allow dashes in keys in the `environment` service option.
-   Improve validation error messages by including the filename as part of the
  error message.

Thanks  @shin-, @mnowster, @aanand, @KevinGreene, @adrian-budau, @yvespp
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2117975/assets,https://api.github.com/repos/docker/compose/releases/2117975,master,https://api.github.com/repos/docker/compose/tarball/1.5.1,https://github.com/docker/compose/releases/tag/1.5.1,https://api.github.com/repos/docker/compose/zipball/1.5.1,1.5.1,False,False
2064902,2015-11-03T17:36:30Z,2015-11-03T18:22:13Z,1.5.0,"**This release contains breaking changes.**

Note that Compose 1.5.0 requires Docker 1.7.1 or later.

If you're a Mac or Windows user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.5.0 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

Otherwise, you can use the usual commands to install/upgrade. Either download the binary:

```
curl -L https://github.com/docker/compose/releases/download/1.5.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.5.0` if you prefer pip.

## Here's what's new:

**Breaking changes:**

With the introduction of variable substitution support in the Compose file, any Compose file that uses an environment variable (`$VAR` or `${VAR}`) in the `command:` or `entrypoint:` field will break.

Previously these values were interpolated inside the container, with a value from the container environment.  In Compose 1.5.0, the values will be interpolated on the host, with a value from the host environment.

To migrate a Compose file to 1.5.0, escape the variables with an extra `$` (ex: `$$VAR` or `$${VAR}`).  See
https://github.com/docker/compose/blob/8cc8e61/docs/compose-file.md#variable-substitution

**Major features:**
-   Compose is now available for Windows.
-   Environment variables can be used in the Compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/yml.md#variable-substitution
-   Multiple compose files can be specified, allowing you to override settings in the default Compose file. See https://github.com/docker/compose/blob/129092b7/docs/reference/docker-compose.md for more details.
-   Compose now produces better error messages when a file contains invalid configuration.
-   `up` now waits for all services to exit before shutting down, rather than shutting down as soon as one container exits.
-   Experimental support for the new docker networking system can be enabled with the `--x-networking` flag. Read more here: https://github.com/docker/docker/blob/8fee1c20/docs/userguide/dockernetworks.md

**New features:**
-   You can now optionally pass a mode to `volumes_from`, e.g. `volumes_from: [""servicename:ro""]`.
-   Since Docker now lets you create volumes with names, you can refer to those volumes by name in `docker-compose.yml`. For example, `volumes: [""mydatavolume:/data""]` will mount the volume named `mydatavolume` at the path `/data` inside the container.
  
  If the first component of an entry in `volumes` starts with a `.`, `/` or `~`, it is treated as a path and expansion of relative paths is performed as necessary. Otherwise, it is treated as a volume name and passed straight through to Docker.
  
  Read more on named volumes and volume drivers here:
  https://github.com/docker/docker/blob/244d9c33/docs/userguide/dockervolumes.md
-   `docker-compose build --pull` instructs Compose to pull the base image for each Dockerfile before building.
-   `docker-compose pull --ignore-pull-failures` instructs Compose to continue if it fails to pull a single service's image, rather than aborting.
-   You can now specify an IPC namespace in `docker-compose.yml` with the `ipc` option.
-   Containers created by `docker-compose run` can now be named with the `--name` flag.
-   If you install Compose with pip or use it as a library, it now works with Python 3.
-   `image` now supports image digests (in addition to ids and tags), e.g.
  `image: ""busybox@sha256:38a203e1986cf79639cfb9b2e1d6e773de84002feea2d4eb006b52004ee8502d""`
-   `ports` now supports ranges of ports, e.g.
  
  ```
  ports:
    - ""3000-3005""
    - ""9000-9001:8000-8001""
  ```
-   `docker-compose run` now supports a `-p|--publish` parameter, much like `docker run -p`, for publishing specific ports to the host.
-   `docker-compose pause` and `docker-compose unpause` have been implemented, analogous to `docker pause` and `docker unpause`.
-   When using `extends` to copy configuration from another service in the same Compose file, you can omit the `file` option.
-   Compose can be installed and run as a Docker image. This is an experimental feature.

**Bug fixes:**
-   All values for the `log_driver` option which are supported by the Docker daemon are now supported by Compose.
-   `docker-compose build` can now be run successfully against a Swarm cluster.

Thanks @mnowster, @aanand, @moxiegirl, @albers, @mrfuxi, @viranch, @sdurrheimer, @charleswhchan, @ZJaffee, @villlem, @vdemeester, @TomasTomecek, @timbutler, @ticosax, @SvenDowideit, @stedur, @ronen, @md2perpe, @ggtools, @geron, @cweagans and @au-phiware!
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2064902/assets,https://api.github.com/repos/docker/compose/releases/2064902,master,https://api.github.com/repos/docker/compose/tarball/1.5.0,https://github.com/docker/compose/releases/tag/1.5.0,https://api.github.com/repos/docker/compose/zipball/1.5.0,1.5.0,False,False
2049104,2015-10-30T19:53:17Z,2015-10-30T21:50:10Z,1.5.0 RC3,"This is a release candidate for version 1.5.0 of Compose. 

Note that Compose 1.5.0 requires Docker 1.8.0 or later.

To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.5.0rc3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.5.0rc3` if you prefer pip.

**This release contains breaking changes.**

## Here's what's new:

**Breaking changes:**

With the introduction of variable substitution support in the Compose file, any
Compose file that uses an environment variable (`$VAR` or `${VAR}`) in the `command:`
or `entrypoint:` field will break.

Previously these values were interpolated inside the container, with a value
from the container environment.  In Compose 1.5.0, the values will be
interpolated on the host, with a value from the host environment.

To migrate a Compose file to 1.5.0, escape the variables with an extra `$`
(ex: `$$VAR` or `$${VAR}`).  See
https://github.com/docker/compose/blob/8cc8e61/docs/compose-file.md#variable-substitution

**Major features:**
-   Compose is now available for Windows.
-   Environment variables can be used in the Compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/yml.md#variable-substitution
-   Multiple compose files can be specified, allowing you to override
  settings in the default Compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/reference/docker-compose.md
  for more details.
-   Compose now produces better error messages when a file contains
  invalid configuration.
-   `up` now waits for all services to exit before shutting down,
  rather than shutting down as soon as one container exits.
-   Experimental support for the new docker networking system can be
  enabled with the `--x-networking` flag. Read more here:
  https://github.com/docker/docker/blob/8fee1c20/docs/userguide/dockernetworks.md

**New features:**
-   You can now optionally pass a mode to `volumes_from`, e.g.
  `volumes_from: [""servicename:ro""]`.
-   Since Docker now lets you create volumes with names, you can refer to those
  volumes by name in `docker-compose.yml`. For example,
  `volumes: [""mydatavolume:/data""]` will mount the volume named
  `mydatavolume` at the path `/data` inside the container.
  
  If the first component of an entry in `volumes` starts with a `.`, `/` or
  `~`, it is treated as a path and expansion of relative paths is performed as
  necessary. Otherwise, it is treated as a volume name and passed straight
  through to Docker.
  
  Read more on named volumes and volume drivers here:
  https://github.com/docker/docker/blob/244d9c33/docs/userguide/dockervolumes.md
-   `docker-compose build --pull` instructs Compose to pull the base image for
  each Dockerfile before building.
-   `docker-compose pull --ignore-pull-failures` instructs Compose to continue
  if it fails to pull a single service's image, rather than aborting.
-   You can now specify an IPC namespace in `docker-compose.yml` with the `ipc`
  option.
-   Containers created by `docker-compose run` can now be named with the
  `--name` flag.
-   If you install Compose with pip or use it as a library, it now works with
  Python 3.
-   `image` now supports image digests (in addition to ids and tags), e.g.
  `image: ""busybox@sha256:38a203e1986cf79639cfb9b2e1d6e773de84002feea2d4eb006b52004ee8502d""`
-   `ports` now supports ranges of ports, e.g.
  
  ```
  ports:
    - ""3000-3005""
    - ""9000-9001:8000-8001""
  ```
-   `docker-compose run` now supports a `-p|--publish` parameter, much like
  `docker run -p`, for publishing specific ports to the host.
-   `docker-compose pause` and `docker-compose unpause` have been implemented,
  analogous to `docker pause` and `docker unpause`.
-   When using `extends` to copy configuration from another service in the same
  Compose file, you can omit the `file` option.
-   Compose can be installed and run as a Docker image. This is an experimental
  feature.

**Bug fixes:**
-   All values for the `log_driver` option which are supported by the Docker
  daemon are now supported by Compose.
-   `docker-compose build` can now be run successfully against a Swarm cluster.

Thanks @mnowster, @aanand, @moxiegirl, @albers, @mrfuxi, @viranch, @sdurrheimer, @charleswhchan, @ZJaffee, @villlem, @vdemeester, @TomasTomecek, @timbutler, @ticosax, @SvenDowideit, @stedur, @ronen, @md2perpe, @ggtools, @geron, @cweagans, @au-phiware
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2049104/assets,https://api.github.com/repos/docker/compose/releases/2049104,master,https://api.github.com/repos/docker/compose/tarball/1.5.0rc3,https://github.com/docker/compose/releases/tag/1.5.0rc3,https://api.github.com/repos/docker/compose/zipball/1.5.0rc3,1.5.0rc3,False,True
2029621,2015-10-27T23:48:54Z,2015-10-28T15:23:25Z,1.5.0 RC2,"This is a release candidate for version 1.5.0 of Compose. 

Note that Compose 1.5.0 requires Docker 1.8.0 or later.

To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.5.0rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.5.0rc2` if you prefer pip.

## Here's what's new:

Major features:
-   Compose is now available for Windows.
-   Environment variables can be used in the Compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/yml.md#variable-substitution
-   Multiple compose files can be specified, allowing you to override
  settings in the default Compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/reference/docker-compose.md
  for more details.
-   Compose now produces better error messages when a file contains
  invalid configuration.
-   `up` now waits for all services to exit before shutting down,
  rather than shutting down as soon as one container exits.
-   Experimental support for the new docker networking system can be
  enabled with the `--x-networking` flag. Read more here:
  https://github.com/docker/docker/blob/8fee1c20/docs/userguide/dockernetworks.md

New features:
-   You can now optionally pass a mode to `volumes_from`, e.g.
  `volumes_from: [""servicename:ro""]`.
-   Since Docker now lets you create volumes with names, you can refer to those
  volumes by name in `docker-compose.yml`. For example,
  `volumes: [""mydatavolume:/data""]` will mount the volume named
  `mydatavolume` at the path `/data` inside the container.
  
  If the first component of an entry in `volumes` starts with a `.`, `/` or
  `~`, it is treated as a path and expansion of relative paths is performed as
  necessary. Otherwise, it is treated as a volume name and passed straight
  through to Docker.
  
  Read more on named volumes and volume drivers here:
  https://github.com/docker/docker/blob/244d9c33/docs/userguide/dockervolumes.md
-   `docker-compose build --pull` instructs Compose to pull the base image for
  each Dockerfile before building.
-   `docker-compose pull --ignore-pull-failures` instructs Compose to continue
  if it fails to pull a single service's image, rather than aborting.
-   You can now specify an IPC namespace in `docker-compose.yml` with the `ipc`
  option.
-   Containers created by `docker-compose run` can now be named with the
  `--name` flag.
-   If you install Compose with pip or use it as a library, it now works with
  Python 3.
-   `image` now supports image digests (in addition to ids and tags), e.g.
  `image: ""busybox@sha256:38a203e1986cf79639cfb9b2e1d6e773de84002feea2d4eb006b52004ee8502d""`
-   `ports` now supports ranges of ports, e.g.
  
  ```
  ports:
    - ""3000-3005""
    - ""9000-9001:8000-8001""
  ```
-   `docker-compose run` now supports a `-p|--publish` parameter, much like
  `docker run -p`, for publishing specific ports to the host.
-   `docker-compose pause` and `docker-compose unpause` have been implemented,
  analogous to `docker pause` and `docker unpause`.
-   When using `extends` to copy configuration from another service in the same
  Compose file, you can omit the `file` option.
-   Compose can be installed and run as a Docker image. This is an experimental
  feature.

Bug fixes:
-   All values for the `log_driver` option which are supported by the Docker
  daemon are now supported by Compose.
-   `docker-compose build` can now be run successfully against a Swarm cluster.

Thanks @mnowster, @aanand, @moxiegirl, @albers, @mrfuxi, @viranch, @sdurrheimer, @charleswhchan, @ZJaffee, @villlem, @vdemeester, @TomasTomecek, @timbutler, @ticosax, @SvenDowideit, @stedur, @ronen, @md2perpe, @ggtools, @geron, @cweagans, @au-phiware
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/2029621/assets,https://api.github.com/repos/docker/compose/releases/2029621,master,https://api.github.com/repos/docker/compose/tarball/1.5.0rc2,https://github.com/docker/compose/releases/tag/1.5.0rc2,https://api.github.com/repos/docker/compose/zipball/1.5.0rc2,1.5.0rc2,False,True
1960861,2015-10-14T16:59:31Z,2015-10-14T17:56:40Z,1.5.0 RC1,"This is a release candidate for version 1.5.0 of Compose. 

Note that Compose 1.5.0 requires Docker 1.8.0 or later.

To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.5.0rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.5.0rc1` if you prefer pip.

Here's what's new:

---

Major Features
-   Compose is now available on windows.
-   Environment variable can be used in the compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/yml.md#variable-substitution
-   Multiple compose files can be specified, allowing you to override
  setting in the default compose file. See
  https://github.com/docker/compose/blob/129092b7/docs/reference/docker-compose.md
  for more details.
-   Configuration validation is now a lot more strict
-   `up` now waits for all services to exit before shutting down
-   Support for the new docker networking can be enabled with
  the `--x-networking` flag

New Features
-   `volumes_from` now supports a mode option allowing for read-only
  `volumes_from`
-   Volumes that don't start with a path indicator (`.` or `/`) will now be
  treated as a named volume. Previously this was a warning.
-   `--pull` flag added to `build`
-   `--ignore-pull-failures` flag added to `pull`
-   Support for the `ipc` field added to the compose file
-   Containers created by `run` can now be named with the `--name` flag
-   If you install Compose with pip or use it as a library, it now
  works with Python 3
-   `image` field now supports image digests (in addition to ids and tags)
-   `ports` now supports ranges of ports
-   `--publish` flag added to `run`
-   New subcommands `pause` and `unpause`
-   services may be extended from the same file without a `file` key in
  `extends`
-   Compose can be installed and run as a docker image. This is an experimental
  feature.

Bug Fixes
-   Support all `log_drivers`
-   Fixed `build` when running against swarm
-   `~` is no longer expanded on the host when included as part of a container
  volume path

Thanks @aanand, @mnowster, @moxiegirl, @mrfuxi, @shin-, @bfirsh, @albers @funkyfuture, @uvgroovy, @predakanga, @charleswhchan, @ggtools, and everyone else who contributed to this release!
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/1960861/assets,https://api.github.com/repos/docker/compose/releases/1960861,master,https://api.github.com/repos/docker/compose/tarball/1.5.0rc1,https://github.com/docker/compose/releases/tag/1.5.0rc1,https://api.github.com/repos/docker/compose/zipball/1.5.0rc1,1.5.0rc1,False,True
1850961,2015-09-22T16:26:51Z,2015-09-22T18:15:21Z,1.4.2,"Firstly, note that Compose 1.4.2 requires Docker 1.7.0 or later.

Secondly, if you're a Mac user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.4.2 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

Otherwise, you can use the usual commands to install/upgrade. Either download the binary:

```
curl -L https://github.com/docker/compose/releases/download/1.4.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or install the PyPi package:

```
pip install -U docker-compose==1.4.2
```

This release fixes a regression in the 1.4.1 release that would cause `docker-compose up` without the `-d` option to exit immediately.
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/1850961/assets,https://api.github.com/repos/docker/compose/releases/1850961,master,https://api.github.com/repos/docker/compose/tarball/1.4.2,https://github.com/docker/compose/releases/tag/1.4.2,https://api.github.com/repos/docker/compose/zipball/1.4.2,1.4.2,False,False
1812210,2015-09-14T22:18:01Z,2015-09-15T21:37:24Z,1.4.1,"Firstly, note that Compose 1.4.1 requires Docker 1.7.0 or later.

Secondly, if you're a Mac user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.4.1 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

Otherwise, you can use the usual commands to install/upgrade. Either download the binary:

```
curl -L https://github.com/docker/compose/releases/download/1.4.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or install the PyPi package:

```
pip install -U docker-compose==1.4.1
```

The following issues were fixed in this release:
-   Some configuration changes (notably changes to `links`, `volumes_from`, and
  `net`) were not properly triggering a container recreate as part of
  `docker-compose up`.
-   `docker-compose up <service>` was showing logs for all services instead of
  just the specified services.
-   Containers with custom container names were showing up in logs as
  `service_number` instead of their custom container name.
-   When scaling a service sometimes containers would be recreated even when
  the configuration had not changed.
",https://api.github.com/users/dnephin,442180,dnephin,https://api.github.com/repos/docker/compose/releases/1812210/assets,https://api.github.com/repos/docker/compose/releases/1812210,master,https://api.github.com/repos/docker/compose/tarball/1.4.1,https://github.com/docker/compose/releases/tag/1.4.1,https://api.github.com/repos/docker/compose/zipball/1.4.1,1.4.1,False,False
1655662,2015-08-11T15:00:20Z,2015-08-11T17:36:31Z,1.4.0,"Firstly, note that Compose 1.4.0 requires Docker 1.7.1 or later.

Secondly, if you're a Mac user, the **[Docker Toolbox](https://www.docker.com/toolbox)** will install Compose 1.4.0 for you, alongside the latest versions of the Docker Engine, Machine and Kitematic.

Otherwise, you can use the usual commands to install/upgrade. Either download the binary:

```
curl -L https://github.com/docker/compose/releases/download/1.4.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or install the PyPi package:

```
pip install -U docker-compose==1.4.0
```

Here's what's new:
-   By default, `docker-compose up` now only recreates containers for services whose configuration has changed since they were created. This should result in a dramatic speed-up for many applications.
  
  The experimental `--x-smart-recreate` flag which introduced this feature in Compose 1.3.0 has been removed, and a `--force-recreate` flag has been added for when you want to recreate everything.
-   Several of Compose's commands - `scale`, `stop`, `kill` and `rm` - now perform actions on multiple containers in parallel, rather than in sequence, which will run much faster on larger applications.
-   You can now specify a custom name for a service's container with `container_name`. Because Docker container names must be unique, this means you can't scale the service beyond one container.
-   You no longer have to specify a `file` option when using `extends` - it will default to the current file.
-   Service names can now contain dots, dashes and underscores.
-   Compose can now read YAML configuration from standard input, rather than from a file, by specifying `-` as the filename. This makes it easier to generate configuration dynamically:
  
  ```
  $ echo 'redis: {""image"": ""redis""}' | docker-compose --file - up
  ```
-   There's a new `docker-compose version` command which prints extended information about Compose's bundled dependencies.
-   `docker-compose.yml` now supports `log_opt` as well as `log_driver`, allowing you to pass extra configuration to a service's logging driver.
-   `docker-compose.yml` now supports `memswap_limit`, similar to `docker run --memory-swap`.
-   When mounting volumes with the `volumes` option, you can now pass in any mode supported by the daemon, not just `:ro` or `:rw`. For example, SELinux users can pass `:z` or `:Z`.
-   You can now specify a custom volume driver with the `volume_driver` option in `docker-compose.yml`, much like `docker run --volume-driver`.
-   A bug has been fixed where Compose would fail to pull images from private registries serving plain (unsecured) HTTP. The `--allow-insecure-ssl` flag, which was previously used to work around this issue, has been deprecated and now has no effect.
-   A bug has been fixed where `docker-compose build` would fail if the build depended on a private Hub image or an image from a private registry.
-   A bug has been fixed where Compose would crash if there were containers which the Docker daemon had not finished removing.
-   Two bugs have been fixed where Compose would sometimes fail with a ""Duplicate bind mount"" error, or fail to attach volumes to a container, if there was a volume path specified in `docker-compose.yml` with a trailing slash.

Thanks @mnowster, @dnephin, @ekristen, @funkyfuture, @jeffk and @lukemarsden!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1655662/assets,https://api.github.com/repos/docker/compose/releases/1655662,master,https://api.github.com/repos/docker/compose/tarball/1.4.0,https://github.com/docker/compose/releases/tag/1.4.0,https://api.github.com/repos/docker/compose/zipball/1.4.0,1.4.0,False,False
1613338,2015-07-31T15:30:12Z,2015-07-31T15:48:56Z,1.4.0 RC3,"This is a **release candidate** for version 1.4.0 of Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.4.0rc3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.4.0rc3` if you prefer Pip.

On top of the changes in RC1 and RC2, this release contains the following changes:
-   You can now specify a custom volume driver with the `volume_driver` option in `docker-compose.yml`, much like `docker run --volume-driver`.
-   Two bugs have been fixed where Compose would sometimes fail with a ""Duplicate bind mount"" error, or fail to attach volumes to a container, if there was a volume path specified in `docker-compose.yml` with a trailing slash.
-   Fixed a bug where `docker-compose build` would fail if the build depended on a private Hub image or an image from a private registry.

Here are the most important changes in 1.4.0:
-   By default, `docker-compose up` now only recreates containers for services whose configuration has changed since they were created. This should result in a dramatic speed-up for many applications.
  
  The experimental `--x-smart-recreate` flag which introduced this feature in Compose 1.3.0 has been removed, and a `--force-recreate` flag has been added for when you want to recreate everything.
-   Several of Compose's commands - `scale`, `stop`, `kill` and `rm` - now perform actions on multiple containers in parallel, rather than in sequence, which will run much faster on larger applications.
-   You can now specify a custom name for a service's container with `container_name`. Because Docker container names must be unique, this means you can't scale the service beyond one container.
-   You no longer have to specify a `file` option when using `extends` - it will default to the current file.
-   Service names can now contain dots, dashes and underscores.
-   Compose can now read YAML configuration from standard input, rather than from a file, by specifying `-` as the filename. This makes it easier to generate configuration dynamically:
  
  ```
  $ echo 'redis: {""image"": ""redis""}' | docker-compose --file - up
  ```
-   There's a new `docker-compose version` command which prints extended information about Compose's bundled dependencies.
-   `docker-compose.yml` now supports `log_opt` as well as `log_driver`, allowing you to pass extra configuration to a service's logging driver.
-   `docker-compose.yml` now supports `memswap_limit`, similar to `docker run --memory-swap`.
-   When mounting volumes with the `volumes` option, you can now pass in any mode supported by the daemon, not just `:ro` or `:rw`. For example, SELinux users can pass `:z` or `:Z`.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1613338/assets,https://api.github.com/repos/docker/compose/releases/1613338,master,https://api.github.com/repos/docker/compose/tarball/1.4.0rc3,https://github.com/docker/compose/releases/tag/1.4.0rc3,https://api.github.com/repos/docker/compose/zipball/1.4.0rc3,1.4.0rc3,False,True
1577288,2015-07-23T16:53:45Z,2015-07-23T16:59:11Z,1.4.0 RC2,"This is a **release candidate** for version 1.4.0 of Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.4.0rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.4.0rc2` if you prefer Pip.

On top of the changes in RC1, the following bugs have been fixed:
-   A bug has been fixed where Compose would fail to pull images from private registries serving plain (unsecured) HTTP. The `--allow-insecure-ssl` flag, which was previously used to work around this issue, has been deprecated and now has no effect.
-   A regression has been fixed where specifying a custom container name for a service with `container_name` would cause `docker-compose run` to fail for that service.

Here are the most important changes in 1.4.0:
-   By default, `docker-compose up` now only recreates containers for services whose configuration has changed since they were created. This should result in a dramatic speed-up for many applications.
  
  The experimental `--x-smart-recreate` flag which introduced this feature in Compose 1.3.0 has been removed, and a `--force-recreate` flag has been added for when you want to recreate everything.
-   Several of Compose's commands - `scale`, `stop`, `kill` and `rm` - now perform actions on multiple containers in parallel, rather than in sequence, which will run much faster on larger applications.
-   You can now specify a custom name for a service's container with `container_name`. Because Docker container names must be unique, this means you can't scale the service beyond one container.
-   You no longer have to specify a `file` option when using `extends` - it will default to the current file.
-   Service names can now contain dots, dashes and underscores.
-   Compose can now read YAML configuration from standard input, rather than from a file, by specifying `-` as the filename. This makes it easier to generate configuration dynamically:
  
  ```
  $ echo 'redis: {""image"": ""redis""}' | docker-compose --file - up
  ```
-   There's a new `docker-compose version` command which prints extended information about Compose's bundled dependencies.
-   `docker-compose.yml` now supports `log_opt` as well as `log_driver`, allowing you to pass extra configuration to a service's logging driver.
-   `docker-compose.yml` now supports `memswap_limit`, similar to `docker run --memory-swap`.
-   When mounting volumes with the `volumes` option, you can now pass in any mode supported by the daemon, not just `:ro` or `:rw`. For example, SELinux users can pass `:z` or `:Z`.

Thanks @dnephin, @ekristen, @funkyfuture, @jeffk and @mnowster!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1577288/assets,https://api.github.com/repos/docker/compose/releases/1577288,master,https://api.github.com/repos/docker/compose/tarball/1.4.0rc2,https://github.com/docker/compose/releases/tag/1.4.0rc2,https://api.github.com/repos/docker/compose/zipball/1.4.0rc2,1.4.0rc2,False,True
1570086,2015-07-22T10:57:04Z,2015-07-22T11:41:22Z,1.4.0 RC1,"This is a **release candidate** for version 1.4.0 of Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.4.0rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.4.0rc1` if you prefer Pip.

Here are the most important changes in 1.4.0:
-   By default, `docker-compose up` now only recreates containers for services whose configuration has changed since they were created. This should result in a dramatic speed-up for many applications.
  
  The experimental `--x-smart-recreate` flag which introduced this feature in Compose 1.3.0 has been removed, and a `--force-recreate` flag has been added for when you want to recreate everything.
-   Several of Compose's commands - `scale`, `stop`, `kill` and `rm` - now perform actions on multiple containers in parallel, rather than in sequence, which will run much faster on larger applications.
-   You can now specify a custom name for a service's container with `container_name`. Because Docker container names must be unique, this means you can't scale the service beyond one container.
-   You no longer have to specify a `file` option when using `extends` - it will default to the current file.
-   Service names can now contain dots, dashes and underscores.
-   Compose can now read YAML configuration from standard input, rather than from a file, by specifying `-` as the filename. This makes it easier to generate configuration dynamically:
  
  ```
  $ echo 'redis: {""image"": ""redis""}' | docker-compose --file - up
  ```
-   There's a new `docker-compose version` command which prints extended information about Compose's bundled dependencies.
-   `docker-compose.yml` now supports `log_opt` as well as `log_driver`, allowing you to pass extra configuration to a service's logging driver.
-   `docker-compose.yml` now supports `memswap_limit`, similar to `docker run --memory-swap`.
-   When mounting volumes with the `volumes` option, you can now pass in any mode supported by the daemon, not just `:ro` or `:rw`. For example, SELinux users can pass `:z` or `:Z`.

Thanks @dnephin, @ekristen, @funkyfuture, @jeffk and @mnowster!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1570086/assets,https://api.github.com/repos/docker/compose/releases/1570086,master,https://api.github.com/repos/docker/compose/tarball/1.4.0rc1,https://github.com/docker/compose/releases/tag/1.4.0rc1,https://api.github.com/repos/docker/compose/zipball/1.4.0rc1,1.4.0rc1,False,True
1545121,2015-07-16T10:21:01Z,2015-07-16T10:41:41Z,1.3.3,"If you're upgrading from Compose 1.2.0 or earlier, **this release contains breaking changes** - be sure to read the [1.3.0 release notes](https://github.com/docker/compose/releases/tag/1.3.0).

To install Compose 1.3.3, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.3` if you prefer Pip.

Two regressions have been fixed:
- When stopping containers gracefully, Compose was setting the timeout to 0, effectively forcing a SIGKILL every time.
- Compose would sometimes crash depending on the formatting of container data returned from the Docker API.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1545121/assets,https://api.github.com/repos/docker/compose/releases/1545121,master,https://api.github.com/repos/docker/compose/tarball/1.3.3,https://github.com/docker/compose/releases/tag/1.3.3,https://api.github.com/repos/docker/compose/zipball/1.3.3,1.3.3,False,False
1535854,2015-07-14T16:40:43Z,2015-07-14T17:09:34Z,1.3.2,"If you're upgrading from Compose 1.2.0 or earlier, **this release contains breaking changes** - be sure to read the [1.3.0 release notes](https://github.com/docker/compose/releases/tag/1.3.0).

To install Compose 1.3.2, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.2` if you prefer Pip.

The following bugs have been fixed:
- When there were one-off containers created by running `docker-compose run` on an older version of Compose, `docker-compose run` would fail with a name collision. Compose now shows an error if you have leftover containers of this type lying around, and tells you how to remove them.
- Compose was not reading Docker authentication config files created in the new location, `~/docker/config.json`, and authentication against private registries would therefore fail.
- When a container had a pseudo-TTY attached, its output in `docker-compose up` would be truncated.
- `docker-compose up --x-smart-recreate` would sometimes fail when an image tag was updated.
- `docker-compose up` would sometimes create two containers with the same numeric suffix.
- `docker-compose rm` and `docker-compose ps` would sometimes list services that aren't part of the current project (though no containers were erroneously removed).
- Some `docker-compose` commands would not show an error if invalid service names were passed in.

Thanks @dano, @josephpage, @kevinsimper, @lieryan, @phemmer, @soulrebel and @sschepens!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1535854/assets,https://api.github.com/repos/docker/compose/releases/1535854,master,https://api.github.com/repos/docker/compose/tarball/1.3.2,https://github.com/docker/compose/releases/tag/1.3.2,https://api.github.com/repos/docker/compose/zipball/1.3.2,1.3.2,False,False
1445918,2015-06-22T00:32:36Z,2015-06-22T15:04:21Z,1.3.1,"If you're upgrading from Compose 1.2.0 or earlier, **this release contains breaking changes** - be sure to read the [1.3.0 release notes](https://github.com/docker/compose/releases/tag/1.3.0).

To install Compose 1.3.1, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.1` if you prefer Pip.

The following bugs have been fixed:
- `docker-compose build` would always attempt to pull the base image before building.
- `docker-compose help migrate-to-labels` failed with an error.
- If no network mode was specified, Compose would set it to ""bridge"", rather than allowing the Docker daemon to use its configured default network mode.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1445918/assets,https://api.github.com/repos/docker/compose/releases/1445918,master,https://api.github.com/repos/docker/compose/tarball/1.3.1,https://github.com/docker/compose/releases/tag/1.3.1,https://api.github.com/repos/docker/compose/zipball/1.3.1,1.3.1,False,False
1434341,2015-06-18T18:25:10Z,2015-06-18T18:49:55Z,1.3.0,"To install Compose 1.3.0, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose` if you prefer Pip.

Optionally, you can also install [command completion](http://docs.docker.com/compose/completion/) for bash or zsh.

Firstly, two important notes:
- **This release contains breaking changes, and you will need to either remove or migrate your existing containers before running your app** - see the [upgrading section of the install docs](http://docs.docker.com/compose/install/#upgrading) for details.
- Compose now requires Docker 1.6.0 or later.

We've done a lot of work in this release to remove hacks and make Compose more stable:
- Compose now uses container labels, rather than names, to keep track of containers. This makes Compose both faster and easier to integrate with your own tools.
- Compose no longer uses ""intermediate containers"" when recreating containers for a service. This makes `docker-compose up` less complex and more resilient to failure.

There are some new features:
- `docker-compose up` has an **experimental** new behaviour: it will only recreate containers for services whose configuration has changed in `docker-compose.yml`. This will eventually become the default, but for now you can take it for a spin:
  
  ```
  $ docker-compose up --x-smart-recreate
  ```
- When invoked in a subdirectory of a project, `docker-compose` will now climb up through parent directories until it finds a `docker-compose.yml`.

Several new configuration keys have been added to `docker-compose.yml`:
- `dockerfile`, like `docker build --file`, lets you specify an alternate Dockerfile to use with `build`.
- `labels`, like `docker run --labels`, lets you add custom metadata to containers.
- `extra_hosts`, like `docker run --add-host`, lets you add entries to a container's `/etc/hosts` file.
- `pid: host`, like `docker run --pid=host`, lets you reuse the same PID namespace as the host machine.
- `cpuset`, like `docker run --cpuset-cpus`, lets you specify which CPUs to allow execution in.
- `read_only`, like `docker run --read-only`, lets you mount a container's filesystem as read-only.
- `security_opt`, like `docker run --security-opt`, lets you specify [security options](https://docs.docker.com/reference/run/#security-configuration).
- `log_driver`, like `docker run --log-driver`, lets you specify a [log driver](https://docs.docker.com/reference/run/#logging-drivers-log-driver).

Many bugs have been fixed, including the following:
- The output of `docker-compose run` was sometimes truncated, especially when running under Jenkins.
- A service's volumes would sometimes not update after volume configuration was changed in `docker-compose.yml`.
- Authenticating against third-party registries would sometimes fail.
- `docker-compose run --rm` would fail to remove the container if the service had a `restart` policy in place.
- `docker-compose scale` would refuse to scale a service beyond 1 container if it exposed a specific port number on the host.
- Compose would refuse to create multiple volume entries with the same host path.

Thanks @ahromis, @albers, @aleksandr-vin, @antoineco, @ccverak, @chernjie, @dnephin, @edmorley, @fordhurley, @josephpage, @KyleJamesWalker, @lsowen, @mchasal, @noironetworks, @sdake, @sdurrheimer, @sherter, @stephenlawrence, @thaJeztah, @thieman, @turtlemonvh, @twhiteman, @vdemeester, @xuxinkun and @zwily!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1434341/assets,https://api.github.com/repos/docker/compose/releases/1434341,master,https://api.github.com/repos/docker/compose/tarball/1.3.0,https://github.com/docker/compose/releases/tag/1.3.0,https://api.github.com/repos/docker/compose/zipball/1.3.0,1.3.0,False,False
1418628,2015-06-15T18:23:55Z,2015-06-15T20:00:43Z,1.3.0 RC3,"This is a **release candidate** for version 1.3.0 of Docker Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.0rc3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.0rc3` if you prefer Pip.

**This release contains breaking changes, and you will need to either remove or migrate your existing containers before running your app** - see the [upgrading section of the install docs](https://github.com/docker/compose/blob/1.3.0rc2/docs/install.md#upgrading) for details.

There are lots of new things in 1.3 - have a look at the **[RC1 changelog](https://github.com/docker/compose/releases/tag/1.3.0rc1)** for details.

On top of [RC2](https://github.com/docker/compose/releases/tag/1.3.0rc2), several bugs have been fixed:
- `docker-compose scale` would refuse to scale a service beyond 1 container if it exposed a specific port number on the host.
- Container creation would sometimes fail with a ""Duplicate volume"" error.
- Compose would refuse to create multiple volume entries with the same host path.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1418628/assets,https://api.github.com/repos/docker/compose/releases/1418628,master,https://api.github.com/repos/docker/compose/tarball/1.3.0rc3,https://github.com/docker/compose/releases/tag/1.3.0rc3,https://api.github.com/repos/docker/compose/zipball/1.3.0rc3,1.3.0rc3,False,True
1396312,2015-06-09T22:24:15Z,2015-06-09T22:52:47Z,1.3.0 RC2,"This is a **release candidate** for version 1.3.0 of Docker Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.0rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.0rc2` if you prefer Pip.

**This release contains breaking changes, and you will need to either remove or migrate your existing containers before running your app** - see the [upgrading section of the install docs](https://github.com/docker/compose/blob/1.3.0rc2/docs/install.md#upgrading) for details.

There are lots of new things in 1.3 - have a look at the **[RC1 changelog](https://github.com/docker/compose/releases/tag/1.3.0rc1)** for details.

In this RC, several bugs have been fixed:
- SSL certificate verification would sometimes fail.
- `docker-compose run --rm` was not removing the container when finished.
- `docker-compose up` was printing duplicate log messages when recreating containers.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1396312/assets,https://api.github.com/repos/docker/compose/releases/1396312,master,https://api.github.com/repos/docker/compose/tarball/1.3.0rc2,https://github.com/docker/compose/releases/tag/1.3.0rc2,https://api.github.com/repos/docker/compose/zipball/1.3.0rc2,1.3.0rc2,False,True
1338654,2015-05-27T16:52:23Z,2015-05-27T17:11:39Z,1.3.0 RC1,"This is a **release candidate** for version 1.3.0 of Docker Compose. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.3.0rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Or `pip install -U docker-compose==1.3.0rc1` if you prefer Pip.

Now, two important notes:
- **This release contains breaking changes, and you will need to either remove or migrate your existing containers before running your app** - see the [upgrading section of the install docs](https://github.com/docker/compose/blob/1.3.0rc1/docs/install.md#upgrading) for details.
- Compose now requires Docker 1.6.0 or later.

We've done a lot of work in this release to remove hacks and make Compose more stable:
- Compose now uses Docker labels, rather than container names, to keep track of containers. This is both cleaner and more performant.
- Compose no longer uses ""intermediate containers"" when recreating containers for a service. This makes `docker-compose up` less complex and more resilient to failure.

There are some new features:
- `docker-compose up` has an **experimental** new behaviour: it will only recreate containers for services whose configuration has changed in `docker-compose.yml`. This will eventually become the default, but for now you can take it for a spin:
  
  ```
  $ docker-compose up --x-smart-recreate
  ```
- When invoked in a subdirectory of a project, `docker-compose` will now climb up through parent directories until it finds a `docker-compose.yml`.

Several new configuration keys have been added to `docker-compose.yml`:
- `dockerfile`, like `docker build --file`, lets you specify an alternate Dockerfile to use with `build`.
- `labels`, like `docker run --labels`, lets you add custom metadata to containers.
- `extra_hosts`, like `docker run --add-host`, lets you add entries to a container's `/etc/hosts` file.
- `pid: host`, like `docker run --pid=host`, lets you reuse the same PID namespace as the host machine.
- `cpuset`, like `docker run --cpuset-cpus`, lets you specify which CPUs to allow execution in.
- `read_only`, like `docker run --read-only`, lets you mount a container's filesystem as read-only.
- `security_opt`, like `docker run --security-opt`, lets you specify [security options](https://docs.docker.com/reference/run/#security-configuration).
- `log_driver`, like `docker run --log-driver`, lets you specify a [log driver](https://docs.docker.com/reference/run/#logging-drivers-log-driver).

Many bugs have been fixed, including the following:
- The output of `docker-compose run` was sometimes truncated, especially when running under Jenkins.
- A service's volumes would sometimes not update after volume configuration was changed in `docker-compose.yml`.
- Authenticating against third-party registries would sometimes fail.
- `docker-compose run --rm` would fail to remove the container if the service had a `restart` policy in place.

Thanks @ahromis, @albers, @aleksandr-vin, @antoineco, @ccverak, @chernjie, @dnephin, @josephpage, @KyleJamesWalker, @lsowen, @mchasal, @sdake, @sherter, @stephenlawrence, @turtlemonvh, @vdemeester, @xuxinkun and @zwily!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1338654/assets,https://api.github.com/repos/docker/compose/releases/1338654,master,https://api.github.com/repos/docker/compose/tarball/1.3.0rc1,https://github.com/docker/compose/releases/tag/1.3.0rc1,https://api.github.com/repos/docker/compose/zipball/1.3.0rc1,1.3.0rc1,False,True
1175804,2015-04-16T12:53:27Z,2015-04-16T17:03:43Z,1.2.0,"To install Compose 1.2.0, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Optionally, you can also install [command completion](https://github.com/docker/compose/blob/1.2.0/docs/completion.md) for the bash shell.

Here's what's new:
- `docker-compose.yml` now supports an `extends` option, which enables a service to inherit configuration from another service in another configuration file. This is really good for sharing common configuration between apps, or for configuring the same app for different environments. Here's the [documentation](https://github.com/docker/compose/blob/master/docs/yml.md#extends).
- When using Compose with a Swarm cluster, containers that depend on one another will be co-scheduled on the same node. This means that most Compose apps will now work out of the box, as long as they don't use `build`.
- Repeated invocations of `docker-compose up` when using Compose with a Swarm cluster now work reliably.
- Directories passed to `build`, filenames passed to `env_file` and volume host paths passed to `volumes` are now treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.
- A service can now share another service's network namespace with `net: container:<service>`.
- `volumes_from` and `net: container:<service>` entries are taken into account when resolving dependencies, so `docker-compose up <service>` will correctly start all dependencies of `<service>`.
- `docker-compose run` now accepts a `--user` argument to specify a user to run the command as, just like `docker run`.
- The `up`, `stop` and `restart` commands now accept a `--timeout` (or `-t`) argument to specify how long to wait when attempting to gracefully stop containers, just like `docker stop`.
- `docker-compose rm` now accepts `-f` as a shorthand for `--force`, just like `docker rm`.

Thanks, @abesto, @albers, @alunduil, @dnephin, @funkyfuture, @gilclark, @IanVS, @KingsleyKelly, @knutwalker, @thaJeztah and @vmalloc!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1175804/assets,https://api.github.com/repos/docker/compose/releases/1175804,master,https://api.github.com/repos/docker/compose/tarball/1.2.0,https://github.com/docker/compose/releases/tag/1.2.0,https://api.github.com/repos/docker/compose/zipball/1.2.0,1.2.0,False,False
1145387,2015-04-09T14:29:36Z,2015-04-09T17:42:43Z,1.2.0 RC4,"This is a **release candidate** for Compose 1.2.0. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.2.0rc4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Optionally, you can also install [command completion](https://github.com/docker/compose/blob/1.2.0rc4/docs/completion.md) for the bash shell.

On top of the changes listed below for RC1-RC3, the following bugs have been fixed:
- Environment variables and the user's home directory (~) were not expanding properly in `volumes` host paths.

Here are the changes for RC3:
- When copying a service's configuration with `extends`, `image` and `build` could come into conflict, resulting in an error, as it makes no sense to have both defined. Each now overwrites the other: if a service with `image` defined is extended and `build` is added, the `image` entry will be removed.
- When copying a service's configuration with `extends`, if both services defined a multi-value option such as `ports` or `dns`, the original value would be completely discarded. They are now concatenated instead.
- When a relative path is supplied to `build`, it is treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.

Here are the changes for RC2:
- A bug has been fixed where containers were being created with blank entries for ""Dns"" and ""DnsSearch"", causing DNS lookups from within a container to fail.

Here are the changes for RC1:
- `docker-compose.yml` now supports an `extends` option, which enables a service to inherit configuration from another service in another configuration file. This is really good for sharing common configuration between apps, or for configuring the same app for different environments. Here's the [documentation](https://github.com/docker/compose/blob/master/docs/yml.md#extends).
- When using Compose with a Swarm cluster, containers that depend on one another will be co-scheduled on the same node. This means that most Compose apps will now work out of the box, as long as they don't use `build`.
- Repeated invocations of `docker-compose up` when using Compose with a Swarm cluster now work reliably.
- Filenames in `env_file` and volume host paths in `volumes` are now treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.
- A service can now share another service's network namespace with `net: container:<service>`.
- `volumes_from` and `net: container:<service>` entries are taken into account when resolving dependencies, so `docker-compose up <service>` will correctly start all dependencies of `<service>`.
- Problems with authentication when using images from third-party registries have been fixed.
- `docker-compose run` now accepts a `--user` argument to specify a user to run the command as, just like `docker run`.
- The `up`, `stop` and `restart` commands now accept a `--timeout` (or `-t`) argument to specify how long to wait when attempting to gracefully stop containers, just like `docker stop`.
- `docker-compose rm` now accepts `-f` as a shorthand for `--force`, just like `docker rm`.

Thanks, @abesto, @albers, @alunduil, @dnephin, @funkyfuture, @gilclark, @IanVS, @KingsleyKelly, @knutwalker, @moysesb, @thaJeztah and @vmalloc!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1145387/assets,https://api.github.com/repos/docker/compose/releases/1145387,master,https://api.github.com/repos/docker/compose/tarball/1.2.0rc4,https://github.com/docker/compose/releases/tag/1.2.0rc4,https://api.github.com/repos/docker/compose/zipball/1.2.0rc4,1.2.0rc4,False,True
1115767,2015-04-01T15:00:52Z,2015-04-01T18:06:00Z,1.2.0 RC3,"This is a **release candidate** for Compose 1.2.0. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.2.0rc3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Optionally, you can also install [command completion](https://github.com/docker/compose/blob/1.2.0rc3/docs/completion.md) for the bash shell.

On top of the changes listed below for RC1 and RC2, the following bugs have been fixed:
- When copying a service's configuration with `extends`, `image` and `build` could come into conflict, resulting in an error, as it makes no sense to have both defined. Each now overwrites the other: if a service with `image` defined is extended and `build` is added, the `image` entry will be removed.
- When copying a service's configuration with `extends`, if both services defined a multi-value option such as `ports` or `dns`, the original value would be completely discarded. They are now concatenated instead.
- When a relative path is supplied to `build`, it is treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.

Here are the changes for RC2:
- A bug has been fixed where containers were being created with blank entries for ""Dns"" and ""DnsSearch"", causing DNS lookups from within a container to fail.

Here are the changes for RC1:
- `docker-compose.yml` now supports an `extends` option, which enables a service to inherit configuration from another service in another configuration file. This is really good for sharing common configuration between apps, or for configuring the same app for different environments. Here's the [documentation](https://github.com/docker/compose/blob/master/docs/yml.md#extends).
- When using Compose with a Swarm cluster, containers that depend on one another will be co-scheduled on the same node. This means that most Compose apps will now work out of the box, as long as they don't use `build`.
- Repeated invocations of `docker-compose up` when using Compose with a Swarm cluster now work reliably.
- Filenames in `env_file` and volume host paths in `volumes` are now treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.
- A service can now share another service's network namespace with `net: container:<service>`.
- `volumes_from` and `net: container:<service>` entries are taken into account when resolving dependencies, so `docker-compose up <service>` will correctly start all dependencies of `<service>`.
- Problems with authentication when using images from third-party registries have been fixed.
- `docker-compose run` now accepts a `--user` argument to specify a user to run the command as, just like `docker run`.
- The `up`, `stop` and `restart` commands now accept a `--timeout` (or `-t`) argument to specify how long to wait when attempting to gracefully stop containers, just like `docker stop`.
- `docker-compose rm` now accepts `-f` as a shorthand for `--force`, just like `docker rm`.

Thanks, @abesto, @albers, @alunduil, @dnephin, @funkyfuture, @gilclark, @IanVS, @KingsleyKelly, @knutwalker, @moysesb, @thaJeztah and @vmalloc!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1115767/assets,https://api.github.com/repos/docker/compose/releases/1115767,master,https://api.github.com/repos/docker/compose/tarball/1.2.0rc3,https://github.com/docker/compose/releases/tag/1.2.0rc3,https://api.github.com/repos/docker/compose/zipball/1.2.0rc3,1.2.0rc3,False,True
1091301,2015-03-25T21:04:55Z,2015-03-26T16:46:49Z,1.2.0 RC2,"This is a **release candidate** for Compose 1.2.0. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.2.0rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Optionally, you can also install [command completion](https://github.com/docker/compose/blob/1.2.0rc2/docs/completion.md) for the bash shell.
- On top of the changes listed below for RC1, a bug has been fixed where containers were being created with blank entries for ""Dns"" and ""DnsSearch"", causing DNS lookups from within a container to fail.

Here are the changes for RC1:
- `docker-compose.yml` now supports an `extends` option, which enables a service to inherit configuration from another service in another configuration file. This is really good for sharing common configuration between apps, or for configuring the same app for different environments. Here's the [documentation](https://github.com/docker/compose/blob/master/docs/yml.md#extends).
- When using Compose with a Swarm cluster, containers that depend on one another will be co-scheduled on the same node. This means that most Compose apps will now work out of the box, as long as they don't use `build`.
- Repeated invocations of `docker-compose up` when using Compose with a Swarm cluster now work reliably.
- Filenames in `env_file` and volume host paths in `volumes` are now treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.
- A service can now share another service's network namespace with `net: container:<service>`.
- `volumes_from` and `net: container:<service>` entries are taken into account when resolving dependencies, so `docker-compose up <service>` will correctly start all dependencies of `<service>`.
- Problems with authentication when using images from third-party registries have been fixed.
- `docker-compose run` now accepts a `--user` argument to specify a user to run the command as, just like `docker run`.
- The `up`, `stop` and `restart` commands now accept a `--timeout` (or `-t`) argument to specify how long to wait when attempting to gracefully stop containers, just like `docker stop`.
- `docker-compose rm` now accepts `-f` as a shorthand for `--force`, just like `docker rm`.

Thanks, @abesto, @albers, @alunduil, @dnephin, @funkyfuture, @gilclark, @IanVS, @KingsleyKelly, @knutwalker, @thaJeztah and @vmalloc!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1091301/assets,https://api.github.com/repos/docker/compose/releases/1091301,master,https://api.github.com/repos/docker/compose/tarball/1.2.0rc2,https://github.com/docker/compose/releases/tag/1.2.0rc2,https://api.github.com/repos/docker/compose/zipball/1.2.0rc2,1.2.0rc2,False,True
1086451,2015-03-24T20:40:40Z,2015-03-24T22:18:30Z,1.2.0 RC1,"This is a **release candidate** for Compose 1.2.0. To try it out, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.2.0rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Optionally, you can also install [command completion](https://github.com/docker/compose/blob/1.2.0rc1/docs/completion.md) for the bash shell.

Here's what's new:
- `docker-compose.yml` now supports an `extends` option, which enables a service to inherit configuration from another service in another configuration file. This is really good for sharing common configuration between apps, or for configuring the same app for different environments. Here's the [documentation](https://github.com/docker/compose/blob/master/docs/yml.md#extends).
- When using Compose with a Swarm cluster, containers that depend on one another will be co-scheduled on the same node. This means that most Compose apps will now work out of the box, as long as they don't use `build`.
- Repeated invocations of `docker-compose up` when using Compose with a Swarm cluster now work reliably.
- Filenames in `env_file` and volume host paths in `volumes` are now treated as relative to the _directory of the configuration file_, not the directory that `docker-compose` is being run in. In the majority of cases, those are the same, but if you use the `-f|--file` argument to specify a configuration file in another directory, **this is a breaking change**.
- A service can now share another service's network namespace with `net: container:<service>`.
- `volumes_from` and `net: container:<service>` entries are taken into account when resolving dependencies, so `docker-compose up <service>` will correctly start all dependencies of `<service>`.
- Problems with authentication when using images from third-party registries have been fixed.
- `docker-compose run` now accepts a `--user` argument to specify a user to run the command as, just like `docker run`.
- The `up`, `stop` and `restart` commands now accept a `--timeout` (or `-t`) argument to specify how long to wait when attempting to gracefully stop containers, just like `docker stop`.
- `docker-compose rm` now accepts `-f` as a shorthand for `--force`, just like `docker rm`.

Thanks, @abesto, @albers, @alunduil, @dnephin, @funkyfuture, @gilclark, @IanVS, @KingsleyKelly, @knutwalker, @thaJeztah and @vmalloc!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/1086451/assets,https://api.github.com/repos/docker/compose/releases/1086451,master,https://api.github.com/repos/docker/compose/tarball/1.2.0rc1,https://github.com/docker/compose/releases/tag/1.2.0rc1,https://api.github.com/repos/docker/compose/zipball/1.2.0rc1,1.2.0rc1,False,True
988062,2015-02-25T18:42:28Z,2015-02-25T19:11:07Z,1.1.0,"Fig has been renamed to Docker Compose, or just Compose for short. This has several implications for you:
- The command you type is now `docker-compose`, not `fig`.
- You should rename your `fig.yml` to `docker-compose.yml`.
- If you’re installing via PyPi, the package is now `docker-compose`, so install it with `pip install docker-compose`.

To install Compose, run the following commands:

```
curl -L https://github.com/docker/compose/releases/download/1.1.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
```

Besides that, there’s a lot of new stuff in this release:
- `docker-compose run` now has a `--service-ports` flag for exposing ports on the given service. This is useful for e.g. running your webapp with an interactive debugger.
- You can now link to containers outside your app with the `external_links` option in docker-compose.yml.
- You can now prevent `docker-compose up` from automatically building images with the `--no-build` option. This will make fewer API calls and run faster.
- If you don’t specify a tag when using the `image` key, Compose will default to the `latest` tag, rather than pulling all tags.
- `docker-compose kill` now supports the `-s` flag, allowing you to specify the exact signal you want to send to a service’s containers.
- docker-compose.yml now has an `env_file` key, analogous to `docker run --env-file`, letting you specify multiple environment variables in a separate file. This is great if you have a lot of them, or if you want to keep sensitive information out of version control.
- docker-compose.yml now supports the `dns_search`, `cap_add`, `cap_drop`, `cpu_shares` and `restart` options, analogous to `docker run`’s `--dns-search`, `--cap-add`, `--cap-drop`, `--cpu-shares` and `--restart` options.
- Compose now ships with Bash tab completion - see the installation and usage docs at https://github.com/docker/compose/blob/1.1.0/docs/completion.md
- We’ve made a few small changes to ensure that Compose will work with Swarm, Docker’s new clustering tool (https://github.com/docker/swarm). Eventually you'll be able to point Compose at a Swarm cluster instead of a standalone Docker host and it’ll run your containers on the cluster with no extra work from you. As Swarm is still developing, integration is rough and lots of Compose features don't work yet. Check the [integration doc](https://github.com/docker/compose/blob/master/SWARM.md) to see how it's progressing.
- A number of bugs have been fixed - see the milestone for details: https://github.com/docker/compose/issues?q=milestone%3A1.1.0+

Thanks @dnephin, @squebe, @jbalonso, @raulcd, @benlangfeld, @albers, @ggtools, @bersace, @dtenenba, @petercv, @drewkett, @TFenby, @paulRbr, @Aigeruth and @salehe!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/988062/assets,https://api.github.com/repos/docker/compose/releases/988062,master,https://api.github.com/repos/docker/compose/tarball/1.1.0,https://github.com/docker/compose/releases/tag/1.1.0,https://api.github.com/repos/docker/compose/zipball/1.1.0,1.1.0,False,False
898750,2015-01-29T23:00:26Z,2015-01-30T00:21:01Z,1.1.0-rc2,"Fig has been renamed to Docker Compose, or just Compose for short. This has several implications for you:
- The command you type is now `docker-compose`, not `fig`.
- You should rename your fig.yml to docker-compose.yml.
- The PyPi package is now `docker-compose`.

This is a **release candidate for Docker Compose 1.1.0**. To try it out, install via curl:

```
curl -L https://github.com/docker/fig/releases/download/1.1.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose; chmod +x /usr/local/bin/docker-compose
```

(If you install via PyPi, use `pip install docker-compose==1.1.0-rc2`.)

On top of the changelog for 1.1.0-rc1 (see below), the following bugs have been fixed:
- When an environment variables file specified with `env_file` doesn't exist, Compose was showing a stack trace instead of a helpful error.
- Configuration files using the old name (`fig.yml`) were not being read unless explicitly specified with `docker-compose -f`. Compose now reads them and prints a deprecation warning.
- Bash tab completion now reads `fig.yml` if it's present.

Here's the changelog for 1.1.0-rc1:
- We’ve made a few small changes to ensure that Compose will work with Swarm, Docker’s new clustering tool (https://github.com/docker/swarm). Eventually you'll be able to point Compose at a Swarm cluster instead of a standalone Docker host and it’ll run your containers on the cluster with no extra work from you. As Swarm is still developing, integration is rough and lots of Compose features don't work yet.
- `docker-compose run` now has a `--service-ports` flag for exposing ports on the given service. This is useful for e.g. running your webapp with an interactive debugger.
- You can now link to containers outside your app with the `external_links` option in docker-compose.yml.
- You can now prevent `docker-compose up` from automatically building images with the `--no-build` option. This will make fewer API calls and run faster.
- If you don’t specify a tag when using the `image` key, Compose will default to the `latest` tag, rather than pulling all tags.
- `docker-compose kill` now supports the `-s` flag, allowing you to specify the exact signal you want to send to a service’s containers.
- docker-compose.yml now has an `env_file` key, analogous to `docker run --env-file`, letting you specify multiple environment variables in a separate file. This is great if you have a lot of them, or if you want to keep sensitive information out of version control.
- docker-compose.yml now supports the `dns_search`, `cap_add`, `cap_drop` and `restart` options, analogous to `docker run`’s `--dns-search`, `--cap-add`, `--cap-drop` and `--restart` options.
- Compose now ships with Bash tab completion - see the installation and usage docs at https://github.com/docker/fig/blob/1.1.0-rc1/docs/completion.md
- A number of bugs have been fixed - see the milestone for details: https://github.com/docker/fig/issues?q=milestone%3A1.1.0+
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/898750/assets,https://api.github.com/repos/docker/compose/releases/898750,master,https://api.github.com/repos/docker/compose/tarball/1.1.0-rc2,https://github.com/docker/compose/releases/tag/1.1.0-rc2,https://api.github.com/repos/docker/compose/zipball/1.1.0-rc2,1.1.0-rc2,False,True
869286,2015-01-20T22:50:39Z,2015-01-20T23:11:06Z,1.1.0-rc1,"Fig has been renamed to Docker Compose, or just Compose for short. This has several implications for you:
- The command you type is now `docker-compose`, not `fig`.
- You should rename your fig.yml to docker-compose.yml.
- The PyPi package is now `docker-compose`.

This is a **release candidate for Docker Compose 1.1.0**. To try it out, install via curl:

```
curl -L https://github.com/docker/fig/releases/download/1.1.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose; chmod +x /usr/local/bin/docker-compose
```

(If you install via PyPi, use `pip install docker-compose==1.1.0-rc1`.)

Besides the rename, there’s a lot of new stuff:
- We’ve made a few small changes to ensure that Compose will work with Swarm, Docker’s new clustering tool (https://github.com/docker/swarm). Eventually you'll be able to point Compose at a Swarm cluster instead of a standalone Docker host and it’ll run your containers on the cluster with no extra work from you. As Swarm is still developing, integration is rough and lots of Compose features don't work yet.
- `docker-compose run` now has a `--service-ports` flag for exposing ports on the given service. This is useful for e.g. running your webapp with an interactive debugger.
- You can now link to containers outside your app with the `external_links` option in docker-compose.yml.
- You can now prevent `docker-compose up` from automatically building images with the `--no-build` option. This will make fewer API calls and run faster.
- If you don’t specify a tag when using the `image` key, Compose will default to the `latest` tag, rather than pulling all tags.
- `docker-compose kill` now supports the `-s` flag, allowing you to specify the exact signal you want to send to a service’s containers.
- docker-compose.yml now has an `env_file` key, analogous to `docker run --env-file`, letting you specify multiple environment variables in a separate file. This is great if you have a lot of them, or if you want to keep sensitive information out of version control.
- docker-compose.yml now supports the `dns_search`, `cap_add`, `cap_drop` and `restart` options, analogous to `docker run`’s `--dns-search`, `--cap-add`, `--cap-drop` and `--restart` options.
- A number of bugs have been fixed - see the milestone for details: https://github.com/docker/fig/issues?q=milestone%3A1.1.0+
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/869286/assets,https://api.github.com/repos/docker/compose/releases/869286,master,https://api.github.com/repos/docker/compose/tarball/1.1.0-rc1,https://github.com/docker/compose/releases/tag/1.1.0-rc1,https://api.github.com/repos/docker/compose/zipball/1.1.0-rc1,1.1.0-rc1,False,True
679851,2014-11-05T10:58:50Z,2014-11-05T12:05:16Z,1.0.1,"[Install/upgrade instructions here.](http://fig.sh/install.html)
- Added an `--allow-insecure-ssl` option to allow `fig up`, `fig run` and `fig pull` to pull from insecure registries.
- Fixed `fig run` not showing output in Jenkins.
- Fixed a bug where Fig couldn't build Dockerfiles with ADD statements pointing at URLs.
",https://api.github.com/users/bfirsh,40906,bfirsh,https://api.github.com/repos/docker/compose/releases/679851/assets,https://api.github.com/repos/docker/compose/releases/679851,master,https://api.github.com/repos/docker/compose/tarball/1.0.1,https://github.com/docker/compose/releases/tag/1.0.1,https://api.github.com/repos/docker/compose/zipball/1.0.1,1.0.1,False,False
631754,2014-10-16T17:54:56Z,2014-10-16T18:07:18Z,1.0.0,"[Install/upgrade instructions here.](http://fig.sh/install.html)

The highlights:
- [Fig has joined Docker.](https://www.orchardup.com/blog/orchard-is-joining-docker) Fig will continue to be maintained, but we'll also be incorporating the best bits of Fig into Docker itself.
  
  This means the GitHub repository has moved to [https://github.com/docker/fig](https://github.com/docker/fig) and our IRC channel is now #docker-fig on Freenode.
- Fig can be used with the [official Docker OS X installer](https://docs.docker.com/installation/mac/). Boot2Docker will mount the home directory from your host machine so volumes work as expected.
- Fig supports Docker 1.3.
- It is now possible to connect to the Docker daemon using TLS by using the `DOCKER_CERT_PATH` and `DOCKER_TLS_VERIFY` environment variables.
- There is a new `fig port` command which outputs the host port binding of a service, in a similar way to `docker port`.
- There is a new `fig pull` command which pulls the latest images for a service.
- There is a new `fig restart` command which restarts a service's containers.
- Fig creates multiple containers in service by appending a number to the service name (e.g. `db_1`, `db_2`, etc). As a convenience, Fig will now give the first container an alias of the service name (e.g. `db`).
  
  This link alias is also a valid hostname and added to `/etc/hosts` so you can connect to linked services using their hostname. For example, instead of resolving the environment variables `DB_PORT_5432_TCP_ADDR` and `DB_PORT_5432_TCP_PORT`, you could just use the hostname `db` and port `5432` directly.
- Volume definitions now support `ro` mode, expanding `~` and expanding environment variables.
- `.dockerignore` is supported when building.
- The project name can be set with the `FIG_PROJECT_NAME` environment variable.
- The `--env` and `--entrypoint` options have been added to `fig run`.
- The Fig binary for Linux is now linked against an older version of glibc so it works on CentOS 6 and Debian Wheezy.

Other things:
- `fig ps` now works on Jenkins and makes fewer API calls to the Docker daemon.
- `--verbose` displays more useful debugging output.
- When starting a service where `volumes_from` points to a service without any containers running, that service will now be started.
- Lots of docs improvements. Notably, environment variables are documented and official repositories are used throughout.

Thanks @dnephin, @d11wtq, @marksteve, @rubbish, @jbalonso, @timfreund, @alunduil, @mieciu, @shuron, @moss, @suzaku and @chmouel! Whew.
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/631754/assets,https://api.github.com/repos/docker/compose/releases/631754,master,https://api.github.com/repos/docker/compose/tarball/1.0.0,https://github.com/docker/compose/releases/tag/1.0.0,https://api.github.com/repos/docker/compose/zipball/1.0.0,1.0.0,False,False
456069,2014-07-29T01:17:28Z,2014-07-31T19:28:05Z,0.5.2,"[Install/upgrade instructions here.](http://orchardup.github.io/fig/install.html)
- Added a `--no-cache` option to `fig build`, which bypasses the cache just like `docker build --no-cache`.
- Fixed the `dns:` fig.yml option, which was causing fig to error out.
- Fixed a bug where fig couldn't start under Python 2.6.
- Fixed a log-streaming bug that occasionally caused fig to exit.

Thanks @dnephin and @marksteve!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/456069/assets,https://api.github.com/repos/docker/compose/releases/456069,master,https://api.github.com/repos/docker/compose/tarball/0.5.2,https://github.com/docker/compose/releases/tag/0.5.2,https://api.github.com/repos/docker/compose/zipball/0.5.2,0.5.2,False,False
429180,2014-07-14T23:05:13Z,2014-07-14T23:05:55Z,0.5.1,"[Install/upgrade instructions here.](http://orchardup.github.io/fig/install.html) Note that Fig now requires **Docker 1.0 or greater**.
- If a service has a command defined, `fig run [service]` with no further arguments will run it.
- The project name now defaults to the directory containing fig.yml, not the current working directory (if they're different)
- `volumes_from` now works properly with containers as well as services
- Fixed a race condition when recreating containers in `fig up`

Thanks @ryanbrainard and @d11wtq!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/429180/assets,https://api.github.com/repos/docker/compose/releases/429180,master,https://api.github.com/repos/docker/compose/tarball/0.5.1,https://github.com/docker/compose/releases/tag/0.5.1,https://api.github.com/repos/docker/compose/zipball/0.5.1,0.5.1,False,False
425235,2014-07-11T21:07:40Z,2014-07-11T21:23:43Z,0.5.0,"[Install/upgrade instructions here.](http://orchardup.github.io/fig/install.html) Note that Fig now requires **Docker 1.0 or greater**.

Lots of new stuff in this one:
- Fig now starts links when you run `fig run` or `fig up`.
  
  For example, if you have a `web` service which depends on a `db` service, `fig run web ...` will start the `db` service.
- Environment variables can now be resolved from the environment that Fig is running in. Just specify it as a blank variable in your `fig.yml` and, if set, it'll be resolved:
  
  ```
  environment:
   RACK_ENV: development
   SESSION_SECRET:
  ```
- `volumes_from` is now supported in `fig.yml`. All of the volumes from the specified services and containers will be mounted:
  
  ```
  volumes_from:
  - service_name
  - container_name
  ```
- The `net` and `workdir` options are now supported in `fig.yml`.
- The `hostname` option now works in the same way as the Docker CLI, splitting out into a `domainname` option.
- TTY behaviour is far more robust, and resizes are supported correctly.
- Load YAML files safely.

Thanks to @d11wtq, @ryanbrainard, @rail44, @j0hnsmith, @binarin, @Elemecca and @mozz100 for their help with this release!
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/425235/assets,https://api.github.com/repos/docker/compose/releases/425235,master,https://api.github.com/repos/docker/compose/tarball/0.5.0,https://github.com/docker/compose/releases/tag/0.5.0,https://api.github.com/repos/docker/compose/zipball/0.5.0,0.5.0,False,False
381698,2014-06-18T15:45:21Z,2014-06-18T16:24:59Z,0.4.2,"This release fixes various encoding errors when using `fig run`, `fig up` and `fig build`.

[Install/upgrade instructions here.](http://orchardup.github.io/fig/install.html)
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/381698/assets,https://api.github.com/repos/docker/compose/releases/381698,master,https://api.github.com/repos/docker/compose/tarball/0.4.2,https://github.com/docker/compose/releases/tag/0.4.2,https://api.github.com/repos/docker/compose/zipball/0.4.2,0.4.2,False,False
309913,2014-05-08T12:03:21Z,2014-05-08T12:05:06Z,0.4.1,"- Add support for Docker 0.11.0. (Thanks @marksteve!)
- Make project name configurable. (Thanks @jefmathiot!)
- Return correct exit code from `fig run`.

[Install/upgrade instructions here](http://orchardup.github.io/fig/install.html).
",https://api.github.com/users/bfirsh,40906,bfirsh,https://api.github.com/repos/docker/compose/releases/309913/assets,https://api.github.com/repos/docker/compose/releases/309913,master,https://api.github.com/repos/docker/compose/tarball/0.4.1,https://github.com/docker/compose/releases/tag/0.4.1,https://api.github.com/repos/docker/compose/zipball/0.4.1,0.4.1,False,False
296397,2014-04-30T13:04:56Z,2014-04-30T15:14:55Z,0.4.0,"- Fig supports Docker 0.9 and 0.10. Docker 0.8 is no longer supported.
- Progress bars are displayed correctly when pulling images (no more ski slopes).
- `fig up` now stops all services when any container exits.
- fig.yml supports the `privileged` config option (thanks @kvz!)
- Log prefixes in `fig up` output are shorter and aligned.
- Only containers started with `fig run` link back to their own service.
- UTF-8 is handled correctly when streaming `fig build/run/up` output (thanks @mauvm and @shanejonas!)
- Some error messages are a bit nicer.

Fig is a tool for creating and running fast, isolated development environments using Docker.

If you've already got an older Fig installed, no sweat - upgrading from a previous version is the same as [installing from scratch](http://orchardup.github.io/fig/install.html). Make sure your Docker is up-to-date too (0.9+).
- [Fig's website](http://orchardup.github.io/fig/)
- [Installation instructions](http://orchardup.github.io/fig/install.html)
",https://api.github.com/users/aanand,1062,aanand,https://api.github.com/repos/docker/compose/releases/296397/assets,https://api.github.com/repos/docker/compose/releases/296397,master,https://api.github.com/repos/docker/compose/tarball/0.4.0,https://github.com/docker/compose/releases/tag/0.4.0,https://api.github.com/repos/docker/compose/zipball/0.4.0,0.4.0,False,False
210849,2014-03-05T14:49:26Z,2014-03-05T14:55:56Z,0.3.2,"- Added an `--rm` option to `fig run`. (Thanks @marksteve!)
- Added an `expose` option to `fig.yml`.
",https://api.github.com/users/bfirsh,40906,bfirsh,https://api.github.com/repos/docker/compose/releases/210849/assets,https://api.github.com/repos/docker/compose/releases/210849,master,https://api.github.com/repos/docker/compose/tarball/0.3.2,https://github.com/docker/compose/releases/tag/0.3.2,https://api.github.com/repos/docker/compose/zipball/0.3.2,0.3.2,False,False
208880,2014-03-04T11:51:12Z,2014-03-04T11:55:49Z,0.3.1,"- Added contribution instructions. (Thanks @kvz!)
- Fixed `fig rm` throwing an error.
- Fixed a bug in `fig ps` on Docker 0.8.1 when there is a container with no command.
",https://api.github.com/users/bfirsh,40906,bfirsh,https://api.github.com/repos/docker/compose/releases/208880/assets,https://api.github.com/repos/docker/compose/releases/208880,master,https://api.github.com/repos/docker/compose/tarball/0.3.1,https://github.com/docker/compose/releases/tag/0.3.1,https://api.github.com/repos/docker/compose/zipball/0.3.1,0.3.1,False,False
207825,2014-03-03T18:58:00Z,2014-03-03T19:16:46Z,0.3.0,"- We now ship binaries for OS X and Linux. No more having to install with Pip!
- Add `-f` flag to specify alternate `fig.yml` files
- Add support for custom link names
- Fix a bug where recreating would sometimes hang
- Update docker-py to support Docker 0.8.0.
- Various documentation improvements
- Various error message improvements

Thanks @marksteve, @Gazler and @teozkr!

Fig is a tool for creating and running fast, isolated development environments using Docker.

If you're upgrading from a previous version, run `sudo pip uninstall fig`, then check the [installation instructions](http://orchardup.github.io/fig/install.html) for your OS.
- [Fig's website](http://orchardup.github.io/fig/)
- [Installation instructions](http://orchardup.github.io/fig/install.html)
",https://api.github.com/users/bfirsh,40906,bfirsh,https://api.github.com/repos/docker/compose/releases/207825/assets,https://api.github.com/repos/docker/compose/releases/207825,master,https://api.github.com/repos/docker/compose/tarball/0.3.0,https://github.com/docker/compose/releases/tag/0.3.0,https://api.github.com/repos/docker/compose/zipball/0.3.0,0.3.0,False,False
