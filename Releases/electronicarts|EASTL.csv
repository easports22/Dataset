id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8139278,2017-10-16T17:57:19Z,2017-10-16T19:56:39Z,3.05.09 Release,"* First EASTL release with Xbox One code paths
* Added support for new C++17 attributes.
    * deprecated
    * fallthrough
    * discard
    * maybe_unused
* Added SI unit macros for memory sizes.  For example:  EA_MEGABYTE(42) and EA_MEBIBYTE(42).
* Fixed an issue with ""fixed_allocator_with_overflow"" causing all allocation requests to be serviced by the overflow allocator instead of using the fixed buffer until its exhausted.
* Improving eastl::sort support for move-only types.
* Fixed a compiler error when the value of an eastl::optional was retrieved as an rvalue reference.
* Fixed EASTL.natvis bug where the wrong type was being used to surface the contents of an rbtree_node.",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/8139278/assets,https://api.github.com/repos/electronicarts/EASTL/releases/8139278,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.09,https://github.com/electronicarts/EASTL/releases/tag/3.05.09,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.09,3.05.09,False,False
7363258,2017-08-10T23:28:32Z,2017-08-11T15:42:18Z,3.05.08 Release,"* Added eastl::not_fn for C++17 conformance.
* Improved eastl::vector by guarding against user types with overloaded address-of operators. This was observed in ""eastl::vector>"" usage.
* Adding natvis visualizer for eastl::ring_buffer.
* Updated natvis visualizer for eastl::string and eastl::vector.
* VS2013 removed from CI validation.
    * VS2013 code paths have not been removed but we are no longer actively testing against that compiler.
* Adding support logical operations conjuction, disjunction, and negation type traits for C++17 conformance.
	* Implemented find_as(T, Predicate) for the following vector based containers:
		* vector_set
		* vector_multiset
		* vector_map
		* vector_multimap
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/7363258/assets,https://api.github.com/repos/electronicarts/EASTL/releases/7363258,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.08,https://github.com/electronicarts/EASTL/releases/tag/3.05.08,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.08,3.05.08,False,False
6816244,2017-06-23T14:21:04Z,2017-06-23T14:24:37Z,3.05.07,"* Adding ARM64 processor support.
* Fixed move copy constructor and move assignment operator for fixed_vector, and added tests.
* Removing eastl::any type checking when RTTI is disabled due to cross dll pointer issues.
* Relaxing restrictions on what the type of the find_by_hash' input parameter can be. Instead of a requirement of a specific type, any type convertible to the underlying type is acceptable.",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/6816244/assets,https://api.github.com/repos/electronicarts/EASTL/releases/6816244,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.07,https://github.com/electronicarts/EASTL/releases/tag/3.05.07,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.07,3.05.07,False,False
6609032,2017-06-05T19:43:27Z,2017-06-05T19:46:21Z,,"* Resolved shared_ptr conversion operator= with no return expression.
* Corrected constructor of ref_count_sp to match parameter types of the declaration.
* Removing comments suggesting auto_ptr converstion methods as auto_ptr has been deprecated and removed from the standard.
* Resolved VS2017 Preview 1 compiler warnings.
* Disabled single-argument eastl::pair move-constructor (only GCC due to a bug) that generates an error for lvalue and rvalue overloads.
* Updated EASTL.natvis to support eastl::bitset containers.
* Improved hash_map::operator[] to work with move-only types.
* Fixed the 'u8string_view' typedef to correctly be backed by char8_t.
* Added eastl::string user defined literals, but still disabled globally due to required eastl::string constexpr constructors.
* eastl::integral_constant c++14 updates for value_type constexpr conversion operators.
* Enabled the empty-base class optimization for eastl::string and its fixed sized variants.
* Enabled the empty-base class optimization for eastl::vector and its fixed sized variants.
* Fixes required to enable eastl::string, eastl::string_view and eastl::chrono literals.
* Improving vector::erase_unsorted to support move-only types.
* Improving vector::erase_unsorted to support move-only types.
* Added at() accessor to hash_map class.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/6609032/assets,https://api.github.com/repos/electronicarts/EASTL/releases/6609032,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.06,https://github.com/electronicarts/EASTL/releases/tag/3.05.06,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.06,3.05.06,False,False
5960270,2017-04-03T18:08:26Z,2017-04-03T18:09:50Z,3.05.04,* Fixed eastl::hashtable functions DoInsertValue & DoInsertValueExtra which used a defaulted template parameter after a variadic template.,https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/5960270/assets,https://api.github.com/repos/electronicarts/EASTL/releases/5960270,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.04,https://github.com/electronicarts/EASTL/releases/tag/3.05.04,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.04,3.05.04,False,False
5760386,2017-03-15T23:03:25Z,2017-03-15T23:05:01Z,,"* Initial release of the Sony Playstation4 code path
* Implemented helper template-alias 'index_sequence_for'.
* Fixed eastl::chrono::Internal::GetTicks function not scaling ticks by the HFC frequency.",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/5760386/assets,https://api.github.com/repos/electronicarts/EASTL/releases/5760386,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.03,https://github.com/electronicarts/EASTL/releases/tag/3.05.03,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.03,3.05.03,False,False
5398771,2017-02-08T17:33:28Z,2017-02-08T17:47:09Z,,"- Fixed move_iterator operator++(int) / operator--(int) not incrementing its state.
- Implemented fixed_ring_buffer template alias to simplify the creation of ring_buffers backed by fixed_sized containers.
- Added templates aliases for new hashtable based container names. (eg. unordered_set and unordered_map)
- Improved internal hashtable support for move-only (aka. non-copyable types).
- string_view fixes:
  - implemented cbegin/rbegin/crbegin fixes and unit tests
  - implemented cend/rend/crend fixes and unit tests
  - Added CharTypeStringRSearch function to char_traits header and fixed unit tests to call string_view::rfrind.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/5398771/assets,https://api.github.com/repos/electronicarts/EASTL/releases/5398771,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.02,https://github.com/electronicarts/EASTL/releases/tag/3.05.02,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.02,3.05.02,False,False
4860485,2016-12-07T20:36:29Z,2016-12-07T20:38:58Z,,"- Implemented eastl:string_view, a non-owning string type that isn't templated on an allocator making it suitable for use at API boundaries.
  - http://en.cppreference.com/w/cpp/string/basic_string_view
- Adding support for typed get for tuple (e.g. get(tuple& t)).
- CoreAllocatorAdapter::operator= now copies the allocator name.
- Fixed strict-aliasing issues in the eastl::intrusive_list implementation.
- Adding move semantic guards around test code requiring that language feature.
- Improving eastl::vector implementation to move elements (instead of copying) during a resize.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/4860485/assets,https://api.github.com/repos/electronicarts/EASTL/releases/4860485,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.05.00,https://github.com/electronicarts/EASTL/releases/tag/3.05.00,https://api.github.com/repos/electronicarts/EASTL/zipball/3.05.00,3.05.00,False,False
4490039,2016-10-26T14:46:48Z,2016-10-26T14:52:39Z,,"- Implemented eastl::any, a type-safe container for single values of any type that is implemented with the 'local buffer optimization' to avoid heap allocations for small objects.
  - http://en.cppreference.com/w/cpp/utility/any
- Improving standards conformance of vector::swap and improves use of vector with non-copyable or move-only types (e.g. unique_ptr). This includes a subtle but important behaviour change were vector::swap will no longer perform a copy of the vectors elements when the allocator instances are different. If you rely on copying elements from one vector to another when calling vector::swap(), you can reintroduce the slower, standard non-conforming behaviour by building with 'EASTL_VECTOR_LEGACY_SWAP_BEHAVIOUR_REQUIRES_COPY_CTOR' as a global define.
- Implemented hashtable::reserve(element_count). This rehashes the underlying hashtable of all the hash containers to the accomdate the element count without exceeding the max load factor.
  http://en.cppreference.com/w/cpp/container/unordered_map/reserve
- Implemented eastl::is_swappable_with / eastl::is_nothrow_swappable_with.
- Implemented eastl::clamp.
- Brought back new classes from Frostbite:
  - segmented_vector: vector that does not invalid iterators/references when elements are added.
  - string_map: specialized version of a map that uses a const char\* as the key.
  - string_hash_map: specialized version of a hash_map that uses a const char\* as the key.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/4490039/assets,https://api.github.com/repos/electronicarts/EASTL/releases/4490039,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.04.00,https://github.com/electronicarts/EASTL/releases/tag/3.04.00,https://api.github.com/repos/electronicarts/EASTL/zipball/3.04.00,3.04.00,False,False
3682347,2016-07-18T20:06:01Z,2016-07-18T15:35:36Z,,"- Implemented eastl::optional. For more details see: http://en.cppreference.com/w/cpp/utility/optional.
- Implemented 'transparent operator functors' for the following:
  - plus
  - minus
  - multiplies
  - divides
  - modulus
  - negate
  - equal_to
  - not_equal_to
  - greater
  - less
  - greater_equal
  - less_equal
  - logical_and
  - logical_or
  - logical_not
- Implemented eastl::void_t.
- Implemented eastl::is_same_v.
- Implemented eastl::reverse(Iterator) to support reverse iteration in ranged-based for-loops.
- Added allocation failure asserts to containers that do not utilize local storage.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/3682347/assets,https://api.github.com/repos/electronicarts/EASTL/releases/3682347,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.02.01,https://github.com/electronicarts/EASTL/releases/tag/3.02.01,https://api.github.com/repos/electronicarts/EASTL/zipball/3.02.01,3.02.01,False,False
3308172,2016-05-25T23:30:28Z,2016-05-25T23:41:03Z,,"- Implemented eastl::bool_constant.
- Implemented eastl::fixed_hash_map::rehash now supports hashtable bucket array overflow.
- Implemented non-member eastl::size/eastl::data/eastl::empty.
- Implemented eastl::is_hat_type trait.
- Removed internal eastl::empty<T> structure due to name collision.
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/3308172/assets,https://api.github.com/repos/electronicarts/EASTL/releases/3308172,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.01.01,https://github.com/electronicarts/EASTL/releases/tag/3.01.01,https://api.github.com/repos/electronicarts/EASTL/zipball/3.01.01,3.01.01,False,False
3308034,2016-01-15T18:16:03Z,2016-05-25T23:05:27Z,,"Initial Release
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/3308034/assets,https://api.github.com/repos/electronicarts/EASTL/releases/3308034,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.00.00,https://github.com/electronicarts/EASTL/releases/tag/3.00.00,https://api.github.com/repos/electronicarts/EASTL/zipball/3.00.00,3.00.00,False,False
3308030,2016-04-04T21:05:23Z,2016-05-25T23:04:59Z,,"- Implemented eastl::to_string/eastl::to_wstring.
- Implemented eastl::exchange.
- Implemented eastl::as_const.
- Implemented the move subscript operator for eastl::map.  eg. eastl::map::operator[](Key&&)
",https://api.github.com/users/rparolin,1320845,rparolin,https://api.github.com/repos/electronicarts/EASTL/releases/3308030/assets,https://api.github.com/repos/electronicarts/EASTL/releases/3308030,master,https://api.github.com/repos/electronicarts/EASTL/tarball/3.01.00,https://github.com/electronicarts/EASTL/releases/tag/3.01.00,https://api.github.com/repos/electronicarts/EASTL/zipball/3.01.00,3.01.00,False,False
