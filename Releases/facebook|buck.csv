id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
7959271,2017-10-02T05:48:39Z,2017-10-02T06:10:01Z,Release v2017.10.01.01,,https://api.github.com/users/ttsugriy,172294,ttsugriy,https://api.github.com/repos/facebook/buck/releases/7959271/assets,https://api.github.com/repos/facebook/buck/releases/7959271,2025fd74327477728b524eafdd4619a0170a24ea,https://api.github.com/repos/facebook/buck/tarball/v2017.10.01.01,https://github.com/facebook/buck/releases/tag/v2017.10.01.01,https://api.github.com/repos/facebook/buck/zipball/v2017.10.01.01,v2017.10.01.01,False,False
7655562,2017-09-05T16:32:04Z,2017-09-06T15:43:09Z,Release v2017.09.04.02,"
",https://api.github.com/users/ttsugriy,172294,ttsugriy,https://api.github.com/repos/facebook/buck/releases/7655562/assets,https://api.github.com/repos/facebook/buck/releases/7655562,61e6872bb1d3bd786056fa7e5ccec96855f4ab53,https://api.github.com/repos/facebook/buck/tarball/v2017.09.04.02,https://github.com/facebook/buck/releases/tag/v2017.09.04.02,https://api.github.com/repos/facebook/buck/zipball/v2017.09.04.02,v2017.09.04.02,False,False
6556360,2017-05-31T10:34:58Z,2017-05-31T10:39:52Z,Release v2017.05.31.01,,https://api.github.com/users/aiked,5209909,aiked,https://api.github.com/repos/facebook/buck/releases/6556360/assets,https://api.github.com/repos/facebook/buck/releases/6556360,master,https://api.github.com/repos/facebook/buck/tarball/v2017.05.31.01,https://github.com/facebook/buck/releases/tag/v2017.05.31.01,https://api.github.com/repos/facebook/buck/zipball/v2017.05.31.01,v2017.05.31.01,False,False
6323443,2017-05-09T11:34:57Z,2017-05-09T11:50:35Z,v2017.05.09.01,v2017.05.09.01,https://api.github.com/users/aiked,5209909,aiked,https://api.github.com/repos/facebook/buck/releases/6323443/assets,https://api.github.com/repos/facebook/buck/releases/6323443,master,https://api.github.com/repos/facebook/buck/tarball/v2017.05.09.01,https://github.com/facebook/buck/releases/tag/v2017.05.09.01,https://api.github.com/repos/facebook/buck/zipball/v2017.05.09.01,v2017.05.09.01,False,False
5906635,2017-03-29T05:57:31Z,2017-03-29T10:14:30Z,v2017.03.29.01,Prepare release v2017.03.29.01,https://api.github.com/users/aiked,5209909,aiked,https://api.github.com/repos/facebook/buck/releases/5906635/assets,https://api.github.com/repos/facebook/buck/releases/5906635,master,https://api.github.com/repos/facebook/buck/tarball/v2017.03.29.01,https://github.com/facebook/buck/releases/tag/v2017.03.29.01,https://api.github.com/repos/facebook/buck/zipball/v2017.03.29.01,v2017.03.29.01,False,False
4635347,2016-11-11T12:23:36Z,2016-11-11T12:24:17Z,,,https://api.github.com/users/k21,981525,k21,https://api.github.com/repos/facebook/buck/releases/4635347/assets,https://api.github.com/repos/facebook/buck/releases/4635347,master,https://api.github.com/repos/facebook/buck/tarball/v2016.11.11.01,https://github.com/facebook/buck/releases/tag/v2016.11.11.01,https://api.github.com/repos/facebook/buck/zipball/v2016.11.11.01,v2016.11.11.01,False,False
4230110,2016-09-26T13:38:49Z,2016-09-26T13:43:52Z,,,https://api.github.com/users/k21,981525,k21,https://api.github.com/repos/facebook/buck/releases/4230110/assets,https://api.github.com/repos/facebook/buck/releases/4230110,master,https://api.github.com/repos/facebook/buck/tarball/v2016.09.26.01,https://github.com/facebook/buck/releases/tag/v2016.09.26.01,https://api.github.com/repos/facebook/buck/zipball/v2016.09.26.01,v2016.09.26.01,False,False
4038263,2016-09-02T12:27:26Z,2016-09-02T12:30:00Z,v2016.09.02.01,,https://api.github.com/users/k21,981525,k21,https://api.github.com/repos/facebook/buck/releases/4038263/assets,https://api.github.com/repos/facebook/buck/releases/4038263,master,https://api.github.com/repos/facebook/buck/tarball/v2016.09.02.01,https://github.com/facebook/buck/releases/tag/v2016.09.02.01,https://api.github.com/repos/facebook/buck/zipball/v2016.09.02.01,v2016.09.02.01,False,False
3044615,2016-04-18T18:33:43Z,2016-04-18T18:46:08Z,,"- Thanks to @Dominator008, `vm_args` was added to `java_test` documentation: https://buckbuild.com/rule/java_test.html
- `xctest`s are now streamed to Buck instead of waiting until completion
- A `flatten_dicts` method was added for use in build files: https://buckbuild.com/function/flatten_dicts.html
- Buck can now fail the build when using header files that are untracked by build files: https://buckbuild.com/concept/buckconfig.html#cxx.untracked_headers
- Buck now has very basic support for the AppleTV platform
- Buck now caches its Action Graph, which is part of the Parsing phase.  Large projects should see this step speed up.
- Cross-cell references can now be called with `@` or `+`.  The latter is useful for command-line invocations.
- The `repl` command was added: https://buckbuild.com/command/repl.html
- Support for Android NDK r11 and newer was added.
- Buck now allows overriding of the command to package for `apple_binary` rules: https://buckbuild.com/concept/buckconfig.html#apple.*_package_command
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/3044615/assets,https://api.github.com/repos/facebook/buck/releases/3044615,master,https://api.github.com/repos/facebook/buck/tarball/v2016.04.18.01,https://github.com/facebook/buck/releases/tag/v2016.04.18.01,https://api.github.com/repos/facebook/buck/zipball/v2016.04.18.01,v2016.04.18.01,False,False
2917803,2016-03-30T16:38:58Z,2016-03-30T17:29:48Z,,"- `python_test` rules can now have a custom main_module: https://buckbuild.com/rule/python_test.html
- `android_binary` rules now fail if given an incorrect keystore alias.
- Buck no longer pulls in a dependency if the library does not support the current platform.
- Added a number of settings to control how many threads Buck uses: https://buckbuild.com/concept/buckconfig.html#build.thread_core_ratio, https://buckbuild.com/concept/buckconfig.html#build.thread_core_ratio_max_threads, https://buckbuild.com/concept/buckconfig.html#build.thread_core_ratio_min_threads, https://buckbuild.com/concept/buckconfig.html#build.thread_core_ratio_reserved_cores
- Buck now supports `android_prebuilt_aar`s that do not have a `classes.jar` file.
- Thanks to @lucidsheep, Buck now supports project generation for an iOS project from the root directory of a project.
- Added the concept of a worker tool to assist in daemonic tools used during the build process: https://buckbuild.com/rule/worker_tool.html
- Buck now supports vendored directories for Go: https://buckbuild.com/concept/buckconfig.html#go.vendor_path
- Thanks to @ray-milkey, Buck no longer tries to run Java methods annotated with `@Test` on an `abstract` class.
- Values can now be inserted into `AndroidManifest.xml` from build files. See https://buckbuild.com/function/flatten_dicts.html and https://buckbuild.com/rule/android_binary.html
- On unix systems, Buck now kills subprocesses when buckd is restarted.
- Buck no longer supports running android instrumentation tests on multiple devices
- Buck's exopackage support now works with Android N devices.
- Thanks to @mikekap, `go_test` now supports resources: https://buckbuild.com/rule/go_test.html
- The Buck codebase is now using `buck autodeps` for all dependencies. This feature is still considered experitmental, but other Java-based projects might find it good enough to start trying today. https://buckbuild.com/command/autodeps.html
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2917803/assets,https://api.github.com/repos/facebook/buck/releases/2917803,master,https://api.github.com/repos/facebook/buck/tarball/v2016.03.28.01,https://github.com/facebook/buck/releases/tag/v2016.03.28.01,https://api.github.com/repos/facebook/buck/zipball/v2016.03.28.01,v2016.03.28.01,False,False
2763850,2016-03-08T00:30:12Z,2016-03-08T00:43:05Z,,"- Thanks to @mikekap, Buck now supports compiling Go gc assembly.
- CUDA files are no acceptable inputs to cxx rules.
- `exported_platform_linker_flags` are now properly supported in `apple_library` rules
- Thanks to @mikekap, Buck now supports 1.6-style vendoring for Go.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2763850/assets,https://api.github.com/repos/facebook/buck/releases/2763850,master,https://api.github.com/repos/facebook/buck/tarball/v2016.03.07.01,https://github.com/facebook/buck/releases/tag/v2016.03.07.01,https://api.github.com/repos/facebook/buck/zipball/v2016.03.07.01,v2016.03.07.01,False,False
2714667,2016-02-29T23:42:48Z,2016-02-29T23:43:40Z,,"- An experimental `autodeps` command was added. This currently only works with Java: https://buckbuild.com/command/autodeps.html
- The message a user sees when an http cache error is encountered is now configurable: https://buckbuild.com/concept/buckconfig.html#cache.http_error_message_format
- `genrule` now supports the `tests` argument: https://buckbuild.com/rule/genrule.html
- `python_binary` and `python_test` now support the `linker_flags` argument which indicates any flags that should be applied to any links for the build rule. https://buckbuild.com/rule/python_binary.html, https://buckbuild.com/rule/python_test.html
- A massive performance win (200x on HFS+ and 20x on ext4) when crawling the filesystem for build files (common during commands like `buck project` or `buck build //...`) when using watchman. This may not be enabled by default for your project, however. See https://buckbuild.com/concept/buckconfig.html#project.build_file_search_method for more details.
- Thanks to @mikekap, test selectors now work for `python_test` when using `buck test`. https://buckbuild.com/command/test.html
- Thanks to @janicduplessis, `buck fetch` now properly works on Windows when downloading from a disk-based Maven repository.
- Buck will now use `clang`'s colors when using the SuperConsole.
- `python_test` rules can now be run with `buck run`.
- Thanks to @mikekap, the `library` argument was added to `go_test` to automatically use the same values for `srcs`, `package`, and `deps` from the specified library. https://buckbuild.com/rule/go_test.html
- The disk cache of Buck is now structured differently and performs better as a result on some filesystems.
- The `licenses` argument was added to all build rules. With `buck query`, one could construct the licenses used by a binary. For example, in the Buck repository: `buck query ""labels('licenses', deps('buck'))""`
- You can now use the `$(location )` macro with `prebuilt_cxx_library`.
- Thanks to @mikekap, Buck now has CI for Windows (via Appveyor).
- Thanks to @mrkane27, Buck now supports authentication when fetching from Maven repositories. This is controlled by the `[credentials]` section of the `buckconfig`: https://buckbuild.com/concept/buckconfig.html#credentials
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2714667/assets,https://api.github.com/repos/facebook/buck/releases/2714667,master,https://api.github.com/repos/facebook/buck/tarball/v2016.02.29.01,https://github.com/facebook/buck/releases/tag/v2016.02.29.01,https://api.github.com/repos/facebook/buck/zipball/v2016.02.29.01,v2016.02.29.01,False,False
2576085,2016-02-08T23:49:17Z,2016-02-08T23:51:24Z,,"- `platform_linker_flags` are now supported on `apple_binary`: https://buckbuild.com/rule/apple_binary.html
- Fixed a bug where Buck is only using the hostname portion of `cache.http_url` for distributed caches.
- @mikekap added the ability to make the output of a `genrule` as executable: https://buckbuild.com/rule/genrule.html
- `export_file` was documented: https://buckbuild.com/rule/export_file.html
- The directory cache is now enabled by default.  @bolinfest noticed that lots of folks who blog about Buck never setup the cache, which is a big speed improvement in itself.  Buck now picks a sensible location (`buck-out/cache`) for the cache by default and enables the `dir` cache.  See https://buckbuild.com/concept/buckconfig.html#cache for more details.
- A number of options were added to control the size of the Super Console that Buck outputs.  See https://buckbuild.com/concept/buckconfig.html#ui for more details.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2576085/assets,https://api.github.com/repos/facebook/buck/releases/2576085,master,https://api.github.com/repos/facebook/buck/tarball/v2016.02.08.01,https://github.com/facebook/buck/releases/tag/v2016.02.08.01,https://api.github.com/repos/facebook/buck/zipball/v2016.02.08.01,v2016.02.08.01,False,False
2533285,2016-02-01T23:24:13Z,2016-02-01T23:24:51Z,,"- `buck project` now removes unused IntelliJ project files when generating a new project
- A `read_config` function was added that can be called in build files in order to read a config from the .buckconfig settings. https://buckbuild.com/function/read_config.html
- Buck will now properly filter all resources for `android_resource` rules instead of only filtering drawables by DPI. See http://developer.android.com/guide/topics/resources/providing-resources.html for valid resource folders (which are now checked by Buck) and valid DPI qualifiers.
- x86_64 Android builds are now supported by Buck
- Fixed a bug that would cause `buck` to hang if you had a build file that didn't parse.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2533285/assets,https://api.github.com/repos/facebook/buck/releases/2533285,master,https://api.github.com/repos/facebook/buck/tarball/v2016.02.01.01,https://github.com/facebook/buck/releases/tag/v2016.02.01.01,https://api.github.com/repos/facebook/buck/zipball/v2016.02.01.01,v2016.02.01.01,False,False
2489867,2016-01-25T22:44:53Z,2016-01-25T22:46:30Z,,"- `buck publish` now only publishes CLASSPATH entries intstead of all deps when publishing a JAR
- The `.buckconfig` docs have been revamped. You can now link directly to any setting, and the formatting has been changed to be consistent throughout: http://buckbuild.com/concept/buckconfig.html
- You can now set the packaging type for a python_binary via a rule parameter in addition to the global setting in `.buckconfig`. See `package_style` at https://buckbuild.com/rule/python_binary.html
- @DanielGrech fixed `buck quickstart` to generate a valid `.hgignore` file
- Buck can now enforce the Build Tools version used when compiling Android code. This can be used to avoid the build time regression of `aapt` in 23.0.2: https://buckbuild.com/concept/buckconfig.html#android.build_tools_version, https://code.google.com/p/android/issues/detail?id=198488
- Buck will no longer consider codesign identities which are marked as invalid when building `apple_*` rules.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2489867/assets,https://api.github.com/repos/facebook/buck/releases/2489867,master,https://api.github.com/repos/facebook/buck/tarball/v2016.01.25.01,https://github.com/facebook/buck/releases/tag/v2016.01.25.01,https://api.github.com/repos/facebook/buck/zipball/v2016.01.25.01,v2016.01.25.01,False,False
2456369,2016-01-19T23:14:26Z,2016-01-19T23:15:32Z,,"- @mikekap fixed Buck parsing the verbosity from a command running with `buck run`
- `buck root` was added: https://buckbuild.com/command/root.html
- @mogers added the `buildfile` operator to `buck query`: https://buckbuild.com/command/query.html#buildfile
- @mikekap updated Buck to use the latest version of PEX: https://github.com/pantsbuild/pex/
- @davido fixed a number of bugs with cross-cell build targets
- @anorth fixed a bug that prevented Buck from running under Python 3.5
- @davido fixed a long shutdown time issue when parallel parsing is enabled
- `python_test` now properly handles errors when setting up the test class
- Fixed a bug when compiling with clang for NDK builds (assembling would fail)
- @grumpyjames added support for `groovy_library`: https://buckbuild.com/rule/groovy_library.html
- Buck can now take an agentpath for the invocation of the ProGuard step. This allows profiling with tools like YourKit and Profiler, which can be useful when trying to determine which optimizations you want to enable for your project. See https://buckbuild.com/concept/buckconfig.html#tools for more details.
- `buck publish` now checks to make sure a library you are publishing doesn't package a library that another library will also package and publish.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2456369/assets,https://api.github.com/repos/facebook/buck/releases/2456369,master,https://api.github.com/repos/facebook/buck/tarball/v2016.01.18.01,https://github.com/facebook/buck/releases/tag/v2016.01.18.01,https://api.github.com/repos/facebook/buck/zipball/v2016.01.18.01,v2016.01.18.01,False,False
2355928,2015-12-30T18:41:27Z,2015-12-30T18:42:16Z,,"- Logs from apple_test and java_test tests are now reported after the tests have ran.
- Fixed a bug where Buck was not copying WatchKit stub .ipa which is required for the App Store when submitting a WatchOS 2 app.
- Fixed a bug where Buck would copy Frameworks into Frameworks.
- Improve watchman interaction performance by using Unix domain sockets.
- python.native_link_strategy was added to dictate how native dependencies are linked. See https://buckbuild.com/concept/buckconfig.html#python for more details.
- Buck now properly reports the failure of installation on an iOS device.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2355928/assets,https://api.github.com/repos/facebook/buck/releases/2355928,master,https://api.github.com/repos/facebook/buck/tarball/v2015.12.28.01,https://github.com/facebook/buck/releases/tag/v2015.12.28.01,https://api.github.com/repos/facebook/buck/zipball/v2015.12.28.01,v2015.12.28.01,False,False
2291899,2015-12-15T16:41:06Z,2015-12-15T16:42:11Z,,"- `test_rule_timeout_ms` was added for `go_test` and `d_test`, `sh_test`.
- Fixed a bug where unhandled exceptions on background threads would result in a deadlock.
- `buckd` reliability improvements
- `buck run` has been documented: https://buckbuild.com/command/run.html
- An issue causing `buck publish` to not work was fixed by @davido on GitHub.
- Buck now reports the target that failed when `buck project` fails.
- Buck can now parse build files in parallel if you pass `--config project.parallel_parsing=true` on the command line. We expect to make this the default soon, but for now it is considered experimental. https://buckbuild.com/concept/buckconfig.html#project
- @LegNeato on GitHub added support for setting read and write HTTP headers when Buck talks to the HTTP cache. https://buckbuild.com/concept/buckconfig.html#cache
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2291899/assets,https://api.github.com/repos/facebook/buck/releases/2291899,master,https://api.github.com/repos/facebook/buck/tarball/v2015.12.14.01,https://github.com/facebook/buck/releases/tag/v2015.12.14.01,https://api.github.com/repos/facebook/buck/zipball/v2015.12.14.01,v2015.12.14.01,False,False
2217145,2015-12-02T00:17:02Z,2015-12-02T00:18:05Z,,"- Added a new type of caching which should improve cache hits of native code.
- test_rule_timeout_ms was added for python_test.
- Various reliability fixes to how Buck communicates over Nailgun
- Reduced Buck's memory usage.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2217145/assets,https://api.github.com/repos/facebook/buck/releases/2217145,master,https://api.github.com/repos/facebook/buck/tarball/v2015.11.30.01,https://github.com/facebook/buck/releases/tag/v2015.11.30.01,https://api.github.com/repos/facebook/buck/zipball/v2015.11.30.01,v2015.11.30.01,False,False
2171661,2015-11-23T16:15:11Z,2015-11-23T16:16:09Z,,"- Buck now uses a Python version of nailgun so it no longer builds or runs native code in order to use `buckd`.
- When running a `java_binary`, the produced `jar` would not pass JVM arguments to the child process that actually runs your code. This is now fixed.
- `buck test` had a flag, `--ignore-failing-dependencies`, which is now a no-op.
- The `soname` field of `cxx_library` is now documented and has added functionality to add a version-aware macro to the field. See https://buckbuild.com/rule/cxx_library.html
- An issue where large source files were used in a `cxx_library` caused a Buck crash due to our use of `MappedByteBuffers` was fixed.
- Docs were added for `platform_srcs` and `platform_compiler_flags` for `apple_*` rules.
- Mike Kaplinskiy (@mikekap) added support for setting go.root in a repository: https://buckbuild.com/concept/buckconfig.html#go
- Mike Kaplinskiy (@mikekap) added support to run Buck under `pypy`.
- Buck now uses the new parser again as performance is the same as the parser it replaced. There should be no user-visible changes as a result of this, but let us know if you see something wrong.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2171661/assets,https://api.github.com/repos/facebook/buck/releases/2171661,master,https://api.github.com/repos/facebook/buck/tarball/v2015.11.23.01,https://github.com/facebook/buck/releases/tag/v2015.11.23.01,https://api.github.com/repos/facebook/buck/zipball/v2015.11.23.01,v2015.11.23.01,False,False
2132849,2015-11-16T15:00:13Z,2015-11-16T15:02:06Z,,"- `stringsdict` files are now properly supported in Xcode project generation.
- Added the `simulate` command to simulate a build. See https://buckbuild.com/command/simulate.html for more details.
- `project.ignore` in `.buckconfig` now takes a regular expression of files to ignore, which can be useful to prevent extraneous files from being listed as sources (such as `.orig` files).
- The use of header maps in Xcode is now optional. Turning this feature off may slow down your build, but will enable autocompletion for headers in Xcode. See `apple.use_header_maps_in_xcode`: https://buckbuild.com/concept/buckconfig.html#apple
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2132849/assets,https://api.github.com/repos/facebook/buck/releases/2132849,master,https://api.github.com/repos/facebook/buck/tarball/v2015.11.16.01,https://github.com/facebook/buck/releases/tag/v2015.11.16.01,https://api.github.com/repos/facebook/buck/zipball/v2015.11.16.01,v2015.11.16.01,False,False
2098186,2015-11-09T22:18:30Z,2015-11-09T22:51:29Z,,"- Buck now supports compiling `.storyboard` files properly.
- Better error messages when parsing build files.
- Thanks to Mike Kaplinskiy (@mikekap), `go_*` rules now work if you have your `GOROOT` set to something other than `/usr/local`. This is configurable in the `go` section of the `.buckconfig`: https://buckbuild.com/concept/buckconfig.html#go
- You can now unset configuration settings by passing `--config some.setting=` on the command line.
- WatchKit extensions are now supported. See the example in the `apple_bundle` docs: https://buckbuild.com/rule/apple_bundle.html
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2098186/assets,https://api.github.com/repos/facebook/buck/releases/2098186,master,https://api.github.com/repos/facebook/buck/tarball/v2015.11.09.01,https://github.com/facebook/buck/releases/tag/v2015.11.09.01,https://api.github.com/repos/facebook/buck/zipball/v2015.11.09.01,v2015.11.09.01,False,False
2058292,2015-11-02T17:24:29Z,2015-11-02T17:28:17Z,,"- The `deps` parameter of `genrule` and `apk_genrule` were removed. Previously, Buck didn't actually use their values anyway, so this makes using them an error instead of silently being ignored.
- `product_name` setting was added to `apple_bundle`. This behaves like the `PRODUCT_NAME` Xcode build setting: https://buckbuild.com/rule/apple_bundle.html
- `test_rule_timeout_ms` was added to `java_test` and `cxx_test`. This defaults to `test.rule_timeout` in the `.buckconfig`, but can be overridden on each rule: https://buckbuild.com/rule/java_test.html, https://buckbuild.com/rule/cxx_test.html
- The previously mentioned (last week) new parser was reverted due to some performance regressions that came up. We expect this to be re-enabled soon.
- Travis CI support was added to the project.
- Buck now builds universal binaries for Halide libraries.
- Thanks to Mike Kaplinskiy (@mikekap), Buck now supports building and running Go tests: https://buckbuild.com/rule/go_test.html
- lex and yacc support were removed from Buck. These can be trivially implemented in build files.
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2058292/assets,https://api.github.com/repos/facebook/buck/releases/2058292,master,https://api.github.com/repos/facebook/buck/tarball/v2015.11.02.01,https://github.com/facebook/buck/releases/tag/v2015.11.02.01,https://api.github.com/repos/facebook/buck/zipball/v2015.11.02.01,v2015.11.02.01,False,False
2021419,2015-10-26T20:13:22Z,2015-10-26T20:17:10Z,,"- Thomas Gummerer (@tgummerer) updated the docs on `gen_rule` to remove `deps` because Buck doesn't actually do anything with them, and hasn't for some time: https://buckbuild.com/rule/genrule.html
- The `blacklist` argument to `java_binary` was documented. This is a list of regular expressions of files to exclude from the generated jar: https://buckbuild.com/rule/java_binary.html
- `cxx_library` support was added to the experimental IntelliJ project generator.
- Buck now properly builds `.s` files and using the Android NDK toolchain.
- The Windows build was fixed if your machine had a drive with removal media and that media was not present (such as a floppy disk or SD card).
- Breakpoint support was fixed for Xcode 7 when using a Buck-generated project.
- A new build file parser was landed (tests pass, so everything should be okay, but it's possible we've broken things, so please file issues!).
- Added filtering support (`--test-selectors`) to the `buck test` command for `apple_test` rules: https://buckbuild.com/command/test.html
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/2021419/assets,https://api.github.com/repos/facebook/buck/releases/2021419,master,https://api.github.com/repos/facebook/buck/tarball/v2015.10.26.01,https://github.com/facebook/buck/releases/tag/v2015.10.26.01,https://api.github.com/repos/facebook/buck/zipball/v2015.10.26.01,v2015.10.26.01,False,False
1991402,2015-10-20T17:55:55Z,2015-10-20T19:55:55Z,2015.10.19.01,"- Info.plist files are now included in generated Xcode projects
- provisioning_profile_search_path was removed from apple_bundle and apple_test rules and is instead configurable via .buckconfig: https://buckbuild.com/concept/buckconfig.html#apple
- Buck now generates a valid compilation database for clang tools
- buck query now lets you specify a regular expression when using --output-attributes: https://buckbuild.com/command/query.html
- buck query now outputs attributes in snake case (as you write them in your build files) instead of camelCase (as Buck knows them internally)
- Added support for Halide via halide_library: https://buckbuild.com/rule/halide_library.html
- Thanks to @joshzana, Buck now properly ignores disabled activities when using the buck install command with Android APKs 
",https://api.github.com/users/sdwilsh,656602,sdwilsh,https://api.github.com/repos/facebook/buck/releases/1991402/assets,https://api.github.com/repos/facebook/buck/releases/1991402,master,https://api.github.com/repos/facebook/buck/tarball/v2015.10.19.01,https://github.com/facebook/buck/releases/tag/v2015.10.19.01,https://api.github.com/repos/facebook/buck/zipball/v2015.10.19.01,v2015.10.19.01,False,False
1858293,2015-09-22T00:39:21Z,2015-09-23T21:06:02Z,,,https://api.github.com/users/bhamiltoncx,671827,bhamiltoncx,https://api.github.com/repos/facebook/buck/releases/1858293/assets,https://api.github.com/repos/facebook/buck/releases/1858293,master,https://api.github.com/repos/facebook/buck/tarball/v2015.09.21.01,https://github.com/facebook/buck/releases/tag/v2015.09.21.01,https://api.github.com/repos/facebook/buck/zipball/v2015.09.21.01,v2015.09.21.01,False,False
1806511,2015-09-10T21:46:27Z,2015-09-13T18:38:41Z,Open-source release 2015-09-10 v1,"Open-source release of Buck from 2015-09-10 (version 1).
",https://api.github.com/users/bhamiltoncx,671827,bhamiltoncx,https://api.github.com/repos/facebook/buck/releases/1806511/assets,https://api.github.com/repos/facebook/buck/releases/1806511,master,https://api.github.com/repos/facebook/buck/tarball/v2015.09.10.01,https://github.com/facebook/buck/releases/tag/v2015.09.10.01,https://api.github.com/repos/facebook/buck/zipball/v2015.09.10.01,v2015.09.10.01,False,False
