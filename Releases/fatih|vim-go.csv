id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
7979941,2017-10-03T15:02:47Z,2017-10-03T15:06:28Z,v1.15,"Happy to welcome our newest collaborators @Carpetsmoker and @bhcleek üëã 

Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#115---october-3-2017

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/7979941/assets,https://api.github.com/repos/fatih/vim-go/releases/7979941,010d0cc592926e97140846655f92c5c685cec374,https://api.github.com/repos/fatih/vim-go/tarball/v1.15,https://github.com/fatih/vim-go/releases/tag/v1.15,https://api.github.com/repos/fatih/vim-go/zipball/v1.15,v1.15,False,False
7293789,2017-08-05T14:06:47Z,2017-08-05T14:07:55Z,v1.14,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#114---august-6-2017

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/7293789/assets,https://api.github.com/repos/fatih/vim-go/releases/7293789,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.14,https://github.com/fatih/vim-go/releases/tag/v1.14,https://api.github.com/repos/fatih/vim-go/zipball/v1.14,v1.14,False,False
6616274,2017-06-06T11:05:01Z,2017-06-06T11:09:58Z,v1.13,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#113---june-6-2017

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/6616274/assets,https://api.github.com/repos/fatih/vim-go/releases/6616274,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.13,https://github.com/fatih/vim-go/releases/tag/v1.13,https://api.github.com/repos/fatih/vim-go/zipball/v1.13,v1.13,False,False
5916534,2017-03-30T00:22:18Z,2017-03-30T00:23:08Z,v1.12,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#112---march-29-2017

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/5916534/assets,https://api.github.com/repos/fatih/vim-go/releases/5916534,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.12,https://github.com/fatih/vim-go/releases/tag/v1.12,https://api.github.com/repos/fatih/vim-go/zipball/v1.12,v1.12,False,False
5106241,2017-01-09T15:33:48Z,2017-01-09T15:34:40Z,v1.11,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#111---january-9-2017

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/5106241/assets,https://api.github.com/repos/fatih/vim-go/releases/5106241,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.11,https://github.com/fatih/vim-go/releases/tag/v1.11,https://api.github.com/repos/fatih/vim-go/zipball/v1.11,v1.11,False,False
4747527,2016-11-24T03:08:30Z,2016-11-24T03:09:33Z,v1.10,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#110-november-24-2016

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/4747527/assets,https://api.github.com/repos/fatih/vim-go/releases/4747527,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.10,https://github.com/fatih/vim-go/releases/tag/v1.10,https://api.github.com/repos/fatih/vim-go/zipball/v1.10,v1.10,False,False
4115428,2016-09-13T08:47:01Z,2016-09-13T08:47:37Z,v1.9,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#19-september-13-2016

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/4115428/assets,https://api.github.com/repos/fatih/vim-go/releases/4115428,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.9,https://github.com/fatih/vim-go/releases/tag/v1.9,https://api.github.com/repos/fatih/vim-go/zipball/v1.9,v1.9,False,False
3779869,2016-07-31T21:10:58Z,2016-07-31T21:12:11Z,v1.8,"Please checkout the changelog for this release: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#18-july-31-2016

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/3779869/assets,https://api.github.com/repos/fatih/vim-go/releases/3779869,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.8,https://github.com/fatih/vim-go/releases/tag/v1.8,https://api.github.com/repos/fatih/vim-go/zipball/v1.8,v1.8,False,False
3394053,2016-06-07T20:37:07Z,2016-06-07T20:38:14Z,v1.7.1,"Fixed a small bug, a typo in `syntax/go.vim` file from `go:go_highlight_fields` to `g:go_highlight_fields`
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/3394053/assets,https://api.github.com/repos/fatih/vim-go/releases/3394053,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.7.1,https://github.com/fatih/vim-go/releases/tag/v1.7.1,https://api.github.com/repos/fatih/vim-go/zipball/v1.7.1,v1.7.1,False,False
3385944,2016-06-06T22:56:21Z,2016-06-06T23:09:06Z,v1.7,"Please checkout the changelog for this release. We have new features, tons of improvements and fixes!: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#17-june-7-2016

Do you want to support vim-go? Checkout the fully optional donation option, a way to support vim-go's ongoing development directly: https://www.patreon.com/fatih
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/3385944/assets,https://api.github.com/repos/fatih/vim-go/releases/3385944,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.7,https://github.com/fatih/vim-go/releases/tag/v1.7,https://api.github.com/repos/fatih/vim-go/zipball/v1.7,v1.7,False,False
3091707,2016-04-25T14:50:16Z,2016-04-25T14:54:12Z,v1.6,"Please checkout our new changelog: https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#16-april-25-2016

Also happy to announce that I'm a dad now! I have a little son and it's a joy to spend time with him üë∂üèº ü§ó
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/3091707/assets,https://api.github.com/repos/fatih/vim-go/releases/3091707,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.6,https://github.com/fatih/vim-go/releases/tag/v1.6,https://api.github.com/repos/fatih/vim-go/zipball/v1.6,v1.6,False,False
2827703,2016-03-16T20:53:16Z,2016-03-16T22:21:13Z,v1.5,"Changes:
- **Feature (NEW)**: Introducing code name ""motion"". A new whole way of moving
  around and navigating (gh-765). Checkout the following new changes:
  - A vim-go specific tool, called [motion](https://github.com/fatih/motion) is being developed which
    provides us the underlying foundation for the following and upcoming
    new features.
  - `]]` and `[[` motions can be used to jump between functions
  - `if` and `af` are improved and implement from scratch. It has now
    support for literal functions, comments of functions, better cursor
    position support and more stable.
  - New `:GoDecls` and `:GoDeclsDir` commands that are available if
    `ctrlp.vim` is installed. Once called one can easily jump to any generic declaration available.
  - I wrote two blog posts about these new features in more detail. I recommend you to read it: [Treating Go types as objects in Vim](https://medium.com/@farslan/treating-go-types-as-objects-in-vim-ed6b3fad9287#.mbwaisevp) and [Navigation between functions and types in vim-go](https://medium.com/@farslan/navigation-between-functions-and-types-in-vim-go-f9dd7de8ca37#.2sdf8tbbe)
- **Feature (NEW)**:  A new `:GoAlternate` command that toggles to the test
  file of the current file. It also has new appropriate mappings to open the
  alternate file in split or tabs. (gh-704)
- **Feature (NEW)**:  Now commands can choose whether they want to open a
  `quickfix` or a `location list` via the setting `g:go_list_type`. Also all
  the commands have now some sensible settings, some will open a qf window,
  some will open a location list (gh-700)
- **Commands**: add support for goimport's new `-srcdir`. Goimports now
  succesfully suports `vendor/` folders with this release. (gh-735)
- **Commands**: add `g:go_gorename_prefill` setting which disabled pre filling the argument for `:GoRename` (gh-711)
- **Commands**: improve `:GoRun` to complete to filenames (gh-742)
- **Commands**: fix oracle scope not working if trailing slash exists in scope (gh-751) 
- **Commands**: fix `:GoErrCheck` checking abspath (gh-671)
- **Commands**: fix `:GoInstall` correctly parsing errors (gh-692)
- **Commands**: fix `:GoInstall` correctly parsing errors (gh-692)
- **Commands**: fix `:GoTestFunc` for neovim (gh-695)
- **Commands**: fix `:GoRun` accepting arguments for neovim (gh-730)
- **Commands**: fix `go run` mappings not working (gh-542)
- **Internal**: improved internal usage of retrieving offsets (gh-762)
- **Internal**: improve by substitute all backslashes to slashes for filename (gh-703)
- **Internal**: fix autodetect gopath picking up non existing GB vendor folder
- **Internal**: fix gofmt errors showing per buffer instead of per script (gh-721)
- **Internal**: improve internal Go package path function (gh-702)
- **Internal**: improved typo and grammar errors in docs (gh-714)
- **Internal**: improved internal `:GoInfo` automatic call (gh-759)
- **Snippet**: fix some of the neosnippet snippets
- **Syntax(NEW)**: highlight `//go:generate` comment directives (gh-757)
- **Syntax**: Indent code in Go HTML templates (gh-709)
- **Syntax**: improve negative numbers of all types, octals, imaginary numbers
            with exponents (gh-752)

Thanks again to all [contributors](https://github.com/fatih/vim-go/graphs/contributors) working on Vim-go.

P.s: You love vim-go? Now you can support vim-go by being a [patron](https://www.patreon.com/fatih)
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/2827703/assets,https://api.github.com/repos/fatih/vim-go/releases/2827703,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.5,https://github.com/fatih/vim-go/releases/tag/v1.5,https://api.github.com/repos/fatih/vim-go/zipball/v1.5,v1.5,False,False
2449907,2016-01-19T01:16:24Z,2016-01-19T03:29:12Z,v1.4,"Changes:
- **Feature (NEW)**: You waited for it for a long time. And here you have it: **Neovim support!** This is a huge feature. It's fully compatible with Vim and kicks only in if vim-go is being used within Neovim. Checkout the full list of changes (gh-607):
  - An async launcher and base foundation was implemented for the `go` command. This will be used in the future for all upcoming subcommands of the `go` tool.
  - `:GoBuild` is now called asynchronously (it doesn't block the UI anymore). 
  - A new `go#jobcontrol#Statusline()` can be used to plug into the statusline. This will show the status of the job running asynchronously. The statusline is improved to show the status per package instead of file. Assume you have three files open, all belonging to the same package, if the package build (`:GoBuild`) is successful, all statusline's will be empty (means SUCCESS), if it fails all files statusline's will show `FAILED`. 
  - `:GoRun` opens a new vertical terminal emulator inside Neovim and runs the command there. The terminal mode can be changed with `g:go_term_mode`, which is by default `vsplit`. Current options are `vsplit, split or tab`. We also have three new mappings to open `:GoRun` command in different terminal split modes: `<Plug>(go-run-vertical)`,  `<Plug>(go-run-split)` and  `<Plug>(go-run-tab)`
  - `:GoTest`, `:GoTestFunc` and `:GoTestCompile` opens and runs in a new terminal. The view mode (split,vertical, tab) is defined with `g:go_term_mode`.  The `g:go_term_enabled` setting can be use to change the behavior of `:GoTestXXX` commands .If set to `1`, it opens the test commands inside a terminal, if not it runs them in background just like  `:GoBuild` and displays the result in the statusline.
  - We have two settings for terminal sizes: `g:go_term_height` and `g:go_term_width`. By default a vertical or horizontal view is equally splitted by vim automatically. However with these settings we can for example have a terminal with a smaller height when we split it horizontally.
  - If a command inside the term fails (such as `go run`, `go test` ...) we parse now the errors and list them inside a location list.
- **Feature (NEW)**: Instead of quickfix window, vim-go now uses the `location list` feature of Vim. These are associated with each window independently of each other. This enables us to have multiple, independent location lists per window (example usages: `:GoBuild` with errors that needs to be fixed, `:GoLint` with warnings that we want to check, `:GoReferrers` with a list of referred identifiers) (gh-626)
- **Feature (NEW)**: a new **`:AsmFmt`** command which is integrated to work with [asmfmt](https://github.com/klauspost/asmfmt) (gh-673)
- **Feature (NEW)**: the full identifier information of a completed identifier is echoed in statusline. This is very useful to see a function signatures arguments. (gh-685)
- **Commands**: improve `:GoFmt` by checking if the binary is indeed installed on the system (gh-617)
- **Commands**: fix `:GoFmt` changing the fileformat of the current buffer (gh-615)
- **Commands**: improve `:GoMetaLinter` by adding the option to run the metalinter on save and adding the option to limit the output to the currently active buffer. Set `let g:go_metalinter_autosave = 1` to enable autosave and use `let g:go_metalinter_autosave_enabled = ['vet', 'golint']` to change your options. (gh-631)
- **Commands**: improved `:GoDef`. If `vimproc` is installed `godef` will make use of it (gh-670)
- **Internal**: improve completion of godoce when vimproc is used (gh-620)
- **Internal**: improve internal error matching prodecure to not match false positives (gh-618)
- **Commands**: fix `:GoRename` to output the original error if parsing fails (gh-675)
- **Commands**: fix `:GoTest` to output the original error if parsing fails (gh-676)
- **Syntax (NEW)**: a new option to highlight interface variables with `go_highlight_interfaces` (gh-681)
- **Syntax**: fixed `fmt.Fprintln` not to highlight as builtin (gh-628)
- **Syntax**: fixed wrong highlighting of channels of channels (gh-678)

Thanks to all [contributors](https://github.com/fatih/vim-go/graphs/contributors) working on Vim-go.
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/2449907/assets,https://api.github.com/repos/fatih/vim-go/releases/2449907,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.4,https://github.com/fatih/vim-go/releases/tag/v1.4,https://api.github.com/repos/fatih/vim-go/zipball/v1.4,v1.4,False,False
2166735,2015-11-22T09:33:11Z,2015-11-22T10:07:38Z,v1.3,"Changes:
- **Commands (NEW)**: a new `:GoOracleTags` command was added to pass build tags to Oracle's `-tags` flag. (gh-573)
- **Commands**: change `:GoTest` command to timeout after 10 seconds. Vim UI is blocking and tests with large running times makes Vim blocking for a long time. This is also customizable with the new option `g:go_test_timeout`. (gh-578)
- **Commands**: improve `:GoRename` to collect and populate quickfix window with errors. (gh-577)
- **Commands**: improve `:GoRun` by dropping bad filenames from quickfix window. This allows us to have only valid entries which can be jumped to (gh-547)
- **Commands**: improve `:GoMetaLinter` quickfix output by using absolute paths. This enables us to jump to errors for all cases. (gh-565)
- **Commands**: improve `:GoMetaLinter` command by adding a new option `g:go_metalinter_deadline` which cancels the linters after 5 seconds (previous default).  (gh-576)
- **Commands**: improve `:GoMetaLinter` by jumping to the first encountered error from the quickfix window.
- **Commands**: fixed `:GoErrCheck` showing the correct output when executed inside the source folder (gh-564)
- **Commands**: fixed `:GoBuild` by not using `/dev/null` anymore for build output (not supported by `go`). We pass a temporary file now. (gh-567)
- **Commands**: fixed `:GoFmt` passing `g:go_fmt_options` options to `goimports`. This option is only valid with `gofmt`. (gh-590)
- **Internal (NEW)**: automatically resize quickfix window based on the number of errors (gh-602)
- **Internal**: fix vim-go for `cygwin` users. (gh-575)
- **Syntax (NEW)**: improve build constraints to show invalid cases (such as `// +buildfoo`, not having an empty line between the package statement, etc..). Also add missing `GOARCH` values sucha s `arm64`. There are many other useful improvements, for more detail please have a look at ([gh-589](https://github.com/fatih/vim-go/pull/589))
- **Syntax**: fixed identifier in template files to be highlighted correctly (gh-559)
- **Syntax**: fixed character region in template files to be highlighted correctly (gh-603)
- **Syntax**: fixed variables in template files to be highlighted correctly (gh-611)
- **Syntax**: add support for all values of `GOARCH` (gh-601)
- **Syntax**: do not treat builtins as keywords. Now `make` will not highlighted but `make()` will be highlighted (gh-605)
- **Documentation**: Add note about Syntastic usage as this problem comes up a lot (gh-580)
- **Documentation**: Add note about `:GoUpdateBinaries` (gh-606)

Thanks to all [contributors](https://github.com/fatih/vim-go/graphs/contributors) working on Vim-go.
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/2166735/assets,https://api.github.com/repos/fatih/vim-go/releases/2166735,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.3,https://github.com/fatih/vim-go/releases/tag/v1.3,https://api.github.com/repos/fatih/vim-go/zipball/v1.3,v1.3,False,False
1905266,2015-10-02T23:24:28Z,2015-10-02T23:29:12Z,v1.2,"Changes:
- **Commands (NEW)**: a new `:GoMetaLinter` command which invokes [gometalinter](https://github.com/alecthomas/gometalinter). Please check the PR [#553](https://github.com/fatih/vim-go/pull/553) for more detail on customizing and usage of `:GoMetaLinter`.
- **Commands**: Improve `:GoImport` to trim spaces when including import paths of form `""fmt ""`
- **Commands**: Fixed `:GoRun` to display errors when `g:go_dispatch_enabled` was enabled
- **Commands**: Fixed `:GoDrop` displaying ""Not enough arguments"" (regression)
- **Commands**: Fixed `:GoErrCheck` not showing `PASS` message if the command was successful
- **Commands**: Fixed `:GoErrCheck` not executing in the directory of the currently edited file
- **Commands**: Close quickfix window after a successful second round of `:GoInstall`
- **Internal**: Avoid setting `filetype` twice. Previously it was doing it twice, which was expensive
- **Internal**: Improve handling of GOPATH's with trailing `/` characters, such as `/home/user/go/`
- **Oracle**: Escape files passed to oracle command. This could lead to some serious things.
- **Oracle**: Clear `g:go_oracle_scope` when the scope was reseted. Previously it was set to empty string, which was causing false positives.
- **Oracle**: Fix passing files rather than packages to certain oracle commands.
- **Syntax (NEW)**: add a new `g:go_highlight_string_spellcheck` feature, which is enabled by feature. Now if spell is enabled, go strings are also checked.
- **Documentation**: Correct various misspellings.
- **Documentation**: Specify our limited but functional [gb](http://getgb.io/) support

Thanks to all [contributors](https://github.com/fatih/vim-go/graphs/contributors) working on Vim-go.
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/1905266/assets,https://api.github.com/repos/fatih/vim-go/releases/1905266,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.2,https://github.com/fatih/vim-go/releases/tag/v1.2,https://api.github.com/repos/fatih/vim-go/zipball/v1.2,v1.2,False,False
1585979,2015-07-25T08:56:29Z,2015-07-25T15:12:37Z,v1.1,"Changes:
- **Commands (NEW)**: a new `:GoGenerate` command is now available which can be used to invoke `go generate` within vim
- **Commands**: improved `:GoFmt` command, which now uses the `-w` flag to write to the source code directly, instead of outputting it to stdout. This makes `:GoFmt` much more faster than the current implementation. This is one of the big changes in this release, so feedback is welcome!
- **Commands**:  improve commands `GoRun, GoTest{,Func,Compile}, GoCoverage, GoGenerate, GoErrcheck, GoLint,
  and GoVet` to handle multiple arguments. Previously this feature was limited to only certain commands. What this means is, for example `:GoVet . -all` will invoke `go tool vet . -all` automatically instead of plan `go vet`. This is one of the big changes in this release, so give it a try :)
- **Commands**: improve `:GoImport` to have a `!` feature. Now when when called with a `!` appended it will go get it. i.e: `:GoImport! github.com/fatih/color`. Useful if `:GoImport` fails and you want to download it.
- **Commands**: automatic GOPATH detections can now detect `gb` vendored folders. Some commands should now work without any problem when invoked on a `gb` project.
- **Commands**: all command arguments are now properly escaped for shell invocation. 
- **Commands**: added the `-f` flag to :GoInstallBinaries command to support `git url.<base>.insteadOf` configuration
- **Commands**: fix`:GoDef` for files containing spaces. We know escape the files before passing to `:GoDef`
- **Commands**: fix `:GoFmt` not picking up the correct GOPATH when the fmt command was set to `goimports`
- **Documentation**: fix and simplify README.md, add Wiki reference
- **Syntax** improve width and precision highlighting, such as `%s %5s %-5s %5.5f %.5f`
- **License**: Vim-go didn't had any license, now we use BSD 3-Clause License (the same as Go). This is needed for Linux distributions to package vim-go and is also something that people asked for.
- **Integration**: fixed tagbar integration to show correct imports.
- **Oracle**: show an error if a region is not selected when `:GoFreeVars` is called

With this release the version will now increase in `minor` levels. So the next release will be `1.2`, the other one `1.3`, etc.. This provides us more flexibility (like releasing patch versions if needed).

Also I want to thank for all contributors working on Vim-go. I truly appreciate it, because they help me to implement and fix all these feature and fixes. So please visit the [contributors](https://github.com/fatih/vim-go/graphs/contributors) page and thank each of them :)
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/1585979/assets,https://api.github.com/repos/fatih/vim-go/releases/1585979,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.1,https://github.com/fatih/vim-go/releases/tag/v1.1,https://api.github.com/repos/fatih/vim-go/zipball/v1.1,v1.1,False,False
1336648,2015-05-26T09:17:51Z,2015-05-26T10:08:32Z,v1.0.5,"Changes:
- **Commands**: Improve `:GoFmt` (gofmt and goimports) speed. Now it's 2x faster than the previous implementation.
- **Commands**: A new `:GoOracleScope` is added to change the oracle scope on-the-fly. It accepts import paths as arguments. If no arguments are passed it prints the current custom oracle scope. `:GoOracleScope` also supports completion of import paths, so it's very fast and handy to use. `:GoOracleScope """"` clears the current custom scope.
- **Commands**: A new `:GoPath` command that displays the current `GOPATH`. A path can be passed to change the `GOPATH` (i.e `:GoPath ~/foo/src`). `:GoPath """"` clears and resets the `GOPATH` to the initial value.
- **Commands**: A new ""autodetect GOPATH"" feature is added. This automatically detects if the project is using `godep` or is under a `src` root directory which is not in `GOPATH` and changes/modifies the `GOPATH` so all commands work based on this GOPATH. What this means is, commands such as `:GoDef`, `:GoBuild`, etc.. will include the Godeps folder. For example any go-to-definition via `:GoDef` will jump to the source code inside Godeps. This is enabled by default, but can disabled with `let g:go_autodetect_gopath = 0`. This new feature is also the foundation for other tools such as `gb` or `wgo`.
- **Commands**: add Dispatch support for `:GoBuild` and `:GoRun`. For more info about dispatch see https://github.com/tpope/vim-dispatch . By default it's disabled, to enable it add `let g:go_dispatch_enabled = 1` to your vimrc.
- **Commands**: Add support for the bang `!` attribute for all `go` tool commands. What this does it, if `:GoBuild` is called it will jump to the error. But `:GoBuild!` will not jump to any error. This has the same behavior as the internal `:make` command in vim. We had this feature already for `:GoBuild` and `:GoRun`. But not for `:GoInstall`, `:GoTest`, etc.. Now all commands are unified.
- **Commands**: Add autojump to error for `:GoInstall`.
- **Commands**: Add autowrite feature for `:GoInstall`, `:GoTestXXX` functions and `:GoVet`
- **Commands**: Fix clearing the status bar when `:GoErrCheck` is called
- **Commands**: Fix godocNotFound to not match 'os' pkg contents. This improves the command `:GoDoc`
- **Commands**: fix parsing and jumping to error locations when used Vim from a different directory than the current buffer's directory
- **Commands**: support git url.<base>.insteadOf and custom import paths of binaries. This improves the commands `:GoInstallBinaries` and `:GoUpdateBinaries`.
- **Docs**: improvements and fixes
- **Completion**: Fix completion showing duplicates paths for completion results, such as github.com/fatih/color and github.com/fatih/color/.
- **Syntax**: Add support for highlighting go templates with *.tmpl extensions. Based on the work from @cespare from https://github.com/cespare/vim-go-templates

Thanks for all contributors working on Vim-go.
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/1336648/assets,https://api.github.com/repos/fatih/vim-go/releases/1336648,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0.5,https://github.com/fatih/vim-go/releases/tag/v1.0.5,https://api.github.com/repos/fatih/vim-go/zipball/v1.0.5,v1.0.5,False,False
1229046,2015-04-28T18:50:05Z,2015-04-28T19:25:59Z,v1.0.4,"Changes:
- **Commands** (new feature): A new `:GoTestFunc` command (with appropriate mappings) is added. Run tests function which surrounds the current cursor location. Useful to test single tests.
- **Commands**: Improved certain `:GoDoc` usages to show a better error message
- **Commands**: Improved `:GoRename` to have a default value for rename input. Avoids retyping similar words.
- **Commands**: Fixed the internal `executeInDir` function which was failing when ignorelist was not set properly.
- **Commands**: Fixed trailing slash for package completion with `:GoImport`
- **Commands**: Fixed paths in error list for Windows users.
- **Commands**: Fixed not showing ""import cycle not allowed"" error message when called `:GoBuild` or `:GoRun`
- **Completion**: Fixed users using vimproc requiring arguments to functions to be escaped.
- **Oracle**: Synced with latest Oracle version. `callgraph` is removed.
- **Oracle**: Removed our custom referrers mode. New version of oracle now displays the matching lines.
- **Documentation**: Improve README.md
- **Syntax** (new feature): Highlight all Go operators. Previously not all operators were highlighted. As previously, to highlight options, enable it with by setting `g:go_highlight_operators` to 1 in your vimrc.
- **Snippets**: Fixed depth for test snippets
- **Snippets**: Fixed neosnippet support loading snippet files the second time if necessary.

Many thanks and appreciations for all contributors working on Vim-go. Without them, vim-go wouldn't be here in this form. 
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/1229046/assets,https://api.github.com/repos/fatih/vim-go/releases/1229046,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0.4,https://github.com/fatih/vim-go/releases/tag/v1.0.4,https://api.github.com/repos/fatih/vim-go/zipball/v1.0.4,v1.0.4,False,False
1026152,2015-03-07T08:59:13Z,2015-03-07T17:03:39Z,v1.0.3,"Changes:
- **Commands**: a new `:GoTestCompile` command (with appropriate mappings) is added. Useful to compile a test binary or show/fix compile errors in quickfix window
- **Autocompletion**: fix trimming brackets if completion was invoked on a previous completion
- **Oracle**: fix Oracle scope settings. Added docs about usage.
- **Oracle**: `referrer` mode is improved to show referring lines in the quickfix window
- **Snippets**: fixed previously broken `var` and `vars` snippets
- **Snippets**: a new `errt` snippet is added, which expands to `if err != nil { t.Fatal(err) }`
- **Snippets**: a new `errh` snippet is added, useful to be used in a `http.Handler`
- **Snippets**: UltiSnips snippets are improved to take advance of Vim's `Visual` mode. For example selecting a block and typing `if` will create an if scope around the block. 
- **Documentation**: fix duplicate docs
- **Vim-go**: cleanup README.md
- **Vim-go**: fix fallback binary path for Windows users. The fallback mechanism is used to discover the necessary Go tools, such as `godef`, `gocode`, etc...

Thanks for all contributors working on Vim-go. 
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/1026152/assets,https://api.github.com/repos/fatih/vim-go/releases/1026152,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0.3,https://github.com/fatih/vim-go/releases/tag/v1.0.3,https://api.github.com/repos/fatih/vim-go/zipball/v1.0.3,v1.0.3,False,False
959181,2015-02-17T09:46:01Z,2015-02-17T12:06:04Z,v1.0.2,"Changes:
- **Oracle**: enable all Oracle commands. Docs, mappings and commands are also added. It uses Quickfix list instead of a custom UI.
- **Vim-go**: clarify installation process in Readme, add instructions for vim-plug, NeoBundle and manual.
- **Vim-go**: fix shiftwidth parsing, it was broken in the previous release for old Vim versions
- **GoFmt**: fix experimantal mode
- **Snippets**: new snippets are added, mostly for testing ( [changes](https://github.com/fatih/vim-go/pull/321/files))

Thanks for all contributors working on Vim-go
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/959181/assets,https://api.github.com/repos/fatih/vim-go/releases/959181,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0.2,https://github.com/fatih/vim-go/releases/tag/v1.0.2,https://api.github.com/repos/fatih/vim-go/zipball/v1.0.2,v1.0.2,False,False
934443,2015-02-08T21:00:00Z,2015-02-09T19:19:33Z,v1.0.1,"Changes:
- **Vim-go**: fatal errors are now parsed successfully and populated to quickfix list
- **Vim-go**: updated godef import path
- **Vim-go**: shiftwidth is changed to use shiftwidth() function. Fixes usage with plugins like vim-sleuth and possible mis usage (like setting shiftwidth to zero)
- **Vim-go**: added a new [Donation](https://github.com/fatih/vim-go#donations) section to Readme, for those who ask for it.
- **Vim-go**: updated Readme for possible problems with `csh`
- **GoDoc**: packages with extensions, like ""gopkg.in/yaml.v2"" can be now displayed
- **GoDoc**: packages with different import paths, like ""github.com/bitly/go-simplejson"" can be now displayed
- **Docs**: documentation for text objects are updated, typo fixes are merged
- **Syntax**: new feature to highlight build constraints (disabled by default)
- **GoErrCheck**: fix parsing of errcheck error syntax
- **Windows**: if vimproc is installed, Windows users will use it for autocompletion
- **Snippets**: fix consistency between Neosnippet and UltiSnips snippets
- **Snippets**: improve UltiSnips snippets to pick Visual selection (demo: http://quick.as/0dvigz5)

Thanks for all contributors working on Vim-go
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/934443/assets,https://api.github.com/repos/fatih/vim-go/releases/934443,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0.1,https://github.com/fatih/vim-go/releases/tag/v1.0.1,https://api.github.com/repos/fatih/vim-go/zipball/v1.0.1,v1.0.1,False,False
812850,2014-12-29T08:55:57Z,2014-12-29T09:21:05Z,v1.0,"We don't tag any changes or releases, so let's start with `1.0`. Our Windows support is now in a good shape, tons of bugs are fixed, many new features and improvements is being added and it's getting better with each day (thanks to the community contributions). 
",https://api.github.com/users/fatih,438920,fatih,https://api.github.com/repos/fatih/vim-go/releases/812850/assets,https://api.github.com/repos/fatih/vim-go/releases/812850,master,https://api.github.com/repos/fatih/vim-go/tarball/v1.0,https://github.com/fatih/vim-go/releases/tag/v1.0,https://api.github.com/repos/fatih/vim-go/zipball/v1.0,v1.0,False,False
