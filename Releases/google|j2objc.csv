id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8231074,2017-10-19T20:55:08Z,2017-10-24T05:20:28Z,2.0.5,"A new release of J2ObjC is available, 2.0.5. This is an update to 2.0.4.1 with several bug fixes and the following changes:

Swift Support:
 * Fixed generation of JRE.framework/JRE.h to only include public header files.
 * Updated function prototypes to avoid strict-prototype warnings from Xcode 9.
 * Annotates copyWithZone: argument as nullable.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/8231074/assets,https://api.github.com/repos/google/j2objc/releases/8231074,master,https://api.github.com/repos/google/j2objc/tarball/2.0.5,https://github.com/google/j2objc/releases/tag/2.0.5,https://api.github.com/repos/google/j2objc/zipball/2.0.5,2.0.5,False,False
7982551,2017-09-28T17:24:43Z,2017-10-03T18:22:20Z,2.0.4.1,"A new release of J2ObjC is available, 2.0.4.1. The source for this release is unchanged from 2.0.4, but it was rebuilt with the correct protocol buffer library ([3.3.0](https://github.com/google/protobuf/releases/tag/v3.3.0)).",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/7982551/assets,https://api.github.com/repos/google/j2objc/releases/7982551,master,https://api.github.com/repos/google/j2objc/tarball/2.0.4.1,https://github.com/google/j2objc/releases/tag/2.0.4.1,https://api.github.com/repos/google/j2objc/zipball/2.0.4.1,2.0.4.1,False,False
7931125,2017-09-28T17:24:43Z,2017-09-28T19:12:21Z,2.0.4,"A new release of J2ObjC is available, 2.0.4. This is an update to 2.0.3 with several bug fixes and the following changes:

J2ObjC translator:
* Eclipse JDT dependencies are removed.
* Android Library (*.aar) files are now supported in classpath arguments.
* Runs when Java 9 JDK is system default.
  * NOTE: Java 8 still needs to be installed (both co-exist)

JRE emulation:
* nil_chk() has been changed to a macro, to provide better stack traces.

JRE sources updated to latest from Android-nougat:
* java.net
* XML SAX support: org.xml.sax, XML drivers

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/7931125/assets,https://api.github.com/repos/google/j2objc/releases/7931125,master,https://api.github.com/repos/google/j2objc/tarball/2.0.4,https://github.com/google/j2objc/releases/tag/2.0.4,https://api.github.com/repos/google/j2objc/zipball/2.0.4,2.0.4,False,False
7547159,2017-08-28T17:46:44Z,2017-08-28T21:08:40Z,2.0.3,"A new release of J2ObjC is available, 2.0.3. 

*__Note:__ ```-Xuse-jdt``` is removed in this release and the JDT code will be removed at a later time.*

Other changes include:

**J2ObjC examples:**    

* Adds an example app using Bazel build rules (in /examples/Contacts).

**JRE sources updated to latest from Android-nougat:**    

* java.nio
* java.nio.channels
* java.nio.spi

**Bug fixes:**    

* Issues: #873, #875

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/zhouyanggao,20624740,zhouyanggao,https://api.github.com/repos/google/j2objc/releases/7547159/assets,https://api.github.com/repos/google/j2objc/releases/7547159,master,https://api.github.com/repos/google/j2objc/tarball/2.0.3,https://github.com/google/j2objc/releases/tag/2.0.3,https://api.github.com/repos/google/j2objc/zipball/2.0.3,2.0.3,False,False
7099246,2017-07-19T18:41:27Z,2017-07-19T19:57:19Z,2.0.2,"A new release of J2ObjC is available, 2.0.2. This is an update to 2.0.1 with some bug fixes and updates to the JRE runtime.

J2ObjC translator:
* Passing command arguments with a file using '@' now works for all flags. (previously only worked for source files)
* Added --no-wrapper-methods flag. Helps to reduce code size by eliminating Objective-C wrappers for static methods and constructors. These can be called via generated C-style functions.

JRE emulation:
* java.lang.Throwable no longer maps to NSException. Instead JavaLangThrowable extends from NSException.

JRE sources updated to latest from Android-nougat:
* java.util (most)
* java.util.concurrent
* java.util.concurrent.locks
* javax.net.ssl

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/7099246/assets,https://api.github.com/repos/google/j2objc/releases/7099246,master,https://api.github.com/repos/google/j2objc/tarball/2.0.2,https://github.com/google/j2objc/releases/tag/2.0.2,https://api.github.com/repos/google/j2objc/zipball/2.0.2,2.0.2,False,False
6634067,2017-06-07T12:55:33Z,2017-06-07T15:50:11Z,2.0.1,"A new release of J2ObjC is available, 2.0.1. This is an update to 2.0 with some bug fixes and updates to the JRE runtime.

JRE sources updated to latest from Android-nougat:
- java.lang.reflect
- java.lang.ref
- java.util.concurrent.atomic
- java.util.jar
- java.util.logging
- java.util.regex

Bug fixes:
- Issues: #858, #861, #802, #844, #856, #855 
- Fixed leaks in java.io.Reader, java.io.Writer, java.io.InputStreamReader

Protocol Buffers:
- Updated to build against protobur-3.3.0.
- Added map field support.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/6634067/assets,https://api.github.com/repos/google/j2objc/releases/6634067,master,https://api.github.com/repos/google/j2objc/tarball/2.0.1,https://github.com/google/j2objc/releases/tag/2.0.1,https://api.github.com/repos/google/j2objc/zipball/2.0.1,2.0.1,False,False
6316128,2017-05-08T17:53:51Z,2017-05-09T18:55:23Z,2.0,"A new release of J2ObjC is available, 2.0. This release uses the [javac compiler](http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html) as its front end, which improves the translator's Java compatibility while improving performance. If the new front end causes any problems with your project, please file a bug and then switch to the old front end using the `-Xuse-jdt` flag (please do so promptly, as that flag will be removed in a future release once issues requiring have been fixed).

The [http://j2objc.org](http://j2objc.org) website has joined the [Google Developers site](https://developers.google.com/) at [https://developers.google.com/j2objc/](https://developers.google.com/j2objc/). This gives our project better support and will make it easier to keep up to date. In particular, our [API Reference](https://developers.google.com/j2objc/javadoc/jre/reference/) is enhanced and easier to use. We'll be redirecting http://j2objc.org to this new site soon.

This release continues the migration to the OpenJDK-based JRE source code in [Android's 7.0 Nougat libcore library](https://android.googlesource.com/platform/libcore/+/nougat-release).  Although there are some classes that still need to be migrated, we believe that all classes with Java 8 additions are now ported (please file a bug if you find otherwise).

Other changes include:

 * Updated java.security classes using the Apache Harmony Fortress classes to instead use sun.security packages.
 * Updated date and number formatters to OpenJDK.
 * Updated date, calendar, and timezone support to OpenJDK.
 * Updated character conversion to use the [iconv library](https://www.gnu.org/software/libiconv/) in iOS.
 * Added protocol buffers [oneof](https://developers.google.com/protocol-buffers/docs/proto#oneof) support.
 * Integrated several [IosHttpURLConnection](https://github.com/google/j2objc/blob/master/jre_emul/Classes/com/google/j2objc/net/IosHttpURLConnection.java) contributions and bug fixes.
 * j2objc performance improvements:
   * reduced size of several AST node classes,
   * skipped unnecessary validation.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/6316128/assets,https://api.github.com/repos/google/j2objc/releases/6316128,master,https://api.github.com/repos/google/j2objc/tarball/2.0,https://github.com/google/j2objc/releases/tag/2.0,https://api.github.com/repos/google/j2objc/zipball/2.0,2.0,False,False
5255453,2017-01-24T19:30:09Z,2017-01-24T20:27:31Z,1.3.1,"This release updates 1.3 with two fixes:
- Issue #828 fix for missing casts for some parameterized type variables, and
- The j2objc-annotations.jar Maven version number was updated to 1.3.
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/5255453/assets,https://api.github.com/repos/google/j2objc/releases/5255453,cherry-picks,https://api.github.com/repos/google/j2objc/tarball/1.3.1,https://github.com/google/j2objc/releases/tag/1.3.1,https://api.github.com/repos/google/j2objc/zipball/1.3.1,1.3.1,False,False
5157676,2017-01-18T19:40:05Z,2017-01-18T23:14:17Z,1.3,"A new release of J2ObjC is available, 1.3. The main focus of this release has been on improving support for Java 8, which included fixing bugs and memory cycles in the new OpenJDK code in the jre_emul library. Although Java 8 support was only introduced in 1.2, we have much higher confidence in J2ObjC's Java 8 support with this release.

The Java 8 API support _still_ isn’t complete; in particular, `java.util.time` is not available. However, since it’s also not part of [Android’s libcore library](https://android.googlesource.com/platform/libcore/) (which the jre_emul library is based upon), code that uses that new package isn’t portable yet. If you find any other Java 8 classes or methods aren’t available, [file a bug](https://github.com/google/j2objc/issues/new) so we can make implementing it a priority.

Most of our time was spent making it possible to use **javac** as the front-end for **j2objc**. We realized we needed to switch to javac for several reasons, including better Java 8 support now and faster support for future Java enhancements (""Winter (Java 9) is coming"" :-). The **j2objc** translator still uses the [Eclipse JDT](http://www.eclipse.org/jdt/) as the default front-end, but plan on switching the default to **javac** in the next release, and dropping the JDT in a following release.

We encourage you to test the **javac** front-end with your project, and report any issues you find using it. There are two ways to specify which front end to use:
- Use the `-Xuse-javac` flag (there's also a `-Xuse-jdt` flag, which is the default); or
- Define the environment variable `J2OBJC_FRONT_END=JAVAC` (or JDT) in your build tool or shell settings.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/5157676/assets,https://api.github.com/repos/google/j2objc/releases/5157676,master,https://api.github.com/repos/google/j2objc/tarball/1.3,https://github.com/google/j2objc/releases/tag/1.3,https://api.github.com/repos/google/j2objc/zipball/1.3,1.3,False,False
4382737,2016-10-13T16:48:11Z,2016-10-13T19:23:45Z,1.2,"A new release of J2ObjC is available, 1.2. The main focus of this release has been on adding the new packages, classes, and methods in Java 8 to the JRE emulation library. These new features include:
- `java.util.function` package
- `java.util.stream` package
- Streaming support in `java.io`, `java.lang` and `java.util`
- `java.util.Spliterator` with collection support
- `java.util.Base64`
- `java.util.Optional*`
- `java.util.StringJoiner` and `String.join()`
- `java.util.Arrays.parallelSort()`

Many of these new features use lambdas in lots of interesting ways, so lambda and method reference translation was reworked, with faster execution and several bugs fixed.

The Java 8 API support isn’t complete; in particular, `java.util.time` is not available. However, since it’s also not part of [Android’s libcore library](https://android.googlesource.com/platform/libcore/) (which the jre_emul library is based upon), code that uses that new package isn’t portable yet. If you find any other Java 8 classes or methods aren’t available, [file a bug](https://github.com/google/j2objc/issues/new) so we can make implementing it a priority.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/4382737/assets,https://api.github.com/repos/google/j2objc/releases/4382737,master,https://api.github.com/repos/google/j2objc/tarball/1.2,https://github.com/google/j2objc/releases/tag/1.2,https://api.github.com/repos/google/j2objc/zipball/1.2,1.2,False,False
3743648,2016-07-26T16:27:34Z,2016-07-26T18:26:43Z,1.1,"A new release of J2ObjC is available, 1.1.

This release updates 1.0.2 with several bug fixes, including:

#### iOS:
- Added tvOS support.

#### Annotations:
- Added RetainedWith, allowing some object pairs to form a reference cycle without leaking.

#### Translator:
- Revised lambda and method reference translation for better performance.
- Various method reference translation bugs resolved.
- Declares narrower return types for type variables with bounds.
- Beginning of migration to javax.lang.model symbol types from JDT bindings.

#### Runtime:
- Volatile fields: spinlocks replaced with pthread_mutex to avoid priority inversion deadlock.
- Improve DST support with NSTimeZone-backed TimeZone
- Various reflection fixes, removed best effort support. (most reflection now requires metadata)
- Reflection metadata is cleaned up to reduce effect on binary size.
- java.lang.Thread implementation switched to use pthread instead of NSThread.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/3743648/assets,https://api.github.com/repos/google/j2objc/releases/3743648,master,https://api.github.com/repos/google/j2objc/tarball/1.1,https://github.com/google/j2objc/releases/tag/1.1,https://api.github.com/repos/google/j2objc/zipball/1.1,1.1,False,False
2937059,2016-04-01T20:00:13Z,2016-04-01T21:13:46Z,1.0.2,"A new release of J2ObjC is available, 1.0.2.

This release updates 1.0.1 with several bug fixes, including:

#### iOS:
- Added WatchOS support (contributed by Harri Hohteri).

#### Translator:
- Implemented Java 8 default method support, including default methods in lambdas.
- Correctly produce capturing lambdas.
- Fixed memory leak when a retaining constructor throws an exception.
- Fixed leaky annotation types by adding a dealloc method.
- Added -source flag to cycle_finder.

#### Runtime:
- Currency formatting fixed for BigDecimal and BigInteger values.
- Updated java.lang.annotation to Java 8, fixing type annotations.

#### Libraries:
- Guava library updated to version 19.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/2937059/assets,https://api.github.com/repos/google/j2objc/releases/2937059,master,https://api.github.com/repos/google/j2objc/tarball/1.0.2,https://github.com/google/j2objc/releases/tag/1.0.2,https://api.github.com/repos/google/j2objc/zipball/1.0.2,1.0.2,False,True
2581326,2016-02-09T17:46:08Z,2016-02-09T18:36:41Z,1.0.1,"A new release of J2ObjC is available, 1.0.1.

This release updates 1.0.0 with several bug fixes, including:

#### Translator:
- Java enums use a shared alloc. (non-ARC only)

#### Runtime:
- java.lang.Throwable now maps to NSException. JavaLangThrowable is still supported with a @compatibility_alias, but this will be removed in the next version.
- IosHttpURLConnection implements java.net.CookieHandler support.

#### Libraries:
- Symlinks are preserved in zipped release, reducing its size.
- Guava library is build directly from unaltered Guava sources. Forked sources have been removed.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/2581326/assets,https://api.github.com/repos/google/j2objc/releases/2581326,master,https://api.github.com/repos/google/j2objc/tarball/1.0.1,https://github.com/google/j2objc/releases/tag/1.0.1,https://api.github.com/repos/google/j2objc/zipball/1.0.1,1.0.1,False,False
2470362,2016-01-21T20:31:11Z,2016-01-21T20:48:53Z,1.0.0,"A new release of J2ObjC is available, 1.0.0. This release removes the ""beta"" tag from the project, as it is now used by many iOS apps. 

In addition to numerous bug fixes and performance improvements, this release includes:

#### Translator:
- Simplified Java enum translation.
- A --swift-friendly flag, which enables flags that make importing J2ObjC header files into Swift easier. We'll continue to improve Swift inter-operability in the future.
- Added translation support for Java nullability annotations.
- Added OCNI header blocks.

#### Runtime:
- Split libjre_emul.a into sub-libraries, to support developers needing smaller apps.
- Support iOS bitcode.
- Rewrote runtime support for volatile fields.
- Added java.security Signature provider.

#### Libraries
- Distributed libraries can now be added to projects using static frameworks.
- Apache Xalan library added to support the javax.xml.transform package.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/2470362/assets,https://api.github.com/repos/google/j2objc/releases/2470362,master,https://api.github.com/repos/google/j2objc/tarball/1.0.0,https://github.com/google/j2objc/releases/tag/1.0.0,https://api.github.com/repos/google/j2objc/zipball/1.0.0,1.0.0,False,False
1886078,2015-09-28T18:52:09Z,2015-09-29T20:13:44Z,0.9.8.2.1,"Rebuilds 0.9.8.2 so that the Guava libraries are included.
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/1886078/assets,https://api.github.com/repos/google/j2objc/releases/1886078,master,https://api.github.com/repos/google/j2objc/tarball/0.9.8.2.1,https://github.com/google/j2objc/releases/tag/0.9.8.2.1,https://api.github.com/repos/google/j2objc/zipball/0.9.8.2.1,0.9.8.2.1,False,True
1868950,2015-09-25T16:04:07Z,2015-09-25T17:27:25Z,0.9.8.2,"## Note: the release build for 0.9.8.2 failed, as it did not contain the Guava libraries. Use the [0.9.8.2.1](https://github.com/google/j2objc/releases/tag/0.9.8.2.1) build instead.

This release updates 0.9.8.1 with:

### Xcode 7/iOS 9 Support
- #611: Added x86_64 simulator arch.
  - Mac OS X libraries moved to dist/lib/macosx.
- #613: Added bitcode marker support.
- Fixed doc-comment generation to display correctly in Xcode Quick Help.

### Improvements
- `java.util.jar` added to JRE.
- #574: added javac's `-processor` and `-processorpath` flags to j2objc.
- A `-version` flag was added to j2objc and cycle_finder.
- Added `java.beans.PropertyDescriptor`.
- Added `jre_emul-src.jar` to distribution.
- Added Zip64 support.

### Bug Fixes
- Fixed type casting on inferred wildcard types.
- Fixed issues with `java.lang.ref` implementation.
- Fixed `java.util.zip.ZipFile` expansion of deflated zip entries.
- #591 Implement `JreAssert` with macro so that msg is conditionally evaluated, contributed by @lukhnos.
- #595 JavaMetadata leak fixes, contributed by @lukhnos.
- #596: Fixed _try-with-resources_ to match JLS spec.
- #600: Improved dead code elimination, contributed by @lukhnos.
- #602: Fixed `java.lang.Throwable` leaks, contributed by @lukhnos.
- #604: Fixed `java.nio` leaks, contributed by @lukhnos.
- #606: Mutex leak fixes, contributed by @lukhnos.
- #607: Fixed runtime lookup of classes mapped with wildcard prefixes.
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/1868950/assets,https://api.github.com/repos/google/j2objc/releases/1868950,master,https://api.github.com/repos/google/j2objc/tarball/0.9.8.2,https://github.com/google/j2objc/releases/tag/0.9.8.2,https://api.github.com/repos/google/j2objc/zipball/0.9.8.2,0.9.8.2,False,True
1701229,2015-08-20T18:10:52Z,2015-08-20T19:44:00Z,0.9.8.1,"This release updates 0.9.8 with several bug fixes, including:
- [573: added third-party license directory to distribution](https://github.com/google/j2objc/issues/573)
- [584: Passing address of non-local object to __autoreleasing parameter for write-back](https://github.com/google/j2objc/issues/584)
- [585: Lambdas not compilable with Objective C++](https://github.com/google/j2objc/issues/585)
- [587: Fix operator invocations for local variables in ARC](https://github.com/google/j2objc/issues/587)
- [588: Rename static accessor methods that are reserved names](https://github.com/google/j2objc/issues/588)

Support for package-prefix wildcards added; for example: ""--prefix 'foo.bar.*=FB'"".
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/1701229/assets,https://api.github.com/repos/google/j2objc/releases/1701229,master,https://api.github.com/repos/google/j2objc/tarball/0.9.8.1,https://github.com/google/j2objc/releases/tag/0.9.8.1,https://api.github.com/repos/google/j2objc/zipball/0.9.8.1,0.9.8.1,False,True
1674717,2015-08-13T20:50:12Z,2015-08-14T18:26:52Z,0.9.8,"A new release of J2ObjC is available, 0.9.8.

In addition to numerous bug fixes changes include:

#### Translator:
- Support for [Java 8 lambda expressions and method references](http://j2objc.org/blog/#lambdas-in-java-8---dysfunctional-interfaces).
- Implemented Java volatile field support.
- New annotation support:
  - [J2ObjCIncompatible](http://j2objc.org/docs/J2ObjCIncompatible.html)
  - [LoopTranslation](http://j2objc.org/docs/LoopTranslation.html)
  - [Property](http://j2objc.org/docs/Property.html)
  - [RetainedLocalRef](http://j2objc.org/docs/RetainedLocalRef.html)
- Generate JNI function calls for native methods without [OCNI code](http://j2objc.org/docs/Writing-Native-Methods.html).

#### Runtime:
- Fully revised java.util.concurrent.atomic implementations using c11.
- Basic JNI support added.
- Added java.security Signature provider.

#### Protobufs
- Added protocol string list support.

#### Libraries
- Google Guava
  - Updated to version 18.0
  - J2ObjC fork [merged](https://github.com/google/guava/releases/tag/v19.0-rc1).

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/1674717/assets,https://api.github.com/repos/google/j2objc/releases/1674717,master,https://api.github.com/repos/google/j2objc/tarball/0.9.8,https://github.com/google/j2objc/releases/tag/0.9.8,https://api.github.com/repos/google/j2objc/zipball/0.9.8,0.9.8,False,True
1151075,2015-04-10T19:31:50Z,2015-04-10T20:09:12Z,0.9.7,"A new release of J2ObjC is available, 0.9.7.

In addition to numerous bug fixes changes include:

#### Support Tools:
- Added Protocol Buffer support.

#### Performance:
- Constructors are “functionized”.

#### Translator:
- Declarations of private inner types are moved to the implementation file.
- Improved reflection on generic types.
- Improved @ObjectiveCName support for methods.
- Improved runtime annotation support.

#### Runtime:
- Added reflection support for generic signatures.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/1151075/assets,https://api.github.com/repos/google/j2objc/releases/1151075,master,https://api.github.com/repos/google/j2objc/tarball/0.9.7,https://github.com/google/j2objc/releases/tag/0.9.7,https://api.github.com/repos/google/j2objc/zipball/0.9.7,0.9.7,False,True
917551,2015-01-30T21:06:43Z,2015-02-04T18:54:21Z,0.9.6.1,"This release is a rebuilding of 0.9.6 without debugging symbols. No source files were changed.
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/917551/assets,https://api.github.com/repos/google/j2objc/releases/917551,master,https://api.github.com/repos/google/j2objc/tarball/0.9.6.1,https://github.com/google/j2objc/releases/tag/0.9.6.1,https://api.github.com/repos/google/j2objc/zipball/0.9.6.1,0.9.6.1,False,True
903081,2015-01-30T21:06:43Z,2015-01-30T22:08:19Z,0.9.6,"A new release of J2ObjC is available, 0.9.6.

_Note:_ --hide-private-members is now default, so that private fields and methods are no longer visible in public header files. If that breaks your project, either fix the illegal references, make those members non-private (since they aren't), or use the --no-hide-private-members flag.

Other changes include:

#### Performance:
- Improved instanceof, Object.getClass() performance.

#### Translator:
- Annotation processing now supported.
- ObjectiveCName annotation supports packages, as an alternative to mapping files.
- Reduced header file boilerplate.
- Removed -use-gc flag, as Apple has deprecated it for OS X.
- Removed -mem-debug support.

#### JRE Emulation:
- XML DOM parsing, remaining javax.xml classes added.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/903081/assets,https://api.github.com/repos/google/j2objc/releases/903081,master,https://api.github.com/repos/google/j2objc/tarball/0.9.6,https://github.com/google/j2objc/releases/tag/0.9.6,https://api.github.com/repos/google/j2objc/zipball/0.9.6,0.9.6,False,True
717099,2014-11-19T14:29:39Z,2014-11-19T15:21:59Z,0.9.5,"A new release of J2ObjC is available, 0.9.5.

**Important**: This change introduces a dependency on libicucore. You will need to add libicucore to your link step if it is not already linked.

Changes include:

#### Performance:
- Object arrays now avoid retaining their elements until the array has a positive retain count.
- ""Functionizing"" of static methods is now the default behavior. Generated class methods can now be removed with --no-class-methods.

#### Translator:
- Improved and simplified dead code removal. Sources are no longer saved to a temp file after the dead code removal pass.
- Generated enums now use NS_ENUM macro.

#### JRE Emulation:
- Rewrote java.util.regex.Pattern and Matcher using icu library. Fixes compatibility issues.
- Updated all of java.lang and java.util to Android sources, fixing serialization for a number of those classes.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/kstanger,6548109,kstanger,https://api.github.com/repos/google/j2objc/releases/717099/assets,https://api.github.com/repos/google/j2objc/releases/717099,master,https://api.github.com/repos/google/j2objc/tarball/0.9.5,https://github.com/google/j2objc/releases/tag/0.9.5,https://api.github.com/repos/google/j2objc/zipball/0.9.5,0.9.5,False,True
649316,2014-10-23T16:56:02Z,2014-10-23T18:58:25Z,0.9.4,"A new release of J2ObjC is available, 0.9.4. 

**Important**: the minimum build requirements for J2ObjC are now JDK 1.7, Xcode 5 (or 6), and Mac OS X 10.9. Java sources being translated can still adhere to any Java version.

Changes include:

**Performance:**
- Faster string concatenation, java.lang.StringBuilder, java.lang.StringBuffer. String.getChars().
- Faster System.arraycopy().
- Reduced static initializer time in several JRE classes, made all metadata constant to reduce initialization time.
- Added branch pruning, like javac has.

**Translator:**
- ""Functionized"" static methods, enums: the --final-methods-as-functions flag now creates functions for all static and enum methods. Because this includes public methods, all J2ObjC-generated classes in an app need to be built with this flag (the JRE emulation library already is).
- Added method and constructor support of the ObjectiveCName annotation. Method renaming can now be done without a mapping file.
- Added support for package annotations.
- Added the ReflectionSupport annotation, to direct whether metadata should be generated for the annotated class or package. By default, metadata is enabled to support the full Java reflection API. If either the --strip-reflection flag is used or there's a ReflectionSupport(NATIVE_ONLY), then only reflection built into Objective-C will be used.
- Fixed handling of classes with '$' in their names, necessary to support [Dagger](https://github.com/square/dagger).
- New AST library, which simplifies translator classes significantly.

**JRE Emulation:**
- Added java.util.Scanner
- Updated jsr305 to version 3.0.0.
- Updated java.text to Android's latest version.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/649316/assets,https://api.github.com/repos/google/j2objc/releases/649316,master,https://api.github.com/repos/google/j2objc/tarball/0.9.4,https://github.com/google/j2objc/releases/tag/0.9.4,https://api.github.com/repos/google/j2objc/zipball/0.9.4,0.9.4,False,True
422709,2014-07-10T19:13:16Z,2014-07-10T21:27:31Z,0.9.3,"A new release of J2ObjC is available, 0.9.3. 

**Important**: the minimum build requirements for J2ObjC are now JDK 1.7, Xcode 5, and Mac OS X 10.9. Java sources being translated can still adhere to any Java version.

Changes include:

**Performance:**
- A `--batch-translate-max=<n>` flag was added to the translator, which speeds up translation of large builds by combining symbol resolution between the batch's sources. A `-J<flag>` was also added (like javac has) to specify JVM arguments when running the translator. Combining the two allows big batches to be run when the build system has memory: `--batch-translate-max=500 -J-Xmx2G` is an example.
- The native libraries distributed with J2ObjC are now built by default with `-Os` optimization. Set DEBUG when building to turn optimization off.
- An **experimental** flag, `--final-methods-as-functions`, translates some methods into functions to avoid the overhead of Objective-C dynamic method dispatching. Currently only methods with a private modifier are ""functionized."" Plans are to add support for all methods in private classes, and possibly all final methods. The JRE library is built with this flag.

**Translator:**
- Improved debug (`-g`) generation.
- Fixed bugs running on Windows (note: Windows is still not a supported platform!).

**Cycle Finder:**
- Adds support for a ""blacklist"" file that will cause the cycle finder to only look for cycles containing specific types.

**JRE Emulation:**
- Updated [java.sql](http://developer.android.com/reference/java/sql/package-summary.html) package to Java 7.
- IosHttpURLConnection fixes, contributed by Kasper Føns.
- Fixed warnings reported by the Xcode 6 compiler.

**Android Emulation:**
- Added Android's [org.json](http://developer.android.com/reference/org/json/package-summary.html) package.

**Guava:**
- Added remaining packages:
  - [com.google.common.eventbus](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/eventbus/package-summary.html)
  - [com.google.common.reflect](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/reflect/package-summary.html)

**Reflection:** 
- Added enum field metadata, [Field.isEnumConstant()](http://developer.android.com/reference/java/lang/reflect/Field.html#isEnumConstant%28%29).

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/422709/assets,https://api.github.com/repos/google/j2objc/releases/422709,master,https://api.github.com/repos/google/j2objc/tarball/0.9.3,https://github.com/google/j2objc/releases/tag/0.9.3,https://api.github.com/repos/google/j2objc/zipball/0.9.3,0.9.3,False,True
293448,2014-04-28T22:49:21Z,2014-04-28T23:34:59Z,0.9.2,"A new release of J2ObjC is available, 0.9.2, with the following changes. We consider this release to be ""feature complete"" for 1.0, and will be focusing on fixing bugs and improving performance for that release. Details include:

**JRE Emulation:**
- Native iOS implementation of HttpURLConnection, with URL.connect() support for HTTP and HTTPS URLs.

**Android Emulation:**
- Implemented android.util.Log, mapping it to java.util.logging.
- Added platform-independent android.text and android.util classes.

**Performance:**
- Replaced method accessors for static variables and enums with C  functions.
- Improved array creation performance by removing init methods.

**Reflection:** 
- Implemented java.lang.reflect.Field accessibility.

**Notes:**
- We have dropped plans for full java.net support, since doing so requires several security features, including X509 certificates, SSL sockets, session encryption, etc. While we'd like to add these features eventually, it is work that needs to be done carefully, and requires full review by security pros before it can be included.
- We have no plans to support the full Android API, as much of it is very platform-specific and not portable to iOS. We're receptive to porting widely used platform-independent classes like android.util.Log, however, when there is a demonstrated need.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/293448/assets,https://api.github.com/repos/google/j2objc/releases/293448,master,https://api.github.com/repos/google/j2objc/tarball/0.9.2,https://github.com/google/j2objc/releases/tag/0.9.2,https://api.github.com/repos/google/j2objc/zipball/0.9.2,0.9.2,False,True
260846,2014-04-07T19:04:13Z,2014-04-07T19:49:07Z,0.9.1,"A new release of J2ObjC is available, 0.9.1, with the following changes:

**Breaking Change**
All primitive array classes are now declared in IOSPrimitiveArray.h, rather than separate header files. This only affects native classes that directly import or include J2ObjC primitive array class headers.

**Soon to be Breaking Change**
Static variable accessor are now inline C functions, rather than Objective-C methods. This only affects native classes that access generated static variables. To see what the new signatures are, translate your sources with 0.9.1 and review the header files it creates. Currently old accessor methods are also created, but will be removed in the next release (since they hurt performance).

**Performance**
- Rewrote enum values variable as native array.
- Array performance improvements.

**New, but not finished**
- java.net classes have been added. However, the interesting ones like URLConnection don't work yet, because the OkHttp library needs to be ported to provide HTTP/HTTPS/SPDY protocol support. Working java.net support will be in the next release.
- java.security support for SSL certificates has also been added but is not working yet. This is because the list of all classes needed to support java.net is long, and needed to be committed in stages.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/260846/assets,https://api.github.com/repos/google/j2objc/releases/260846,master,https://api.github.com/repos/google/j2objc/tarball/0.9.1,https://github.com/google/j2objc/releases/tag/0.9.1,https://api.github.com/repos/google/j2objc/zipball/0.9.1,0.9.1,False,True
168572,2014-01-31T21:38:45Z,2014-01-31T22:08:00Z,0.9,"A new release of J2ObjC is available, 0.9, with the following major changes:

**Translation**
- Generate Xcode 5 Quick Help in translated headers using --doc-comments.
- Rewrite expressions that cause unsequenced expression warnings in Objective-C.

**JRE Emulation**
- Added java.util.zip package.
- Added java.lang.Character code unit methods.
- Upgraded primitive type wrappers (i.e., java.lang.Integer) and number parsing to Android's latest.

**Reflection**
- Implemented Class.forName mapping for classes translated with package prefixes.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/168572/assets,https://api.github.com/repos/google/j2objc/releases/168572,master,https://api.github.com/repos/google/j2objc/tarball/0.9,https://github.com/google/j2objc/releases/tag/0.9,https://api.github.com/repos/google/j2objc/zipball/0.9,0.9,False,True
167416,2014-01-31T00:39:00Z,2014-01-31T00:51:19Z,0.8.8,"A new release of J2ObjC is available, 0.8.8, with the following changes:

**JRE Emulation:**
- Added remaining java.util.concurrent classes.
- java.security classes: Security, Provider, Policy and exception classes.
- URI/URL encoding implemented.
- Added java.util.zip inflating (unzip) support, contributed by Alex Jarvis.
- Added java.util.logging formatting support.

**Guava:**
- Added com.google.common.util.concurrent classes.

**Reflection:**
- Implemented java.lang.reflect.ParameterizedType and TypeVariable.
- Java package, original class name, enclosing class name, and modifiers.
- Original method and field names, modifiers, thrown exception list.

**Testing:**
- [Mockito](https://code.google.com/p/mockito/) test support (-l mockito).

**Make Support:**
- make/translate.mk: rules for Java source translation.
- make/create_jar.mk: rules for create jar files.
- make/fat_lib.mk: rules for creating static libraries.

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/167416/assets,https://api.github.com/repos/google/j2objc/releases/167416,master,https://api.github.com/repos/google/j2objc/tarball/0.8.8,https://github.com/google/j2objc/releases/tag/0.8.8,https://api.github.com/repos/google/j2objc/zipball/0.8.8,0.8.8,False,True
167412,2014-01-31T00:38:13Z,2014-01-31T00:47:09Z,0.8.7,"A new release of J2ObjC is available, 0.8.7, with the following changes:

**Guava:**
- [Google's Guava library](https://code.google.com/p/guava-libraries/) is now compiled and included in the J2ObjC distribution.
- Most classes are included (some require additional JRE support).
- Source includes [J2ObjC annotations](https://code.google.com/p/j2objc/wiki/API) to resolve reference cycles, to avoid memory leakage.

**Performance:**
- NSFastEnumeration implementations for LinkedList, TreeMap, TreeSet
- Parallel build supported, use ""make -jN dist"", where N is the number of CPU cores on the build machine.
- Cycle Finder runs much faster

**Translation:**
- Adds metadata so reflection returns original Java class and package names, method modifiers.

**JRE Emulation:**
- Added java.util.concurrent collection classes.
- Added java.util.concurrent.locks, java.util.concurrent.atomic packages.
- Added java.lang.reflect.Proxy support.
- Android-compatible decimal formatting.
- Added java.io.StreamTokenizer.
- Added uncaught exception handling to java.lang.Thread, rewrote Thread.interrupt().

Thanks for all the bug reports, especially those with tests and/or patches -- we're a small team, and appreciate the help!
",https://api.github.com/users/tomball,2991279,tomball,https://api.github.com/repos/google/j2objc/releases/167412/assets,https://api.github.com/repos/google/j2objc/releases/167412,master,https://api.github.com/repos/google/j2objc/tarball/0.8.7,https://github.com/google/j2objc/releases/tag/0.8.7,https://api.github.com/repos/google/j2objc/zipball/0.8.7,0.8.7,False,True
