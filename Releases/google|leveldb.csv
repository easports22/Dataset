id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
5613446,2017-03-02T00:08:02Z,2017-03-02T00:18:28Z,Release 1.20,"- Convert documentation to markdown.
- Implement support for Intel crc32 instruction (SSE 4.2).
  Based on https://github.com/google/leveldb/pull/309.
- Limit the number of read-only files the POSIX Env will have open.
- Add option for maximum file size.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/5613446/assets,https://api.github.com/repos/google/leveldb/releases/5613446,master,https://api.github.com/repos/google/leveldb/tarball/v1.20,https://github.com/google/leveldb/releases/tag/v1.20,https://api.github.com/repos/google/leveldb/zipball/v1.20,v1.20,False,False
3867537,2016-08-11T14:33:30Z,2016-08-11T16:30:21Z,Release 1.19,"- A snappy change broke test assumptions about the size of compressed output. Fixed.
- Fix problems in LevelDB's caching code.
- Fix LevelDB build when asserts are enabled in release builds. (#367).
- Change std::uint64_t to uint64_t (#354).
- Fixes a bug encountered when reading records from leveldb files that have been split, as in a [] input task split.
- Deleted redundant null ptr check prior to delete. (#338).
- Fix signed/unsigned mismatch on VC++ builds.
- Putting build artifacts in subdirectory.
- Added continuous build integration via [Travis CI](https://travis-ci.org/google/leveldb).
- log compaction output file's level along with number.
- Misc. improvements to README file.
- Fix Android/MIPS build (#115).
- Only compiling TrimSpace on linux (#310).
- Use xcrun to determine Xcode.app path instead of using a hardcoded path.
- Add ""approximate-memory-usage"" property to leveldb::DB::GetProperty.
- Add leveldb::Cache::Prune.
- Fix size_t/int comparison/conversion issues.
- Added leveldb::Status::IsInvalidArgument() method.
- Suppress error reporting after seeking but before a valid First or Full record is encountered.
- #include <assert> -> <cassert> (#280).
- Now attempts to reuse the preceding MANIFEST and log file when re-opened.
- Add benchmark that measures cost of repeatedly opening the database.
- Added a new fault injection test.
- Add arm64 support to leveldb.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/3867537/assets,https://api.github.com/repos/google/leveldb/releases/3867537,master,https://api.github.com/repos/google/leveldb/tarball/v1.19,https://github.com/google/leveldb/releases/tag/v1.19,https://api.github.com/repos/google/leveldb/zipball/v1.19,v1.19,False,False
562302,2014-09-16T21:19:52Z,2014-09-16T21:24:09Z,Release 1.18,"- Update version number to 1.18
- Replace the basic fprintf call with a call to fwrite in order to
  work around the apparent compiler optimization/rewrite failure that we are
  seeing with the new toolchain/iOS SDKs provided with Xcode6 and iOS8.
- Fix ALL the header guards.
- Createed a README.md with the LevelDB project description.
- A new CONTRIBUTING file.
- Don't implicitly convert uint64_t to size_t or int.  Either preserve it as
  uint64_t, or explicitly cast. This fixes MSVC warnings about possible value
  truncation when compiling this code in Chromium.
- Added a DumpFile() library function that encapsulates the guts of the
  ""leveldbutil dump"" command. This will allow clients to dump
  data to their log files instead of stdout. It will also allow clients to
  supply their own environment.
- leveldb: Remove unused function 'ConsumeChar'.
- leveldbutil: Remove unused member variables from WriteBatchItemPrinter.
- OpenBSD, NetBSD and DragonflyBSD have _LITTLE_ENDIAN, so define
  PLATFORM_IS_LITTLE_ENDIAN like on FreeBSD. This fixes:
  - issue #143
  - issue #198
  - issue #249
- Switch from &lt;cstdatomic&gt; to &lt;atomic&gt;. The former never made it into the
  standard and doesn't exist in modern gcc versions at all.  The later contains
  everything that leveldb was using from the former.
  This problem was noticed when porting to Portable Native Client where no memory
  barrier is defined.  The fact that &lt;cstdatomic&gt; is missing normally goes
  unnoticed since memory barriers are defined for most architectures.
- Make Hash() treat its input as unsigned.  Before this change LevelDB files
  from platforms with different signedness of char were not compatible. This
  change fixes: issue #243
- Verify checksums of index/meta/filter blocks when paranoid_checks set.
- Invoke all tools for iOS with xcrun. (This was causing problems with the new
  XCode 5.1.1 image on pulse.)
- include &lt;sys/stat.h&gt; only once, and fix the following linter warning:
  ""Found C system header after C++ system header""
- When encountering a corrupted table file, return Status::Corruption instead of
  Status::InvalidArgument.
- Support cygwin as build platform, patch is from https://code.google.com/p/leveldb/issues/detail?id=188
- Fix typo, merge patch from https://code.google.com/p/leveldb/issues/detail?id=159
- Fix typos and comments, and address the following two issues:
  - issue #166
  - issue #241
- Add missing db synchronize after ""fillseq"" in the benchmark.
- Removed unused variable in SeekRandom: value (issue #201)
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/562302/assets,https://api.github.com/repos/google/leveldb/releases/562302,master,https://api.github.com/repos/google/leveldb/tarball/v1.18,https://github.com/google/leveldb/releases/tag/v1.18,https://api.github.com/repos/google/leveldb/zipball/v1.18,v1.18,False,False
559386,2012-03-30T20:15:49Z,2014-09-15T22:23:36Z,Release 1.3,"- build shared libraries
- updated version to 1.3
- add Status accessors
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559386/assets,https://api.github.com/repos/google/leveldb/releases/559386,master,https://api.github.com/repos/google/leveldb/tarball/v1.3,https://github.com/google/leveldb/releases/tag/v1.3,https://api.github.com/repos/google/leveldb/zipball/v1.3,v1.3,False,False
559383,2012-04-17T15:36:46Z,2014-09-15T22:22:45Z,Release 1.4,"In particular, we add a new FilterPolicy class. An instance of this class can be supplied in Options when opening a database. If supplied, the instance is used to generate summaries of keys (e.g., a bloom filter) which are placed in sstables. These summaries are consulted by DB::Get() so we can avoid reading sstable blocks that are guaranteed to not contain the key we are looking for.

This change provides one implementation of FilterPolicy based on bloom filters.

Other changes:
- Updated version number to 1.4.
- Some build tweaks.
- C binding for CompactRange.
- A few more benchmarks: deleteseq, deleterandom, readmissing, seekrandom.
- Minor .gitignore update.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559383/assets,https://api.github.com/repos/google/leveldb/releases/559383,master,https://api.github.com/repos/google/leveldb/tarball/v1.4,https://github.com/google/leveldb/releases/tag/v1.4,https://api.github.com/repos/google/leveldb/zipball/v1.4,v1.4,False,False
559381,2012-10-12T18:53:12Z,2014-09-15T22:21:33Z,Release 1.6,"## Highlights
- Mmap at most 1000 files on Posix to improve performance for large databases.
- Support for more architectures (thanks to Alexander K.)

## Building and porting
- HP/UX support (issue #132)
- AtomicPointer for ia64 (issue #129)
- Sparc v9 support (issue #130)
- Atomic ops for powerpc
- Use -fno-builtin-memcmp only when using g++
- Simplify IOS build rules (issue #120)
- Use CXXFLAGS instead of CFLAGS when invoking C++ compiler (issue #124)
- Fix snappy shared library problem (issue #100)
- Fix shared library installation path regression
- Endian-ness detection tweak for FreeBSD

## Bug fixes
- Stop ignoring FLAGS_open_files in db_bench
- Make bloom test behavior agnostic to endian-ness

## Performance
- Limit number of mmapped files to 1000 to improve perf for large dbs
- Do not delay for 1 second on shutdown path (issue #131)

## Misc
- Make InMemoryEnv return a no-op logger
- C binding now has a wrapper for free (issue #123)
- Add thread-safety annotations
- Added an in-process lock table (issue #126)
- Make RandomAccessFile and SequentialFile non-copyable
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559381/assets,https://api.github.com/repos/google/leveldb/releases/559381,master,https://api.github.com/repos/google/leveldb/tarball/v1.6,https://github.com/google/leveldb/releases/tag/v1.6,https://api.github.com/repos/google/leveldb/zipball/v1.6,v1.6,False,False
559369,2012-10-16T23:17:53Z,2014-09-15T22:16:57Z,Release 1.7,"Details:
- Fix shared library building.
- Reorganize linking commands so flags like --as-needed can be passed.
- C binding exports version numbers.
- Fix small typos in documention.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559369/assets,https://api.github.com/repos/google/leveldb/releases/559369,master,https://api.github.com/repos/google/leveldb/tarball/v1.7,https://github.com/google/leveldb/releases/tag/v1.7,https://api.github.com/repos/google/leveldb/zipball/v1.7,v1.7,False,False
559366,2012-12-27T18:38:48Z,2014-09-15T22:16:20Z,Release 1.8,"added utility to dump leveldb files
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559366/assets,https://api.github.com/repos/google/leveldb/releases/559366,master,https://api.github.com/repos/google/leveldb/tarball/v1.8,https://github.com/google/leveldb/releases/tag/v1.8,https://api.github.com/repos/google/leveldb/zipball/v1.8,v1.8,False,False
559364,2013-01-07T21:17:43Z,2014-09-15T22:15:53Z,Release 1.9,"Fix corruption bug found and analyzed by dhruba@gmail.com

https://groups.google.com/d/msg/leveldb/Kc9JxuIUu5A/9P0N9RL4ar8J
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/559364/assets,https://api.github.com/repos/google/leveldb/releases/559364,master,https://api.github.com/repos/google/leveldb/tarball/v1.9,https://github.com/google/leveldb/releases/tag/v1.9,https://api.github.com/repos/google/leveldb/zipball/v1.9,v1.9,False,False
558607,2013-05-15T00:03:07Z,2014-09-15T17:40:15Z,Release 1.10,"Fixes issues:
- #153 - thanks feniksgordonfreeman
- #159
- #162
- #172

Additionally,
- Remove calls to exit(1).
- Fix unused-variable warnings from clang.
- Fix possible overflow error related to num_restart value >= (2^32/4).
- Add leveldbutil to .gitignore.
- Add better log messages when Write is stalled on a compaction.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558607/assets,https://api.github.com/repos/google/leveldb/releases/558607,master,https://api.github.com/repos/google/leveldb/tarball/v1.10,https://github.com/google/leveldb/releases/tag/v1.10,https://api.github.com/repos/google/leveldb/zipball/v1.10,v1.10,False,False
558597,2013-06-13T23:14:06Z,2014-09-15T17:37:49Z,Release 1.11,"Fixes issues:
- #167
- #180
- #184

As well as the issue reported by edouarda14@gmail.com about MissingSSTFile unit test failing on windows.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558597/assets,https://api.github.com/repos/google/leveldb/releases/558597,master,https://api.github.com/repos/google/leveldb/tarball/v1.11,https://github.com/google/leveldb/releases/tag/v1.11,https://api.github.com/repos/google/leveldb/zipball/v1.11,v1.11,False,False
558593,2012-05-30T16:57:20Z,2014-09-15T17:34:48Z,Release 1.5,"1. Remove obsolete android port files.
2. Remove static initializer
3. Fix endian-ness detection
4. Fix build on various platforms
5. Improve android port speed.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558593/assets,https://api.github.com/repos/google/leveldb/releases/558593,master,https://api.github.com/repos/google/leveldb/tarball/v1.5,https://github.com/google/leveldb/releases/tag/v1.5,https://api.github.com/repos/google/leveldb/zipball/v1.5,v1.5,False,False
558540,2013-06-18T18:00:13Z,2014-09-15T17:18:50Z,Release 1.12,"Non-functional changes only:
1. Add Kevin Regan to the AUTHORS file
2. Add standard license header to issues/issue178_test.cc
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558540/assets,https://api.github.com/repos/google/leveldb/releases/558540,master,https://api.github.com/repos/google/leveldb/tarball/v1.12,https://github.com/google/leveldb/releases/tag/v1.12,https://api.github.com/repos/google/leveldb/zipball/v1.12,v1.12,False,False
558534,2013-08-21T18:12:47Z,2014-09-15T17:17:30Z,Release 1.13,"Fix issues #83, #93, #188, #196.

Additionally, fix the bug described in https://groups.google.com/d/msg/leveldb/yL6h1mAOc20/vLU64RylIdMJ where a large contiguous keyspace of deleted data was not getting compacted.

Also fix a bug where options.max_open_files was not getting clamped properly.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558534/assets,https://api.github.com/repos/google/leveldb/releases/558534,master,https://api.github.com/repos/google/leveldb/tarball/v1.13,https://github.com/google/leveldb/releases/tag/v1.13,https://api.github.com/repos/google/leveldb/zipball/v1.13,v1.13,False,False
558526,2013-09-19T20:49:19Z,2014-09-15T17:13:42Z,Release 1.14,"Fix issues #206, #207

Also,
- Fix link to bigtable paper in docs.
- New sstables will have the file extension .ldb. .sst files will continue to be recognized.
- When building for iOS, use xcrun to execute the compiler. This may affect issue #183.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558526/assets,https://api.github.com/repos/google/leveldb/releases/558526,master,https://api.github.com/repos/google/leveldb/tarball/v1.14,https://github.com/google/leveldb/releases/tag/v1.14,https://api.github.com/repos/google/leveldb/zipball/v1.14,v1.14,False,False
558512,2014-02-10T19:36:06Z,2014-09-15T17:07:43Z,Release 1.16,"- Make Log::Reader not report a corruption when the last record in a log file is truncated.
- Fix issue #230: variable created but not utilized.
- Remove comment that referenced a removed feature.
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558512/assets,https://api.github.com/repos/google/leveldb/releases/558512,master,https://api.github.com/repos/google/leveldb/tarball/v1.16,https://github.com/google/leveldb/releases/tag/v1.16,https://api.github.com/repos/google/leveldb/zipball/v1.16,v1.16,False,False
558506,2013-12-10T18:36:31Z,2014-09-15T17:04:34Z,Release 1.15,"- switched from mmap based writing to simpler stdio based writing. Has a minor impact (0.5 microseconds) on microbenchmarks for asynchronous writes. Synchronous writes speed up from 30ms to 10ms on linux/ext4.
  Should be much more reliable on diverse platforms.
- compaction errors now immediately put the database into a read-only mode (until it is re-opened). As a downside, a disk going out of space and then space being created will require a re-open to recover from, whereas previously that would happen automatically. On the plus side, many corruption possibilities go away.
- force the DB to enter an error-state so that all future writes fail when a synchronous log write succeeds but the sync fails.
- repair now regenerates sstables that exhibit problems
- fix issue #224 - Use native memory barriers on OSX
- fix issue #218 - QNX build is broken
- fix build on iOS with xcode 5
- make tests compile and pass on windows
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558506/assets,https://api.github.com/repos/google/leveldb/releases/558506,master,https://api.github.com/repos/google/leveldb/tarball/v1.15,https://github.com/google/leveldb/releases/tag/v1.15,https://api.github.com/repos/google/leveldb/zipball/v1.15,v1.15,False,False
558486,2014-05-01T20:44:03Z,2014-09-15T16:57:33Z,Release 1.17,"1. Cleanup: delete unused IntSetToString
   
     It was added in http://cr/19491949 (and was referenced at the time).
     The last reference was removed in http://cr/19507363.
   
     This fixes warning/error with pre-release crosstoolv18:
   
   ```
   'std::string leveldb::{anonymous}::IntSetToString(const std::set<long unsigned int>&)' defined but not used [-Werror=unused-function]
   ```
2. Added arm64 and and armv7s to IOS build as suggested on leveldb mailing list.
3. Changed local variable type from int to size_t
   
   This eliminates compiler warning/error and resolves issue #146
",https://api.github.com/users/cmumford,1641285,cmumford,https://api.github.com/repos/google/leveldb/releases/558486/assets,https://api.github.com/repos/google/leveldb/releases/558486,master,https://api.github.com/repos/google/leveldb/tarball/v1.17,https://github.com/google/leveldb/releases/tag/v1.17,https://api.github.com/repos/google/leveldb/zipball/v1.17,v1.17,False,False
