id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6806094,2017-06-22T18:54:36Z,2017-06-22T18:57:12Z,6.3.0,"* Feature: force IP resolution (ipv4 or ipv6) [#1608](https://github.com/guzzle/guzzle/pull/1608), [#1659](https://github.com/guzzle/guzzle/pull/1659)
* Improvement: Don't include summary in exception message when body is empty [#1621](https://github.com/guzzle/guzzle/pull/1621)
* Improvement: Handle `on_headers` option in MockHandler [#1580](https://github.com/guzzle/guzzle/pull/1580)
* Improvement: Added SUSE Linux CA path [#1609](https://github.com/guzzle/guzzle/issues/1609)
* Improvement: Use class reference for getting the name of the class instead of using hardcoded strings [#1641](https://github.com/guzzle/guzzle/pull/1641)
* Feature: Added `read_timeout` option [#1611](https://github.com/guzzle/guzzle/pull/1611)
* Bug fix: PHP 7.x fixes [#1685](https://github.com/guzzle/guzzle/pull/1685), [#1686](https://github.com/guzzle/guzzle/pull/1686), [#1811](https://github.com/guzzle/guzzle/pull/1811)
* Deprecation: BadResponseException instantiation without a response [#1642](https://github.com/guzzle/guzzle/pull/1642)
* Feature: Added NTLM auth [#1569](https://github.com/guzzle/guzzle/pull/1569)
* Feature: Track redirect HTTP status codes [#1711](https://github.com/guzzle/guzzle/pull/1711)
* Improvement: Check handler type during construction [#1745](https://github.com/guzzle/guzzle/pull/1745)
* Improvement: Always include the Content-Length if there's a body [#1721](https://github.com/guzzle/guzzle/pull/1721)
* Feature: Added convenience method to access a cookie by name [#1318](https://github.com/guzzle/guzzle/pull/1318)
* Bug fix: Fill `CURLOPT_CAPATH` and `CURLOPT_CAINFO` properly [#1684](https://github.com/guzzle/guzzle/pull/1684)
* Improvement:  	Use `\GuzzleHttp\Promise\rejection_for` function instead of object init [#1827](https://github.com/guzzle/guzzle/pull/1827)


+ Minor code cleanups, documentation fixes and clarifications.",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/6806094/assets,https://api.github.com/repos/guzzle/guzzle/releases/6806094,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.3.0,https://github.com/guzzle/guzzle/releases/tag/6.3.0,https://api.github.com/repos/guzzle/guzzle/zipball/6.3.0,6.3.0,False,False
5600552,2017-02-28T22:50:53Z,2017-03-01T01:03:22Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/5600552/assets,https://api.github.com/repos/guzzle/guzzle/releases/5600552,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.2.3,https://github.com/guzzle/guzzle/releases/tag/6.2.3,https://api.github.com/repos/guzzle/guzzle/zipball/6.2.3,6.2.3,False,False
4340098,2016-10-08T15:02:01Z,2016-10-08T15:04:12Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/4340098/assets,https://api.github.com/repos/guzzle/guzzle/releases/4340098,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.2.2,https://github.com/guzzle/guzzle/releases/tag/6.2.2,https://api.github.com/repos/guzzle/guzzle/zipball/6.2.2,6.2.2,False,False
3681493,2016-07-18T14:09:08Z,2016-07-18T14:13:18Z,6.2.1 release,"- Addressing HTTP_PROXY security vulnerability, CVE-2016-5385: https://httpoxy.org/. Please update to this version of Guzzle in order to mitigate the vulnerability when sending Guzzle requests inside of a CGI application.
- Fixing [timeout bug](https://github.com/guzzle/guzzle/pull/1488) with StreamHandler
- Only read up to `Content-Length` in PHP StreamHandler to avoid timeouts when a server does not honor `Connection: close`.
- Ignore URI fragment when sending requests.
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/3681493/assets,https://api.github.com/repos/guzzle/guzzle/releases/3681493,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.2.1,https://github.com/guzzle/guzzle/releases/tag/6.2.1,https://api.github.com/repos/guzzle/guzzle/zipball/6.2.1,6.2.1,False,False
3681457,2016-07-15T17:44:18Z,2016-07-18T14:09:12Z,,,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/3681457/assets,https://api.github.com/repos/guzzle/guzzle/releases/3681457,master,https://api.github.com/repos/guzzle/guzzle/tarball/4.2.4,https://github.com/guzzle/guzzle/releases/tag/4.2.4,https://api.github.com/repos/guzzle/guzzle/zipball/4.2.4,4.2.4,False,False
2857675,2016-03-21T20:02:09Z,2016-03-21T20:05:57Z,Version 6.2.0,"- Feature: added `GuzzleHttp\json_encode` and `GuzzleHttp\json_decode`.
  https://github.com/guzzle/guzzle/pull/1389
- Bug fix: Fix sleep calculation when waiting for delayed requests.
  https://github.com/guzzle/guzzle/pull/1324
- Feature: More flexible history containers.
  https://github.com/guzzle/guzzle/pull/1373
- Bug fix: defer sink stream opening in StreamHandler.
  https://github.com/guzzle/guzzle/pull/1377
- Bug fix: do not attempt to escape cookie values.
  https://github.com/guzzle/guzzle/pull/1406
- Feature: report original content encoding and length on decoded responses.
  https://github.com/guzzle/guzzle/pull/1409
- Bug fix: rewind seekable request bodies before dispatching to cURL.
  https://github.com/guzzle/guzzle/pull/1422
- Bug fix: provide an empty string to `http_build_query` for HHVM workaround.
  https://github.com/guzzle/guzzle/pull/1367
",https://api.github.com/users/jeskew,705500,jeskew,https://api.github.com/repos/guzzle/guzzle/releases/2857675/assets,https://api.github.com/repos/guzzle/guzzle/releases/2857675,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.2.0,https://github.com/guzzle/guzzle/releases/tag/6.2.0,https://api.github.com/repos/guzzle/guzzle/zipball/6.2.0,6.2.0,False,False
2168402,2015-11-23T00:48:10Z,2015-11-23T01:17:09Z,6.1.1,"- Bug fix: Proxy::wrapSync() now correctly proxies to the appropriate handler
  https://github.com/guzzle/guzzle/commit/911bcbc8b434adce64e223a6d1d14e9a8f63e4e4
- Feature: HandlerStack is now more generic.
  https://github.com/guzzle/guzzle/commit/f2102941331cda544745eedd97fc8fd46e1ee33e
- Bug fix: setting verify to false in the StreamHandler now disables peer
  verification. https://github.com/guzzle/guzzle/issues/1256
- Feature: Middleware now uses an exception factory, including more error
  context. https://github.com/guzzle/guzzle/pull/1282
- Feature: better support for disabled functions.
  https://github.com/guzzle/guzzle/pull/1287
- Bug fix: fixed regression where MockHandler was not using `sink`.
  https://github.com/guzzle/guzzle/pull/1292
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/2168402/assets,https://api.github.com/repos/guzzle/guzzle/releases/2168402,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.1.1,https://github.com/guzzle/guzzle/releases/tag/6.1.1,https://api.github.com/repos/guzzle/guzzle/zipball/6.1.1,6.1.1,False,False
1785349,2015-09-08T22:50:25Z,2015-09-09T00:13:56Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/1785349/assets,https://api.github.com/repos/guzzle/guzzle/releases/1785349,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.1.0,https://github.com/guzzle/guzzle/releases/tag/6.1.0,https://api.github.com/repos/guzzle/guzzle/zipball/6.1.0,6.1.0,False,False
1496019,2015-07-04T20:17:46Z,2015-07-04T20:20:41Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/1496019/assets,https://api.github.com/repos/guzzle/guzzle/releases/1496019,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.0.2,https://github.com/guzzle/guzzle/releases/tag/6.0.2,https://api.github.com/repos/guzzle/guzzle/zipball/6.0.2,6.0.2,False,False
1343898,2015-05-27T16:58:26Z,2015-05-27T17:05:24Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/1343898/assets,https://api.github.com/repos/guzzle/guzzle/releases/1343898,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.0.1,https://github.com/guzzle/guzzle/releases/tag/6.0.1,https://api.github.com/repos/guzzle/guzzle/zipball/6.0.1,6.0.1,False,False
1339064,2015-05-26T18:22:06Z,2015-05-26T18:31:44Z,6.0.0,"Guzzle now uses [PSR-7](http://www.php-fig.org/psr/psr-7/) for HTTP messages.
Due to the fact that these messages are immutable, this prompted a refactoring
of Guzzle to use a middleware based system rather than an event system. Any
HTTP message interaction (e.g., `GuzzleHttp\Message\Request`) need to be
updated to work with the new immutable PSR-7 request and response objects. Any
event listeners or subscribers need to be updated to become middleware
functions that wrap handlers (or are injected into a
`GuzzleHttp\HandlerStack`).
- Removed `GuzzleHttp\BatchResults`
- Removed `GuzzleHttp\Collection`
- Removed `GuzzleHttp\HasDataTrait`
- Removed `GuzzleHttp\ToArrayInterface`
- The `guzzlehttp/streams` dependency has been removed. Stream functionality
  is now present in the `GuzzleHttp\Psr7` namespace provided by the
  `guzzlehttp/psr7` package.
- Guzzle no longer uses ReactPHP promises and now uses the
  `guzzlehttp/promises` library. We use a custom promise library for three
  significant reasons:
  1. React promises (at the time of writing this) are recursive. Promise
     chaining and promise resolution will eventually blow the stack. Guzzle
     promises are not recursive as they use a sort of trampolining technique.
     Note: there has been movement in the React project to modify promises to
     no longer utilize recursion.
  2. Guzzle needs to have the ability to synchronously block on a promise to
     wait for a result. Guzzle promises allows this functionality (and does
     not require the use of recursion).
  3. Because we need to be able to wait on a result, doing so using React
     promises requires wrapping react promises with RingPHP futures. This
     overhead is no longer needed, reducing stack sizes, reducing complexity,
     and improving performance.
- `GuzzleHttp\Mimetypes` has been moved to a function in
  `GuzzleHttp\Psr7\mimetype_from_extension` and
  `GuzzleHttp\Psr7\mimetype_from_filename`.
- `GuzzleHttp\Query` and `GuzzleHttp\QueryParser` have been removed. Query
  strings must now be passed into request objects as strings, or provided to
  the `query` request option when creating requests with clients. The `query`
  option uses PHP's `http_build_query` to convert an array to a string. If you
  need a different serialization technique, you will need to pass the query
  string in as a string. There are a couple helper functions that will make
  working with query strings easier: `GuzzleHttp\Psr7\parse_query` and
  `GuzzleHttp\Psr7\build_query`.
- Guzzle no longer has a dependency on RingPHP. Due to the use of a middleware
  system based on PSR-7, using RingPHP and it's middleware system as well adds
  more complexity than the benefits it provides. All HTTP handlers that were
  present in RingPHP have been modified to work directly with PSR-7 messages
  and placed in the `GuzzleHttp\Handler` namespace. This significantly reduces
  complexity in Guzzle, removes a dependency, and improves performance. RingPHP
  will be maintained for Guzzle 5 support, but will no longer be a part of
  Guzzle 6.
- As Guzzle now uses a middleware based systems the event system and RingPHP
  integration has been removed. Note: while the event system has been removed,
  it is possible to add your own type of event system that is powered by the
  middleware system.
  - Removed the `Event` namespace.
  - Removed the `Subscriber` namespace.
  - Removed `Transaction` class
  - Removed `RequestFsm`
  - Removed `RingBridge`
  - `GuzzleHttp\Subscriber\Cookie` is now provided by
    `GuzzleHttp\Middleware::cookies`
  - `GuzzleHttp\Subscriber\HttpError` is now provided by
    `GuzzleHttp\Middleware::httpError`
  - `GuzzleHttp\Subscriber\History` is now provided by
    `GuzzleHttp\Middleware::history`
  - `GuzzleHttp\Subscriber\Mock` is now provided by
    `GuzzleHttp\Middleware::mock`
  - `GuzzleHttp\Subscriber\Prepare` is now provided by
    `GuzzleHttp\PrepareBodyMiddleware`
  - `GuzzleHttp\Subscriber\Redirect` is now provided by
    `GuzzleHttp\RedirectMiddleware`
- Guzzle now uses `Psr\Http\Message\UriInterface` (implements in
  `GuzzleHttp\Psr7\Uri`) for URI support. `GuzzleHttp\Url` is now gone.
- Static functions in `GuzzleHttp\Utils` have been moved to namespaced
  functions under the `GuzzleHttp` namespace. This requires either a Composer
  based autoloader or you to include functions.php.
- `GuzzleHttp\ClientInterface::getDefaultOption` has been renamed to
  `GuzzleHttp\ClientInterface::getConfig`.
- `GuzzleHttp\ClientInterface::setDefaultOption` has been removed.

## Migrating to middleware

The change to PSR-7 unfortunately required significant refactoring to Guzzle
due to the fact that PSR-7 messages are immutable. Guzzle 5 relied on an event
system from plugins. The event system relied on mutability of HTTP messages and
side effects in order to work. With immutable messages, you have to change your
workflow to become more about either returning a value (e.g., functional
middlewares) or setting a value on an object. Guzzle v6 has chosen the
functional middleware approach.

Instead of using the event system to listen for things like the `before` event,
you now create a stack based middleware function that intercepts a request on
the way in and the promise of the response on the way out. This is a much
simpler and more predictable approach than the event system and works nicely
with PSR-7 middleware. Due to the use of promises, the middleware system is
also asynchronous.

v5:

``` php
use GuzzleHttp\Event\BeforeEvent;
$client = new GuzzleHttp\Client();
// Get the emitter and listen to the before event.
$client->getEmitter()->on('before', function (BeforeEvent $e) {
    // Guzzle v5 events relied on mutation
    $e->getRequest()->setHeader('X-Foo', 'Bar');
});
```

v6:

In v6, you can modify the request before it is sent using the `mapRequest`
middleware. The idiomatic way in v6 to modify the request/response lifecycle is
to setup a handler middleware stack up front and inject the handler into a
client.

``` php
use GuzzleHttp\Middleware;
// Create a handler stack that has all of the default middlewares attached
$handler = GuzzleHttp\HandlerStack::create();
// Push the handler onto the handler stack
$handler->push(Middleware::mapRequest(function (RequestInterface $request) {
    // Notice that we have to return a request object
    return $request->withHeader('X-Foo', 'Bar');
});
// Inject the handler into the client
$client = new GuzzleHttp\Client(['handler' => $handler]);
```
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/1339064/assets,https://api.github.com/repos/guzzle/guzzle/releases/1339064,master,https://api.github.com/repos/guzzle/guzzle/tarball/6.0.0,https://github.com/guzzle/guzzle/releases/tag/6.0.0,https://api.github.com/repos/guzzle/guzzle/zipball/6.0.0,6.0.0,False,False
1315909,2015-05-20T04:29:43Z,2015-05-20T04:38:07Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/1315909/assets,https://api.github.com/repos/guzzle/guzzle/releases/1315909,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.3.0,https://github.com/guzzle/guzzle/releases/tag/5.3.0,https://api.github.com/repos/guzzle/guzzle/zipball/5.3.0,5.3.0,False,False
891368,2015-01-28T01:03:30Z,2015-01-28T01:06:47Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/891368/assets,https://api.github.com/repos/guzzle/guzzle/releases/891368,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.2.0,https://github.com/guzzle/guzzle/releases/tag/5.2.0,https://api.github.com/repos/guzzle/guzzle/zipball/5.2.0,5.2.0,False,False
799016,2014-12-19T20:27:15Z,2014-12-19T20:28:48Z,5.1.0,"- Pool class no longer uses recursion when a request is intercepted.
- The size of a Pool can now be dynamically adjusted using a callback.
  See #943.
- Setting a request option to `null` when creating a request with a client will
  ensure that the option is not set. This allows you to overwrite default
  request options on a per-request basis.
  See #937.
- Added the ability to limit which protocols are allowed for redirects by
  specifying a `protocols` array in the `allow_redirects` request option.
- Nested futures due to retries are now resolved when waiting for synchronous
  responses. See #947.
- `""0""` is now an allowed URI path. See
  #935.
- `Query` no longer typehints on the `$query` argument in the constructor,
  allowing for strings and arrays.
- Exceptions thrown in the `end` event are now correctly wrapped with Guzzle
  specific exceptions if necessary.
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/799016/assets,https://api.github.com/repos/guzzle/guzzle/releases/799016,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.1.0,https://github.com/guzzle/guzzle/releases/tag/5.1.0,https://api.github.com/repos/guzzle/guzzle/zipball/5.1.0,5.1.0,False,False
675959,2014-11-04T07:09:15Z,2014-11-04T07:11:55Z,5.0.3,"This change updates query strings so that they are treated as un-encoded values
by default where the value represents an un-encoded value to send over the
wire. A Query object then encodes the value before sending over the wire. This
means that even value query string values (e.g., "":"") are url encoded. This
makes the Query class match PHP's http_build_query function. However, if you
want to send requests over the wire using valid query string characters that do
not need to be encoded, then you can provide a string to Url::setQuery() and
pass true as the second argument to specify that the query string is a raw
string that should not be parsed or encoded (unless a call to getQuery() is
subsequently made, forcing the query-string to be converted into a Query
object).
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/675959/assets,https://api.github.com/repos/guzzle/guzzle/releases/675959,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.0.3,https://github.com/guzzle/guzzle/releases/tag/5.0.3,https://api.github.com/repos/guzzle/guzzle/zipball/5.0.3,5.0.3,False,False
667501,2014-10-31T03:26:57Z,2014-10-31T03:29:53Z,5.0.2,"- Added a trailing `\r\n` to multipart/form-data payloads. See
  #871
- Added a `GuzzleHttp\Pool::send()` convenience method to match the docs.
- Status codes are now returned as integers. See
  #881
- No longer overwriting an existing `application/x-www-form-urlencoded` header
  when sending POST requests, allowing for customized headers. See
  #877
- Improved query string and path URL serialization.
  - No longer double percent-encoding characters in the path or query string if
    they are already encoded.
  - Now properly encoding the supplied path to a URL object, instead of only
    encoding ' ' and '?'.
  - Now allowing many more characters to be present in the query string without
    being percent encoded. See http://tools.ietf.org/html/rfc3986#appendix-A
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/667501/assets,https://api.github.com/repos/guzzle/guzzle/releases/667501,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.0.2,https://github.com/guzzle/guzzle/releases/tag/5.0.2,https://api.github.com/repos/guzzle/guzzle/zipball/5.0.2,5.0.2,False,False
632120,2014-10-16T18:00:41Z,2014-10-16T18:47:24Z,5.0.1,"Bugfix release.
- Fixed an issue where connection errors still returned response object in
  error and end events event though the response is unusable. This has been
  corrected so that a response is not returned in the `getResponse` method of
  these events if the response did not complete. https://github.com/guzzle/guzzle/issues/867
- Fixed an issue where transfer statistics were not being populated in the
  RingBridge. https://github.com/guzzle/guzzle/issues/866
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/632120/assets,https://api.github.com/repos/guzzle/guzzle/releases/632120,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.0.1,https://github.com/guzzle/guzzle/releases/tag/5.0.1,https://api.github.com/repos/guzzle/guzzle/zipball/5.0.1,5.0.1,False,False
621498,2014-10-13T03:20:08Z,2014-10-13T03:22:20Z,5.0.0 release,"Adding support for non-blocking responses and some minor API cleanup.

### New Features
- Added support for non-blocking responses based on `guzzlehttp/guzzle-ring`.
- Added a public API for creating a default HTTP adapter.
- Updated the redirect plugin to be non-blocking so that redirects are sent
  concurrently. Other plugins like this can now be updated to be non-blocking.
- Added a ""progress"" event so that you can get upload and download progress
  events.
- Added `GuzzleHttp\Pool` which implements FutureInterface and transfers
  requests concurrently using a capped pool size as efficiently as possible.
- Added `hasListeners()` to EmitterInterface.
- Removed `GuzzleHttp\ClientInterface::sendAll` and marked
  `GuzzleHttp\Client::sendAll` as deprecated (it's still there, just not the
  recommended way).

### Breaking changes

The breaking changes in this release are relatively minor. The biggest thing to
look out for is that request and response objects no longer implement fluent
interfaces.
- Removed the fluent interfaces (i.e., `return $this`) from requests,
  responses, `GuzzleHttp\Collection`, `GuzzleHttp\Url`,
  `GuzzleHttp\Query`, `GuzzleHttp\Post\PostBody`, and
  `GuzzleHttp\Cookie\SetCookie`. This blog post provides a good outline of
  why I did this: http://ocramius.github.io/blog/fluent-interfaces-are-evil/.
  This also makes the Guzzle message interfaces compatible with the current
  PSR-7 message proposal.
- Removed ""functions.php"", so that Guzzle is truly PSR-4 compliant. Except
  for the HTTP request functions from function.php, these functions are now
  implemented in `GuzzleHttp\Utils` using camelCase. `GuzzleHttp\json_decode`
  moved to `GuzzleHttp\Utils::jsonDecode`. `GuzzleHttp\get_path` moved to
  `GuzzleHttp\Utils::getPath`. `GuzzleHttp\set_path` moved to
  `GuzzleHttp\Utils::setPath`. `GuzzleHttp\batch` should now be
  `GuzzleHttp\Pool::batch`, which returns an `SplObjectStorage`. Using functions.php
  caused problems for many users: they aren't PSR-4 compliant, require an
  explicit include, and needed an if-guard to ensure that the functions are not
  declared multiple times.
- Rewrote adapter layer.
  - Removing all classes from `GuzzleHttp\Adapter`, these are now
    implemented as callables that are stored in `GuzzleHttp\Ring\Client`.
  - Removed the concept of ""parallel adapters"". Sending requests serially or
    concurrently is now handled using a single adapter.
  - Moved `GuzzleHttp\Adapter\Transaction` to `GuzzleHttp\Transaction`. The
    Transaction object now exposes the request, response, and client as public
    properties. The getters and setters have been removed.
- Removed the ""headers"" event. This event was only useful for changing the
  body a response once the headers of the response were known. You can implement
  a similar behavior in a number of ways. One example might be to use a
  FnStream that has access to the transaction being sent. For example, when the
  first byte is written, you could check if the response headers match your
  expectations, and if so, change the actual stream body that is being
  written to.
- Removed the `asArray` parameter from
  `GuzzleHttp\Message\MessageInterface::getHeader`. If you want to get a header
  value as an array, then use the newly added `getHeaderAsArray()` method of
  `MessageInterface`. This change makes the Guzzle interfaces compatible with
  the PSR-7 interfaces.
- `GuzzleHttp\Message\MessageFactory` no longer allows subclasses to add
  custom request options using double-dispatch (this was an implementation
  detail). Instead, you should now provide an associative array to the
  constructor which is a mapping of the request option name mapping to a
  function that applies the option value to a request.
- Removed the concept of ""throwImmediately"" from exceptions and error events.
  This control mechanism was used to stop a transfer of concurrent requests
  from completing. This can now be handled by throwing the exception or by
  cancelling a pool of requests or each outstanding future request individually.
- Updated to ""GuzzleHttp\Streams"" 3.0.
  - `GuzzleHttp\Stream\StreamInterface::getContents()` no longer accepts a
    `maxLen` parameter. This update makes the Guzzle streams project
    compatible with the current PSR-7 proposal.
  - `GuzzleHttp\Stream\Stream::__construct`,
    `GuzzleHttp\Stream\Stream::factory`, and
    `GuzzleHttp\Stream\Utils::create` no longer accept a size in the second
    argument. They now accept an associative array of options, including the
    ""size"" key and ""metadata"" key which can be used to provide custom metadata.
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/621498/assets,https://api.github.com/repos/guzzle/guzzle/releases/621498,master,https://api.github.com/repos/guzzle/guzzle/tarball/5.0.0,https://github.com/guzzle/guzzle/releases/tag/5.0.0,https://api.github.com/repos/guzzle/guzzle/zipball/5.0.0,5.0.0,False,False
604770,2014-10-05T19:29:14Z,2014-10-05T19:31:06Z,None,None,https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/604770/assets,https://api.github.com/repos/guzzle/guzzle/releases/604770,master,https://api.github.com/repos/guzzle/guzzle/tarball/4.2.3,https://github.com/guzzle/guzzle/releases/tag/4.2.3,https://api.github.com/repos/guzzle/guzzle/zipball/4.2.3,4.2.3,False,False
543901,2014-09-08T22:11:59Z,2014-09-08T22:14:44Z,4.2.2,"- Fixed a memory leak in the CurlAdapter when reusing cURL handles.
- No longer using `request_fulluri` in stream adapter proxies.
- Relative redirects are now based on the last response, not the first response.
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/543901/assets,https://api.github.com/repos/guzzle/guzzle/releases/543901,master,https://api.github.com/repos/guzzle/guzzle/tarball/4.2.2,https://github.com/guzzle/guzzle/releases/tag/4.2.2,https://api.github.com/repos/guzzle/guzzle/zipball/4.2.2,4.2.2,False,False
502264,2014-08-20T05:30:12Z,2014-08-20T05:33:36Z,4.2.1,"- Ensuring that the StreamAdapter does not always add a Content-Type header
- Adding automated github releases with a phar and zip
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/502264/assets,https://api.github.com/repos/guzzle/guzzle/releases/502264,master,https://api.github.com/repos/guzzle/guzzle/tarball/4.2.1,https://github.com/guzzle/guzzle/releases/tag/4.2.1,https://api.github.com/repos/guzzle/guzzle/zipball/4.2.1,4.2.1,False,False
165494,2014-01-28T22:29:15Z,2014-01-29T17:58:12Z,3.8.1,"- Bug: Always using GET requests when redirecting from a 303 response
- Bug: CURLOPT_SSL_VERIFYHOST is now correctly set to false when setting `$certificateAuthority` to false in
  `Guzzle\Http\ClientInterface::setSslVerification()`
- Bug: RedirectPlugin now uses strict RFC 3986 compliance when combining a base URL with a relative URL
- Bug: The body of a request can now be set to `""0""`
- Sending PHP stream requests no longer forces `HTTP/1.0`
- Adding more information to ExceptionCollection exceptions so that users have more context, including a stack trace of
  each sub-exception
- Updated the `$ref` attribute in service descriptions to merge over any existing parameters of a schema (rather than
  clobbering everything).
- Merging URLs will now use the query string object from the relative URL (thus allowing custom query aggregators)
- Query strings are now parsed in a way that they do no convert empty keys with no value to have a dangling `=`.
  For example `foo&bar=baz` is now correctly parsed and recognized as `foo&bar=baz` rather than `foo=&bar=baz`.
- Now properly escaping the regular expression delimiter when matching Cookie domains.
- Network access is now disabled when loading XML documents
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/165494/assets,https://api.github.com/repos/guzzle/guzzle/releases/165494,master,https://api.github.com/repos/guzzle/guzzle/tarball/v3.8.1,https://github.com/guzzle/guzzle/releases/tag/v3.8.1,https://api.github.com/repos/guzzle/guzzle/zipball/v3.8.1,v3.8.1,False,False
113691,2013-12-05T23:39:20Z,2013-12-05T23:48:05Z,3.8.0,"- Added the ability to define a POST name for a file
- JSON response parsing now properly walks additionalProperties
- cURL error code 18 is now retried automatically in the BackoffPlugin
- Fixed a cURL error when URLs contain fragments
- Fixed an issue in the BackoffPlugin retry event where it was trying to access all exceptions as if they were
  CurlExceptions
- CURLOPT_PROGRESS function fix for PHP 5.5 (69fcc1e)
- Added the ability for Guzzle to work with older versions of cURL that do not support `CURLOPT_TIMEOUT_MS`
- Fixed a bug that was encountered when parsing empty header parameters
- UriTemplate now has a `setRegex()` method to match the docs
- The `debug` request parameter now checks if it is truthy rather than if it exists
- Setting the `debug` request parameter to true shows verbose cURL output instead of using the LogPlugin
- Added the ability to combine URLs using strict RFC 3986 compliance
- Command objects can now return the validation errors encountered by the command
- Various fixes to cache revalidation (#437 and 29797e5)
- Various fixes to the AsyncPlugin
- Cleaned up build scripts
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/113691/assets,https://api.github.com/repos/guzzle/guzzle/releases/113691,master,https://api.github.com/repos/guzzle/guzzle/tarball/v3.8.0,https://github.com/guzzle/guzzle/releases/tag/v3.8.0,https://api.github.com/repos/guzzle/guzzle/zipball/v3.8.0,v3.8.0,False,False
83038,2013-10-02T20:47:00Z,2013-11-02T21:28:53Z,3.7.4,"- Bug fix: 0 is now an allowed value in a description parameter that has a default value (#430)
- Bug fix: SchemaFormatter now returns an integer when formatting to a Unix timestamp (see https://github.com/aws/aws-sdk-php/issues/147)
- Bug fix: Cleaned up and fixed URL dot segment removal to properly resolve internal dots
- Minimum PHP version is now properly specified as 5.3.3 (up from 5.3.2) (#420)
  Updated the bundled cacert.pem (#419)
- OauthPlugin now supports adding authentication to headers or query string (#425)
",https://api.github.com/users/mtdowling,190930,mtdowling,https://api.github.com/repos/guzzle/guzzle/releases/83038/assets,https://api.github.com/repos/guzzle/guzzle/releases/83038,master,https://api.github.com/repos/guzzle/guzzle/tarball/v3.7.4,https://github.com/guzzle/guzzle/releases/tag/v3.7.4,https://api.github.com/repos/guzzle/guzzle/zipball/v3.7.4,v3.7.4,False,False
