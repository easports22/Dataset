id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8109182,2017-10-13T11:32:03Z,2017-10-13T11:51:04Z,v0.11.0,"### Major features:
* LiveUpdate.  [Example](https://github.com/hioa-cs/IncludeOS/tree/master/examples/LiveUpdate), [blog post on liveupdate](http://www.includeos.org/blog/2017/liveupdate.html)
* Solo5 / ukvm support. [Example](https://github.com/hioa-cs/IncludeOS/blob/master/test_ukvm.sh), [Solo5/uvkm blog post](http://www.includeos.org/blog/2017/includeos-on-solo5-and-ukvm.html)
* WebSockets [Example](https://github.com/hioa-cs/IncludeOS/tree/master/examples/websocket)
* Built-in auto configuration of services using config.json. [Example](https://github.com/hioa-cs/IncludeOS/blob/master/examples/websocket/config.json)

### Multiarch / multiplatform:
* 64-bit support, now default. [IncludeOS 64-bit blog post](http://www.includeos.org/blog/2017/includeos-is-now-64bit.html)
* 32-bit chainloader for use with boot tool
* Reorganized for multiple platforms

### Networking:
* Support TCP options/features; Timestamp & Window Scaling (RFC 7323) and Delayed ACK
* Path MTU Discovery, RFC 1191 (IPv4) and partly RFC 1981 (IPv6). Disabled by default until more thoroughly tested in the wild. See [the unit test for example](https://github.com/hioa-cs/IncludeOS/tree/master/test/net/unit/path_mtu_discovery.cpp)
* Kernel hooks for filter chains. Will enable upcoming firewall / NAT functionality.
* Support for Virtual IPs in Inet and TCP
* Support for partial IP/TCP checksumming
* DNS Client caching.
* Inet Domain Name support.

### Utilities:
* Fixed size version of MemBitmap - allocates and owns storage.
* CMake now supports additional arguments (see #1404)
* CMake option for what CPU features to compile for.
* CRC64 and base64 implementations by @RicoAntonioFelix
* Script to easily [run IncludeOS instances in VMware](http://blog.includeos.org/2017/04/04/running-includeos-unikernels-with-vmware)

### Fixes:
* Time is now the same as the hosts time on all supported cloud vendors and hypervisors.
* Port_util now works correctly.

Extra special thanks to @RicoAntonioFelix for innumerable improvements, and to @dfct for help with TCP cleanup.",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/8109182/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/8109182,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.11.0,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.11.0,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.11.0,v0.11.0,False,True
6454525,2017-05-21T09:48:19Z,2017-05-21T10:18:34Z,New dependency build,All dependencies should now be built without redzone,https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/6454525/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/6454525,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.11.0-bundle,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.11.0-bundle,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.11.0-bundle,v0.11.0-bundle,False,True
5969867,2017-04-04T12:59:11Z,2017-04-04T13:30:46Z,New dependency libs bundle,"cxxabi is now being built out of the LLVM source tree, invalidating previous bundles.  This IncludeOS dependency release adds a new dependency bundle, improved scripts for building the bundle and newlib updated to the latest version. 

**Update:**
We've added another bundle which contains 64bit builds of all deps as well, for upcoming x86_64 support.",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/5969867/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/5969867,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.10.1-bundle,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.10.1-bundle,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.10.1-bundle,v0.10.1-bundle,False,True
5766902,2017-03-16T12:16:37Z,2017-03-16T12:32:02Z,v0.10.0,"### Partial POSIX support
* Blocking sockets
* Syslog
* Tar/gzip
* Read only file support (read, open, stat, seek etc.)

### Replaced old build system with **CMake**
Extra special thanks to @andreashappe for getting us started!

### HTTP 1.1 support
* HTTP server functionality
* Simple, highly usable HTTP client

### Monorepo
All IncludeOS subprojects moved into main IncludeOS repo, including:
* Mana Web Application Framework
* Acorn Web Appliance service 

### Other notable features
* VFS (Virtual file system)
* System RNG (Thanks, @randombit!)
* Boot with Grub (Thanks @sarum90!)

### Utility classes
* CRC32 checksumming
* Fixed queue
* Path to regex
* URI support
* Syslogd with RFC5424 over UDP plugin
* TAR support, including gzip support with the help of uzlib.

### Dependencies
* http-parser - Efficient http parsing
* rapidjson (optional)
* uzlib 
* python-psutil
* python-jsonschema

### Tools
* Diskbuilder: Easily create and link a memdisk with the content of a directory
* boot tool: Python program to easily boot IncludeOS services",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/5766902/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/5766902,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.10.0,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.10.0,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.10.0,v0.10.0,False,True
4379662,2016-09-01T18:15:13Z,2016-10-13T13:23:44Z,v0.9.0,"### Platform support
- OpenStack support using IDE boot device
- Injectable support for platform specific protocols, like Unik instance registration

### Instrumentation
- Backtrace from ELF symbols
- Context buffer for crashes
- Real-time stack sampling for profiling

### Boot
- Stack and heap randomization
- Multiboot support

### Kernel features
- ACPI tables, ACPI shutdown
- xAPIC support
- Basic SMP support
- MSI-X support
- APIC timer
- Memory map of named, fixed memory ranges
- Improved timer system
- RTC that is auto-calibrated and inexpensive
- New driver injection system
- Statman: centrally located statistics for anything

### Networking
- Inet4 is now driver independent
- TCP modularized with lots of API changes and improvements

### Tooling and testing
- Building kernel with minimal code and stripped symbols
- Improvements to install scripts
- Automatic builds using Jenkins for PRs and main branches
- New automatic test suite for unit testing, using LEST

### Misc
- IPv4 addresses can now be created from string
- Code refactoring to make use of new C++ features and Core Guidelines
- Lots of bugfixes
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379662/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379662,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.9.0,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.9.0,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.9.0,v0.9.0,False,True
4379637,2016-09-05T22:16:55Z,2016-10-13T13:22:18Z,v0.9.1,"- Fixed DHCP
- Relaxed too strict IP filter
- Major improvement to testrunner
- Various bugfixes and minor improvements
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379637/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379637,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.9.1,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.9.1,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.9.1,v0.9.1,False,True
4379631,2016-09-08T14:43:02Z,2016-10-13T13:21:15Z,v0.9.2,"- Fixed CPU usage issue caused by PIT timeouts
- Added optional file system caching
- Various fixes and cleanups.
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379631/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379631,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.9.2,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.9.2,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.9.2,v0.9.2,False,True
4379134,2016-10-13T11:31:49Z,2016-10-13T13:03:58Z,v0.9.3 ,"### Distro support
- Support for Arch (@GuzTech)
- Support for Fedora (@andreashappe)
- Support for LinuxMint (@h4tr3d)

### Examples
- 256-color mode VGA (@lefticus)
- Snake rewrite (@Voultapher)

### Kernel
- Stack switching utility (context). Create and use custom area in memory as
  stack for a provided delegate.
- CPUID (@gurka). Includes KVM feature support

### Misc
- Minor fixes and refactoring (@RicoAntonioFelix)
- Move ELF symbols (yet again) into its own section, but pre-pruned
- Further reductions in binary sizes
- Move stack to the old 640k conventional memory hole, reducing memory usage
- Updated logotype and READMEs

### Heap debugging
- Validate new and frees
- Buffer overflow checks (@gurka)
- Verbose mode for tracking allocations

### Utility
- Added Logger - ring buffer log utility
- Added Timer - makes it easier to start, stop and restart a task

### Profiling
- Add mode toggle for stack sampler allowing Switch between caller mode
  (show who calls function) and current mode (show current function).

### Networking
- Packet now travels through the network stack as a unique_ptr instead of
  shared_ptr (avoiding control block allocation)
- Isolated network layering a bit by moving ethernet address to hw::MAC_addr
- TCP optimizations
  - Fixed bug where read would result in double free
  - No longer sets up default callbacks, saving allocations
  - Minor reduction in size

### Testing
- Improvements to test automation
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379134/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/4379134,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.9.3,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.9.3,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.9.3,v0.9.3,False,True
3496298,2016-06-22T07:32:50Z,2016-06-22T07:38:12Z,Getting stable,"A few bugs were found and fixed after running a new stress test. The OS seems very stable now, having survived a continous flood of Arp, ICMP and HTTP packets, run in parallel over ~9 hours. The VM showed no signs of having problems and gave a HTTP request rate of 3327.1 conn/s. after the flood had ended.

### Test results:
- **Ping-flood:** `$ sudo ping -f 10.0.0.42`
  `101095327 packets transmitted, 101095294 received, 0% packet loss, time 31206908ms`
- **Arp-flood:** `$ sudo arping -w 100 10.0.0.42`
  `1715415846 packets transmitted, 857201224 packets received, 50% unanswered (0 extra)`
- **httperf:** `$ time httperf --hog --server 10.0.0.42 --num-conn 100000000` 

```
Total: connections 382691 requests 382690 replies 382690 test-duration 31343.418 s` 
...
Errors: total 0 client-timo 0 socket-timo 0 connrefused 0 connreset 0
Errors: fd-unavail 0 addrunavail 0 ftab-full 0 other 0

real    522m53.450s
user    74m18.515s
sys     448m57.559s
```

The connection rate on http was very poor, 12.2 req/s., but I guess that’s quite understandable. Asking httperf to do a 100 million requests as fast as it possible will very likely just suck up all the available outgoing sockets / file descriptors.
- **VM diagnostics:**
  `Current memory usage: 1122304 b, (1.122304 MB)`
  `Recv: 23726780 Sent: 277016620`

### Experiment details:
- The three tests were run individually in parallell, from separate processes / screens, towards the same, singular VM with one CPU core. The tests were stopped manually after having run overnight.
- After ending the flood, without restarting the VM, it gave the following response:
  `$ time httperf --hog --server 10.0.0.42 --num-conn 1000`

```
Connection rate: 3327.1 conn/s (0.3 ms/conn, <=1 concurrent connections)
Connection time [ms]: min 0.3 avg 0.3 max 1.6 median 0.5 stddev 0.0
Connection time [ms]: connect 0.2
Connection length [replies/conn]: 1.000

Request rate: 3327.1 req/s (0.3 ms/req)
Request size [B]: 62.0

Reply rate [replies/s]: min 0.0 avg 0.0 max 0.0 stddev 0.0 (0 samples)
Reply time [ms]: response 0.1 transfer 0.0
Reply size [B]: header 234.0 content 489.0 footer 0.0 (total 723.0)
Reply status: 1xx=0 2xx=1000 3xx=0 4xx=0 5xx=0

CPU time [s]: user 0.09 system 0.21 (user 29.5% system 70.2% total 99.7%)
Net I/O: 2553.3 KB/s (20.9*10^6 bps)

Errors: total 0 client-timo 0 socket-timo 0 connrefused 0 connreset 0
Errors: fd-unavail 0 addrunavail 0 ftab-full 0 other 0
```

_NOTE: We've seen much higher connection rates on other platforms (e.g. 16000 conn/s. has been reported), so the numbers above should not be taken as measure of IncludeOS performance._
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3496298/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3496298,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.8.1,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.8.1,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.8.1,v0.8.1,False,True
3404363,2016-06-08T22:03:26Z,2016-06-08T22:29:54Z,Getting somewhere,"## Block device, filesystem and memdisk
- Finished filesystem interface with sync and async calls
- Support for custom filesystems
- FAT 12/16/32 filesystem implementation
- Added the Memdisk disk device, linked in as binary section
- Added Virtio Block device driver
- Added Virtio Console device driver
- Automated MemDisk builder from disk image file
- Async class for automatic handling of async file transfers

## TCP - more or less complete rewrite
- State logic is now separated into classes
- ""Socket"" replaced with ""Connection"".
- Fully implemented RFC 793 ""TransmissionControl Protocol"".
- Retransmission, round trip time calculation (RFC 6298)
- Support options - MSS implemented.
- Congestion Control (New Reno) (RFC 5681 & 6582)
- Fixed checksum bug causing instability
- Send queue - queue several write requests which will be stored until fully acknowledged to be used for retransmission. Possible to avoid any copy by assigning a shared pointer to data.
- Fair packet distribution among connections.
- Packets with payload now released immediately after copying data once to a shared buffer, released to the user when subscribed.
- More events to subscribe to - OnConnect, OnDisconnect among others.

## Time
- Async timers, one-shot and repeating (using PIT)
- We finally have a wall clock! (RTC via CMOS)

## Test
- Added tests covering the major kernel and networking features
- New system for automating tests written in python
- Added support for LEST unit test framework (used in e.g. ./test/GSL)

## Misc
- UDP now has send queue to help maximize bandwidth
- Improvements in packet- and buffer-management increasing bandwidth
- Added an optional async terminal with TCP and Serial backend, support for Telnet
- C++ GSL now included with project, with some limited usage in the kernel
- New safer virtio interface with GSL
- Pretty boot
- Pretty boot screen
- Tons of bugfixes
- Updated to llvm 3.8, both libc++ and clang, also for OS X.

## Caveats:
- You currently can't use virtio-block devices together with virtio-net in Qemu, as they'll get the same IRQ number. This has been sorted in dev, but it's involved.
- The CMOS wall clock is super expensive - I counted about 200k cycles (!). This is because it has to do a lot of single-byte in- and out-instructions which all cause vm exits. We're working on a better way to keep time, possibly synchronizing with CMOS only now and then.

## Up next:

On our dev-branch we've replaced the classic PIC-based interrupt system with APIC / IOAPIC and MSI-x. We expect this to give a major boost to resource efficiency and it does make it possible to run virtio-net together with virtio-block. We're also working on a lot of web service stuff, but that's mostly in stealth-mode as of yet - we'll open it up when we have something we think you'll like.

Thanks a lot to the budding community of contributors - we have a long way to go but it feels like we're getting somewhere :-)
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3404363/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3404363,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.8.0,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.8.0,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.8.0,v0.8.0,False,True
3279711,2016-05-22T19:13:07Z,2016-05-22T19:44:27Z,v0.8.0 Release Candidate 2,"Detailed release notes will come with the actual release.
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3279711/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/3279711,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.8.0-rc.2,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.8.0-rc.2,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.8.0-rc.2,v0.8.0-rc.2,False,True
2772182,2016-03-08T21:42:32Z,2016-03-08T23:42:27Z,v0.8.0 Release Candidate 1,"Detailed release notes will come with the actual release. 
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2772182/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2772182,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.8.0-rc.1,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.8.0-rc.1,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.8.0-rc.1,v0.8.0-rc.1,False,True
2215805,2015-12-01T19:52:55Z,2015-12-01T20:05:25Z,IncludeOS is now free and open source,"In this pre-release:  
- DHCP 
- ARP-resolution 
- UDP Sockets (TCP sockets will be changed to match) 
- New network buffer management system 
- Rewritten the Dev-class with templatized getters 
- Improved virtualbox run-script (etc/vboxrun.sh) 
- Jenkins integration 
- VGA output (somewhat sketchy - rely on the serial port) 
- Successful build on Apple OSX (try ./etc/install_mac.sh) 
- Lots of cleanups, and pretty printing 
- Apache v2.0 license
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2215805/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2215805,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.7.0-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.7.0-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.7.0-proto,v0.7.0-proto,False,True
2063658,2015-11-03T14:21:12Z,2015-11-03T14:42:34Z,"Partial TCP, Timers, Virtualbox +++","- **Partial TCP** - enough to show a static webpage
- **Asynchronous timers** using the PIT (Polite ones - no context switches). You'll find them in ""class_pit.hpp"".
- **Major directory structure cleanup**, mostly split contents in ./src into folders.
- **Lots of work towards IPv6**
- **VirtualBox support** is back - but note, ARP is not done, so don't expect proper networking.
- **Install-script finally works - way differently**
  - We now install to - and build from $HOME/IncludeOS_install. Much better than installing by default to `/usr/local/IncludeOS/`. You can move that folder anywhere - just update the first line in the makefiles. (Yes, environment vars are probably what we'll do later, but we're also getting a package manager...)
  - The contents of the install-folder gets gzipped into a binary release bundle. This bundle can be extracted as-is, and there you have everything you need to build IncludeOS  (except for local dependencies such as clang). No need to build a cross-compiler!
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2063658/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/2063658,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.6.3-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.6.3-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.6.3-proto,v0.6.3-proto,False,True
1790740,2015-09-09T21:18:43Z,2015-10-28T13:50:52Z,"LLVM's libc++, clang++ and exceptions, ","Finally you can throw and catch all the exceptions you like. We don't explicitly throw any inside the kernel, but containers might.  You can also use `std::cout <<  ""standard strings"" << std::endl`, maps, vectors, lambdas etc.

**NOTE:**
- We still don't have threads, so no `std::async`. 
- Locale-stuff is pretty much duct-taped in - newlib doesn't have proper support
- No timers yet, but we're working on it, towards the TCP milestone.
- Binary sizes increase pretty drastically - ""Hello world"" is currently at about 500Kb. As a consequence, we'll probably add EASTL back in as a module, and make an optional build-path for that.
- `long double` math functions are not implemented - the interface is there to satisfy the `cmath` header, but no implementation. We think this is better than just using them as wrappers around the `double` versions - which you can use.
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/1790740/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/1790740,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.6.2-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.6.2-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.6.2-proto,v0.6.2-proto,False,True
666380,2014-10-30T18:11:24Z,2015-10-28T13:51:00Z,"Standalone IP stack, Ping etc.","Since `alpha` usually means a release, and we haven't released anything yet, we'll call all versions up to the first actual release `vMajor.Minor.Patch-proto`. We decided earlier that [semantic versioning](http://semver.org/) is nice, even before we release anything, so expect a lot of major versions, since we're going to redo the API all the time.

New in this version:
- Standalone IP stack (so you can't get an IP stack instance via the interface anymore, which is an API change, and consequently this is a new Major release)
- IncludeOS now answers to ping
- There is a dedicated `test` folder which will build images named after the latest commit, or `DIRTY`
- The IP stack is called `Inet`, and everything network related is in the namespace `net`
- The UDP-service in `./examples/basic_udp` will assign itself an IP based on the mac-address assigned to it from Qemu. Later this conversion will also be used reversly, in Arp.
- We have a module system under way, and SQLite is the first module (it doesn't work yet)
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/666380/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/666380,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.4.1-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.4.1-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.4.1-proto,v0.4.1-proto,False,True
648104,2014-10-23T09:34:33Z,2015-10-28T13:51:12Z,"Unstable UDP, Memory management, partial STL","Dangers:
-  Network buffers are not robust - if you spam the service with lots of UDP packets with no delay, it will break.
- The whole service loads into the first MB of memory, and expands from there, ignoring things like video memory
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/648104/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/648104,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.4.0-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.4.0-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.4.0-proto,v0.4.0-proto,False,True
555681,2014-09-13T21:21:05Z,2015-10-28T13:51:19Z,New structure and build system,"- The OS now builds into a static library, `os.a`, which gets installed for re-use. This also has the effect of allowing the linker to only extract the OS-objects required by the service. 
- A new service can be created by copying the `./seed`, which contains everything necessary to start developing. 
- The ""public"" ABI is separated from the OS-specific headers.
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/555681/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/555681,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.3.0-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.3.0-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.3.0-proto,v0.3.0-proto,False,True
519299,2014-08-27T20:30:00Z,2015-10-28T13:49:55Z,Standard C library Included (sort of),"- The bootloader now loads the image in 32-bit code using LBA-mode (no bios-calls, no CHS)
- newlib is ported and works nicely so far (printf, malloc etc.) - but syscalls are only stubs. 

Still a lot of issues, but at least now we can print hexadecimal values:-)
",https://api.github.com/users/alfred-bratterud,2071766,alfred-bratterud,https://api.github.com/repos/hioa-cs/IncludeOS/releases/519299/assets,https://api.github.com/repos/hioa-cs/IncludeOS/releases/519299,master,https://api.github.com/repos/hioa-cs/IncludeOS/tarball/v0.2.0-proto,https://github.com/hioa-cs/IncludeOS/releases/tag/v0.2.0-proto,https://api.github.com/repos/hioa-cs/IncludeOS/zipball/v0.2.0-proto,v0.2.0-proto,False,True
