id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8188363,2017-10-19T18:09:15Z,2017-10-19T20:44:40Z,v1.5.1.1,"## Changes from 1.5.0 to 1.5.1.1

Bugfix release

### Fixed issues
- [MARATHON-7848](https://jira.mesosphere.com/browse/MARATHON-7848) Fixes regression in which underscores were no longer permitted in network names
",https://api.github.com/users/kensipe,27497,kensipe,https://api.github.com/repos/mesosphere/marathon/releases/8188363/assets,https://api.github.com/repos/mesosphere/marathon/releases/8188363,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.5.1.1,https://github.com/mesosphere/marathon/releases/tag/v1.5.1.1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.5.1.1,v1.5.1.1,False,False
7901214,2017-09-26T21:33:49Z,2017-09-26T21:38:11Z,v1.5.1,"## Changes from 1.5.0 to 1.5.1
Bugfix release

### Fixed issues
- [MARATHON-7576](https://jira.mesosphere.com/browse/MARATHON-7576) Changed default of UnreachableEnabled to (0,0)
- [D907](https://phabricator.mesosphere.com/D907) TaskLauncherActor doesn't wait for in-flight tasks on stop
- [MARATHON-7765](https://jira.mesosphere.com/browse/MARATHON-7765) Fixes issue in which /v2/info endpoint always returned 1.5.0-snapshot1, regardless of the actual endpoint.
- [PR 5421](https://github.com/mesosphere/marathon/pull/5421) Added SchedulerPlugin to enable the ability to customize the rejection of offers. (see below)
- [MARATHON-2520](https://jira.mesosphere.com/browse/MARATHON-2520) Improved logging around migration
- [D1044](https://phabricator.mesosphere.com/D1044) EventStream implementation moved to Akka eventStream
- [MARATHON-7545](https://jira.mesosphere.com/browse/MARATHON-7545) Initialize RunSpecTaskProcessor and RunSpecValidator at startup to early detect misconfiguration.
- [D974](https://phabricator.mesosphere.com/D974) Plugin configuration or initialization issues are made more obvious, potentially causing Marathon to not launch.
- [MARATHON-7707](https://jira.mesosphere.com/browse/MARATHON-7707)  Resident tasks now have an up-to-date agentInfo (agentId) when they are re-launched, rather than preserving the agentInfo as received during initial launch.
- [MARATHON-7724](https://jira.mesosphere.com/browse/MARATHON-7724) Better socket error handling leader proxy.
-  [MARATHON-7711](https://jira.mesosphere.com/browse/MARATHON-7711), [MARATHON-7338](https://jira.mesosphere.com/browse/MARATHON-7338) Under certain circumstances, resident tasks wouldn't relaunch when resources were available, and reservations wouldn't be freed. In order to address this, Marathon no longer suppresses offers from Mesos.
- [PR 5432](https://github.com/mesosphere/marathon/pull/5432) App and pod validation errors for missing network name.
- [MARATHON-1703](https://jira.mesosphere.com/browse/MARATHON-1703) Fixed issue in which constraints would not be properly evaluated when launching multiple resident tasks at a time.

### 1.5.1 New Behavior

#### mesosphere.marathon.plugin.scheduler.SchedulerPlugin

This plugin allows to reject offers. Possible use-cases are:
  * Maintenance. Mark agent as going to maintenance and reject new offers from it.
  * Analytics. If task fails, for example, 5 times for 5 minutes, we can assume that it will fail again and reject new offers for it.
  * Binding to agents. For example, agents can be marked as included into primary or secondary group. Task can be marked with group name.  Plugin can schedule task deployment to primary agents. If all primary agents are busy, task can be scheduled to secondary agents
",https://api.github.com/users/kensipe,27497,kensipe,https://api.github.com/repos/mesosphere/marathon/releases/7901214/assets,https://api.github.com/repos/mesosphere/marathon/releases/7901214,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.5.1,https://github.com/mesosphere/marathon/releases/tag/v1.5.1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.5.1,v1.5.1,False,False
7815764,2017-09-19T22:22:40Z,2017-09-19T22:26:27Z,v1.4.8,"## Changes from 1.4.7 to 1.4.8

### Fixed issues

* [MARATHON-7697](https://jira.mesosphere.com/browse/MARATHON-7697) - CLUSTER constraint doesn't require a value.
* [MARATHON-7724](https://jira.mesosphere.com/browse/MARATHON-7724) - Better error handling around proxy leader failure.
* [MARATHON-7728](https://jira.mesosphere.com/browse/MARATHON-7728) - Always log exceptions when performing migration.
* [MARATHON-7696](https://jira.mesosphere.com/browse/MARATHON-7696) - Do a better job at maintaining task failure rate limiting values per RunSpec.
",https://api.github.com/users/kensipe,27497,kensipe,https://api.github.com/repos/mesosphere/marathon/releases/7815764/assets,https://api.github.com/repos/mesosphere/marathon/releases/7815764,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.8,https://github.com/mesosphere/marathon/releases/tag/v1.4.8,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.8,v1.4.8,False,False
7724619,2017-09-07T19:36:39Z,2017-09-12T15:03:49Z,,"## Changes from 1.4.x to 1.5.0

### Recommended Mesos version is 1.3.0

### Breaking Changes

#### Packaging standardized

We now publish more normalized packages that attempt to follow Linux Standard Base Guidelines and use sbt-native-packager to achieve this.
As a result of this and the many historic ways of passing options into marathon, we will only read `/etc/default/marathon` when starting up.
This file, like `/etc/sysconfig/marathon`, has all marathon command line options as ""MARATHON_XXX=YYY"" which will translate to `--xx=yyy`.
We no longer support /etc/marathon/conf which was a set of files that would get translated into command line arguments. In addition,
we no longer assume that if there is no zk/master argument passed in, then both are running on localhost.

If support for any of the above is important to you, please file a JIRA and/or create a PR/Patch.


#### App JSON Fields Changed or Moved.

Marathon will continue to *accept* the app JSON as it did in 1.4;
however, applications that use deprecated fields will be normalized into a canonical representation.
The app JSON *generated* by the /v2 REST API has changed: only canonical fields are generated.
The [App RAML specification](docs/docs/rest-api/public/api/v2/types/app.raml) is the source of truth with respect to deprecated fields.
The following deprecated fields will no longer be generated for app JSON:

- `ipAddress`
- `container.docker.portMappings`
- `container.docker.network`
- `ports`
- `uris`

Marathon clients that consume these deprecated fields will require changes.
In addition, new networking API fields have been introduced:

- `networks`
- `container.portMappings`

The `networks` field replaces the `ipAddress.networkName` and `container.docker.network` fields, and supports joining an app to multiple `container` networks.
The legacy IP/CT API did not require a resolvable network name in order to use a `container` network;
it allowed both an app definition to leave `ipAddress.networkName` unspecified **and** the operator to leave `--default_network_name` unspecified.
Starting with Marathon v1.5 such apps will be rejected: apps may leave `networks[x].name` unspecified for `container` networks only if `--default_network_name` has been specified by the operator.
Marathon injects the value of `--default_network_name` into unnamed `container` networks upon app create/update.

Upgrading from Marathon 1.4.x to Marathon 1.5.x will automatically migrate existing applications to the new networking API.
Migration of legacy Mesos IP/CT apps **may fail** if those apps did not specify `ipAddress.networkName` and there is no default network name specified.
See the (networking documentation)[docs/docs/networking.md] for details concerning app migration and network API changes.

The [old app networking docs](docs/docs/ports.md) have been relocated.
See the [networking documentation](docs/docs/networking.md) for details concerning the new API.

#### Metric Names Changed or Moved.
We moved to a different Metrics library and the metrics are not _always_ compatible or the same as existing metrics;
however, the metrics are also now more accurate, use less memory, and are expected to get better throughout the release.
Where it was possible, we maintained the original metric names/groupings/etc, but some are in new locations or have
slightly different semantics. Any monitoring dashboards should be updated.

Before 1.5.0 releases, we will publish a migration guide for the new metric formats and where the replacement
metrics can be found and the formats they are now in.

#### Artifact store has been removed
The artifact store was deprecated with Marathon 1.4 and is removed in version.
The command line flag `--artifact_store` will throw an error if specified.
The REST API endpoint `/v2/artifacts` has been removed completely.

#### Logging endpoint
Marathon has the ability to view and change log level configuration during runtime via the `/logging` endpoint.
This version switches from a form based API to a JSON based API, while maintaining the functionality.
We also secured this endpoint, so you can restrict who is allowed to view or update this configuration.
Please find our [API documentation](https://mesosphere.github.io/marathon/api-console/index.html) for all details.

#### Event Subscribers has been removed.
The events subscribers endpoint (`/v2/eventSubscribers`) was deprecated in Marathon 1.4 and is removed in this version.
Please move to the `/v2/events` endpoint instead.

#### Removed command line parameters
- The command line flag `max_tasks_per_offer` has been deprecated since 1.4 and is removed now. Please use `max_instances_per_offer`.

#### Deprecated command line parameters
- The command line flag `save_tasks_to_launch_timeout` is deprecated and has no effect any longer.

### Overview

#### Networking Improvements Involving Multiple Container Networks

The field `networkNames` has been added to [app container's ContainerPortMapping](docs/docs/rest-api/public/api/v2/types/appContainer.raml) and [pod's Endpoint](docs/docs/rest-api/public/api/v2/types/network.raml). Using the field, an app or pod participating in multiple container networks can now forward ports by specifying a single item `networkNames`. For more information, see the [networking documentation](./docs/docs/networking.md).

Additionally container port discovery has been improved, with a pod or app being able specify with which container network(s) a port name/protocol/etc is associated. Discovery labels are now generated for container networks associated with ports.

#### Mesos Bridge Network Name Configurable

The CNI network used for Mesos containers when bridge networking is now configurable via the command-line argument `--mesos_bridge_name`. As with other command-line-args, this can also be specified via `MARATHON_MESOS_BRIDGE_NAME`, as well.

#### Backup and Restore Operations

You can now backup and restore Marathon's internal state via the [DELETE /v2/leader](./docs/docs/rest-api/public/api/v2/leader.raml) API endpoint.

See [MARATHON-7041](https://jira.mesosphere.com/browse/MARATHON-7041)

#### TTY support

You can now specify that a TTY should be allocated for app or pod containers. See the [TTY definition](./docs/docs/rest-api/public/api/v2/types/containerCommons.raml). An example can be found in [v2/examples/app.json](./docs/docs/rest-api/public/api/v2/examples/app.json).

See [MARATHON-7062](https://jira.mesosphere.com/browse/MARATHON-7062)

#### Improved Validation Error Messages

All validation specified in the RAML is now programatically enforced, leading to more consistent, descriptive, and legible error messages.

#### Security improvements

Marathon is in better compliance with various security best-practices. An example of this is that Marathon no longer responds to the directory listing request.

#### File-based secrets

Marathon has a pluggable interface for secret store providers.
Previous versions of Marathon allowed secrets to be passed as environment variables.
With this version it is also possible to provide secrets as volumes, mounted under a specified path.
See [file based secret documentation](http://mesosphere.github.io/marathon/docs/secrets.html)

#### Changes around unreachableStrategy

Recent changes in Apache Mesos introduced the ability to handle intermittent connectivity to an agent which may be running a Marathon task. This change introduced the `TASK_UNREACHABLE`. This allows for the ability for a node to disconnect and reconnect to the cluster without having a task replaced. This resulted in (based on default configurations) of a delay of 75 seconds before Marathon would be notified by Mesos to replace the task. The previous behavior of Marathon was usually sub-second replacement of a lost task.

It is now possible to configure `unreachableStrategy` for apps and pods to instantly replace unreachable apps or pods. To enable this behavior, you need to configure your app or pod as shown below:

```
{
  ...
  ""unreachableStrategy"": {
    ""inactiveAfterSeconds"": 0,
    ""expungeAfterSeconds"": 0
  },
  ...
}
```

**Note**: Instantly means as soon as marathon becomes aware of the unreachable task. By default, Marathon is notified after 75 seconds by Mesos
  that an agent is disconnected. You can change this duration in Mesos by configuring `agent_ping_timeout` and `max_agent_ping_timeouts`.

#### Migrating unreachableStrategy

If you want all of your apps and pods to adopt a `UnreachableStrategy` that retains the previous behavior where instance were immediately replaced so that you does not have to update every single app definition.

To change the `unreachableStrategy` of all apps and pods, set the environment variable `MIGRATION_1_4_6_UNREACHABLE_STRATEGY` to `true`, which leads to the following behavior during migration:

When opting in to the unreachable migration step
1) all app and pod definitions that had a config of `UnreachableStrategy(300 seconds, 600 seconds)` (previous default) are migrated to have `UnreachableStrategy(0 seconds, 0 seconds)`
2) all app and pod definitions that had a config of `UnreachableStrategy(1 second, x seconds)` are migrated to have `UnreachableStrategy(0 seconds, x seconds)`
3) all app and pod definitions that had a config of `UnreachableStrategy(1 second, 2 seconds)` are migrated to have `UnreachableStrategy(0 seconds, 0 seconds)`

**Note**: If you set this variable after upgrading to 1.4.6, it will have no effect. Also, the `UnreachableStrategy` default has not been changed, so in order for apps and pods created in the future to have the replace-instantly behavior, `unreachableStrategy`'s `inactiveAfterSeconds` and `expungeAfterSeconds` must be set to 0 as seen in the JSON above.

### Fixed issues
- [MARATHON-7320](https://jira.mesosphere.com/browse/MARATHON-7320) Fix MAX_PER constraint for attributes.
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/7724619/assets,https://api.github.com/repos/mesosphere/marathon/releases/7724619,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.5.0,https://github.com/mesosphere/marathon/releases/tag/v1.5.0,https://api.github.com/repos/mesosphere/marathon/zipball/v1.5.0,v1.5.0,False,False
7653280,2017-09-05T21:36:45Z,2017-09-06T13:36:13Z,,"### Fixed issues

* [MARATHON-4802](https://jira.mesosphere.com/browse/MARATHON-4802) - Constraint migration was not really implemented. This commit makes sure that it is fully implemented. During migration some constraints get sanitized. For instance, [""field"", ""UNIQUE"", ""value""] gets transformed to [""field"", ""UNIQUE""] because the UNIQUE constraint should not have any value. In addition to that the validation of CLUSTER is relaxed, because it doesn't require a value, and such a constraint did not pass the validation before.
* [PR #5487](https://github.com/mesosphere/marathon/pull/5487) - Handle socket timeout exception when forwarding requests to a leader.",https://api.github.com/users/kensipe,27497,kensipe,https://api.github.com/repos/mesosphere/marathon/releases/7653280/assets,https://api.github.com/repos/mesosphere/marathon/releases/7653280,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.13,https://github.com/mesosphere/marathon/releases/tag/v1.3.13,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.13,v1.3.13,False,False
7490779,2017-08-22T10:18:10Z,2017-08-23T09:28:53Z,,"### Fixed issues

* [MARATHON-7715](https://jira.mesosphere.com/browse/MARATHON-7715) - Marathon would not notice an unreachable / lost resident task was gone, or that a reservation should be released, unless if it was idle. This is has been resolved.
* [MARATHON-1703](https://jira.mesosphere.com/browse/MARATHON-1703) - Resident task instance placement now properly respects constraints which rely on the placement state of instance peers (such as hostname:UNIQUE).
* [MARATHON-7707](https://jira.mesosphere.com/browse/MARATHON-7707) - Resident task instance agentId and host name values are now properly updated on re-launch.
* [MARATHON-7654](https://jira.mesosphere.com/browse/MARATHON-7654) - Marathon resident task re-launch requests are no longer denied by Mesos for having the same id as another unreachable task (because Marathon no longer re-uses task ids).
",https://api.github.com/users/jeschkies,2418440,jeschkies,https://api.github.com/repos/mesosphere/marathon/releases/7490779/assets,https://api.github.com/repos/mesosphere/marathon/releases/7490779,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.7,https://github.com/mesosphere/marathon/releases/tag/v1.4.7,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.7,v1.4.7,False,False
7349547,2017-08-10T14:50:59Z,2017-08-10T15:07:34Z,v1.4.6,"### Overview

#### Changes around unreachableStrategy

Recent changes in Apache Mesos introduced the ability to handle intermittent connectivity to an agent which may be running a Marathon task. This change introduced the `TASK_UNREACHABLE`. This allows for the ability for a node to disconnect and reconnect to the cluster without having a task replaced. This resulted in (based on default configurations) of a delay of 75 seconds before Marathon would be notified by Mesos to replace the task. The previous behavior of Marathon was usually sub-second replacement of a lost task.

It is now possible to configure `unreachableStrategy` for apps and pods to instantly replace unreachable apps or pods. To enable this behavior, you need to configure your app or pod as shown below:

```
{
  ...
  ""unreachableStrategy"": {
    ""inactiveAfterSeconds"": 0,
    ""expungeAfterSeconds"": 0
  },
  ...
}
```

**Note**: Instantly means as soon as marathon becomes aware of the unreachable task. By default, Marathon is notified after 75 seconds by Mesos
  that an agent is disconnected. You can change this duration in Mesos by configuring `agent_ping_timeout` and `max_agent_ping_timeouts`.

#### Migrating unreachableStrategy

If you want all of your apps and pods to adopt a `UnreachableStrategy` that retains the previous behavior where instance were immediately replaced so that you does not have to update every single app definition.

To change the `unreachableStrategy` of all apps and pods, set the environment variable `MIGRATION_1_4_6_UNREACHABLE_STRATEGY` to `true`, which leads to the following behavior during migration:

When opting in to the unreachable migration step
1) all app and pod definitions that had a config of `UnreachableStrategy(300 seconds, 600 seconds)` (previous default) are migrated to have `UnreachableStrategy(0 seconds, 0 seconds)`
2) all app and pod definitions that had a config of `UnreachableStrategy(1 second, x seconds)` are migrated to have `UnreachableStrategy(0 seconds, x seconds)`
3) all app and pod definitions that had a config of `UnreachableStrategy(1 second, 2 seconds)` are migrated to have `UnreachableStrategy(0 seconds, 0 seconds)`

**Note**: If you set this variable after upgrading to 1.4.6, it will have no effect. Also, the `UnreachableStrategy` default has not been changed, so in order for apps and pods created in the future to have the replace-instantly behavior, `unreachableStrategy`'s `inactiveAfterSeconds` and `expungeAfterSeconds` must be set to 0 as seen in the JSON above.

### Fixed issues

- [MARATHON-7681](https://jira.mesosphere.com/browse/MARATHON-7681) - Fixes an issue in WorkQueue that could cause Marathon to drop exceptions and become unresponsive.
- [MARATHON-7653](https://jira.mesosphere.com/browse/MARATHON-7653) - Fixes an issue in which Marathon could become unresponsive when pod status wasn't available
- [MARATHON-7629](https://jira.mesosphere.com/browse/MARATHON-7629) - Fixes issue in which Marathon could get into an infinite kill loop, in certain situations
- [MARATHON-7469](https://jira.mesosphere.com/browse/MARATHON-7469) - Fixes a bug in which a new leading Marathon would kill tasks launched by an ongoing deployment during the former leader.
- [MARATHON-7472](https://jira.mesosphere.com/browse/MARATHON-7472), [MARATHON-7358](https://jira.mesosphere.com/browse/MARATHON-7358) - Further improve deployment performance by removing unnecessary thread blocking.
- [MARATHON-7617](https://jira.mesosphere.com/browse/MARATHON-7617) - Capture storage cache layer metrics, by category
- [MARATHON-7536](https://jira.mesosphere.com/browse/MARATHON-7536) - Disable HTTP TRACE method in API
- [MARATHON-7566](https://jira.mesosphere.com/browse/MARATHON-7566) - Fix a regression in which content-type was required for the ping endpoint
- [MARATHON-7334](https://jira.mesosphere.com/browse/MARATHON-7334) - Fix a regression in which `fetch[].destPath` was ignored
- Replace lock with non-blocking concurrent data structure in WorkQueue, evidently the source of some contention looking at thread dump from [MARATHON-7400](https://jira.mesosphere.com/browse/MARATHON-7400)
- [MARATHON-7433](https://jira.mesosphere.com/browse/MARATHON-7433) - Fix a group deployment issue which would cause non-root groups without a nested group to be ignored.
- [MARATHON-7462](https://jira.mesosphere.com/browse/MARATHON-7462) - Fix a race condition in WorkQueue which caused various issues, such as dropped events and could cause components of Marathon to become unresponsive.
- [MARATHON-7628](https://jira.mesosphere.com/browse/MARATHON-7462) - Added `agentId` to the pod status
- [MARATHON-7458](https://jira.mesosphere.com/browse/MARATHON-7458) - Reset root group cache when elected as leader
- [MARATHON_EE-1590](https://jira.mesosphere.com/browse/MARATHON_EE-1590) - Change unreachableStrategy to be able to start instant replacement tasks
- [MARATHON_EE-1591](https://jira.mesosphere.com/browse/MARATHON_EE-1591) - Allow migration from previous UnreachableStrategy default",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/7349547/assets,https://api.github.com/repos/mesosphere/marathon/releases/7349547,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.6,https://github.com/mesosphere/marathon/releases/tag/v1.4.6,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.6,v1.4.6,False,False
7265217,2017-08-03T03:55:42Z,2017-08-03T03:58:46Z,v1.4.6-snap1,"We're releasing v1.4.6-snap1 because we're not quite ready to land v1.4.6, and there are some fixes that many community members are anxiously awaiting.

## Changes since 1.4.5

### Fixed issues

- [MARATHON-7681](https://jira.mesosphere.com/browse/MARATHON-7681) - Fixes an issue in WorkQueue that could cause Marathon to drop exceptions and become unresponsive.
- [MARATHON-7653](https://jira.mesosphere.com/browse/MARATHON-7653) - Fixes an issue in which Marathon could become unresponsive when pod status wasn't available
- [MARATHON-7629](https://jira.mesosphere.com/browse/MARATHON-7629) - Fixes issue in which Marathon could get into an infinite kill loop, in certain situations
- [MARATHON-7469](https://jira.mesosphere.com/browse/MARATHON-7469) - Fixes a bug in which a new leading Marathon would kill tasks launched by an ongoing deployment during the former leader.
- [MARATHON-7472](https://jira.mesosphere.com/browse/MARATHON-7472), [MARATHON-7358](https://jira.mesosphere.com/browse/MARATHON-7358) - Further improve deployment performance by removing unnecessary thread blocking.
- [MARATHON-7617](https://jira.mesosphere.com/browse/MARATHON-7617) - Capture storage cache layer metrics, by category
- [MARATHON-7536](https://jira.mesosphere.com/browse/MARATHON-7536) - Disable HTTP TRACE method in API
- [MARATHON-7566](https://jira.mesosphere.com/browse/MARATHON-7566) - Fix a regression in which content-type was required for the ping endpoint
- [MARATHON-7334](https://jira.mesosphere.com/browse/MARATHON-7334) - Fix a regression in which `fetch[].destPath` was ignored
- Replace lock with non-blocking concurrent data structure in WorkQueue, evidently the source of some contention looking at thread dump from [MARATHON-7400](https://jira.mesosphere.com/browse/MARATHON-7400)
- [MARATHON-7433](https://jira.mesosphere.com/browse/MARATHON-7433) - Fix a group deployment issue which would cause non-root groups without a nested group to be ignored.
- [MARATHON-7462](https://jira.mesosphere.com/browse/MARATHON-7462) - Fix a race condition in WorkQueue which caused various issues, such as dropped events and could cause components of Marathon to become unresponsive.
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/7265217/assets,https://api.github.com/repos/mesosphere/marathon/releases/7265217,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.6-snap1,https://github.com/mesosphere/marathon/releases/tag/v1.4.6-snap1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.6-snap1,v1.4.6-snap1,False,False
6730671,2017-06-15T20:41:05Z,2017-06-15T20:54:21Z,,"## Changes from 1.4.4 to 1.4.5

### Fixed issues

- [MARATHON-7479](https://jira.mesosphere.com/browse/MARATHON-7479) Fixes major deployment plan computation performance regression for Marathon instances containing a large number of apps (500+).
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/6730671/assets,https://api.github.com/repos/mesosphere/marathon/releases/6730671,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.5,https://github.com/mesosphere/marathon/releases/tag/v1.4.5,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.5,v1.4.5,False,False
6641031,2017-06-07T18:42:21Z,2017-06-07T22:13:36Z,v1.4.4,"## Changes from 1.4.3 to 1.4.4

### Changes

- [MARATHON-7411](https://jira.mesosphere.com/browse/MARATHON-7411) Include USER networked docker containers in /v2/tasks text/plain output. If no host port is specified, specify address as `{containerIp}:{containerPort}`. If host port is specified, `{agentIp}:{hostPort}`.

### Fixed issues

- [MARATHON-7396](https://jira.mesosphere.com/browse/MARATHON-7396) Marathon leader would become a zombie process in certain Zookeper failure scenarios.
- Marathon would not load authentication plugins in certain situations. This has been addressed.
- [MARATHON-7322](https://jira.mesosphere.com/browse/MARATHON-7322) /ping endpoint returns the correct content type
- [MARATHON-7320](https://jira.mesosphere.com/browse/MARATHON-7320) Fix MAX_PER constraint for attributes.
- Fix issue related to Marathon plugins and authorization for the endpoint `v2/tasks`
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/6641031/assets,https://api.github.com/repos/mesosphere/marathon/releases/6641031,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.4,https://github.com/mesosphere/marathon/releases/tag/v1.4.4,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.4,v1.4.4,False,False
6493123,2017-05-24T15:32:12Z,2017-05-24T16:45:18Z,,"## Changes from 1.3.11 to 1.3.12

### Changes

- [MARATHON-7397](https://jira.mesosphere.com/browse/MARATHON-7397) Include USER networked docker containers in /v2/tasks text/plain output. If no host port is specified, specify address as `{containerIp}:{containerPort}`. If host port is specified, `{agentIp}:{hostPort}`.
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/6493123/assets,https://api.github.com/repos/mesosphere/marathon/releases/6493123,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.12,https://github.com/mesosphere/marathon/releases/tag/v1.3.12,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.12,v1.3.12,False,False
6427644,2017-05-18T09:48:41Z,2017-05-18T10:48:05Z,v1.3.11,- dfddf50 Use the latest stable Marathon UI build (1.1.7) (#5180),https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/6427644/assets,https://api.github.com/repos/mesosphere/marathon/releases/6427644,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.11,https://github.com/mesosphere/marathon/releases/tag/v1.3.11,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.11,v1.3.11,False,False
6210748,2017-04-27T15:00:57Z,2017-04-27T15:16:28Z,1.4.3,"## Changes from 1.4.2 to 1.4.3
Bugfix release

### Fixed issues

- [MARATHON-7267](https://jira.mesosphere.com/browse/MARATHON-7267) Enforce validation for pod container names
- [DCOS-14890] Fix default scheme for HTTP health checks in pods
- [DCOS-14303] Fix issue in which Marathon would fail to launch if hostname is not resolvable (but still specified from the command line)
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/6210748/assets,https://api.github.com/repos/mesosphere/marathon/releases/6210748,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.3,https://github.com/mesosphere/marathon/releases/tag/v1.4.3,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.3,v1.4.3,False,False
5884772,2017-03-27T18:55:47Z,2017-03-27T19:00:04Z,1.4.2,"Bugfix release

### Fixed issues
- [MARATHON-4570](https://jira.mesosphere.com/browse/MARATHON-4570) Don't destroy persistent volumes when killing unreachable tasks
- [MARATHON-4390](https://jira.mesosphere.com/browse/MARATHON-4390) Lazy event parsing
- Improve health checks to log less warnings.
- [MARATHON-1712](https://jira.mesosphere.com/browse/MARATHON-1712) Loosen SSL requirements for HTTPS health checks.
- [MARATHON-1408](https://jira.mesosphere.com/browse/MARATHON-1408) Fix serialization of maxSize for persistent volumes.
- [MARATHON-2311](https://jira.mesosphere.com/browse/MARATHON-2311) Publish a TASK_GONE mesos update when an unreachable instance's resources are seen.
- [MARATHON-1682](https://jira.mesosphere.com/browse/MARATHON-1682) Persist kill selection.
- Disable unreachable strategy for resident tasks
- Add a migration to fix the unreachable strategy for resident apps.
- Read LaunchedOnReservation and ReservedTasks.
- ForceExpunge for a missing task is a noop rather than a failure.
- Use non-deployment-interacting kill service during kill and wipe.
- Validation of application dependencies is too restrictive, loosed the requirements.
- Retry failed integration tests once.
- Fix stability in many integration tests.
- [MARATHON-7133](https://jira.mesosphere.com/browse/MARATHON-7133) AppDefinition history is now properly loaded during boot

### Known issues
none",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/5884772/assets,https://api.github.com/repos/mesosphere/marathon/releases/5884772,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.2,https://github.com/mesosphere/marathon/releases/tag/v1.4.2,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.2,v1.4.2,False,False
5510912,2017-02-20T14:33:22Z,2017-02-20T14:40:26Z,,"Fixes #5211 - Re-enabling `PUT` on `/v2/apps`

### Known issues
- [Marathon does not re-use reserved resources for which a lost task is associated](https://github.com/mesosphere/marathon/issues/4137). In
  the event that a resident task becomes lost (due to a somewhat common event such as rebooting the host on which the
  mesos agent and task are running), then the resident task becomes `Unreachable`. Once it becomes this state, Marathon
  will consider the task gone and create additional reservations (it should probably wait until it becomes
  `UnreachableInactive` to do this). Even though the prior reservation is re-offered, Marathon will not use it.
- [Marathon can confuse port-mapping in resident tasks](https://github.com/mesosphere/marathon/issues/4819)
- [Marathon does not read resident task information properly from the persistence layer](https://github.com/mesosphere/marathon/issues/5165)
- [Data migration for UnreachableDisabled](https://github.com/mesosphere/marathon/issues/5209)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5510912/assets,https://api.github.com/repos/mesosphere/marathon/releases/5510912,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.1,https://github.com/mesosphere/marathon/releases/tag/v1.4.1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.1,v1.4.1,False,False
5494399,2017-02-17T19:34:49Z,2017-02-17T19:47:43Z,1.4.0,"## Changes from 1.3.x to 1.4.0

### Breaking Changes

#### Plugin API has changed

In order to support the nature of pods, we had to change the plugin interfaces in a backward incompatible fashion.
Plugin writers need to update plugins, in order to use this version.
- There is a new `NetworkSpec` plugin interface that may be of interest for Mesos network module writers.
- Some existing plugin APIs were modified in support of the new pods primitive (see Overview/Pods).

#### Health reporting via the event stream

Adding support for pods in Marathon required the internal representation of tasks to be migrated to instances. An instance represents the executor on the Mesos side, and contains a list of tasks. This change is reflected in various parts of the API, which now accordingly reports health status etc for instances, not for tasks.
Until v1.3.x, Marathon published `health_status_changed_event`s via the event stream. With the introduction of instances that can contain multiple tasks, Marathon moved away from that event in favor of `instance_health_changed_event`s.
In case you were consuming that event you have to adjust your tooling to consume the introduced event instead, e.g.

``` javascript
{
    ""instanceId"": ""some_app.marathon-49d976d3-9c6f-11e6-93cb-0242216b9f0d"",
    ""runSpecId"": ""/some/app"",
    ""healthy"": true,
    ""runSpecVersion"": ""2016-10-18T10:42:47.499Z"",
    ""timestamp"": ""2016-10-27T18:00:50.401Z"",
    ""eventType"": ""instance_health_changed_event""
}
```

Accordingly, the `failed_health_check_event` now reports an instanceId instead of a taskId:

``` javascript
{
    ""instanceId"": ""some_app.marathon-49d976d3-9c6f-11e6-93cb-0242216b9f0d"",
    ...
    ""eventType"": ""failed_health_check_event""
}
```

This change affects the following API primitives in a similar way:
- `unhealthy_instance_kill_event` (in favor of the previous `unhealthy_task_kill_event`) provides both the instanceId of the instance that got killed, as well as the taskId designating the task that failed health checks.
- Health information as reported via the apps and tasks endpoint.

### Overview

#### Pods

A pod is a collection of co-located and co-scheduled containers in a shared context.
The containers of a pod share a network namespace and may share access to the same filesystem(s).
Each pod instance’s containers are individually resource-isolated.

[Mesos 1.1](http://mesos.apache.org/blog/mesos-1-1-0-released) adds support for launching a group of tasks (LAUNCH_GROUP).
A pod instance’s containers are launched via this Mesos primitive.
Mesos provides the executor implementation that Marathon will use to run pod instances.

We created a new primitive, PodDefinition, as well as new API endpoints.
Read more about to use pods in our [Pods Documentation](https://mesosphere.github.io/marathon/docs/pods.html),
and the `/v2/pods` section of the [REST API Reference](https://mesosphere.github.io/marathon/docs/generated/api.html)

Pods are implemented as a new primitive in Marathon.
The general functionality of apps plus the related endpoints are still available.

#### Mesos-based health checks for HTTP, HTTPS, and TCP

Health checks are an integral part of application monitoring and have been available in Marathon since version 0.7.
At the time that health checks were first added to Marathon, there was no support for health checks in Mesos.
Prior to the availability of Mesos-based health checks, health checks were only performed directly in Marathon. This has the following consequences:
- Marathon has to share the same network as the tasks to monitor, so it can reach all launched tasks
- Network partitions could lead to wrong scheduling decisions
- The health state is not available via the Mesos state
- Marathon health checks do not scale to large numbers of tasks.

Starting with Mesos 1.1, it is now possible to perform network based health checks directly on the Mesos executor level.
Marathon makes all the Mesos-based health checks available.
See the updated [Health Check Documentation](https://mesosphere.github.io/marathon/docs/health-checks.html),
especially the new protocols: `MESOS_HTTP`, `MESOS_HTTPS`, `MESOS_TCP`.

We strongly recommend Mesos-based health checks over Marathon-based health checks.
Marathon-based health checks are deprecated and will be removed in a future version.

#### New ZK persistent storage layout

ZooKeeper has a limitation on the number of nodes it can store in a directory node.
Until version 1.3, Marathon used a flat storage layout in ZooKeeper and encountered this limitation with large installations.
The latest version of Marathon uses a nested storage layout, which significantly increases the number of nodes that can be stored.

ZooKeeper has a limitation on the size of one node (typically 1MB).
In prior versions, a group was stored with all subgroups and applications.
This could lead to a node size larger than 1 MB, which could not be stored.
The latest version of Marathon stores a group only with references in order to keep node size under 1 MB.

A migration inside Marathon automatically migrates the prior layout to the new one.

#### Improve Task Lost behaviour

The connection between the Mesos master and an agent can be broken for several reasons (network partition, agent update, etc).
When this happens, there is limited knowledge of the status of the agent's tasks.
Prior versions of Mesos declared such tasks as lost after a timeout and killed the tasks if the agent rejoins the cluster.

Starting with Mesos 1.1, those task are declared unreachable, not lost.
The scheduler that launched the tasks decides how to handle unreachable tasks.

Marathon uses this feature and adds an `unreachableStrategy` to the AppDefinition and PodDefinition, which allows you to define:
- `inactiveAfterSeconds`: how long Marathon should wait to start a replacement task.
- `expungeAfterSeconds`: how long Marathon should wait for a task to come back.

If a task comes back and the replacement task is already started, Marathon needs to decide which task to kill.
In order to let the user define which task should be taken, a kill selection can be defined.

#### Insights into the Launch Process - AKA: Why isn't my app starting?

Marathon tries to schedule tasks based on app or pod definition, which incorporates resource matching, role matching, constraint matching etc.
There are situations when Marathon cannot fulfill a launch request, since there is no matching offer from Mesos.
It was very hard for users to understand why Marathon could not fulfill launch requests.
For users that run into such situations, it was very hard to understand the reasons for this.
This version of Marathon gives insight into the launch process, analyzes all incoming offers and gives the user
statistics so it easy to see, why offers were rejected.

The statics can be fetched via the `/v2/queue` endpoint. See the [REST API Reference](https://mesosphere.github.io/marathon/docs/generated/api.html).
Marathon shows the offer matching process as a funnel, so it easy to see how many offers were rejected in which step.
It gives this information for the whole launch attempt as well as the last offer cycle.

#### Improve Deployment logic

During Marathon master failover all deployments are started from the beginning.
This can be cumbersome if you have long-running updates and a Marathon failover.
This version of Marathon reconciles the state of a deployment after a failover.
A running deployment will be continued on the new elected leader without restarting the deployment.

Every state change operation via the REST API will now return the deployment identifier as an HTTP response header.

### Deprecations

#### Deprecate Marathon-based Health Checks

Mesos now supports command-based as well as network-based health checks.
Since those health check types are now also available in Marathon, the Marathon-based health checks are now deprecated.
Do not use health checks with the following protocols: `HTTP`, `HTTPS`, and `TCP`. Instead, use the Mesos equivalents: `MESOS_HTTP`, `MESOS_HTTPS` and `MESOS_TCP`.

#### Deprecate Event Callback Subscriptions

Marathon has two ways to subscribe to the internal event bus:
- HTTP callback events managed via `/v2/eventSubscriptions`
- Server Send Events via `/v2/events` (since Marathon 0.9)

We encourage everyone to use the `/v2/events` SSE stream instead of HTTP Callback listeners.
The event callback subscriptions will be removed in a future version.

#### Deprecate Artifact Store

The artifact store was introduced as an easy solution to store and retrieve artifacts and make them available in the cluster.
There is a variety of tools that can handle this functionality better then Marathon.
We will remove this functionality from Marathon without replacement.

#### Deprecate PATCH semantic for PUT on /v2/apps

A PUT on /v2/apps has a PATCH like semantic:
All values that are not defined in the json, will not update existing values.
This was always the default behaviour in Marathon versions.
For backward compatibility, we will not change this behaviour, but let users opt in for a proper PUT.
The next version of Marathon will use PATCH and PUT as two separate actions.

#### Forcefully stop a deployment

Deployments in Marathon can be stopped with force.
All actions currently being performed in Marathon will be stopped; the state will not change.
This can lead to an inconsistent state and is dangerous.
We will remove this functionality without replacement.

#### Deprecated command line parameters
- Removed the deprecated `marathon_store_timeout` command line parameter. It was deprecated since v0.12 and unused.
- Mark `task_lost_expunge_gc` as deprecated, since it is not used any longer
- The command line flag `max_tasks_per_offer` is deprecated. Please use `max_instances_per_offer`.
- The deprecated command line flag `enable_metrics` is removed. Please use the toggle `metrics` and `disable_metrics`
- The deprecated command line flag `enable_tracing` is removed. Please use the toggle `tracing` and `disable_tracing`

### Fixed issues

#### Since 1.4.0-RC-8
- Fixes #5076 - Pod validation of MaxPer constraint
- Fixes #5107 - Improve performance of zookeeper layer and groups (D481)
- Fixes #5087 - Generate DiscoveryInfo for pod container endpoints
- Fixes #5117 - Clarify rexray documentation
- Fixes #5144 - Define network-scope label for ipaddress.discovery.ports
- Fixes #5083 - Increase queue length for storage operations, helps large migrations
- Fixes #5116 - Pods allow duplicate endpoint ports
- Fixes #5084 - Doc link updates
- Fixes - Improve performance of dependency graph computations (D476)
- Improvement #5157 - PUT on /v2/apps has a PATCH semantic
- Improvement - `NetworkSpec` plugin API (D490)

#### Since 1.4.0-RC-3
- Fixes #4873 - Tasks with configured Marathon HealthChecks fail HealthChecks after migration to 1.4
- Fixes #4842 - Pods were not correctly written to zk with the legacy storage backend.
- Fixes #4882 - KillSelection enumeration values renamed to meet Marathon conventions.
- Fixes #4890 - Correctly export env vars during startup.
- Fixes #4872 - Disallow usage of Command Checks on Pods until mesos supports them.
- Fixes #4863 - Rate limiting now works equally for pods and for apps.
- Fixes #4818 - Allow killSelection to be specified and updated via the Marathon API.
- Fixes #4877 - Fix various bugs in our RAML specification. Add omitEmpty to some fields for cleaner output.

#### Since 1.4.0-RC-2
- Fixed issue in which Marathon startup script didn't handle spaces in command line arguments properly #4829
- Fixed cast exception when communicating instance status #4831

#### Since 1.4.0-RC-1
- (also fixed in 1.3.6) Marathon will now terminate upon loss of leadership instead of becoming a non-master. This
  prevents a lot of potentially unsafe behavior and a watchdog will instead bring marathon back up in a clean state.
- Fixed an issue in which upgrading Marathon from 1.3.x would ""bring back"" destroyed tasks. #4791 #4824
- Performance improvements with Offer Matching, Groups, etc. #4813 (not yet closed)
- Fixed an issue in which Marathon improperly parsed Mesos timestamps
- API RAML fixes
  - Health check properties are marked as optional #4811
  - HostPort type can be specified as 0 (pick an available port) again #4817
- UnreachableStrategy defaults have been increased. Fixed API so that the value can be updated via the API. #4810 #4603
- UnreachableStrategy is now a part of pod scheduling policy #4808
- UnreachableStrategy API has been changed to remove unnecessary double scoping of paramters
  (`UnreachableStrategy.unreachableInactiveAfterSeconds` -> `UnreachableStrategy.inactiveAfterSeconds`) #4794
- Marathon protects against invalid Mesos versions
- Fixed issue in which Marathon would over-scale an app in the event of failure #4777
- Fixed issue in which pod instances could be killed via /v2/tasks #4790
- Fixed issue in which default network name was applied to host networking (D288)
- Clearer error messages between AppNotFoundException and PodNotFoundException #4784
- Fix issue with Entrypoint/Cmd in Docker images (D276)

### Known issues
- [Marathon does not re-use reserved resources for which a lost task is associated](https://github.com/mesosphere/marathon/issues/4137). In
  the event that a resident task becomes lost (due to a somewhat common event such as rebooting the host on which the
  mesos agent and task are running), then the resident task becomes `Unreachable`. Once it becomes this state, Marathon
  will consider the task gone and create additional reservations (it should probably wait until it becomes
  `UnreachableInactive` to do this). Even though the prior reservation is re-offered, Marathon will not use it.
- [Marathon can confuse port-mapping in resident tasks](https://github.com/mesosphere/marathon/issues/4819)
- [Marathon does not read resident task information properly from the persistence layer](https://github.com/mesosphere/marathon/issues/5165)
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/5494399/assets,https://api.github.com/repos/mesosphere/marathon/releases/5494399,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0,https://github.com/mesosphere/marathon/releases/tag/v1.4.0,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0,v1.4.0,False,False
5489873,2017-02-17T12:33:54Z,2017-02-17T12:55:37Z,,"- 58e40a8  Fixes #5198 - converts iterator to seq (Johannes Unterstein)
- 1ba8ea7  Add support for PATCH updates to apps in 1.4 (#5183) (Matthias Eichstedt)
- abb58a1  Mark tests as unstable ... (#5202) (Matthias Eichstedt)
- 02142d7  Links fixed in REST API documentation page. (#5060) (Armand Grillet)
- 1d3b395  Default values for query parameter need to be of type String. (Matthias Veit)
- 226e17f  Fixes #5137 by assigning a name to the default port and refining validation logic for resource changes of resident apps. (Matthias Veit)
- 9019527  Use the latest stable Marathon UI build (#5181) (Orlando Hohmeier)
- d6fa3fd  Fixes #4901 by removing the short circuit for root group changes. (#5179) (Matthias Veit)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5489873/assets,https://api.github.com/repos/mesosphere/marathon/releases/5489873,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC9,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC9,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC9,v1.4.0-RC9,False,True
5426153,2017-02-10T22:46:28Z,2017-02-11T14:07:06Z,,"- Fixes #5076 - Pod validation of MaxPer constraint
- Fixes #5107 - Improve performance of zookeeper layer and groups (D481)
- Fixes #5087 - Generate DiscoveryInfo for pod container endpoints
- Fixes #5117 - Clarify rexray documentation
- Fixes #5144 - Define network-scope label for ipaddress.discovery.ports
- Fixes #5083 - Increase queue length for storage operations, helps large migrations
- Fixes #5116 - Pods allow duplicate endpoint ports
- Fixes #5084 - Doc link updates
- Fixes - Improve performance of dependency graph computations (D476)
- Improvement #5157 - PUT on /v2/apps has a PATCH semantic
- Improvement - `NetworkSpec` plugin API (D490)
",https://api.github.com/users/jdef,2348332,jdef,https://api.github.com/repos/mesosphere/marathon/releases/5426153/assets,https://api.github.com/repos/mesosphere/marathon/releases/5426153,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC8,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC8,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC8,v1.4.0-RC8,False,True
5388965,2017-02-07T22:40:44Z,2017-02-07T22:53:28Z,,"- 21d4d70  Fixes #4948 | Lazy event parsing in HTTP callbacks. (#5114) (janisz)
- 8b0ee47  undo def -> lazy val toProto change (Tim Harper)
- a09ea81  Improve performance of zookeeper layer and groups (Tim Harper)
- 17a082e  Fixes #4978 |  AppDefinition.Conteiner validation (#4989) (janisz)
- 1613ae1  Fixes #4948 | Lazy event parsing (#4986) (janisz)
- 553b27f  Initial stab at making deployment plans cheaper. Back port of https://phabricator.mesosphere.com/D476 (Johannes Unterstein)
- 1027968  A group is accessible, if the group is selected, a subgroup is selected or a pod/app in that group is selected. (Matthias Veit)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5388965/assets,https://api.github.com/repos/mesosphere/marathon/releases/5388965,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.10,https://github.com/mesosphere/marathon/releases/tag/v1.3.10,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.10,v1.3.10,False,False
5355456,2017-02-03T19:02:20Z,2017-02-03T19:04:05Z,,"## Changes from 1.1.5 to 1.1.7
- Performance enhancements to the dependency graph calcuation algorithm for deployments.
- Fixes bug in which Marathon scheduled tasks ceased to work after 248.5 days of uptime (#5097)
- Fixes dependencies validation issue in which it was too restrictive (#5024)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5355456/assets,https://api.github.com/repos/mesosphere/marathon/releases/5355456,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.7-dcos,https://github.com/mesosphere/marathon/releases/tag/v1.1.7-dcos,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.7-dcos,v1.1.7-dcos,False,False
5355279,2017-02-03T18:37:45Z,2017-02-03T18:47:24Z,,"## Changes from 1.1.5 to 1.1.7
- Performance enhancements to the dependency graph calcuation algorithm for deployments.
- Fixes bug in which Marathon scheduled tasks ceased to work after 248.5 days of uptime (#5097)
- Fixes dependencies validation issue in which it was too restrictive (#5024)
",https://api.github.com/users/timcharper,183,timcharper,https://api.github.com/repos/mesosphere/marathon/releases/5355279/assets,https://api.github.com/repos/mesosphere/marathon/releases/5355279,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.7,https://github.com/mesosphere/marathon/releases/tag/v1.1.7,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.7,v1.1.7,False,False
5313357,2017-01-30T17:27:03Z,2017-01-31T10:22:47Z,,"- 25dd12d  Fixes #5024 by using the correct validator for validating app dependencies. (#5027) (Matthias Veit)
- 1dc09c4  Embed build badge for new releases/1.3 pipeline. (jeschkies)
- 149eb6d  Fix deployments example that shows a wrong readiness check result. (Matthias Veit)
- 16f75f2  Fix unclosed code tag (#4997) (Drew Kerrigan)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5313357/assets,https://api.github.com/repos/mesosphere/marathon/releases/5313357,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.9,https://github.com/mesosphere/marathon/releases/tag/v1.3.9,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.9,v1.3.9,False,False
5286904,2017-01-27T15:33:36Z,2017-01-27T15:57:52Z,,"Includes patches:
- 69d4b26fd6c7c480c76e22f4e73027939bccbcdc Fixes #4991 by specifically testing, if a property in the docker section is set, but is not supported.
- 91cdc7e91afa774ca7eb5a04232cf8591b02f570 add a docker container label with Mesos task id (#4492)
- bd1c69a23251c5361ae879a1a9544067a52f5664 Make sure the HistoryActor only stores task failures once.
- cf3d544806b3dfd40caca6605667cef3a9db4f9d Remove authorization from /ping endpoint
- ef13b44b0a3e5cc7a85e137f2efe585ecf5437ae Make TaskResources async (#4807)
- c52b8dd077bda541543f92a0962c2aada442b5d6 Use async instance tracker methods in TaskKiller (#4800)
- 79fe121505749fe709456211e9b80222d7b677c3 Close #4722 by moving event subscription of the InstanceKillProgressActor.
- 195295e8873e67ca59ce5ec3dea0af21f8de08df Upgrade low-risk libraries to the latest patch release (#4983).
- a1d7b569e795b5f8bf84cc7b22a66031b3a366ec Fixes #5016 by validating, if the app id is non empty.
- bd3096efdfc95407f2a47d25ac65e649d9c3e740 Fixes #4966 by using the resulting boolean value instead of mapping into the scallop option.
- 6834f418470ca015522429d2629ebc7f125893fc Fixes #5024 by using the correct validator for validating app dependencies.
",https://api.github.com/users/jeschkies,2418440,jeschkies,https://api.github.com/repos/mesosphere/marathon/releases/5286904/assets,https://api.github.com/repos/mesosphere/marathon/releases/5286904,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC7,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC7,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC7,v1.4.0-RC7,False,False
5222063,2017-01-20T19:51:23Z,2017-01-20T20:04:25Z,,"- 3e46f65  updated mesos-util version to 1.0.2 (#5000) (Johannes Unterstein)
- 3181e5e  Define pipeline for 1.3. (#4992) (Karsten Jeschkies)
- ab0269f  Prevent Migration if the StorageVersion is too new (#4968) (Jason Gilanfarr)
- 7388151  Use the correct highlighter supported in gh-pages (Matthias Veit)
- 62eed41  Updated doc building to use github_pages jekyll and fixes (#4588) (Kyle Anderson)
- c7b018b  Fixed DC/OS link to dcos.io. (#4979) (Joerg Schad)
- c4cfc17  bumped version to 1.3.7 (Johannes Unterstein)
",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5222063/assets,https://api.github.com/repos/mesosphere/marathon/releases/5222063,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.8,https://github.com/mesosphere/marathon/releases/tag/v1.3.8,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.8,v1.3.8,False,False
5196856,2017-01-18T09:56:51Z,2017-01-18T17:48:13Z,,"* fb4aeb9  Quote some vars and make sed more explicit (#4890) (Lukas Lösche)
* dafd0df  workaround for zip64 incompat with shebang-prefixed jars (James DeFelice)
* e888d16  Fixes #4637 Allow filtering SSE events by types (#4936) (janisz)
* eaaa994  Parse JSON event only once before broadcast (#4927) (janisz)
* 7b346de  Split long lines (#4926) (janisz)
* a7f4138  escape leader-latch lock (targets 1.3) (Brad Peters)
* a05a01b  Releases/1.3 async task tracker (#4912) (janisz)
* 90843e4  Include TASK_FINISHED as failure state when upgrading (#4865) (fengyehong)
* d3351ea  Cherry-picked Handle spaces in arguments correctly (#4887) (janisz)
* f72df1b  Cherry-picked  MigrationTo1_1 class to handle broken app groups (#4711) (#4772) (Aleksey Dukhovniy)
* 4f75209  Allow Zookeeper Connection Timeout to be configured. (#4685) (Jason Gilanfarr)
* 850db7f  Allow Zookeeper Connection Timeout to be configured. (Jason Gilanfarr)
* 116992d  Update #1428 to use MARATHON_CMD to avoid breaking other integration (Jason Gilanfarr)
* 51f103e  Fixes #1428 Converts command arguments to environment variables and back again (merge to release/1.3) (#4644) (brad-peters)",https://api.github.com/users/unterstein,904420,unterstein,https://api.github.com/repos/mesosphere/marathon/releases/5196856/assets,https://api.github.com/repos/mesosphere/marathon/releases/5196856,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.7,https://github.com/mesosphere/marathon/releases/tag/v1.3.7,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.7,v1.3.7,False,False
5137385,2017-01-11T17:22:26Z,2017-01-12T07:28:18Z,,"## Changes from 1.4.0-RC4 to 1.4.0-RC5

### Recommended Mesos version is 1.1.0

The complete List of changes in Marathon 1.4 is listed in [1.4.0-RC1](https://github.com/mesosphere/marathon/releases/v1.4.0-RC1).

### Fixed Issues:
- Fixes #4876 - Use 'openjdk:8-jdk' container image instead of 'java:8-jdk'.
- Fixes #4874 - Document feature flag requirement for TASK_KILLING state.
- Fixes #4900 - Do not restart already started task during leader abdication.
- Fixes #4788 - Use async InstanceTracker in DeploymentActor.
- Fixes #4897 - Fix kill and scale to never scale below 0.
- Fixes #4146 - docker containerizer now allows relative containerPath starting with mesos 1.0.
- Port Index validation for health checks is performed for all network based health checks.
- Escape leader-latch lock to not go into a deadlock situation
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/5137385/assets,https://api.github.com/repos/mesosphere/marathon/releases/5137385,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC5,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC5,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC5,v1.4.0-RC5,False,True
4980562,2016-12-21T14:29:07Z,2016-12-21T14:46:27Z,,"## Changes from 1.4.0-RC3 to 1.4.0-RC4

### Recommended Mesos version is 1.1.0

The complete List of changes in Marathon 1.4 is listed in [1.4.0-RC1](https://github.com/mesosphere/marathon/releases/v1.4.0-RC1).

### Fixed Issues:
- Fixes #4873 - Tasks with configured Marathon HealthChecks fail HealthChecks after migration to 1.4
- Fixes #4842 - by also writing deprecated pods to the proto.
- Fixes #4828 - Use async InstanceTracker methods in SchedulerActor
- Fixes #4882 - by renaming KillSelection enum values
- Fixes #4890 - Quote some vars and make sed more explicit 
- Fixes #4872 - Disallow usage of Command Checks on Pods until mesos supports them
- Fixes #4863 - Inform the rate limiter for pods and apps
- Fixes #4818 - Update kill selection in App as well.
- Fixes #4877 - fix various bugs in our RAML specification. add omitEmpty to some fields for cleaner output.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/4980562/assets,https://api.github.com/repos/mesosphere/marathon/releases/4980562,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC4,v1.4.0-RC4,False,True
4906372,2016-12-13T12:07:37Z,2016-12-13T14:04:13Z,,"## Changes from 1.4.0-RC2 to 1.4.0-RC3

### Recommended Mesos version is 1.1.0

The complete List of changes in Marathon 1.4 is listed in [1.4.0-RC1](https://github.com/mesosphere/marathon/releases/v1.4.0-RC1).

### Fixed Issues:
- [D323](https://phabricator.mesosphere.com/D323) - Fixes #4831: The LaunchQueueActor now forwards InstanceUpdate Events and sends Done in case of a non existing actor.
- [D324](https://phabricator.mesosphere.com/D324) - Fixes #4829: Handle spaces in arguments correctly 
- [D316](https://phabricator.mesosphere.com/D316) - Extract Instance.update into InstanceUpdater
- [D319](https://phabricator.mesosphere.com/D319) - Renamed and moved InstanceUpdaterTest to correct name and package
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/4906372/assets,https://api.github.com/repos/mesosphere/marathon/releases/4906372,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC3,v1.4.0-RC3,False,True
4906325,2016-12-12T23:06:12Z,2016-12-13T13:58:46Z,,"## Changes from 1.4.0-RC1 to 1.4.0-RC2

### Recommended Mesos version is 1.1.0

The complete List of changes in Marathon 1.4 is listed in [1.4.0-RC1](https://github.com/mesosphere/marathon/releases/v1.4.0-RC1).

### Fixed Issues:
- [D273](https://phabricator.mesosphere.com/D273) - Mute ResidentTaskIntegrationTest.
- [D279](https://phabricator.mesosphere.com/D279) - Log plan id instead of plan.
- [D276](https://phabricator.mesosphere.com/D276) - Fix issues with Entrypoint/Cmd in Docker images.
- [D265](https://phabricator.mesosphere.com/D265) - clarify relationship between Condition and MesosTaskState
- [D286](https://phabricator.mesosphere.com/D286) - Fixes #4784 - Differ between AppNotFoundException and PodNotFoundException
- [D288](https://phabricator.mesosphere.com/D288) - Fixes a bug I found while testing default_network_name
- [D290](https://phabricator.mesosphere.com/D290) - Allow Marathon devs to annotate API fields/types as deprecated.
- [D289](https://phabricator.mesosphere.com/D289) - Fixes #4790 - POD instances should not be killable via /v2/tasks
- [D277](https://phabricator.mesosphere.com/D277) - MarathonSchedulerActor now respects launch queue tasks when scaling app
- [1dfd99e](https://github.com/mesosphere/marathon/commit/1dfd99e355dc894e5dc4dde30bc6714e160381ec) - added version 1.3 information
- [D281](https://phabricator.mesosphere.com/D281) - When Launching lots of tasks Journald is pegged.
- [D293](https://phabricator.mesosphere.com/D293) - Mute unstable tests - according to jenkins loop test.
- [D292](https://phabricator.mesosphere.com/D292) - Protect against garbage mesos versions
- [D295](https://phabricator.mesosphere.com/D295) - Mark ResidentTaskInterationTest.persistent volume will be re-attached and keep state as unstable
- [D296](https://phabricator.mesosphere.com/D296) - Rename unreachable strategy parameters to avoid API stutter.
- [D297](https://phabricator.mesosphere.com/D297) - Fixes #4808, relocate pod unreachbleStrategy to PodSchedulingPolicy type
- [D195](https://phabricator.mesosphere.com/D195) - Rework DeploymentManager logic
- [D287](https://phabricator.mesosphere.com/D287) - changelog for Marathon 1.4.0
- [D294](https://phabricator.mesosphere.com/D294) - Move InstanceUpdateOpResolver to own file
- [efb38b9](https://github.com/mesosphere/marathon/commit/efb38b944b33ea36f18966fdcc1b2f5495db9d76) - Parse JSON event only once before broadcast (#4771)
- [D300](https://phabricator.mesosphere.com/D300) - Turn off debug for jetty
- [D299](https://phabricator.mesosphere.com/D299) - use patienceConfig for ZK timeouts
- [D301](https://phabricator.mesosphere.com/D301) - Increase default expunge timeout tasks
- [D283](https://phabricator.mesosphere.com/D283) - Output debug logs for marathon integration tests.
- [D304](https://phabricator.mesosphere.com/D304) - add Unreachablestrategy to AppUpdate and apply
- [cc4cf66](https://github.com/mesosphere/marathon/commit/cc4cf6661cb17b17d1ffa44208edbde288524a55) - Ss/pods docs
- [0cc19fc](https://github.com/mesosphere/marathon/commit/0cc19fc47de59614e0fcd1e7be95d2e8a1d325b7) - pods typo
- [e354da0](https://github.com/mesosphere/marathon/commit/e354da0b258ff2cd21c53fab55d6d0c8b2e022b6) - Change host port type to ephemeral port number (#4820)
- [a0d2b9f](https://github.com/mesosphere/marathon/commit/a0d2b9f53a8c61d1fd7185a76ce85afcd985dc72) - Properly mark health check props as optional
- [D313](https://phabricator.mesosphere.com/D313) - Fix incorrect conversion from TaskStatus.timestamp to Timestamp
- [D308](https://phabricator.mesosphere.com/D308) - Removed unreachableInstances from QueuedInstanceInfo and QueuedInstanceInfoWithStatistics
- [D314](https://phabricator.mesosphere.com/D314) - Remove additional condition from InstanceChangedEventsGenerator.events
- [D309](https://phabricator.mesosphere.com/D309) - Handle OfferMatching timeouts as well as some performance improvements
- [D315](https://phabricator.mesosphere.com/D315) - Moved InstanceUpdateOpResolver to correct package
- [D317](https://phabricator.mesosphere.com/D317) - Fixes #4824 - Use GroupRepository instead of AppRepository and PodRepository in MarathonSchedulerActor
- [D274](https://phabricator.mesosphere.com/D274) - Test app resources with embedded task failures.
- [D302](https://phabricator.mesosphere.com/D302) - Abort on loss of leadership
- [D320](https://phabricator.mesosphere.com/D320) - Reverted the group function to not use transitiveGroupsById.
- [D321](https://phabricator.mesosphere.com/D321) - Used map instead of mapValues in RootGroup.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/4906325/assets,https://api.github.com/repos/mesosphere/marathon/releases/4906325,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC2,v1.4.0-RC2,False,True
4869517,2016-12-05T22:19:40Z,2016-12-08T16:52:00Z,,"## Changes from 1.3.0 to 1.4.0-RC1

### Breaking Changes

#### Plugin API has changed

In order to support the nature of pods, we had to change the plugin interfaces in a backward incompatible fashion.
Plugin writers need to update plugins, in order to use this version

#### Health reporting via the event stream

Adding support for pods in Marathon required the internal representation of tasks to be migrated to instances. An instance represents the executor on the Mesos side, and contains a list of tasks. This change is reflected in various parts of the API, which now accordingly reports health status etc for instances, not for tasks.
Until v1.3.x, Marathon published `health_status_changed_event`s via the event stream. With the introduction of instances that can contain multiple tasks, Marathon moved away from that event in favor of `instance_health_changed_event`s.
In case you were consuming that event you have to adjust your tooling to consume the introduced event instead, e.g.

``` javascript
{
    ""instanceId"": ""some_app.marathon-49d976d3-9c6f-11e6-93cb-0242216b9f0d"",
    ""runSpecId"": ""/some/app"",
    ""healthy"": true,
    ""runSpecVersion"": ""2016-10-18T10:42:47.499Z"",
    ""timestamp"": ""2016-10-27T18:00:50.401Z"",
    ""eventType"": ""instance_health_changed_event""
}
```

Accordingly, the `failed_health_check_event` now reports an instanceId instead of a taskId:

``` javascript
{
    ""instanceId"": ""some_app.marathon-49d976d3-9c6f-11e6-93cb-0242216b9f0d"",
    ...
    ""eventType"": ""failed_health_check_event""
}
```

This change affects the following API primitives in a similar way:
- `unhealthy_instance_kill_event` (in favor of the previous `unhealthy_task_kill_event`) provides both the instanceId of the instance that got killed, as well as the taskId designating the task that failed health checks.
- Health information as reported via the apps and tasks endpoint.

### Overview

#### Pods

A pod is a collection of co-located and co-scheduled containers in a shared context. 
The containers of a pod share a network namespace and may share access to the same filesystem(s).
Each pod instance’s containers are individually resource-isolated.

[Mesos 1.1](http://mesos.apache.org/blog/mesos-1-1-0-released) adds support for launching a group of tasks (LAUNCH_GROUP). 
A pod instance’s containers are launched via this Mesos primitive.
Mesos provides the executor implementation that Marathon will use to run pod instances.

We created a new primitive, PodDefinition, as well as new API endpoints. 
Read more about to use pods in our [Pods Documentation](https://mesosphere.github.io/marathon/docs/pods.html),
and the `/v2/pods` section of the [REST API Reference](https://mesosphere.github.io/marathon/docs/generated/api.html)

Pods are implemented as a new primitive in Marathon.
The general functionality of apps plus the related endpoints are still available.

#### Mesos-based health checks for HTTP, HTTPS, and TCP

Health checks are an integral part of application monitoring and have been available in Marathon since version 0.7.
At the time that health checks were first added to Marathon, there was no support for health checks in Mesos.
Prior to the availability of Mesos-based health checks, health checks were only performed directly in Marathon. This has the following consequences:
- Marathon has to share the same network as the tasks to monitor, so it can reach all launched tasks
- Network partitions could lead to wrong scheduling decisions 
- The health state is not available via the Mesos state
- Marathon health checks do not scale to large numbers of tasks.

Starting with Mesos 1.1, it is now possible to perform network based health checks directly on the Mesos executor level.
Marathon makes all the Mesos-based health checks available.
See the updated [Health Check Documentation](https://mesosphere.github.io/marathon/docs/health-checks.html),
especially the new protocols: `MESOS_HTTP`, `MESOS_HTTPS`, `MESOS_TCP`.

We strongly recommend Mesos-based health checks over Marathon-based health checks.
Marathon-based health checks are deprecated and will be removed in a future version. 

#### New ZK persistent storage layout

ZooKeeper has a limitation on the number of nodes it can store in a directory node.
Until version 1.3, Marathon used a flat storage layout in ZooKeeper and encountered this limitation with large installations.
The latest version of Marathon uses a nested storage layout, which significantly increases the number of nodes that can be stored.

ZooKeeper has a limitation on the size of one node (typically 1MB).
In prior versions, a group was stored with all subgroups and applications.
This could lead to a node size larger than 1 MB, which could not be stored.
The latest version of Marathon stores a group only with references in order to keep node size under 1 MB.

A migration inside Marathon automatically migrates the prior layout to the new one.

#### Improve Task Lost behaviour

The connection between the Mesos master and an agent can be broken for several reasons (network partition, agent update, etc).
When this happens, there is limited knowledge of the status of the agent's tasks.
Prior versions of Mesos declared such tasks as lost after a timeout and killed the tasks if the agent rejoins the cluster.

Starting with Mesos 1.1, those task are declared unreachable, not lost.
The scheduler that launched the tasks decides how to handle unreachable tasks.

Marathon uses this feature and adds an `unreachableStrategy` to the AppDefinition and PodDefinition, which allows you to define:
- `inactiveAfterSeconds`: how long Marathon should wait to start a replacement task.
- `expungeAfterSeconds`: how long Marathon should wait for a task to come back.

If a task comes back and the replacement task is already started, Marathon needs to decide which task to kill.
In order to let the user define which task should be taken, a kill selection can be defined.

#### Insights into the Launch Process - AKA: Why isn't my app starting?

Marathon tries to schedule tasks based on app or pod definition, which incorporates resource matching, role matching, constraint matching etc.
There are situations when Marathon cannot fulfill a launch request, since there is no matching offer from Mesos.
It was very hard for users to understand why Marathon could not fulfill launch requests.
For users that run into such situations, it was very hard to understand the reasons for this.
This version of Marathon gives insight into the launch process, analyzes all incoming offers and gives the user 
statistics so it easy to see, why offers were rejected.

The statics can be fetched via the `/v2/queue` endpoint. See the [REST API Reference](https://mesosphere.github.io/marathon/docs/generated/api.html).
Marathon shows the offer matching process as a funnel, so it easy to see how many offers were rejected in which step.
It gives this information for the whole launch attempt as well as the last offer cycle.

#### Improve Deployment logic

During Marathon master failover all deployments are started from the beginning.
This can be cumbersome if you have long-running updates and a Marathon failover.
This version of Marathon reconciles the state of a deployment after a failover.
A running deployment will be continued on the new elected leader without restarting the deployment.

Every state change operation via the REST API will now return the deployment identifier as an HTTP response header.

### Deprecations

#### Deprecate Marathon-based Health Checks

Mesos now supports command-based as well as network-based health checks. 
Since those health check types are now also available in Marathon, the Marathon-based health checks are now deprecated.
Do not use health checks with the following protocols: `HTTP`, `HTTPS`, and `TCP`. Instead, use the Mesos equivalents: `MESOS_HTTP`, `MESOS_HTTPS` and `MESOS_TCP`.

#### Deprecate Event Callback Subscriptions

Marathon has two ways to subscribe to the internal event bus:
- HTTP callback events managed via `/v2/eventSubscriptions`
- Server Send Events via `/v2/events` (since Marathon 0.9)

We encourage everyone to use the `/v2/events` SSE stream instead of HTTP Callback listeners.
The event callback subscriptions will be removed in a future version.

#### Forcefully stop a deployment

Deployments in Marathon can be stopped with force.
All actions currently being performed in Marathon will be stopped; the state will not change.
This can lead to an inconsistent state and is dangerous.
We will remove this functionality without replacement.

#### Removed deprecated command line parameter

Removed the deprecated `marathon_store_timeout` command line parameter. It was deprecated since v0.12 and unused.
",https://api.github.com/users/jdef,2348332,jdef,https://api.github.com/repos/mesosphere/marathon/releases/4869517/assets,https://api.github.com/repos/mesosphere/marathon/releases/4869517,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.4.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v1.4.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.4.0-RC1,v1.4.0-RC1,False,True
4858879,2016-12-02T13:47:55Z,2016-12-07T17:59:27Z,,"## Changes from 1.1.4 to 1.1.5

Added a migration that will fix improperly structured app groups. If an app entry is in the wrong group e.g.
`Group( id = /, apps = [“/foo/bar”] )` it will be moved: `Group ( id = / , Group( id = /foo, apps = [”/foo/bar”] )` 
thus taking care of structuring the groups properly. 
Note: if an app has multiple entries with different versions then the newest is kept.
",https://api.github.com/users/zen-dog,7558454,zen-dog,https://api.github.com/repos/mesosphere/marathon/releases/4858879/assets,https://api.github.com/repos/mesosphere/marathon/releases/4858879,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.5,https://github.com/mesosphere/marathon/releases/tag/v1.1.5,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.5,v1.1.5,False,False
4587770,2016-11-07T08:20:22Z,2016-11-07T08:22:35Z,,"## Changes from 1.3.5 to 1.3.6

### Fixed issues:
- When a runtime exit is requested, if the exit does not complete in less than the requested amount of time (10 seconds by default),
  now will actually kill the JVM. Previously, the timeout code did not actually work at all.
- Marathon will now terminate upon loss of leadership instead of becoming a non-master. This prevents a lot of potentially unsafe
  behavior and a watchdog will instead bring marathon back up in a clean state.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/4587770/assets,https://api.github.com/repos/mesosphere/marathon/releases/4587770,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.6,https://github.com/mesosphere/marathon/releases/tag/v1.3.6,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.6,v1.3.6,False,False
4503141,2016-09-30T15:21:45Z,2016-10-27T18:16:38Z,,"## Changes from 1.3.0 to 1.3.1

### Fixed Issues:
- Fix kill service behavior by retrying forever
- Introduce UnknownTaskTerminatedEvent when a task is terminated and unknown.
- Add support for sentry.io by passing `--sentry <url>` and `--sentry_tags tag1:value1,...`
- Set a default exception handler
- Log error if invalid protobufs were in Zookeeper.
- Improve error message in start script if JAR is not found.
- Wait for tasks to be expunged
- Allow mesos container to run without cmd and args
- Fixes #4378 Replace $ with . in metric name
- Fixes #3957 Load previously stored health status when becoming leader.
- Ensure no new connections are accepted prior to closing out handlers.
- Document unit of disk space
- Fix dead link in native-docker.md
- Enhance docs for correct mesos credential usage.
- Add support for integration tests in velocity.
- Fixes #4202 - Run tests in parallel and disable a bunch of TaskKillServiceActorTests
  due to instability.
- Fix AuthorizedZooKeeperTest to not leak the client
- Call an optional start-book script from /bin/start
- Fixes #DCOS-9936 - Fix an occasional NPE in DeploymentActor
- Fixes #4269 - AppUpdate.empty was not persisting existing .upgradeStrategy or .residency
  so that app creation via PUT would override user entries with defaults.
- Fixes #4185 - Add documenting/protecting tests as well as a protecting test for .container
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4503141/assets,https://api.github.com/repos/mesosphere/marathon/releases/4503141,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.1,https://github.com/mesosphere/marathon/releases/tag/v1.3.1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.1,v1.3.1,False,False
4503137,2016-10-07T07:14:45Z,2016-10-27T18:16:13Z,v1.3.2,"## Changes from 1.3.1 to 1.3.2

### Fixed Issues:
- Upgrade marathon ui to 1.1.5
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4503137/assets,https://api.github.com/repos/mesosphere/marathon/releases/4503137,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.2,https://github.com/mesosphere/marathon/releases/tag/v1.3.2,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.2,v1.3.2,False,False
4503132,2016-10-12T08:43:23Z,2016-10-27T18:15:46Z,v1.3.3,"## Changes from 1.3.2 to 1.3.3

### Recommended Mesos version is 1.0.1

### Fixed Issues:
- Fix an exception when reporting metrics on non-leader marathon
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4503132/assets,https://api.github.com/repos/mesosphere/marathon/releases/4503132,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.3,https://github.com/mesosphere/marathon/releases/tag/v1.3.3,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.3,v1.3.3,False,False
4503124,2016-10-25T23:53:58Z,2016-10-27T18:14:54Z,v1.3.4,"## Changes from 1.3.3 to 1.3.4

### Fixed issues:
- Fix #4470 - Log an error if we can't deserialize a task when migrating
  instead of failing completely.
- Fix migration issues related to task status/condition.
- Fix misleading healthbeat logs, only log when there is a potential problem.
- Don't wait for kills to finish, related to #4191
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4503124/assets,https://api.github.com/repos/mesosphere/marathon/releases/4503124,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.4,https://github.com/mesosphere/marathon/releases/tag/v1.3.4,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.4,v1.3.4,False,False
4503120,2016-10-26T23:48:37Z,2016-10-27T18:14:36Z,v1.3.5,"## Changes from 1.3.4 to 1.3.5

### Fixed Issues

_Warning_ - while very rare, this can change the behavior of existing applications:
- Constraint Validation was significantly improved in marathon 1.3.x and previous values for regular expressions
  for LIKE and UNLIKE may no longer pass validation as they are not valid regular expressions. Where possible,
  we will correct the regular expression (specifically `*` to `.*`); however, when this is not possible,
  _the constraint will be removed_ and a warning will be logged for the app Ids that were affected.

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v1.3.5/marathon-1.3.5.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v1.3.5/marathon-1.3.5.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v1.3.5

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4503120/assets,https://api.github.com/repos/mesosphere/marathon/releases/4503120,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.5,https://github.com/mesosphere/marathon/releases/tag/v1.3.5,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.5,v1.3.5,False,False
4167018,2016-09-14T18:19:54Z,2016-09-19T12:23:30Z,v1.3.0,"## Changes from 1.1.0 to 1.3.0

### Recommended Mesos version is 1.0.0

### Breaking Changes

#### You need Mesos 1.0.0 or higher

Starting with Marathon 1.3.0, Mesos 1.0.0 or later is required.

#### New leader election library

The leader election code has been greatly improved and is based on [Curator](http://curator.apache.org),a well-known, well-tested library. The new leader election functionality is now more robust.

**Caution: the new leader election library is not compatible with Marathon versions prior to 1.3.0**
To upgrade to this version, stop all older Marathon instances before the new version starts.
Otherwise, there is a risk of more than one leading master.

#### Framework authentication command line flags

Prior versions of Marathon have tried to authenticate whenever a principal has been provided via the command line.
Framework authentication is now explicit. There is a command line toggle option for authentication: `--mesos_authentication`.
This toggle is disabled by default. You must now supply this flag to use framework authentication.

#### Changed default values for TASK_LOST GC timeout

If a task is declared lost in Mesos, but the reason indicates it might come back, Marathon waits for the task to come back for a certain amount of time.
To configure the behavior you can use `--task_lost_expunge_gc`, `--task_lost_expunge_initial_delay`, `--task_lost_expunge_interval`.
Until version 1.3 Marathon has handled TASK_LOST very conservatively: it waits for 24 hours for every task to come back.
This version reduces the timeout to 75 seconds (task_lost_expunge_gc), while checking every 30 seconds (task_lost_expunge_interval).

### Overview

#### Universal Containerizer

Starting with version 1.3.0, Marathon supports docker container images without having the Docker Containerizer depend on a Docker Engine. Instead the Mesos containerizer with native AppC support added in Apache Mesos version 1.0 (released July 2016) directly uses native OS features to configure and start Docker containers and to provide isolation.

#### TASK_LOST behavior

If Mesos agents get detached from the Mesos master, all tasks are assumed LOST.
The reaction of Marathon in the past was to kill LOST tasks. Under certain configurations, however, those agents were able to rejoin the cluster, so LOST was not a terminal state.

In this version, Marathon will wait until a LOST task is assumed dead. This amount of time is configurable. The default timeout is 75 seconds. LOST tasks after that timeout get killed by Marathon.

This change was so important that we back ported this functionality to prior versions of Marathon.

#### Task Kill Grace Period

Every application can now define a kill grace period. 
When killing a task, the agent will wait in a best-effort manner for the grace period specified before forcibly destroying the task. 
The task must not assume that it will always be allotted the full grace period, as the agent may decide to allot a shorter period and failures/forcible terminations may occur.

#### MAX_PER constraint

Applications in Marathon can now be constrained by MAX_PER operators.
It can be used, for example, to limit tasks across racks or data centers.

#### Virtual heartbeat monitor

Previous versions of Marathon did not recognize when it had been detached from Mesos master during network partitions.
The virtual heart beat will make sure that Marathon recognizes this situation and abdicates.

#### Authorization to system endpoints

Marathon already has authorization hooks for AppDefinition and Group changes.
We added authorization hooks for system endpoints: `/v2/leader`, `/v2/info`, `/v2/events` , `/v2/eventSubscriptions`.

#### Support for secrets API

It is now possible to use secrets in your AppDefinition. 
Secrets are defined as a first-class entity and are used inside environment variables.
Please note: there is no native Mesos support for secrets at the moment.
We have defined a plugin interface to handle secrets.
You need a plugin in order to use this feature effectively.

#### Support for Nvidia GPU

It is now possible to use `gpus` as Nvidia GPU resource required in your AppDefinition.
`gpus` is defined as a first-class entity and can be supported by Mesos containerizer when
`--enable_features gpu_resources` flag is set in Marathon.
Please note: this feature is valid only when Mesos is compiled with Nvidia GPU support.

#### Support all attribute types with constraints

Non-text type attributes (such as scalar or range) are now supported.

#### ZooKeeper digest authentication support

The ZK client now supports ZK authentication and ACLs.

#### Support for virtual networking for docker containers.

Added support for Docker `USER` networking.

#### CNI networking support

Added the optional field `ipAddress.Name`, which can be used to start a task using CNI networking.

#### Enforce the uniqueness of service ports

Marathon will now ensure for newly created or updated applications, that the services ports are not used by another application.

**Caution: this change might lead to Marathon rejecting app definitions that used to be accepted by previous versions.**

### Performance improvements
- Fixes #4095 - Used Map instead of Set to store apps in Group. (#4096)
- Improve servicePort validation performance. (#4115)
- Made `dependencyGraph` only be called once per `Group` instance. (#4116)
- Fixes #3991 - Use suppressOffers (#3992)

### Fixed issues
- Fixed lost tasks garbage collection (#4203)
- Fix container changes on app update. (#4185)
- #3795 - Added GPU support for Marathon API (#4112)
- #3972 - network/cni support (#3974)
- #4129 - TaskOpProcessorImplTest is flaky (#4148)
- #4093 - Refactor MigrationTo1_2Test using async/wait (#4128)
- #4095 - Used Map instead of Set to store apps in Group. (#4096)
- #4085 - Stopping all running deployments instead of cancelling  (#4086)
- #4071 - Service Port validations are not consistently enforced (#4077)
- #3991 - Use suppressOffers (#3992)
- #3515 - Create MAX_PER constraint. (#3989)
- #3515 - Update AppDefinition.json schema (#3993)
- #3970 - Validate constraints
- #3926 - Create PORT_NAME environment variable when we defined portDefinitions with name (#3982)
- #3981 and #3963 - Allow health-checks to be performed directly against specified ports
- #3977 - Add jenkins shell script for Velocity Integration
- #3970 - Improve docs for LIKE/UNLIKE
- #3851 - Allow dynamically reserved resources for normal task matching (#3855)
- #3848 - Size check for deployments (#3852)
- #3843 - Fixing the upgradeStrategy/residency defaults (#3846)
- #3291 - Event subscriptions validation (#3787)
- #3261 - http_event_request_timeout set the HTTP timeout (#3827)
- #3813 - handling TASK_KILLING status updates (#3829)
- #3694 - enabling chaos gzip handling. - use chaos 0.8.6 with gzip handling - add http_compression flag - bump version of scallop to 1.0 - deprecate asset_path property
- #3806 - Do not silently fail on reservations (#3808)
- #3472 - Remove MarathonTask from most code (#3778)
- #3723 - Fix validation of duplicate volume names (#3737)
- #3505 - Adding documentation for ReadinessChecks (#3711)
- #3648 - LaunchQueue: Do not defer TaskChanged (#3721) 

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 47 | Matthias Veit |
| 37 | Gastón Kleiman |
| 16 | Matthias Eichstedt |
| 16 | Jason Gilanfarr |
| 14 | Johannes Unterstein |
| 13 | James DeFelice |
| 13 | Suzanne Scala |
| 12 | Peter Kolloch |
| 11 | sascala |
| 7 | Dr. Stefan Schimanski |
| 5 | Michael Park |
| 3 | jmlvanre |
| 3 | Cuauhtemoc(Tito) Sandoval |
| 3 | Sunil Shah |
| 3 | Karsten Jeschkies |
| 3 | Pierluigi Cau |
| 3 | Nathan Murthy |
| 3 | janisz |
| 2 | Aaron Bell |
| 2 | Bernd Mathiske |
| 2 | John Garcia |
| 2 | Ken Sipe |
| 2 | Micah Hausler |
| 2 | Tim Harper |
| 2 | Tito Sandoval |
| 1 | Mathieu Chataigner |
| 1 | Kapil Arya |
| 1 | oilbeater |
| 1 | Joerg Schad |
| 1 | Michał Łowicki |
| 1 | Joel Hamill |
| 1 | Jan Ulferts |
| 1 | Jan Schlicht |
| 1 | Ramona Misaila |
| 1 | Ricardo Hermida Ruiz |
| 1 | Saulius Valatka |
| 1 | Florian Leibert |
| 1 | Brenden Matthews |
| 1 | Aaron Wood |
| 1 | vixns |
| 1 | Tomasz Janiszewski |
| 1 | Tomasz Mosiej |
| 1 | Yubo Li |
| 1 | annaken |
| 1 | Balthazar Rouberol |
| 1 | Alexander Golonzovsky |
| 1 | karsten |
| 1 | Lukas Lösche |
| 1 | Mateusz Gajewski |
| 1 | Lukas Loesche |

git shortlog -s -n v1.1.0..v1.3.0

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v1.3.0/marathon-1.3.0.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v1.3.0/marathon-1.3.0.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v1.3.0

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/jasongilanfarr,794214,jasongilanfarr,https://api.github.com/repos/mesosphere/marathon/releases/4167018/assets,https://api.github.com/repos/mesosphere/marathon/releases/4167018,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.3.0,https://github.com/mesosphere/marathon/releases/tag/v1.3.0,https://api.github.com/repos/mesosphere/marathon/zipball/v1.3.0,v1.3.0,False,False
3758204,2016-07-13T08:31:02Z,2016-07-28T08:14:03Z,,"Bugfix Release:

Fixed issues:

#4002 Updated Mesos to 0.28.2
#3927 TASK_LOST changes from 0.15 (#3924)
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/3758204/assets,https://api.github.com/repos/mesosphere/marathon/releases/3758204,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.2,https://github.com/mesosphere/marathon/releases/tag/v1.1.2,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.2,v1.1.2,False,False
3680252,2016-07-18T11:33:14Z,2016-07-18T11:34:06Z,v0.14.3,"## Bugfix Release

Updated Mesos to 0.26.2 which fixes a memory leak in libmesos.
",https://api.github.com/users/nfnt,2085586,nfnt,https://api.github.com/repos/mesosphere/marathon/releases/3680252/assets,https://api.github.com/repos/mesosphere/marathon/releases/3680252,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.3,https://github.com/mesosphere/marathon/releases/tag/v0.14.3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.3,v0.14.3,False,False
3680164,2016-07-18T11:20:05Z,2016-07-18T11:22:07Z,v0.15.6,"## Bugfix Release

Updated Mesos to 0.26.2 which fixes a memory leak in libmesos.
",https://api.github.com/users/nfnt,2085586,nfnt,https://api.github.com/repos/mesosphere/marathon/releases/3680164/assets,https://api.github.com/repos/mesosphere/marathon/releases/3680164,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.6,https://github.com/mesosphere/marathon/releases/tag/v0.15.6,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.6,v0.15.6,False,False
3320542,2016-05-27T12:22:20Z,2016-05-27T12:24:17Z,,"## Bugfix Release

### Fixed issues
- Regression of #234 - Unsafe generation of task listing
- #3942 - Unreachable Tasks (`TASK_LOST`) should not be health checked nor killed due to failing health checks
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/3320542/assets,https://api.github.com/repos/mesosphere/marathon/releases/3320542,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.5,https://github.com/mesosphere/marathon/releases/tag/v0.15.5,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.5,v0.15.5,False,False
3286434,2016-05-23T18:15:33Z,2016-05-23T18:33:55Z,,"## Bugfix Release

Fixed Bugs:
- Fixes #3402 - Fix race conditions in HttpEventActor
- Fixes #3377 Remove the FrameworkId in case of a specific error message from Mesos.
- Fixes #3924 by handling TASK_LOST messages with a garbage collection timeout. The lost task is killed after a configurable timeout.

In order to tweak the task lost behavior, you can use these new command line flags:
-  `--task_lost_expunge_gc` (Optional. Default: 24 hours):
  This is the length of time in milliseconds, until a lost task is garbage collected and expunged from the task tracker and task repository.
- `--task_lost_expunge_initial_delay` (Optional. Default: 5 minutes):
  This is the length of time, in milliseconds, before Marathon begins to periodically perform task expunge gc operations  
- `--task_lost_expunge_interval` (Optional. Default: 1 hour):
  This is the length of time in milliseconds, for lost task gc operations.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/3286434/assets,https://api.github.com/repos/mesosphere/marathon/releases/3286434,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.4,https://github.com/mesosphere/marathon/releases/tag/v0.15.4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.4,v0.15.4,False,False
3027748,2016-04-15T12:17:28Z,2016-04-15T12:51:32Z,,"Bugfix Release:

Fixed Bugs:
- Fix race condition in which a health check can not be started as part of a deployment.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/3027748/assets,https://api.github.com/repos/mesosphere/marathon/releases/3027748,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.1,https://github.com/mesosphere/marathon/releases/tag/v1.1.1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.1,v1.1.1,False,False
3020606,2016-04-14T14:19:05Z,2016-04-14T15:26:55Z,,"## Changes from 1.0.0 to 1.1.0

### Recommended Mesos version is 0.28.0

### Overview

#### Readiness Checks for applications

Marathon already has the concept of health checks, which periodically monitor the health of an application. 
During deployments and runtime configuration updates, however, you might want a temporary monitor that waits for your application to be _ready_.  A temporary monitor can be useful for cache-warming, JIT warming, or a migration. Marathon offers a readiness check for these situations.

Readiness checks are performed only during deployment time after a task has been launched. The deployment will wait for the readiness check to succeed, before the deployment continues. For easy integration with other tools, the result of the readiness checks is available via the deployments endpoint or the app/group listing.
We are keen to know what you think about this feature.

#### Support for external volumes (experimental)

Marathon applications normally lose their state when they terminate and are relaunched. 
In some contexts, for instance, if your application uses MySQL, you’ll want your application to preserve its state. 
You can use an external storage service, such as Amazon's Elastic Block Store (EBS), to create a persistent volume that follows your application instance.Using an external storage service allows your apps to be more fault-tolerant. 
If a host fails, Marathon reschedules your app on another host, along with its associated data, without user intervention.

Please Note that you have to setup your Mesos cluster correctly in order to use this feature.

#### Local Volumes

In prior versions Marathon had to authenticate with Mesos in order to use local volumes.
While this is still possible, we removed this prerequisite.
Using this version it is enough to set a framework principal without providing credentials.

### Fixed issues
- #3092 - Delayed applications can appear to be running
- #3369 - Constraint validation message
- #3477 - Improve ForceExpunge and restart logic
- #3519 - The default Docker network should be host
- #3552 - Editing an App: Switching between JSON and normal Editor produces a broken UX
- #3564 - Add link to Docker section for Ports
- #3574 - ResourceMatching and Constraints by not considering the volumeMatch's Reserved task when inspecting constraints
- #3579 - Resident Tasks: Flaky test: restart
- #3587 - Not specifying ""network"" config causes mesos to thrash
- #3597 - Upgrading applications with persistent storage
- #3612 - Marathon should validate that port names contain only letters and numbers
- #3614 - Don't allow persistent container paths containing slashes
- #3624 - Constraints are not working for updating. Respect constraints for same version.
- #3646 - Liquid Exception in docs 
- #3652 - Error paths are mapped incorrectly
- #3654 - PortMapping labels are not being set
- #3655 - Apps with no volumes reported as stateful
- #3659 - JSON editor help button does not work in IE11
- #3663 - Apps created from inside a group have a double forward-slash in their ID
- #3671 - Scrolling issue with create modal
- Fixes #3648 - LaunchQueue: Do not defer TaskChanged 
- Fixes #3723 - Fix validation of duplicate volume names (#3737)
- Fixes #3758 - Fix offersWantedSubjects 
- Fixes #3658 - Allow Kill & Wipe for resident tasks
- Fixes #3719 - Tooltip message for external volumes is wrong
- Fixes #3724 - Don't assume external volumes status as attached by default
- Fixes #3657 - Suspended resident tasks should have a different status
- Fixes #3693 - Remove unwanted sidebar filter for scheduler upgrades
- Change - Introduce feature_flag external_volumes.
- Change - UI Introduce support for External Volumes based on feature flag
- Change - Log unknown task.
- Change - Add original CandidateImpl.java
- Change - Use life-time group watch

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 35 | Matthias Veit |
| 20 | Gastón Kleiman |
| 17 | Peter Kolloch |
| 15 | Matthias Eichstedt |
| 8 | Suzanne Scala |
| 4 | Aaron Bell |
| 2 | Joerg Schad |
| 2 | Tomasz Janiszewski |
| 3 | Alexander Weber |
| 2 | Tim Harper |
| 2 | Sakthipriyan Vairamani |
| 1 | Lukas Loesche |
| 1 | Orlando Hohmeier |
| 1 | James DeFelice |
| 1 | Philip Lombardi |

git shortlog -s -n v1.0.0-RC1..v1.1.0-RC1

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v1.1.0-RC1/marathon-1.1.0-RC1.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v1.1.0-RC1/marathon-1.1.0-RC1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v1.1.0-RC1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/3020606/assets,https://api.github.com/repos/mesosphere/marathon/releases/3020606,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.0,https://github.com/mesosphere/marathon/releases/tag/v1.1.0,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.0,v1.1.0,False,False
3012930,2016-04-13T15:18:39Z,2016-04-13T17:30:01Z,,"**Changes**

We introduced a feature flag for external volumes. Enable this feature, if the cluster has support for external volumes.

**Fixes in that release**

Fixes #3648 - LaunchQueue: Do not defer TaskChanged 
Fixes #3723 - Fix validation of duplicate volume names (#3737)
Fixes #3758 - Fix offersWantedSubjects 
Fixes #3658 - Allow Kill & Wipe for resident tasks
Fixes #3719 - Tooltip message for external volumes is wrong
Fixes #3724 - Don't assume external volumes status as attached by default
Fixes #3657 - Suspended resident tasks should have a different status
Fixes #3693 - Remove unwanted sidebar filter for scheduler upgrades
Change - Introduce feature_flag external_volumes.
Change - UI Introduce support for External Volumes based on feature flag
Change - Log unknown task.
Change - Add original CandidateImpl.java
Change - Use life-time group watch
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/3012930/assets,https://api.github.com/repos/mesosphere/marathon/releases/3012930,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v1.1.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.0-RC2,v1.1.0-RC2,False,True
2980633,2016-04-08T11:39:41Z,2016-04-08T13:07:05Z,,"## Changes from 1.0.0 to 1.1.0

### Recommended Mesos version is 0.28.0

### Overview

#### Readiness Checks for applications

Marathon already has the concept of health checks, which periodically monitor the health of an application. 
During deployments and runtime configuration updates, however, you might want a temporary monitor that waits for your application to be _ready_.  A temporary monitor can be useful for cache-warming, JIT warming, or a migration. Marathon offers a readiness check for these situations.

Readiness checks are performed only during deployment time after a task has been launched. The deployment will wait for the readiness check to succeed, before the deployment continues. For easy integration with other tools, the result of the readiness checks is available via the deployments endpoint or the app/group listing.
We are keen to know what you think about this feature.

#### Support for external volumes (experimental)

Marathon applications normally lose their state when they terminate and are relaunched. 
In some contexts, for instance, if your application uses MySQL, you’ll want your application to preserve its state. 
You can use an external storage service, such as Amazon's Elastic Block Store (EBS), to create a persistent volume that follows your application instance.Using an external storage service allows your apps to be more fault-tolerant. 
If a host fails, Marathon reschedules your app on another host, along with its associated data, without user intervention.

Please Note that you have to setup your Mesos cluster correctly in order to use this feature.

#### Local Volumes

In prior versions Marathon had to authenticate with Mesos in order to use local volumes.
While this is still possible, we removed this prerequisite.
Using this version it is enough to set a framework principal without providing credentials.

### Fixed issues
- #3092 - Delayed applications can appear to be running
- #3369 - Constraint validation message
- #3477 - Improve ForceExpunge and restart logic
- #3519 - The default Docker network should be host
- #3552 - Editing an App: Switching between JSON and normal Editor produces a broken UX
- #3564 - Add link to Docker section for Ports
- #3574 - ResourceMatching and Constraints by not considering the volumeMatch's Reserved task when inspecting constraints
- #3579 - Resident Tasks: Flaky test: restart
- #3587 - Not specifying ""network"" config causes mesos to thrash
- #3597 - Upgrading applications with persistent storage
- #3612 - Marathon should validate that port names contain only letters and numbers
- #3614 - Don't allow persistent container paths containing slashes
- #3624 - Constraints are not working for updating. Respect constraints for same version.
- #3646 - Liquid Exception in docs 
- #3652 - Error paths are mapped incorrectly
- #3654 - PortMapping labels are not being set
- #3655 - Apps with no volumes reported as stateful
- #3659 - JSON editor help button does not work in IE11
- #3663 - Apps created from inside a group have a double forward-slash in their ID
- #3671 - Scrolling issue with create modal

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 35 | Matthias Veit |
| 20 | Gastón Kleiman |
| 17 | Peter Kolloch |
| 15 | Matthias Eichstedt |
| 8 | Suzanne Scala |
| 4 | Aaron Bell |
| 2 | Joerg Schad |
| 2 | Tomasz Janiszewski |
| 3 | Alexander Weber |
| 2 | Tim Harper |
| 2 | Sakthipriyan Vairamani |
| 1 | Lukas Loesche |
| 1 | Orlando Hohmeier |
| 1 | James DeFelice |
| 1 | Philip Lombardi |

git shortlog -s -n v1.0.0-RC1..v1.1.0-RC1

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v1.1.0-RC1/marathon-1.1.0-RC1.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v1.1.0-RC1/marathon-1.1.0-RC1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v1.1.0-RC1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2980633/assets,https://api.github.com/repos/mesosphere/marathon/releases/2980633,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.1.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v1.1.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.1.0-RC1,v1.1.0-RC1,False,True
2876073,2016-03-23T19:51:59Z,2016-03-23T20:31:03Z,,"## Changes from 0.15.3 to 1.0.0

### Recommended Mesos version is 0.28.0

### Breaking Changes

#### New default settings for Task Launches

Marathon has a lot of settings to adjust. Our goal is, to have sensible defaults for small and medium size clusters.
We realized, that some default values are not sufficient in the field and changed them:
- `--launch_tokens` has changed to 100 (was 1000)
- `--max_tasks_per_offer` has changed to 5 (was 100)
- `--reconciliation_interval` has changed to 600000 (=10 minutes) (was 300000 (=5 minutes))

#### Updated Auth plugin interface

The Authentication and Authorization plugin interface was redesigned in order to support more sophisticated plugins.

### Overview

#### Support for Persistent Storage

You can now launch tasks that use persistent volumes by specifying volumes either via the UI or the REST API. Marathon will reserve all required resources on a matching agent, and subsequently launch a task on that same agent if needed. Data within the volume will be retained even after relaunching the associated task. This release provides basic functionality which we plan to extend in the future, so use it at your own risk.

Check it out and give us feedback!

See the [feature documentation](https://mesosphere.github.io/marathon/docs/persistent-volumes.html) for details and configuration examples.

#### Support for ports metadata

The v2 REST API was extended to support additional ports metadata (protocol, name, and labels) through the
`portDefinition` application field.  Marathon will pass this new information to Mesos, who will in turn make it
available for service discovery purposes.

Note: the `portDefinitions` array deprecates the `ports` array.

#### Support for HTTP based plugin extensions

Plugins can now implement HTTP endpoints.

#### Added a leaderDuration metric

The metrics include now a gauge that measures the time elapsed since the last leader election happened. This is helpful to diagnose stability problems and how often leader election happens.

#### Better error messages

API error messages are now more consistent and easier to understand for both humans and computers.

#### Lots of documentation updates

#### Improved Task Kill behavior in deployments by performing kills in batches

When stopping/restarting an application, Marathon will now perform the kills in batches, in order to avoid overwhelming
Mesos. The batch size and frequency can be controlled via internal configuration parameters.

#### Support the `TASK_KILLING` state available in Mesos 0.28

It is possible to make Marathon let Mesos use the `TASK_KILLING` state introduced in Mesos 0.28 using the
`--enable_features task_killing` flag. Marathon doesn't use this task state yet.

### Web UI

The Web UI for Marathon sees a number of improvements in this version as well. 

#### Applications and Search
- improved global search with better ranking (fuzzy matching) 
- groups are now shown as part of search results too
- application list supports for browsing empty groups
- create empty groups directly from the UI
- a new sidebar filter to match apps with attached volumes

#### Create/Edit form improvements
- redesigned form with improved usability
- completely new JSON editor
- create resident tasks with persistent local volumes from the UI
- simplify port management 

For the full set of changes, please refer to the [Marathon UI release pages](https://github.com/mesosphere/marathon-ui/releases).

## Fixed issues
- #929 - Allow tcp,udp ports in portMappings
- #2751 - Commit suicide on ZK exceptions
- #3091 - App updates hanging on downscales 
- #3169 - Possible to start app with negative resources
- #3241 - Serverside validation messages are inconsistent
- #3251 - Tried to kill an existing app, said it doesn't exist even though it does 
- #3338 - Path in health checks validation failure results is broken
- #3367 - Relative paths for dependencies not working anymore
- #3377 - Marathon should remove the FrameworkId for special Mesos errors
- #3385 - Creating an empty group using an existing app ID should return 409
- #3402 - Race conditions in HttpEventActor
- #3423 - Report kills due to failed healthcheck.
- #3439 - Relative paths in dependencies should be resolvable.

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 101 | Matthias Veit |
| 60 | Matthias Eichstedt |
| 54 | Peter Kolloch |
| 43 | Gastón Kleiman |
| 11 | sascala |
| 11 | Alexander Weber |
| 5 | Pierluigi Cau |
| 5 | Suzanne Scala |
| 3 | Aaron Bell |
| 3 | Sunil Shah |
| 3 | alenkacz |
| 3 | Joerg Schad |
| 2 | Isabel Jimenez |
| 2 | Tomasz Janiszewski |
| 2 | Pradeep Sekar |
| 2 | philipnrmn |
| 2 | jlamillan |
| 2 | Dr. Stefan Schimanski |
| 2 | Timo Reimann |
| 2 | Lee Munroe |
| 1 | pierrecdn |
| 1 | Leonardo Trabuco |
| 2 | Lukas Loesche |
| 1 | Peter Kelley |
| 1 | Brian Antonelli |
| 1 | Philip Norman |
| 1 | Philipp Hinrichsen |
| 1 | Kiril Nesenko |
| 1 | Timothée GERMAIN |
| 1 | Zhou Weitao |

Generated by `git shortlog -s -n v0.15.3..v1.0.0-RC1` for the Marathon repository

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v1.0.0-RC1/marathon-1.0.0-RC1.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v1.0.0-RC1/marathon-v1.0.0-RC1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v1.0.0-RC1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2876073/assets,https://api.github.com/repos/mesosphere/marathon/releases/2876073,master,https://api.github.com/repos/mesosphere/marathon/tarball/v1.0.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v1.0.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v1.0.0-RC1,v1.0.0-RC1,False,True
2775022,2016-03-09T10:59:14Z,2016-03-09T11:05:23Z,,"Fixes #2509 Leadership not abdicated on ZK connection loss
Fixes #3377 Remove the FrameworkId in case of a specific error message from Mesos.
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2775022/assets,https://api.github.com/repos/mesosphere/marathon/releases/2775022,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.2-RC8,https://github.com/mesosphere/marathon/releases/tag/v0.10.2-RC8,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.2-RC8,v0.10.2-RC8,False,True
2670151,2016-02-23T12:48:58Z,2016-02-23T12:53:55Z,,"## Changes from 0.15.2 to 0.15.3

This is a bug fix release.

## Fixed issues
- #3192 - Adapt default Mem/CPU settings
- #3251 - Tried to kill an existing app, said it doesn't exist even though it does 

Changelog from Marathon 0.15.1 to 0.15.2: https://github.com/mesosphere/marathon/compare/v0.15.2...v0.15.3

_Please see the release notes of [v0.15.0](https://github.com/mesosphere/marathon/releases/tag/v0.15.0) for a complete list of the changes in v0.15.0._

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v0.15.3/marathon-0.15.3.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v0.15.3/marathon-0.15.3.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.15.3

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2670151/assets,https://api.github.com/repos/mesosphere/marathon/releases/2670151,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.3,https://github.com/mesosphere/marathon/releases/tag/v0.15.3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.3,v0.15.3,False,False
2625062,2016-02-16T14:54:49Z,2016-02-16T16:38:05Z,,"## Changes from 0.15.1 to 0.15.2

This release includes fixes for two bugs introduced in 0.15.0.

## Fixed issues
- #3172 - ""Apply"" button is broken (sending both uris and fetch)
- #3242 - Treat ""value"" attribute in server-side validation errors as general error

## Changelog

Changelog from Marathon 0.15.1 to 0.15.2: https://github.com/mesosphere/marathon/compare/v0.15.1...v0.15.2

_Please see the release notes of [v0.15.0](https://github.com/mesosphere/marathon/releases/tag/v0.15.0) for a complete list of the changes in v0.15.0._

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v0.15.2/marathon-0.15.2.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v0.15.2/marathon-0.15.2.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.15.2

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/philipnrmn,2989362,philipnrmn,https://api.github.com/repos/mesosphere/marathon/releases/2625062/assets,https://api.github.com/repos/mesosphere/marathon/releases/2625062,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.2,https://github.com/mesosphere/marathon/releases/tag/v0.15.2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.2,v0.15.2,False,False
2571883,2016-02-08T13:02:45Z,2016-02-08T13:10:04Z,,"## Changes from 0.15.0 to 0.15.1

This release includes fixes for several bugs introduced in 0.15.0.

## Fixed issues
- #3139 - Marathon 0.15.0 forces redeploy of app all the time
- #3054 - Empty application attributes are accidentally submited by the UI
- #3141 - Jetty throws exception during load
- #3164 - Marathon 0.15 error on bad application id is really bad
- #3160 - Show 400 error for Constraints field
- #3140 - breaking API change on portIndex

## Changelog

Changelog from Marathon 0.15.0 to 0.15.1: https://github.com/mesosphere/marathon/compare/v0.15.0...v0.15.1

_Please see the release notes of [v0.15.0](https://github.com/mesosphere/marathon/releases/tag/v0.15.0) for a complete list of the changes in v0.15.0._

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v0.15.1/marathon-0.15.1.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v0.15.1/marathon-0.15.1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.15.1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2571883/assets,https://api.github.com/repos/mesosphere/marathon/releases/2571883,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.1,https://github.com/mesosphere/marathon/releases/tag/v0.15.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.1,v0.15.1,False,False
2546706,2016-02-03T18:02:59Z,2016-02-03T18:14:17Z,,"## Fixed Issues
- #3139 - Marathon 0.15.0 forces redeploy of app all the time
- #3054 - Empty application attributes are accidentally submited by the UI
- #3141 - Jetty throws exception during load

## Changelog

Changelog from Marathon 0.15.0 to 0.15.1-RC1: https://github.com/mesosphere/marathon/compare/v0.15.0...v0.15.1-RC1

_Please see the release notes of [v0.15.0](https://github.com/mesosphere/marathon/releases/tag/v0.15.0) for a complete list of the changes in v0.15.0._
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2546706/assets,https://api.github.com/repos/mesosphere/marathon/releases/2546706,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.1-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.15.1-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.1-RC1,v0.15.1-RC1,False,True
2538529,2016-02-01T17:08:33Z,2016-02-02T16:52:36Z,,"## Changes from 0.14.0 to 0.15.0

### Recommended Mesos version is 0.26.0

We tested this release against Mesos version 0.26.0. Thus, this is the recommended Mesos version for this release.

### Overview

#### Integration of Mesos Fetcher Cache

The v2 REST API was extended to support the Mesos fetcher cache. This allows users to configure a list of resource URIs that will be copied into the task sandbox prior to running the task, from either a local or external location. For details on the fetcher cache's capabilities, please see the fetcher cache [documentation](http://mesos.apache.org/documentation/latest/fetcher/).

#### Migration from Marathon version 0.7 or lower removed

It is no longer possible to migrate from Marathon versions prior to version 0.8. If you want to upgrade old versions we recommend to do a step by step migration using the latest stable version following your installed version and so on.

#### haproxy-marathon-bridge is deprecated and removed from the bin directory

In recent versions we published a simple shell script to update haproxy configuration. The script can still be found in the examples directory. [marathon-lb](https://github.com/mesosphere/marathon-lb) is the successor of this script.

### Under the Hood

There have been a lot of interesting changes which we only summarize for now. In the next days, we will follow up with extend documentation about them.

#### New metrics

We added a bunch of important metrics and documentation on the `/metrics` endpoint and fixed measuring some existing metrics.

#### Limit concurrent status update processing

We now limit the maximum number of concurrently processed task status updates. If the limit is reached, further status updates are queued. The queue is limited, too, so that at some point new status updates are rejected and not acknowledged. Eventually, Mesos will resend the status updates that we didn't process.

#### Task state tracking redesign

We have rewritten the component that holds the task states: the `TaskTracker`. We removed the old implementation that used concurrent data structures, and now use an actor based implementation. The new implementation is easier to reason about and allows explicit concurrency management as described in the last section.

#### Explicit queuing of application configuration updates

Marathon has been serializing updates to the app configuration for a while. We made queuing outstanding  configuration requests explicit and also limited the maximum size of the queue.

#### Optimized /v2/tasks (TXT)

Since some service discovery solutions poll this end-point, performance is important. We improved request rates by about 30%.

#### Changes to the threading model

Prior to this release, Marathon would create new threads when needed. Now we switched to a model where we have some fixed size thread pools and thread pools that will only grow if too many threads have become blocked. This should reduce the number of threads under load.

#### Model validation

Marathon is now utilizing [Accord](http://wix.github.io/accord/), a modern approach to model validation which will hopefully leads to better error messages in the future.

### Marathon UI

A number of very convenient features and improvements made it into this release. 

#### Perform actions directly from the Applications list

A new contextual dropdown menu in the Applications list gives access to the most useful actions (scale, destroy, suspend, etc.) without having to enter an application's detail view. Additionally, it is now possible to perform scale and delete operations on entire Groups. 

#### Better feedback

The feedback dialogs have been completely redesigned to be clearer and more useful, adding three possible color-coded severity levels: `info`, `warning` and `error`. In addition, the action button labels have been rephrased for improved usability. Buttons that may lead to dangerous actions (such as ""force scale"") are also not preselected by default anymore.

#### Application Health

The health status breakdown is now also shown in the application details page.

#### ...and much more

For the complete set of changes, please refer to the [Marathon UI CHANGELOG](https://github.com/mesosphere/marathon-ui/blob/master/CHANGELOG.md)

### Fixed issues
- #2918 - Incorrect Step-wise timers in TaskStatusUpdateProcessorImpl
- #2919 - StateMetrics.timed(Read/Write) incorrectly used for methods returning Futures
- #2951 - Incorrect Constraint lead to an application exception, but should give an error response
- #2957 - Unbounded ThreadPool is used for too many operations
- #2982 - Double offerLeadership invocation after driver failure
- #2989 - Report task count metrics
- #2868 - Marathon sometimes tries (and fails) to assign duplicated service ports
- #2938 - Don't log giant port lists
- #2855 - Create app failed when there're multiple same word in the app id
- #3051 - Can't add dynamic ports using PUT
- #3047 - Event callbacks hold on to unresponsive hosts
- #2892 - Version in task detail component shouldn't be localised
- #2893 - App page component should display the right number of tasks
- #2949 - AjaxWrapper does't handle TypeError correctly
- #3065 - Prevent ctrl-c keyboard shortcut from showing the Create modal dialog
- #3054 - Empty - non set- application attributes are accidentaly submited by the UI
- #3064 - Labels dropdown menu not showing up
- #3063 - After scaling a healthy app to 0, it appears to be Infinity% overcapacity

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 29 | Peter Kolloch |
| 14 | Gastón Kleiman |
| 9 | Matthias Eichstedt |
| 6 | Matthias Veit |
| 5 | Alexander Weber |
| 5 | Pierluigi Cau |
| 2 | Tomasz Janiszewski |
| 2 | Tobi Knaup |
| 1 | Suzanne Scala |
| 1 | avinash sridharan |
| 1 | jtrenholm |
| 1 | Adam Medziński |
| 1 | sascala |
| 1 | Brenden Matthews |
| 1 | Christopher M Luciano |
| 1 | David Bayendor |
| 1 | Justin Good |
| 1 | Mateusz Gajewski |
| 1 | Philip Norman |
| 1 | Philipp Hinrichsen |

Generated by `git shortlog -s -n --no-merges v0.14.1..v0.15.0` for the Marathon repository

### Downloads

Tarball: 
http://downloads.mesosphere.com/marathon/v0.15.0/marathon-0.15.0.tgz

SHA: 
http://downloads.mesosphere.com/marathon/v0.15.0/marathon-0.15.0.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.15.0

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2538529/assets,https://api.github.com/repos/mesosphere/marathon/releases/2538529,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.0,https://github.com/mesosphere/marathon/releases/tag/v0.15.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.0,v0.15.0,False,False
2508614,2016-01-27T16:19:12Z,2016-01-28T13:47:15Z,Marathon 0.15.0-RC3,"Introduces a backoff delay in case slow or unresponsive hosts are registered as event stream listeners. 

Fixed issues:
- #3047 - Event callbacks hold on to unresponsive hosts

Tarball: 
http://downloads.mesosphere.io/marathon/v0.15.0-RC3/marathon-0.15.0-RC3.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.15.0-RC3/marathon-0.15.0-RC3.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.15.0-RC3

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2508614/assets,https://api.github.com/repos/mesosphere/marathon/releases/2508614,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.15.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.0-RC3,v0.15.0-RC3,False,True
2508605,2016-01-27T17:06:02Z,2016-01-28T14:16:16Z,,"Introduces a backoff delay in case slow or unresponsive hosts are registered as event stream listeners. Also prevents an error in the UI when no IP address is present.

Fixed issues:
- #3047 - Event callbacks hold on to unresponsive hosts
- #2973 - Prevent breaking task info table if IP address is not present

Tarball: 
http://downloads.mesosphere.io/marathon/v0.14.1/marathon-0.14.1.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.14.1/marathon-0.14.1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.14.1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2508605/assets,https://api.github.com/repos/mesosphere/marathon/releases/2508605,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.1,https://github.com/mesosphere/marathon/releases/tag/v0.14.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.1,v0.14.1,False,False
2508592,2016-01-27T21:40:48Z,2016-01-28T13:44:40Z,,"Introduces a backoff delay in case slow or unresponsive hosts are registered as event stream listeners. Also includes migration fixes originally introduced for 0.14 that also affect 0.13.

Fixed issues:
- #2405 - Migration of ZK State to 0.13/0.14 does not work
- #2984 - Failed migration 0.11.1 -> 0.14.0-RC3
- #3047 - Event callbacks hold on to unresponsive hosts

Tarball: 
http://downloads.mesosphere.io/marathon/v0.13.1/marathon-0.13.1.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.13.1/marathon-0.13.1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.13.1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2508592/assets,https://api.github.com/repos/mesosphere/marathon/releases/2508592,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.1,https://github.com/mesosphere/marathon/releases/tag/v0.13.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.1,v0.13.1,False,False
2484869,2016-01-25T08:35:48Z,2016-01-25T11:11:30Z,,"## Changes from 0.14.0 to 0.15.0

### Recommended Mesos version is 0.26.0

We tested this release against Mesos version 0.26.0. Thus, this is the recommended Mesos version for this
release.

### Overview

#### Integration of Mesos Fetcher Cache

The v2 REST API was extended to support the Mesos fetcher cache. This allows users to configure a list of resource URIs
that will be copied into the task sandbox prior to running the task, from either a local or external location. For
details on the fetcher cache's capabilities, please see the fetcher cache [documentation](http://mesos.apache.org/documentation/latest/fetcher/).

#### Migration from Marathon version 0.7 or lower removed

It is no longer possible to migrate from Marathon versions prior to version 0.8. If you want to upgrade old
versions we recommend to do a step by step migration using the latest stable version following your installed version
and so on.

#### haproxy-marathon-bridge is deprecated and removed from the bin directory

In recent versions we published a simple shell script to update haproxy configuration.
marathon-lb is the successor of this script and can be found here: https://github.com/mesosphere/marathon-lb
The script can still be found in the examples directory.

### Under the Hood

There have been a lot of interesting changes which we only summarize for now. In the next days, we will
follow up with extend documentation about them.

#### New metrics

We will provide some cursory introduction into important metrics soon.

#### Limit concurrent status update processing

We now limit the maximum number of concurrently processed task status updates. If the limit is reached,
further status updates are queued. The queue is limited, too, so that at some point new status updates
are rejected and not acknowledged. Eventually, Mesos will resend the status updates that we didn't process.

#### Task state tracking redesign

We have rewritten the component that holds the task states: the `TaskTracker`. We removed the old implementation
that used concurrent data structures, and now use an actor based implementation. The new implementation is easier to
reason about and allows explicit concurrency management as described in the last section.

#### Explicit queuing of application configuration updates

Marathon has been serializing updates to the app configuration for a while. We made queuing outstanding 
configuration requests explicit and also limited the maximum size of the queue.

#### Optimized /v2/tasks (TXT)

Since some service discovery solutions poll this end-point, performance is important. We improved 
request rates by about 30%.

#### Changes to the threading model

Prior to this release, Marathon would create new threads when needed. Now we switched to a model where we
have some fixed size thread pools and thread pools that will only grow if too many threads have become blocked.
This should reduce the number of threads under load.

#### Model validation

Marathon is now utilizing [Accord](http://wix.github.io/accord/), a modern approach to model validation which will
hopefully leads to better error messages in the future.

### Marathon UI

A number of very convenient features and improvements made it into this release. 

#### Perform actions directly from the Applications list

A new contextual dropdown menu in the Applications list gives access to the most useful actions (scale, destroy,
suspend, etc.) without having to enter an application's detail view. Additionally, it is now possible to perform scale
and delete operations on entire Groups. 

#### Better feedback

The feedback dialogs have been completely redesigned to be clearer and more useful, adding three possible color-coded
severity levels: `info`, `warning` and `error`. In addition, the action button labels have been rephrased for improved
usability. Buttons that may lead to dangerous actions (such as ""force scale"") are also not preselected by default anymore.

#### Application Health

The health status breakdown is now also shown in the application details page.

#### ...and much more

For the complete set of changes, please refer to the [Marathon UI CHANGELOG](https://github.com/mesosphere/marathon-ui/blob/master/CHANGELOG.md)

### Fixed issues
- #2918 - Incorrect Step-wise timers in TaskStatusUpdateProcessorImpl
- #2919 - StateMetrics.timed(Read/Write) incorrectly used for methods returning Futures
- #2951 - Incorrect Constraint lead to an application exception, but should give an error response
- #2957 - Unbounded ThreadPool is used for too many operations
- #2982 - Double offerLeadership invocation after driver failure
- #2989 - Report task count metrics
- #2868 - Marathon sometimes tries (and fails) to assign duplicated service ports
- #2938 - Don't log giant port lists
- #2855 - Create app failed when there're multiple same word in the app id
- #3051 - Can't add dynamic ports using PUT
- #2892 - Version in task detail component shouldn't be localised
- #2893 - App page component should display the right number of tasks
- #2949 - AjaxWrapper does't handle TypeError correctly
- #3065 - Prevent ctrl-c keyboard shortcut from showing the Create modal dialog
- #3054 - Empty - non set- application attributes are accidentaly submited by the UI
- #3064 - Labels dropdown menu not showing up
- #3063 - After scaling a healthy app to 0, it appears to be Infinity% overcapacity
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/2484869/assets,https://api.github.com/repos/mesosphere/marathon/releases/2484869,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.15.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.15.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.15.0-RC2,v0.15.0-RC2,False,True
2453548,2016-01-19T13:47:39Z,2016-01-19T15:42:30Z,v0.14.0,"## Changes from 0.13.0 to 0.14.0

### Recommended Mesos version is 0.26.0

We tested this release against Mesos version 0.26.0. Thus, this is the recommended Mesos version for this release.

### Breaking Changes

Marathon will not start up if there's an error registering with the current framework id. The previous behaviour was to register as a new framework. We changed this in order to avoid orphaning the running tasks in case of transient errors.

### Overview

#### Expose additional app definition variables

The following environment variables are now available to the tasks:
- `MARATHON_APP_RESOURCE_CPUS` contains the value of the app definition `cpus` value.
- `MARATHON_APP_RESOURCE_MEM` contains the value of the app definition `mem` value, expressed in megabytes.
- `MARATHON_APP_RESOURCE_DISK`  value of the app definition `disk` value, expressed in megabytes.
- `MARATHON_APP_LABELS` contains list of labels of the corresponding app definition. For example: `label1 label2 label3`
- `MARATHON_APP_LABEL_NAME` contains value of label ""NAME"" of the corresponding app definition.

#### Health Checks: allow port instead of portIndex

Previously, the port to be used for health checks could only be specified by supplying a port index.  Now it can also be specified directly using the new `port` field.

#### Improved search in the UI

Previously, the user could search through applications using a field which filtered all applications. In 0.14.0 we replace the filter with a search which leads to a detailed search result view. There are various improvements in the search interaction, including the user being returned to their former group context after the search term has been cleared.

#### Better health status feedback

The health bars in the application list view are now provided in the application detail view. The tooltips in the overview have been consolidated to make them easier to understand. The styles of the deployment table have been updated inline with the applications list view. Additionally, it's possible to filter apps by their health status in the UI.

#### IP-per-task UI

Some changes have been made in order to support IP-per-task in the API. The relevant part of the app definition is exposed in the configuration page, and the `ipAddresses` field is integrated in the task detail view.

#### Direct task log downloads for in the UI

The `stderr` and `stdout` logs can now be downloaded directly from the task view in the UI. The contents of each task's sandbox is displayed and files are offered for direct download.

#### Health Checks: allow port instead of portIndex

Previously, the port to be used for health checks could only be specified by supplying a port index.  Now it can also be specified directly using the new `port` field.

#### EXPERIMENTAL: IP-per-task support

This can drastically simplify service discovery, since you can use
[mesos-dns](https://github.com/mesosphere/mesos-dns) to rely on DNS for service discovery. This enables your
applications to use address-only (A) DNS records in combination with known ports to connect to other
services -- as you would do it in a traditional static cluster environment.

You can request an IP-per-task with default settings like this:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {}
}
```

Marathon passes down the request for the IP to Mesos. You have to make sure that you installed & configured the appropriate [Network Isolation Modules](https://docs.google.com/document/d/17mXtAmdAXcNBwp_JfrxmZcQrs7EO6ancSbejrqjLQ0g) & IP Access Manager (IPAM) modules in Mesos. The Marathon support for this feature requires Mesos v0.26.

If an application requires IP-per-task, then it can not request ports to be allocated in the slave.

Currently, this feature does not work in combination with Docker containers. We might still change some aspects of the API and we appreciate your feedback.

#### Improved migrations from v0.11

It is now possible to resume interrupted ZooKeeper state migrations. That means that Marathon can now recover from transient errors during the migration process.

#### EXPERIMENTAL: Network security groups

If your IP Access Manager (IPAM) supports it, you can refine your IP configuration using network security groups and labels:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {
    ""groups"": [""production""],
    ""labels"": {
      ""some-meaningful-config"": ""potentially interpreted by the IPAM""
    }
  }
}
```

Network security groups only allow network traffic between tasks that have at least one of their configured groups in common. This makes it easy to disallow your staging environment to interfere with production traffic.

#### EXPERIMENTAL: Service Discovery

If an application requires IP-per-task, then it can not request ports to be allocated in the slave. It is however still possible to describe the ports that the Application's tasks expose:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {
    ""discovery"": {
      ""ports"": [
        { ""number"": 80, ""name"": ""http"", ""protocol"": ""tcp"" }
      ]
    }
      // ... more settings ...
  }
}
```

Marathon will pass down this information to Mesos (inside the DiscoveryInfo message) when starting new tasks, [mesos-dns](https://github.com/mesosphere/mesos-dns) will then expose this information through IN SRV records.

In the future Marathon will also fill in the DiscoveryInfo message for applications that don't require
IP-per-task.

### Fixed issues
- #2405 - Migration of ZK State to 0.13/0.14 does not work
- #2505 - Provide memory and cpu as environment variables in docker containers
- #2509 - Leadership not abdicated on ZK connection loss
- #2558 - If driver finishes with error, Marathon does not abdicate
- #2620 - Remove dubious functionality to remove orphaned tasks from TaskTracker storage
- #2647 - Application cmd override causes application to restart repeatedly
- #2720 - Disabled button has wrong colour
- #2734 - Invalid validation for multiple ports
- #2755 - Memory leak in Marathon UI
- #2812 - Cannot change configuration of Marathon app after deployment
- #2818 - Remove `Set[MarathonTask]` from TaskTracker
- #2820 - Improve --[disable_]ha documentation
- #2865 - Multiple explicit ports are mixed up in task json
- #2870 - Marathon healthchecks on wrong address

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 47 | Matthias Veit |
| 33 | Gastón Kleiman |
| 30 | Peter Kolloch |
| 17 | Matthias Eichstedt |
| 5 | Pierluigi Cau |
| 2 | philipnrmn |
| 2 | Hannes Eichblatt |
| 2 | Imran Hayder |
| 2 | Philip Norman |
| 2 | Sunil Shah |
| 1 | Johannes 'fish' Ziemke |
| 1 | Marcus Wasner |
| 1 | Mateusz Gajewski |
| 1 | Evan Krall |
| 1 | Anton Lindström |
| 1 | Nikita Melkozerov |
| 1 | Orlando Hohmeier |
| 1 | Andy Grunwald |
| 1 | Yo Sub Kwon |
| 1 | Alexander Weber |
| 1 | Rajashree Mandaogane |
| 1 | ReadmeCritic |
| 1 | Albert van 't Hart |
| 1 | Tomasz Janiszewski |
| 1 | James Earl Douglas |
| 1 | Jordan Harband |

Generated by `git shortlog -s -n v0.13.0..v0.14.0` for the Marathon repository

### Downloads

Tarball: 
http://downloads.mesosphere.io/marathon/v0.14.0/marathon-0.14.0.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.14.0/marathon-0.14.0.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.14.0

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/2453548/assets,https://api.github.com/repos/mesosphere/marathon/releases/2453548,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.0,https://github.com/mesosphere/marathon/releases/tag/v0.14.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.0,v0.14.0,False,False
2428414,2016-01-14T15:39:08Z,2016-01-14T16:09:10Z,v0.14.0-RC4,"## Fixed Issues
- #2972 - Add more inline task information
- #2984 - Failed migration 0.11.1 -> 0.14.0-RC3

## Changelog

Changelog from Marathon 0.14.0-RC3 to 0.14.0-RC4: https://github.com/mesosphere/marathon/compare/v0.14.0-RC3...v0.14.0-RC4

_Please see the release notes of [v0.14.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC1) for a complete list of the changes in v0.14.0._
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/2428414/assets,https://api.github.com/repos/mesosphere/marathon/releases/2428414,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.0-RC4,v0.14.0-RC4,False,True
2421465,2016-01-13T15:44:24Z,2016-01-13T17:34:15Z,v0.14.0-RC3,"## Fixed Issues
- #2405 - Migration of ZK State to 0.13/0.14 does not work

## Changelog

Changelog from Marathon 0.14.0-RC2 to 0.14.0-RC3: https://github.com/mesosphere/marathon/compare/v0.14.0-RC2...v0.14.0-RC3

_Please see the release notes of [v0.14.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC1) for a complete list of the changes in v0.14.0._
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/2421465/assets,https://api.github.com/repos/mesosphere/marathon/releases/2421465,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.0-RC3,v0.14.0-RC3,False,True
2375110,2016-01-05T14:32:04Z,2016-01-05T15:25:36Z,v0.14.0-RC2,"## Fixed Issues
- #2820 - Improve --[disable_]ha documentation
- #2865 - Multiple explicit ports are mixed up in task JSON
- #2870 - Marathon health checks on wrong address
- #2872 - Update IPAddress of a running app is not possible

## Changelog

Changelog from Marathon 0.14.0-RC1 to 0.14.0-RC2: https://github.com/mesosphere/marathon/compare/v0.14.0-RC1...v0.14.0-RC2

_Please see the release notes of [v0.14.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC1) for a complete list of the changes in v0.14.0._
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/2375110/assets,https://api.github.com/repos/mesosphere/marathon/releases/2375110,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.0-RC2,v0.14.0-RC2,False,True
2311490,2015-12-18T12:48:28Z,2015-12-18T13:50:00Z,v0.14.0-RC1,"## Changes from 0.13.0 to 0.14.0

### Recommended Mesos version is 0.26.0

We tested this release against Mesos version 0.26.0. Thus, this is the recommended Mesos version for this
release.

### Overview

#### Expose additional app definition variables

The following environment variables are now available to the tasks:
- `MARATHON_APP_RESOURCE_CPUS` contains the value of the app definition `cpus` value.
- `MARATHON_APP_RESOURCE_MEM` contains the value of the app definition `mem` value, expressed in megabytes.
- `MARATHON_APP_RESOURCE_DISK`  value of the app definition `disk` value, expressed in megabytes.
- `MARATHON_APP_LABELS` contains list of labels of the corresponding app definition. For example: `label1 label2 label3`
- `MARATHON_APP_LABEL_NAME` contains value of label ""NAME"" of the corresponding app definition.

#### Health Checks: allow port instead of portIndex

Previously, the port to be used for health checks could only be specified by supplying a port index.  Now it
can also be specified directly using the new `port` field.

#### Improved search in the UI

Previously, the user could search through applications using a field which filtered all applications.
In 0.14.0 we replace the filter with a search which leads to a detailed search result view. There are
various improvements in the search interaction, including the user being returned to their former group
context after the search term has been cleared.

#### Better health status feedback

The health bars in the application list view are now provided in the application detail view. The tooltips
in the overview have been consolidated to make them easier to understand. The styles of the deployment table
have been updated inline with the applications list view. Additionally, it's possible to filter apps by their
health status in the UI.

#### IP-per-task UI

Some changes have been made in order to support IP-per-task in the API. The relevant part of the app
definition is exposed in the configuration page, and the `ipAddresses` field is integrated in the task
detail view.

#### Direct task log downloads from the UI

The `stderr` and `stdout` logs can now be downloaded directly from the task view in the UI. The contents of
each task's sandbox is displayed and files are offered for direct download.

#### EXPERIMENTAL: IP-per-task support

This can drastically simplify service discovery, since you can use
[mesos-dns](https://github.com/mesosphere/mesos-dns) to rely on DNS for service discovery. This enables your
applications to use address-only (A) DNS records in combination with known ports to connect to other
services -- as you would do it in a traditional static cluster environment.

You can request an IP-per-task with default settings like this:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {}
}
```

Marathon passes down the request for the IP to Mesos. You have to make sure that you installed & configured
the appropriate
[Network Isolation Modules](https://docs.google.com/document/d/17mXtAmdAXcNBwp_JfrxmZcQrs7EO6ancSbejrqjLQ0g) &
IP Access Manager (IPAM) modules in Mesos. The Marathon support for this feature requires Mesos v0.26.

If an application requires IP-per-task, then it can not request ports to be allocated in the slave.

Currently, this feature does not work in combination with Docker containers. We might still change some
aspects of the API and we appreciate your feedback.

#### EXPERIMENTAL: Network security groups

If your IP Access Manager (IPAM) supports it, you can refine your IP configuration using network security
groups and labels:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {
    ""groups"": [""production""],
    ""labels"": {
      ""some-meaningful-config"": ""potentially interpreted by the IPAM""
    }
  }
}
```

Network security groups only allow network traffic between tasks that have at least one of their configured
groups in common. This makes it easy to disallow your staging environment to interfere with production
traffic.

#### EXPERIMENTAL: Service Discovery

If an application requires IP-per-task, then it can not request ports to be allocated in the slave. It is
however still possible to describe the ports that the Application's tasks expose:

``` javascript
{
  ""id"": ""/i-have-my-own-ip"",
  // ... more settings ...
  ""ipAddress"": {
    ""discovery"": {
      ""ports"": [
        { ""number"": 80, ""name"": ""http"", ""protocol"": ""tcp"" }
      ]
    }
      // ... more settings ...
  }
}
```

Marathon will pass down this information to Mesos (inside the DiscoveryInfo message) when starting new tasks,
[mesos-dns](https://github.com/mesosphere/mesos-dns) will then expose this information through IN SRV records.

In the future Marathon will also fill in the DiscoveryInfo message for applications that don't require
IP-per-task.

### Fixed issues
- #2505 - Provide memory and cpu as environment variables in docker containers
- #2509 - Leadership not abdicated on ZK connection loss
- #2558 - If driver finishes with error, Marathon does not abdicate
- #2620 - Remove dubious functionality to remove orphaned tasks from TaskTracker storage
- #2647 - Application cmd override causes application to restart repeatedly
- #2720 - Disabled button has wrong colour
- #2734 - Invalid validation for multiple ports
- #2818 - Remove `Set[MarathonTask]` from TaskTracker
- #2755 - Memory leak in Marathon UI
- #2812 - Cannot change configuration of Marathon app after deployment

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 47 | Matthias Veit |
| 30 | Peter Kolloch |
| 20 | Gastón Kleiman |
| 15 | Matthias Eichstedt |
| 4 | Pierluigi Cau |
| 2 | philipnrmn |
| 2 | Hannes Eichblatt |
| 2 | Imran Hayder |
| 2 | Philip Norman |
| 2 | Sunil Shah |
| 1 | Johannes 'fish' Ziemke |
| 1 | Marcus Wasner |
| 1 | Mateusz Gajewski |
| 1 | Evan Krall |
| 1 | Anton Lindström |
| 1 | Nikita Melkozerov |
| 1 | Orlando Hohmeier |
| 1 | Andy Grunwald |
| 1 | Yo Sub Kwon |
| 1 | Alexander Weber |
| 1 | Rajashree Mandaogane |
| 1 | ReadmeCritic |
| 1 | Albert van 't Hart |
| 1 | Tomasz Janiszewski |
| 1 | James Earl Douglas |

Generated by `git shortlog -s -n v0.13.0..v0.14.0-RC1` for the Marathon repository
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/2311490/assets,https://api.github.com/repos/mesosphere/marathon/releases/2311490,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.14.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.14.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.14.0-RC1,v0.14.0-RC1,False,True
2212277,2015-12-01T10:31:12Z,2015-12-01T10:43:04Z,v0.13.0,"## Changes from 0.11.1 to 0.13.0

### Breaking Changes

#### Tasks keys and storage format in ZooKeeper

Marathon tasks are now stored in ZooKeeper using a generic implementation that has been around for
a while. In order to accomplish this, the keys under which tasks are stored had to be migrated and
do no longer contain redundant information about the app id. Additionally, the task storage format
in Zookeeper changed as well. Previous versions of Marathon will **not** be able to read the tasks'
status once these are migrated. Please backup your ZooKeeper state before migrating to this version. 

#### Zookeeper Compression

ZK nodes larger than a certain threshold will now be compressed. This allows Marathon to handle
more apps and groups, but breaks backwards compatibility, because older versions of Marathon are
not able to parse compressed nodes. You can define the threshold with `--zk_compression_threshold` 
which defaults to 64KB. 
To disable this feature, start Marathon with the `--disable_zk_compression` flag.

#### Use logback as logging backend

We moved from log4j to [Logback](http://logback.qos.ch) backend. 
If you are using custom log4j properties, you will have to migrate them to a logback configuration. 
The log4j.properties to logback.xml [Translator](http://logback.qos.ch/translator/) can help you with that.

### Overview

#### Major changes to the UI layout

This version introduces major changes to the layout. In particular, the application list has been redesigned.
- A filter sidebar is introduced with the ability to combine filters or clear them.
  - Filter by application status
  - Filter by labels
- The application list now handles groups
- Groups are shown at the top of the application list
- A group route is introduced to display the contents of a group in the application list
- Breadcrumbs show the groups structure
- Breadcrumbs will be folded to ""..."" when there isn't room to render them in full
- App names are now shown in the app page and app list instead of app IDs
- The complete app ID is available in the configuration tab
- Application labels are shown by the application name in the application list
- Endpoints are shown in the tasks detail page
- The memory column shows the total amount of memory used by an application with a human readable unit
- The application status is displayed with a colored icon
- The instances and health columns have been combined into one called ""Running Instances""
- The control buttons on the application page are shown on the left and are redesigned

#### Enable extensions to Marathon via Plugins

This version of Marathon ships with the ability to load and use external plugins.
With this functionality in place, you can extend and adapt functionality in Marathon to your specific needs.
We start this adventure with pluggable authentication and authorization hooks, but want to extend this
to various functionality inside of Marathon.

To start with this feature, please read [Plugin Documentation](https://mesosphere.github.io/marathon/docs/plugin.html) or see our [Example Plugins](https://github.com/mesosphere/marathon-example-plugins).

Please check it out and give us feedback!
We are also interested in any recommendations for upcoming plugin hooks.

#### Pluggable Authentication and Authorization hooks

The probably most wanted feature in Marathon is the ability to have Authentication and Authorization.
Since this topic has so distinct requirements for different organizations, it is a perfect match for our new plugin mechanism. This version now implements all the necessary hooks needed to secure most external interfaces to your specific needs. If you are interested in a very simple implementation, you can look into the [Example Auth Plugin](https://github.com/mesosphere/marathon-example-plugins/tree/master/auth)

#### Persistent Store Cache

All entities in the persistent store (ZK) are loaded into a cache during leader election.
Subsequent reads are delivered from that cache. Updates to entities also update the cache.
This cache should improve read access time significantly.
You can disable the cache with `--disable_store_cache`.

#### Greatly improved API Reference

With this release we integrated [RAML](http://raml.org) based API documentation.
The `/help` endpoint uses the [RAML Console](https://github.com/mulesoft/api-console) to show the API Reference.
The Github pages documentation now also uses that specification.
We had a lot of feedback for documentation improvements - so please give us your thoughts on that. 

#### Graphite and DataDog reporter

We collect a lot of metrics in Marathon.
You can collect those metrics via the `/metrics` endpoint.
With those reporters you can transfer the data into either Graphite or DataDog and see the values over time. 

#### Force action

Previous versions of the UI did not support sending the `?force=true` query parameter when the
user submitted a scale action or when changing an app's configuration. These actions would be
rejected if the app was locked by one or more deployments.
In this version, the user is presented with a modal confirmation dialog when a force action is
required to proceed.

#### Authentication errors

Authentication errors (401, 403) are now notified to the user by means of modal dialogs.

#### Improved application modal

The application create/edit modal has undergone significant architectural and UX improvements.
It is now possible to specify application labels, accepted resource roles, the user field and
health checks. Additionally, a more fine-grained input validation and error handling has been
implemented.

#### Bookmarkable search results

The text entered in the filter bar is immediately stored in the browser's URL bar, which makes
search results bookmarkable for quicker access.

#### Application detail view: configuration panel

The Configuration panel in the application's detail view sees a number of improvements and bug
fixes. The application labels and dependencies are now also shown, and the lifetime durations
are shown as ""humanized"".

#### Define the number of maximum apps

A new flag (`--max_apps`) has been introduced, which allows Marathon to limit the maximum number
of applications that may be created. This limit is disabled by default.

### Under the Hood

#### Introduce a plugin-interface module

We now publish a separate marathon-plugin-interface.jar with every Marathon release on our maven repository.
This artifact holds all the inerfaces needed to develop your own Marathon plugin.

#### Consolidate logging to use slf4j

We moved completely to slf4j as Logging API. 

#### Several performance improvements
- A separate thread pool is used for health check operations
- Group and app creation is more efficient.

#### Introduce configurable zk node compression

We introduced zk compression which improves performance significantly. Compression can be turned on/off via cmd line flags and is enabled by default.

#### Tasks are now stored via the standard EntityRepository

The storage of tasks was handled separately in previous versions of Marathon.
With this change in place we handle all entities via the same interface.
This allows for globally available extensions (e.g. the store cache).

### Fixed Issues
- #1429 - Non-integer is accepted as instance count
- #1563 - Inconsistent /help <-> rest-api.md documentation
- #1588 - Incorrect healthcheck triggers 500 Server error
- #1730 - Add uptime metric
- #1835 - No error received when a DELETE is sent to a task in deployment
- #1904 - App scaled below minimumHealthCapacity
- #1985 - Docker container settings dialog needs better error handling
- #1988 - Move from log4j to logback
- #2157 - Row is off-centre if upper row is empty in lists
- #2174 - REST api returns code 500 for invalid JSON and fails silently to proxy the error
- #2177 - Error Handling/validation required for COMMAND health check
- #2202 - App not present right after its creation
- #2216 - Do not show (x) in keyword search input until user begins typing
- #2256 - Misleading log message if offer doesn't match because of filtered roles
- #2262 - Better error handling on application configuration change/creation
- #2264 - Cannot submit job with id containing internal slashes
- #2266 - Link ""Mesos details"" is broken
- #2270 - Overlapping text in Deployment view
- #2280 - Scaling check ignores task versions
- #2294 - Make boolean command line flags use Scallop's 'toggle'
- #2299 - Writes to EntityRepositories should be visible in following reads
- #2307 - Investigate MarathonSchedulerServiceTest failure
- #2338 - Parameters in the Docker container settings are not taken into account
- #2353 - Never recover from race condition when scaling up
- #2360 - PUT /v2/groups triggers restart while PUT /v2/apps does not
- #2369 - Large file URIs cause ""Failed to fetch all URIs for container"" error when pulling from HDFS
- #2381 - Marathon stops apps instead of restart
- #2398 - Blank docker image is created in app modal
- #2402 - Runtime privilege checkbox does not work
- #2405 - Migration of ZK State to 0.13 does not work
- #2421 - Invalid calling object (Win 8 IE10, Win 7 IE11)
- #2422 - Handle apps error response attribute on HTTP 422
- #2441 - AppRestart deployments don't wait for old tasks to be killed
- #2494 - Remove mentions of Marathon gem from docs 
- #2459 - Framework Id not visible in the UI 
- #2477 - Marathon forgets all tasks on restart
- #2719 - Show correct button label when creating inside group
- #2684 - Running instances are confusing
- #2681 - Circumvent cache if not yet preloaded
- #2699 - App list health bar update/render issue
- #2634 - UI does not update/show the status correctly
- #1780 - When app is locked by deployment, deleting tasks via the UI does nothing
- #2626 - Status icons are rendered blotted
- #2627 - Tasks health column shows different health status
- #2615 - Keep input focus position when updating the Filter bar
- #2599 Cache for EventSubscribers not populated on startup
- #2603 ActorLogging warning does not expand Throwable 
- #2593 Very long labels expand horizontal scrollbar in app list
- #2314 - Do not remove health checks that are still needed
- #2322 - count tasks without explicit state as staging
- #2565 - Change app icon title from ""Basic"" to ""Application""
- #2568 - UI: App state incorrectly shown
- #2574 - Label Filter: Filter Label Box is not cleared
- #2585 - Sorting by CPU causes row column to expand
- #2586 - Sorting by Status shifts heading text

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 74 | Matthias Veit |
| 57 | Gastón Kleiman |
| 25 | Peter Kolloch |
| 17 | sascala |
| 13 | Matthias Eichstedt |
| 5 | Marcus Wasner |
| 5 | Connor Doyle |
| 4 | Philip Norman |
| 3 | Tamar Ben-Shachar |
| 3 | Gastón Kleiman |
| 2 | Tomasz Janiszewski |
| 2 | Felix Gertz |
| 2 | mattpennathe3rd |
| 2 | Sebastien Le Digabel |
| 1 | alon-argus |
| 1 | pbnsilva |
| 1 | Lukas Lösche |
| 1 | Harpreet Singh Gulati |
| 1 | José Moreira |
| 1 | Matthias Lüneberg |
| 1 | Felix Bechstein |
| 1 | Pierluigi Cau |
| 1 | R.B. Boyer |

Generated by `git shortlog -s -n v0.11.1..v0.13.0-RC1` for the marathon repository

### Downloads

Tarball: 
http://downloads.mesosphere.io/marathon/v0.13.0/marathon-0.13.0.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.13.0/marathon-0.13.0.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.13.0

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2212277/assets,https://api.github.com/repos/mesosphere/marathon/releases/2212277,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0,https://github.com/mesosphere/marathon/releases/tag/v0.13.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0,v0.13.0,False,False
2185479,2015-11-25T15:30:29Z,2015-11-25T16:39:41Z,v0.13.0-RC6,"## Fixed Issues
- #2719 - Show correct button label when creating inside group
- #2684 - Running instances are confusing

## Changelog

Changelog from Marathon 0.13.0-RC5 to 0.13.0-RC6: https://github.com/mesosphere/marathon/compare/v0.13.0-RC5...v0.13.0-RC6

_Please see the release notes of [v0.13.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1) for a complete list of the changes in v0.13.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2185479/assets,https://api.github.com/repos/mesosphere/marathon/releases/2185479,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC6,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC6,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC6,v0.13.0-RC6,False,True
2177470,2015-11-24T13:01:17Z,2015-11-24T13:31:29Z,v0.13.0-RC5,"## Fixed Issues
- #2681 - Circumvent cache if not yet preloaded
- #2699 - App list health bar update/render issue

## Changelog

Changelog from Marathon 0.13.0-RC4 to 0.13.0-RC5: https://github.com/mesosphere/marathon/compare/v0.13.0-RC4...v0.13.0-RC5

_Please see the release notes of [v0.13.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1) for a complete list of the changes in v0.13.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2177470/assets,https://api.github.com/repos/mesosphere/marathon/releases/2177470,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC5,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC5,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC5,v0.13.0-RC5,False,True
2145519,2015-11-18T11:36:32Z,2015-11-18T12:08:23Z,v0.13.0-RC4,"## Fixed Issues
- #2634 - UI does not update/show the status correctly
- #1780 - When app is locked by deployment, deleting tasks via the UI does nothing
- #2626 - Status icons are rendered blotted
- #2627 - Tasks health column shows different health status
- #2615 - Keep input focus position when updating the Filter bar

## Changelog

Changelog from Marathon 0.13.0-RC3 to 0.13.0-RC4: https://github.com/mesosphere/marathon/compare/v0.13.0-RC3...v0.13.0-RC4

_Please see the release notes of [v0.13.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1) for a complete list of the changes in v0.13.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2145519/assets,https://api.github.com/repos/mesosphere/marathon/releases/2145519,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC4,v0.13.0-RC4,False,True
2102188,2015-11-10T14:32:56Z,2015-11-10T15:07:41Z,v0.13.0-RC3,"## Fixed Issues
- #2599 Cache for EventSubscribers not populated on startup
- #2603 ActorLogging warning does not expand Throwable 
- #2593 Very long labels expand horizontal scrollbar in app list

## Changelog

Changelog from Marathon 0.13.0-RC2 to 0.13.0-RC3: https://github.com/mesosphere/marathon/compare/v0.13.0-RC2...v0.13.0-RC3

_Please see the release notes of [v0.13.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1) for a complete list of the changes in v0.13.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2102188/assets,https://api.github.com/repos/mesosphere/marathon/releases/2102188,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC3,v0.13.0-RC3,False,True
2096620,2015-11-09T17:22:14Z,2015-11-09T18:19:41Z,v0.13.0-RC2,"## Fixed Issues
- Fixes #2314 - Do not remove health checks that are still needed
- Fixes #2322 - count tasks without explicit state as staging
- Fixes #2565 - Change app icon title from ""Basic"" to ""Application""
- Fixes #2568 - UI: App state incorrectly shown
- Fixes #2574 - Label Filter: Filter Label Box is not cleared
- Fixes #2585 - Sorting by CPU causes row column to expand
- Fixes #2586 - Sorting by Status shifts heading text

## Changelog

Changelog from Marathon 0.13.0-RC1 to 0.13.0-RC2: https://github.com/mesosphere/marathon/compare/v0.13.0-RC1...v0.13.0-RC2

_Please see the release notes of [v0.13.0-RC1](https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1) for a complete list of the changes in v0.13.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2096620/assets,https://api.github.com/repos/mesosphere/marathon/releases/2096620,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC2,v0.13.0-RC2,False,True
2075758,2015-11-04T16:02:29Z,2015-11-05T09:23:06Z,v0.13.0-RC1,"## Changes from 0.11.1 to 0.13.0

### Breaking Changes

#### Tasks keys and storage format in ZooKeeper

Marathon tasks are now stored in ZooKeeper using a generic implementation that has been around for
a while. In order to accomplish this, the keys under which tasks are stored had to be migrated and
do no longer contain redundant information about the app id. Additionally, the task storage format
in Zookeeper changed as well. Previous versions of Marathon will **not** be able to read the tasks'
status once these are migrated. Please backup your ZooKeeper state before migrating to this version. 

#### Zookeeper Compression

ZK nodes larger than a certain threshold will now be compressed. This allows Marathon to handle
more apps and groups, but breaks backwards compatibility, because older versions of Marathon are
not able to parse compressed nodes. You can define the threshold with `--zk_compression_threshold` 
which defaults to 64KB. 
To disable this feature, start Marathon with the `--disable-zk-compression` flag.

#### Use logback as logging backend

We moved from log4j to [Logback](http://logback.qos.ch) backend. 
If you are using custom log4j properties, you will have to migrate them to a logback configuration. 
The log4j.properties to logback.xml [Translator](http://logback.qos.ch/translator/) can help you with that.

### Overview

#### Major changes to the UI layout

This version introduces major changes to the layout. In particular, the application list has been redesigned.
- A filter sidebar is introduced with the ability to combine filters or clear them.
  - Filter by application status
  - Filter by labels
- The application list now handles groups
- Groups are shown at the top of the application list
- A group route is introduced to display the contents of a group in the application list
- Breadcrumbs show the groups structure
- Breadcrumbs will be folded to ""..."" when there isn't room to render them in full
- App names are now shown in the app page and app list instead of app IDs
- The complete app ID is available in the configuration tab
- Application labels are shown by the application name in the application list
- Endpoints are shown in the tasks detail page
- The memory column shows the total amount of memory used by an application with a human readable unit
- The application status is displayed with a colored icon
- The instances and health columns have been combined into one called ""Running Instances""
- The control buttons on the application page are shown on the left and are redesigned

#### Enable extensions to Marathon via Plugins

This version of Marathon ships with the ability to load and use external plugins.
With this functionality in place, you can extend and adapt functionality in Marathon to your specific needs.
We start this adventure with pluggable authentication and authorization hooks, but want to extend this
to various functionality inside of Marathon.

To start with this feature, please read [Plugin Documentation](https://mesosphere.github.io/marathon/docs/plugin.html) or see our [Example Plugins](https://github.com/mesosphere/marathon-example-plugins).

Please check it out and give us feedback!
We are also interested in any recommendations for upcoming plugin hooks.

#### Pluggable Authentication and Authorization hooks

The probably most wanted feature in Marathon is the ability to have Authentication and Authorization.
Since this topic has so distinct requirements for different organizations, it is a perfect match for our new plugin mechanism. This version now implements all the necessary hooks needed to secure most external interfaces to your specific needs. If you are interested in a very simple implementation, you can look into the [Example Auth Plugin](https://github.com/mesosphere/marathon-example-plugins/tree/master/auth)

#### Persistent Store Cache

All entities in the persistent store (ZK) are loaded into a cache during leader election.
Subsequent reads are delivered from that cache. Updates to entities also update the cache.
This cache should improve read access time significantly.
You can disable the cache with `--disable_store_cache`.

#### Greatly improved API Reference

With this release we integrated [RAML](http://raml.org) based API documentation.
The `/help` endpoint uses the [RAML Console](https://github.com/mulesoft/api-console) to show the API Reference.
The Github pages documentation now also uses that specification.
We had a lot of feedback for documentation improvements - so please give us your thoughts on that. 

#### Graphite and DataDog reporter

We collect a lot of metrics in Marathon.
You can collect those metrics via the `/metrics` endpoint.
With those reporters you can transfer the data into either Graphite or DataDog and see the values over time. 

#### Force action

Previous versions of the UI did not support sending the `?force=true` query parameter when the
user submitted a scale action or when changing an app's configuration. These actions would be
rejected if the app was locked by one or more deployments.
In this version, the user is presented with a modal confirmation dialog when a force action is
required to proceed.

#### Authentication errors

Authentication errors (401, 403) are now notified to the user by means of modal dialogs.

#### Improved application modal

The application create/edit modal has undergone significant architectural and UX improvements.
It is now possible to specify application labels, accepted resource roles, the user field and
health checks. Additionally, a more fine-grained input validation and error handling has been
implemented.

#### Bookmarkable search results

The text entered in the filter bar is immediately stored in the browser's URL bar, which makes
search results bookmarkable for quicker access.

#### Application detail view: configuration panel

The Configuration panel in the application's detail view sees a number of improvements and bug
fixes. The application labels and dependencies are now also shown, and the lifetime durations
are shown as ""humanized"".

#### Define the number of maximum apps

A new flag (`--max_apps`) has been introduced, which allows Marathon to limit the maximum number
of applications that may be created. This limit is disabled by default.

### Under the Hood

#### Introduce a plugin-interface module

We now publish a separate marathon-plugin-interface.jar with every Marathon release on our maven repository.
This artifact holds all the inerfaces needed to develop your own Marathon plugin.

#### Consolidate logging to use slf4j

We moved completely to slf4j as Logging API. 

#### Several performance improvements
- A separate thread pool is used for health check operations
- Group and app creation is more efficient.

#### Introduce configurable zk node compression

We introduced zk compression which improves performance significantly. Compression can be turned on/off via cmd line flags and is enabled by default.

#### Tasks are now stored via the standard EntityRepository

The storage of tasks was handled separately in previous versions of Marathon.
With this change in place we handle all entities via the same interface.
This allows for globally available extensions (e.g. the store cache).

### Fixed Issues
- #1429 - Non-integer is accepted as instance count
- #1563 - Inconsistent /help <-> rest-api.md documentation
- #1588 - Incorrect healthcheck triggers 500 Server error
- #1730 - Add uptime metric
- #1835 - No error received when a DELETE is sent to a task in deployment
- #1904 - App scaled below minimumHealthCapacity
- #1985 - Docker container settings dialog needs better error handling
- #1988 - Move from log4j to logback
- #2157 - Row is off-centre if upper row is empty in lists
- #2174 - REST api returns code 500 for invalid JSON and fails silently to proxy the error
- #2177 - Error Handling/validation required for COMMAND health check
- #2202 - App not present right after its creation
- #2216 - Do not show (x) in keyword search input until user begins typing
- #2256 - Misleading log message if offer doesn't match because of filtered roles
- #2262 - Better error handling on application configuration change/creation
- #2264 - Cannot submit job with id containing internal slashes
- #2266 - Link ""Mesos details"" is broken
- #2270 - Overlapping text in Deployment view
- #2280 - Scaling check ignores task versions
- #2294 - Make boolean command line flags use Scallop's 'toggle'
- #2299 - Writes to EntityRepositories should be visible in following reads
- #2307 - Investigate MarathonSchedulerServiceTest failure
- #2338 - Parameters in the Docker container settings are not taken into account
- #2353 - Never recover from race condition when scaling up
- #2360 - PUT /v2/groups triggers restart while PUT /v2/apps does not
- #2369 - Large file URIs cause ""Failed to fetch all URIs for container"" error when pulling from HDFS
- #2381 - Marathon stops apps instead of restart
- #2398 - Blank docker image is created in app modal
- #2402 - Runtime privilege checkbox does not work
- #2405 - Migration of ZK State to 0.13 does not work
- #2421 - Invalid calling object (Win 8 IE10, Win 7 IE11)
- #2422 - Handle apps error response attribute on HTTP 422
- #2441 - AppRestart deployments don't wait for old tasks to be killed
- #2494 - Remove mentions of Marathon gem from docs 
- #2459 - Framework Id not visible in the UI 
- #2477 - Marathon forgets all tasks on restart

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 74 | Matthias Veit |
| 57 | Gastón Kleiman |
| 25 | Peter Kolloch |
| 17 | sascala |
| 13 | Matthias Eichstedt |
| 5 | Marcus Wasner |
| 5 | Connor Doyle |
| 4 | Philip Norman |
| 3 | Tamar Ben-Shachar |
| 3 | Gastón Kleiman |
| 2 | Tomasz Janiszewski |
| 2 | Felix Gertz |
| 2 | mattpennathe3rd |
| 2 | Sebastien Le Digabel |
| 1 | alon-argus |
| 1 | pbnsilva |
| 1 | Lukas Lösche |
| 1 | Harpreet Singh Gulati |
| 1 | José Moreira |
| 1 | Matthias Lüneberg |
| 1 | Felix Bechstein |
| 1 | Pierluigi Cau |
| 1 | R.B. Boyer |

Generated by `git shortlog -s -n v0.11.1..v0.13.0-RC1` for the marathon repository
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/2075758/assets,https://api.github.com/repos/mesosphere/marathon/releases/2075758,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.13.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.13.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.13.0-RC1,v0.13.0-RC1,False,True
1966578,2015-10-15T15:23:00Z,2015-10-15T15:44:34Z,v0.11.1,"## Changes from 0.11.0 to 0.11.1

### Overview

This release includes fixes for critical bugs introduced in v0.11.0 and several performance
improvements that allow Marathon to handle a larger number of groups and applications.

#### Performance Improvements

This release introduces the following improvements which allow Marathon to handle a larger number of
applications. Because this is a bugfix release and they are not backwards compatible, they are are
available, but disabled by default:
- ZK nodes larger than a certain threshold can now be compressed. This allows Marathon to handle
  more apps and groups, but breaks backwards compatibility, because older versions of Marathon are
  not able to parse compressed nodes.
  
  To enable this feature, start Marathon with the `--zk_compression` flag.
- A new flag (`--max_apps`) has been introduced, which allows Marathon to limit the maximum number
  of applications that may be created. This limit is disabled by default, but we performed scale
  tests on this release and recommend setting the limit to 500.

#### Fixed issues
- #2353 - Never recover from race condition when scaling up
- #2369 - Large file URIs cause ""Failed to fetch all URIs for container"" error when pulling from HDFS
- #2360 - PUT /v2/groups triggers restart while PUT /v2/apps does not
- #2381 - Marathon stops apps instead of restart

### Downloads

Tarball: 
http://downloads.mesosphere.io/marathon/v0.11.1/marathon-0.11.1.tgz

SHA: 
http://downloads.mesosphere.io/marathon/v0.11.1/marathon-0.11.1.tgz.sha256

Docker:
https://registry.hub.docker.com/u/mesosphere/marathon with tag v0.11.1

Packages are also available via the Mesosphere repositories. 
See: https://mesosphere.com/blog/2014/07/17/mesosphere-package-repositories/
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1966578/assets,https://api.github.com/repos/mesosphere/marathon/releases/1966578,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.11.1,https://github.com/mesosphere/marathon/releases/tag/v0.11.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.11.1,v0.11.1,False,False
1912922,2015-10-05T15:56:39Z,2015-10-05T16:49:10Z,v0.12.0-RC1,"## Changes from 0.11.0 to 0.12.0

### Recommended Mesos version is 0.24.0

We tested this release against Mesos version 0.24.0. Thus, this is the recommended Mesos version for this release.

### Overview

#### Enable extensions to Marathon via Plugins

This version of Marathon ships with the ability to load and use external plugins. With this functionality in place, you can extend and adapt functionality in Marathon to your specific needs. We start this adventure with pluggable authentication and authorization hooks, but want extend this to various functionality inside of Marathon. 

To start with this feature, please read [Plugin Documentation](https://mesosphere.github.io/marathon/docs/plugin.html) or see our [Example Plugins](https://github.com/mesosphere/marathon-example-plugins).

Please check it out and give us feedback! We are also interested in any recommendations for upcoming plugin hooks. 

#### Pluggable Authentication and Authorization hooks

The probably most wanted feature in Marathon is the ability to have Authentication and Authorization. Since this topic has so distinct requirements for different organizations, it is a perfect match for our new plugin mechanism.
This version now implements all the necessary hooks needed to secure most external interfaces to your specific needs. If you are interested in a very simple implementation, you can look into the [Example Auth Plugin](https://github.com/mesosphere/marathon-example-plugins/tree/master/auth)

#### Force action

Previous versions of the UI did not support sending the `?force=true` query parameter when the
user submitted a scale action or when changing an app's configuration. These actions would be
rejected if the app was locked by one or more deployments.
In this version, the user is presented with a modal confirmation dialog when a force action is
required to proceed.

#### Authentication errors

Authentication errors (401, 403) are now notified to the user by means of modal dialogs.

#### Improved application modal

The application create/edit modal has undergone significant architectural and UX improvements.
It is now possible to specify application labels, accepted resource roles, the user field and
health checks. Additionally, a more fine-grained input validation and error handling has been
implemented.

#### Bookmarkable search results

The text entered in the filter bar is immediately stored in the browser's URL bar, which makes
search results bookmarkable for quicker access.

#### Application detail view: configuration panel

The Configuration panel in the application's detail view sees a number of improvements and bug
fixes. The application labels and dependencies are now also shown, and the lifetime durations
are shown as ""humanized"".

### Under the Hood

#### Introduce a plugin-interface module

We now publish a separate marathon-plugin-interface.jar with every Marathon release on our maven repository. This artifact holds all the inerfaces needed to develop your own Marathon plugin.

#### Consolidate logging to use slf4j

We moved completely to slf4j as Logging API. The logging backend still uses log4j.

### Fixed Issues
- #2294 - Make boolean command line flags use Scallop's 'toggle'
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1912922/assets,https://api.github.com/repos/mesosphere/marathon/releases/1912922,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.12.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.12.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.12.0-RC1,v0.12.0-RC1,False,True
1896567,2015-10-01T13:09:11Z,2015-10-01T13:50:12Z,v0.11.0,"## Changes from 0.10.0 to 0.11.0

Attention! There have been some severe issues reported for 0.11. We will release fixes for them in [0.11.1](https://github.com/mesosphere/marathon/milestones/0.11.1).

### Breaking Changes
- Java 8 or higher is needed to run Marathon, since Java 6 and 7 support has reached end of life.
- `--revive_offers_for_new_apps` is now the default. If you want to avoid resetting filters if new tasks need to be started, you can disable this by `--disable_revive_offers_for_new_apps`.
- Dynamic ports are no longer pseudo-deterministically assigned.

### Overview

We tested this release against **Mesos version 0.23**. Thus, this is the recommended Mesos version for this release.

#### Marathon uses Java 8

Java 8 has been out for more than a year now. The support for older versions of Java has reached end of life. We switched completely to the latest stable JVM release. We compile, test and run Marathon against Java 8.

Note for the Marathon Docker image: the base image of Marathon is now the standard java:8-jdk docker image.

#### Faster reconciliation and links to task Mesos sandboxes

Marathon now saves the slaveID of newly launched tasks. That leads to faster reconciliation for lost tasks and allows the UI to link to the mesos UI.

If the auto-discovered mesos UI is not reachable from wherever you access the Marathon UI from, you can use the `--mesos_leader_ui_url` configuration to change the base URL of these links.

#### New versioning information in API and UI

We now have `versionInfo` with `lastConfigChangeAt` and `lastScalingAt` in the apps JSON of our API. `lastConfigChangeAt` is the timestamp of the last change to the application that was not just a restart or a scaling operation. `lastScalingAt` is the time stamp of the last scaling or restart operation.

##### Additional task statistics in the `/v2/apps` and `/v2/apps/{app id}` endpoints (Optional)

If you pass `embed=apps.taskStats`/`embed=app.taskStats` as a query parameter, you get additional taskStats embedded in you app JSON.

Task statistics are provided for the following groups of tasks. If no tasks for the group exist, no statistics are offered:
- `withLatestConfig` contains statistics about all tasks that run with the same config as the latest app version.
- `startedAfterLastScaling` contains statistics about all tasks that were started after the last scaling or restart operation.
- `withOutdatedConfig` contains statistics about all tasks that were started before the last config change which was not simply a restart or scaling operation.
- `totalSummary` contains statistics about all tasks.

Example JSON:

``` javascript
{
  // ...
  ""taskStats"": {
    {
      ""startedAfterLastScaling"" : {
        ""stats"" : {
          ""counts"" : { // equivalent to tasksStaged, tasksRunning, tasksHealthy, tasksUnhealthy
            ""staged"" : 1,
            ""running"" : 100,
            ""healthy"" : 90,
            ""unhealthy"" : 4
          },
          // ""lifeTime"" is only included if there are running tasks.
          ""lifeTime"" : {
            // Measured from `""startedAt""` (timestamp of the Mesos TASK_RUNNING status update) of each running task
            // until now.
            ""averageSeconds"" : 20.0,
            ""medianSeconds"" : 10.0
          }
        }
      },
      ""withLatestConfig"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      },
      ""withOutdatedConfig"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      },
      ""totalSummary"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      }
    }
  }
  // ...
}
```

The calculation of these statistics is currently performed for every request and expensive if you have very many tasks.

#### Specific ""embed"" parameters for app related information

In this release, we introduce ""embed"" parameters for all GET requests in the app end-point that specify which information to embed. Right now, we deliver all information by default that we delivered before but we encourage you to specify embed parameters for the information that you need.

In the future, we will only deliver information you explicitly requested by default, even though we will allow some compatibility configuration option. This improves performance by not returning information that you might not need.

#### Smarter resource offer handling

When Marathon needed to launch tasks for multiple apps, it would first launch all needed tasks for the first one and then proceed to the next app. One big deployment could block all others. In this new version, Marathon will spread the offers among all apps that currently need to launch tasks.

When Marathon detects new tasks that it has to launch, it will now explicitly request new offers with the `reviveOffers` Mesos scheduler API call. This should result in more speedy task launches. If for any reason you dislike this behavior, you can disable it with `--disable_revive_offers_for_new_apps` (not recommended).

The order in which mesos receives `reviveOffers` and `declineOffer` calls is not guaranteed. Therefore, as long as we still need offers to launch tasks, we repeat the `reviveOffers` call for `--revive_offers_repetitions` times so that our last `reviveOffers` will be received after all relevant `declineOffer` calls with high probability.
- `--revive_offers_repetitions` (Optional. Default: 3): Repeat every reviveOffer request this many times, delayed by the `--min_revive_offers_interval`.

When Marathon has no current use for an offer, it will decline the offer for a configurable period. A short duration might lead to resource starvation for other frameworks if you run many frameworks in your cluster. You should only need to reduce it if you use `--disable_revive_offers_for_new_apps`.
- `--decline_offer_duration` (Default: 120 seconds) The duration (milliseconds) for which to decline offers by default

#### New task launching tuning parameters

To prevent overloading Mesos itself, you can now restrict how many tasks Marathon launches per time interval. By default, we allow 1000 unconfirmed task launches every 30 seconds. In addition, Marathon considers `TASK_RUNNING` status updates from Mesos as launch confirmations and allows launching one more task for every confirmed launch.
- `--launch_token_refresh_interval` (Optional. Default: 30000): The interval (ms) in which to refresh the launch tokens to `--launch_token_count`.
- `--launch_tokens` (Optional. Default: 1000): Launch tokens per interval.

As a result of this, the `--max_tasks_per_offer_cycle` options is deprecated and has no effect anymore.

To prevent overloading Marathon and maintain speedy offer processing, there is also a timeout for matching each incoming resource offer, i.e. finding suitable tasks to launch for incoming offers.
- `--offer_matching_timeout` (Optional. Default: 1000): Offer matching timeout (ms). Stop trying to match additional tasks for this offer after this time. All already matched tasks are launched.

All launched tasks are stored before launching them. There is also a new timeout for this:
- `--save_tasks_to_launch_timeout` (Optional. Default: 3000): Timeout (ms) after matching an offer for saving all matched tasks that we are about to launch.  When reaching the timeout, only the tasks that we could save within the timeout are also launched.  All other task launches are temporarily rejected and retried later.

If the mesos master fails over or in other unusual circumstances, a launch task request might get lost. You can configure how long Marathon waits for the first `TASK_STAGING` update.
- `--task_launch_confirm_timeout` (Optional. Default: 10000): Time, in milliseconds, to wait for a task to enter the `TASK_STAGING` state before killing it.

#### No pseudo-deterministic assignment of host ports anymore

If you specify non-zero `""ports""` in your app JSON, they are used as service ports. The old code contained logic that would assign these ports as host ports if available in the processed offer. That misled people into thinking that these ports corresponded to host ports. The new code always randomizes host ports assignment without `""requirePorts""` or explicit `""hostPort""` configuration.

#### Last task failures are persisted

Marathon has exposed the `""lastTaskFailure""` via the API for a while but this information was not persisted across restarts or on fail over. Now it is.

#### Logging command line parameters on startup

Marathon will now log all command line parameters on startup. Example:

```
2015-08-02 11:48:08,047] INFO Starting Marathon 0.11.0-SNAPSHOT with --zk zk://master.mesos:2181/marathon --master master.mesos:5050
```

#### Improved logging of deployment plans

Example:

```
DeploymentPlan 2015-09-02T07:56:12.105Z
step 1:
  * Start(App(app1, cmd=""cmd"")), instances=0)
step 2:
  * Scale(App(app1, cmd=""cmd"")), instances=2)
```

#### Improved logging of offer rejections

Example for missing port:

```
[2015-08-04 20:11:20,510] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Cannot find range with host port 8080 for app [/product/frontend]
[2015-08-04 20:11:29,422] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Insufficient resources for [/product/frontend] (need cpus=1.0, mem=64.0, disk=1.0, ports=([8080] required + 1 dynamic), available in offer:
...
```

Example for missing basic resources:

```
[2015-08-04 20:17:27,986] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Not all basic resources satisfied: cpu NOT SATISFIED (30.0 > 8.0), disk SATISFIED (0.0 <= 0.0), mem SATISFIED (16.0 <= 15360.0)
[2015-08-04 20:17:27,989] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Insufficient for [/test] (need cpus=30.0, mem=16.0, disk=0.0, ports=(1 dynamic), available in offer:
...
```

#### Immediately store changed apps

In the past, Marathon would update the data for the group endpoint when it accepted a new deployment request like a change an app configuration. Marathon would only update the data in the app endpoint when it started the related deployment step. This could cause confusion for our users and thus we will now update both immediately when accepting the deployment.

#### No automatic reset of the app backoff when detecting a running task

When encountering task failures, Marathon uses the backoff duration to throttle launching tasks. See `""backoffSeconds""`, `""backoffFactor""` and `""maxLaunchDelaySeconds""` in the REST API documentation for further information.

There was an undocumented feature that reset the backoff completely whenever Marathon received a TASK_RUNNING notification from Mesos. This led to problems when an application crashed fast after startup.

In the new Marathon version, the backoff delay is never reset automatically. You can reset it manually, though.

#### New `MARATHON_APP_DOCKER_IMAGE` environment variable

Any task of an app definition with a docker image attribute (`container.docker.image`) will now be started with an environment variable `MARATHON_APP_DOCKER_IMAGE` containing its value.

### Important bug fixes
- #1553 - Marathon will now correctly reload task state information after a fail over
- #1924 - Marathon will accept offers without disk resources if no disk resources are required
- #1671 - Mesos will now use the hostname given by the `--hostname` parameter to communicate with Marathon
- #1926 - Our leader proxy code used buffered IO without intermediate flushing which did not play well with streaming events from our `/v2/events` endpoint
- #1877 - Marathon will now exit on startup failures instead of keeping running without being able to answer to requests. For example: Marathon will now exit if the specified http port is already used for something else.

### Known issues

Applications might not be returned for a little while even after `POST /v2/apps` returned 201. This is side-effect of storing the tasks information in ZooKeeper and we plan to fix it in the next releases.

### Under the Hood

#### Jetty 9 as Servlet Engine

The latest Jetty servlet engine is used in this version of Marathon. Jetty 9 has a completely overhauled I/O layer, Servlet API 3.0, SPDY/3 and WebSocket support.

#### Improved SSE handling

As part of the Jetty 9 update, the SSE support for `/v2/events` has been improved. The event name `event: event-name` is added to every `data: json` entry for easier filtering and handling.

#### Play JSON everywhere

We finished our transition from Jackson JSON serialization to Play JSON. Play JSON provides a type safe interface which make it easier to write correct code.

### Details for Marathon UI

#### New application modal, including Docker-specific fields

The application modal has undergone significant changes, simplifying the app creation process and giving the user access to more advanced features. In particular, a section of the form is dedicated to Docker specific fields, allowing the user to create Dockerized applications directly from the UI.

#### Edit application configurations

Previous versions of Marathon did not allow users to make modifications to application configurations after the application had been created. It's now possible to edit an application using the same improved modal that is used to create applications.

#### Usability improvements to the applications view

The applications view is the 'dashboard' for Marathon UI. This version brings significant improvements to its utility, especially by revealing more about application health.

##### Search bar

Applications can be filtered by name using the search bar in the top left-hand corner of the applications view.

##### Show total resource usage

Previously, only the configured resource usage was shown in the applications view, so an application with 100 running tasks would show the same resource usage as an identical application with only 1 running task. Now, the combined resource usage is shown, allowing users to sort applications by their total assigned resources.

##### Sort applications by health

Unhealthy apps can be found quickly by sorting the application table by health status.

##### Better progress information feedback

A tooltip is displayed when the user hovers the application progress bar, showing individual health statuses.

#### More information on applications and deployments

In previous versions of Marathon, only an application's configuration and healthcheck status were available from the UI. Marathon 0.11 brings the following features:

##### Debug app tab

A new tab is available in the application detail view. It displays the most recent changes to the application configuration, the most recent task failure, and the relevant statistics.

##### Health checks in configuration tab.

Application health checks are now shown in the application configuration tab.

##### Direct Mesos sandbox access

Where available, the new 'Mesos details' link in the task detail view shows a link to the relevant sandbox in the Mesos UI.

#### Other features

##### User- and debug-friendly version strings

The Marathon version string is now shown in the user's local time. In addition, The UI version string is available when the user hovers the version string, and in a separate alert when the user hits the 'g v' shortcut.

##### Custom alerts

Where browser-native dialogs were previously used, Marathon now uses custom dialogs which are consistent with the UI style and which do not interrupt the UI when in the foreground.

##### Not Found page

When the user follows a bad link, they encounter a Not Found page rather than being redirected to the applications view.

#### UI build uses a webjar

Instead of relying on git submodules, the UI is now released as a webjar which Marathon pulls in during its own build. This allows developers to use the latest stable UI assets and simplifies the build process. This has had the side-effect that the ui is now served from the /ui/ endpoint instead of the root.

#### Fixed issues
- #548 - UI showing empty list after scaling when on page > 1
  - The task list shows the last available page if tasks count decreases after scaling.
- #1872 - Kill & Scale should be available for more than one task
- #1960 - Task detail error message doesn't show up on non existent task
- #1989 - HealthBar isn't working correctly on non existing health data
- #2014 - Avoid concurrent http requests on same endpoint
- #1996 - Duplicable fields in app creation modal can send null values
- #2030 - Shortcut for app creation no longer works
- #2062 - Resetting app delay can block all network requests in Firefox
- #2123 - Health check information isn't shown on task in task list and task detail
- #2267 - Redirect to /ui/ doesn't work if Marathon is proxied
- #2254 - Exception after reregistration ""A metric named ... already exists""
- #2252 - Wrong task number in Debug Tab
- #2317 - Redirect of / should be relative (ui/ not /ui/)

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 58 | Peter Kolloch |
| 30 | Matthias Veit |
| 12 | Gastón Kleiman |
| 8 | Lukas Loesche |
| 6 | Florian Sellmayr |
| 5 | Matthias Eichstedt |
| 4 | Cody Maloney |
| 4 | Tomasz Janiszewski |
| 3 | Felix Bechstein |
| 3 | Sunil Shah |
| 2 | Pierluigi Cau |
| 2 | John Garcia |
| 2 | Wojciech Sielski |
| 2 | Sebastien Le Digabel |
| 2 | philipnrmn |
| 2 | Marc Melvin |
| 2 | Felix Gertz |
| 1 | Vivek Juneja |
| 1 | mattpennathe3rd |
| 1 | rncry |
| 1 | Anshul Verma |
| 1 | yayu |
| 1 | Bryant Rockoff |
| 1 | Cameron Pickham |
| 1 | Connor Doyle |
| 1 | Denis Parchenko |
| 1 | Drew Robb |
| 1 | Ian Babrou |
| 1 | Ian Saunders |
| 1 | Ivan Babrou |
| 1 | Joerg Schad |
| 1 | LeePorte |
| 1 | Manoj |
| 1 | Marvin Frick |
| 1 | Matt Penna |
| 1 | Mike |
| 1 | Ryuichi Okumura |
| 1 | Tobias Haag |

Generated by `git shortlog -s -n --no-merges v0.10.0..v0.11.0` for the marathon repository

| Commits | Contributor |
| --- | --- |
| 169 | Felix Gertz |
| 70 | Philip Norman |
| 50 | Pierluigi Cau |
| 5 | Sp3c1 |
| 4 | Kamil Warguła |
| 4 | Daniel Fuentes |

Generated by `git shortlog -s -n --no-merges v0.10.0..v0.11.0` for the marathon-ui repository
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1896567/assets,https://api.github.com/repos/mesosphere/marathon/releases/1896567,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.11.0,https://github.com/mesosphere/marathon/releases/tag/v0.11.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.11.0,v0.11.0,False,False
1878070,2015-09-28T15:35:11Z,2015-09-28T16:18:20Z,v0.11.0-RC5,"## Fixed Issues
- #2252 - Wrong task number in Debug Tab
- #2317 - Redirect of / should be relative (ui/ not /ui/)  
- Respect JAVA_HOME usage within marathon framework

## Changelog

Changelog from Marathon 0.11.0-RC4 to 0.11.0-RC5: https://github.com/mesosphere/marathon/compare/v0.11.0-RC4...v0.11.0-RC5

_Please see the release notes of [v0.11.0-RC3](https://github.com/mesosphere/marathon/releases/tag/v0.11.0-RC3) for a complete list of the changes in v0.11.0._
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1878070/assets,https://api.github.com/repos/mesosphere/marathon/releases/1878070,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.11.0-RC5,https://github.com/mesosphere/marathon/releases/tag/v0.11.0-RC5,https://api.github.com/repos/mesosphere/marathon/zipball/v0.11.0-RC5,v0.11.0-RC5,False,True
1866971,2015-09-24T13:48:01Z,2015-09-25T10:46:05Z,v0.11.0-RC4,"## Fixed Issues
- #2267 - Redirect to /ui/ doesn't work if Marathon is proxied
- #2254 - Exception after reregistration ""A metric named ... already exists""

## Changelog

Changelog from Marathon 0.11.0-RC3 to 0.11.0-RC4: https://github.com/mesosphere/marathon/compare/v0.11.0-RC3...v0.11.0-RC4

_Please see the release notes of [v0.11.0-RC3](https://github.com/mesosphere/marathon/releases/tag/v0.11.0-RC3) for a complete list of the changes in v0.11.0._
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/1866971/assets,https://api.github.com/repos/mesosphere/marathon/releases/1866971,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.11.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.11.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.11.0-RC4,v0.11.0-RC4,False,True
1833775,2015-09-16T16:55:52Z,2015-09-18T11:58:12Z,v0.11.0-RC3,"## Changes from 0.10.0 to 0.11.0-RC3

### Breaking Changes
- Java 8 or higher is needed to run Marathon, since Java 6 and 7 support has reached end of life.
- `--revive_offers_for_new_apps` is now the default. If you want to avoid resetting filters if new tasks need to be started, you can disable this by `--disable_revive_offers_for_new_apps`.

### Overview

#### Marathon uses Java 8

Java 8 has been out for more than a year now. The support for older versions of Java has reached end of life. We switched completely to the latest stable JVM release. We compile, test and run Marathon against Java 8.

Note for the Marathon Docker image: the base image of Marathon is now the standard java:8-jdk docker image.

#### Faster reconciliation and links to task Mesos sandboxes

Marathon now saves the slaveID of newly launched tasks. That leads to faster reconciliation for lost tasks and allows the UI to link to the mesos UI.

If the auto-discovered mesos UI is not reachable from wherever you access the Marathon UI from, you can use the `--mesos_leader_ui_url` configuration to change the base URL of these links.

#### New versioning information in API and UI

We now have `versionInfo` with `lastConfigChangeAt` and `lastScalingAt` in the apps JSON of our API. `lastConfigChangeAt` is the timestamp of the last change to the application that was not just a restart or a scaling operation. `lastScalingAt` is the time stamp of the last scaling or restart operation.

##### Additional task statistics in the `/v2/apps` and `/v2/apps/{app id}` endpoints (Optional)

If you pass `embed=apps.taskStats`/`embed=app.taskStats` as a query parameter, you get additional taskStats embedded in you app JSON.

Task statistics are provided for the following groups of tasks. If no tasks for the group exist, no statistics are offered:
- `withLatestConfig` contains statistics about all tasks that run with the same config as the latest app version.
- `startedAfterLastScaling` contains statistics about all tasks that were started after the last scaling or restart operation.
- `withOutdatedConfig` contains statistics about all tasks that were started before the last config change which was not simply a restart or scaling operation.
- `totalSummary` contains statistics about all tasks.

Example JSON:

``` javascript
{
  // ...
  ""taskStats"": {
    {
      ""startedAfterLastScaling"" : {
        ""stats"" : {
          ""counts"" : { // equivalent to tasksStaged, tasksRunning, tasksHealthy, tasksUnhealthy
            ""staged"" : 1,
            ""running"" : 100,
            ""healthy"" : 90,
            ""unhealthy"" : 4
          },
          // ""lifeTime"" is only included if there are running tasks.
          ""lifeTime"" : {
            // Measured from `""startedAt""` (timestamp of the Mesos TASK_RUNNING status update) of each running task
            // until now.
            ""averageSeconds"" : 20.0,
            ""medianSeconds"" : 10.0
          }
        }
      },
      ""withLatestConfig"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      },
      ""withOutdatedConfig"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      },
      ""totalSummary"" : {
        ""stats"" : { /* ... same structure as above ... */ }
      }
    }
  }
  // ...
}
```

The calculation of these statistics is currently performed for every request and expensive if you have very many tasks.

#### Specific ""embed"" parameters for app related information

In this release, we introduce ""embed"" parameters for all GET requests in the app end-point that specify which information to embed. Right now, we deliver all information by default that we delivered before but we encourage you to specify embed parameters for the information that you need.

In the future, we will only deliver information you explicitly requested by default, even though we will allow some compatibility configuration option. This improves performance by not returning information that you might not need.

#### Smarter resource offer handling

When Marathon needed to launch tasks for multiple apps, it would first launch all needed tasks for the first one and then proceed to the next app. One big deployment could block all others. In this new version, Marathon will spread the offers among all apps that currently need to launch tasks.

When Marathon detects new tasks that it has to launch, it will now explicitly request new offers with the `reviveOffers` Mesos scheduler API call. This should result in more speedy task launches. If for any reason you dislike this behavior, you can disable it with `--disable_revive_offers_for_new_apps` (not recommended).

The order in which mesos receives `reviveOffers` and `declineOffer` calls is not guaranteed. Therefore, as long as we still need offers to launch tasks, we repeat the `reviveOffers` call for `--revive_offers_repetitions` times so that our last `reviveOffers` will be received after all relevant `declineOffer` calls with high probability.
- `--revive_offers_repetitions` (Optional. Default: 3): Repeat every reviveOffer request this many times, delayed by the `--min_revive_offers_interval`.

When Marathon has no current use for an offer, it will decline the offer for a configurable period. A short duration might lead to resource starvation for other frameworks if you run many frameworks in your cluster. You should only need to reduce it if you use `--disable_revive_offers_for_new_apps`.
- `--decline_offer_duration` (Default: 120 seconds) The duration (milliseconds) for which to decline offers by default

#### New task launching tuning parameters

To prevent overloading Mesos itself, you can now restrict how many tasks Marathon launches per time interval. By default, we allow 1000 unconfirmed task launches every 30 seconds. In addition, Marathon considers `TASK_RUNNING` status updates from Mesos as launch confirmations and allows launching one more task for every confirmed launch.
- `--launch_token_refresh_interval` (Optional. Default: 30000): The interval (ms) in which to refresh the launch tokens to `--launch_token_count`.
- `--launch_tokens` (Optional. Default: 1000): Launch tokens per interval.

As a result of this, the `--max_tasks_per_offer_cycle` options is deprecated and has no effect anymore.

To prevent overloading Marathon and maintain speedy offer processing, there is also a timeout for matching each incoming resource offer, i.e. finding suitable tasks to launch for incoming offers.
- `--offer_matching_timeout` (Optional. Default: 1000): Offer matching timeout (ms). Stop trying to match additional tasks for this offer after this time. All already matched tasks are launched.

All launched tasks are stored before launching them. There is also a new timeout for this:
- `--save_tasks_to_launch_timeout` (Optional. Default: 3000): Timeout (ms) after matching an offer for saving all matched tasks that we are about to launch.  When reaching the timeout, only the tasks that we could save within the timeout are also launched.  All other task launches are temporarily rejected and retried later.

If the mesos master fails over or in other unusual circumstances, a launch task request might get lost. You can configure how long Marathon waits for the first `TASK_STAGING` update.
- `--task_launch_confirm_timeout` (Optional. Default: 10000): Time, in milliseconds, to wait for a task to enter the `TASK_STAGING` state before killing it.

#### No pseudo-deterministic assignment of host ports anymore

If you specify non-zero `""ports""` in your app JSON, they are used as service ports. The old code contained logic that would assign these ports as host ports if available in the processed offer. That misled people into thinking that these ports corresponded to host ports. The new code always randomizes host ports assignment without `""requirePorts""` or explicit `""hostPort""` configuration.

#### Last task failures are persisted

Marathon has exposed the `""lastTaskFailure""` via the API for a while but this information was not persisted across restarts or on fail over. Now it is.

#### Logging command line parameters on startup

Marathon will now log all command line parameters on startup. Example:

```
2015-08-02 11:48:08,047] INFO Starting Marathon 0.11.0-SNAPSHOT with --zk zk://master.mesos:2181/marathon --master master.mesos:5050
```

#### Improved logging of deployment plans

Example:

```
DeploymentPlan 2015-09-02T07:56:12.105Z
step 1:
  * Start(App(app1, cmd=""cmd"")), instances=0)
step 2:
  * Scale(App(app1, cmd=""cmd"")), instances=2)
```

#### Improved logging of offer rejections

Example for missing port:

```
[2015-08-04 20:11:20,510] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Cannot find range with host port 8080 for app [/product/frontend]
[2015-08-04 20:11:29,422] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Insufficient resources for [/product/frontend] (need cpus=1.0, mem=64.0, disk=1.0, ports=([8080] required + 1 dynamic), available in offer:
...
```

Example for missing basic resources:

```
[2015-08-04 20:17:27,986] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Not all basic resources satisfied: cpu NOT SATISFIED (30.0 > 8.0), disk SATISFIED (0.0 <= 0.0), mem SATISFIED (16.0 <= 15360.0)
[2015-08-04 20:17:27,989] INFO Offer [20150804-173037-16777343-5050-4340-O110]. Insufficient for [/test] (need cpus=30.0, mem=16.0, disk=0.0, ports=(1 dynamic), available in offer:
...
```

#### Immediately store changed apps

In the past, Marathon would update the data for the group endpoint when it accepted a new deployment request like a change an app configuration. Marathon would only update the data in the app endpoint when it started the related deployment step. This could cause confusion for our users and thus we will now update both immediately when accepting the deployment.

#### No automatic reset of the app backoff when detecting a running task

When encountering task failures, Marathon uses the backoff duration to throttle launching tasks. See `""backoffSeconds""`, `""backoffFactor""` and `""maxLaunchDelaySeconds""` in the REST API documentation for further information.

There was an undocumented feature that reset the backoff completely whenever Marathon received a TASK_RUNNING notification from Mesos. This led to problems when an application crashed fast after startup.

In the new Marathon version, the backoff delay is never reset automatically. You can reset it manually, though.

#### New `MARATHON_APP_DOCKER_IMAGE` environment variable

Any task of an app definition with a docker image attribute (`container.docker.image`) will now be started with an environment variable `MARATHON_APP_DOCKER_IMAGE` containing its value.

### Important bug fixes
- #1553 - Marathon will now correctly reload task state information after a fail over
- #1924 - Marathon will accept offers without disk resources if no disk resources are required
- #1671 - Mesos will now use the hostname given by the `--hostname` parameter to communicate with Marathon
- #1926 - Our leader proxy code used buffered IO without intermediate flushing which did not play well with streaming events from our `/v2/events` endpoint
- #1877 - Marathon will now exit on startup failures instead of keeping running without being able to answer to requests. For example: Marathon will now exit if the specified http port is already used for something else.

### Known issues

Applications might not be returned for a little while even after `POST /v2/apps` returned 201. This is side-effect of storing the tasks information in ZooKeeper and we plan to fix it in the next releases.

### Under the Hood

#### Jetty 9 as Servlet Engine

The latest Jetty servlet engine is used in this version of Marathon. Jetty 9 has a completely overhauled I/O layer, Servlet API 3.0, SPDY/3 and WebSocket support.

#### Improved SSE handling

As part of the Jetty 9 update, the SSE support for `/v2/events` has been improved. The event name `event: event-name` is added to every `data: json` entry for easier filtering and handling.

#### Play JSON everywhere

We finished our transition from Jackson JSON serialization to Play JSON. Play JSON provides a type safe interface which make it easier to write correct code.

### Details for Marathon UI

#### New application modal, including Docker-specific fields

The application modal has undergone significant changes, simplifying the app creation process and giving the user access to more advanced features. In particular, a section of the form is dedicated to Docker specific fields, allowing the user to create Dockerized applications directly from the UI.

#### Edit application configurations

Previous versions of Marathon did not allow users to make modifications to application configurations after the application had been created. It's now possible to edit an application using the same improved modal that is used to create applications.

#### Usability improvements to the applications view

The applications view is the 'dashboard' for Marathon UI. This version brings significant improvements to its utility, especially by revealing more about application health.

##### Search bar

Applications can be filtered by name using the search bar in the top left-hand corner of the applications view.

##### Show total resource usage

Previously, only the configured resource usage was shown in the applications view, so an application with 100 running tasks would show the same resource usage as an identical application with only 1 running task. Now, the combined resource usage is shown, allowing users to sort applications by their total assigned resources.

##### Sort applications by health

Unhealthy apps can be found quickly by sorting the application table by health status.

##### Better progress information feedback

A tooltip is displayed when the user hovers the application progress bar, showing individual health statuses.

#### More information on applications and deployments

In previous versions of Marathon, only an application's configuration and healthcheck status were available from the UI. Marathon 0.11 brings the following features:

##### Debug app tab

A new tab is available in the application detail view. It displays the most recent changes to the application configuration, the most recent task failure, and the relevant statistics.

##### Health checks in configuration tab.

Application health checks are now shown in the application configuration tab.

##### Direct Mesos sandbox access

Where available, the new 'Mesos details' link in the task detail view shows a link to the relevant sandbox in the Mesos UI.

#### Other features

##### User- and debug-friendly version strings

The Marathon version string is now shown in the user's local time. In addition, The UI version string is available when the user hovers the version string, and in a separate alert when the user hits the 'g v' shortcut.

##### Custom alerts

Where browser-native dialogs were previously used, Marathon now uses custom dialogs which are consistent with the UI style and which do not interrupt the UI when in the foreground.

##### Not Found page

When the user follows a bad link, they encounter a Not Found page rather than being redirected to the applications view.

#### UI build uses a webjar

Instead of relying on git submodules, the UI is now released as a webjar which Marathon pulls in during its own build. This allows developers to use the latest stable UI assets and simplifies the build process. This has had the side-effect that the ui is now served from the /ui/ endpoint instead of the root.

#### Fixed issues
- #548 - UI showing empty list after scaling when on page > 1
  - The task list shows the last available page if tasks count decreases after scaling.
- #1872 - Kill & Scale should be available for more than one task
- #1960 - Task detail error message doesn't show up on non existent task
- #1989 - HealthBar isn't working correctly on non existing health data
- #2014 - Avoid concurrent http requests on same endpoint
- #1996 - Duplicable fields in app creation modal can send null values
- #2030 - Shortcut for app creation no longer works
- #2062 - Resetting app delay can block all network requests in Firefox
- #2123 - Health check information isn't shown on task in task list
         and task detail

### List of Contributors

| Commits | Contributor |
| --- | --- |
| 169 | Felix Gertz |
| 70 | Philip Norman |
| 50 | Pierluigi Cau |
| 5 | Sp3c1 |
| 4 | Kamil Warguła |
| 4 | Daniel Fuentes |

Generated by `git shortlog -s -n --no-merges v0.10.0..v0.11.0` for the marathon-ui repository
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/1833775/assets,https://api.github.com/repos/mesosphere/marathon/releases/1833775,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.11.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.11.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.11.0-RC3,v0.11.0-RC3,False,True
1744444,2015-08-28T11:01:07Z,2015-08-31T10:16:35Z,v0.10.1,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- #2029 Killing task not possible

### Changelog

Changelog from Marathon 0.10.0 to 0.10.1: https://github.com/mesosphere/marathon/compare/v0.10.0...v0.10.1

_Please see the changelog for [v0.10.0](https://github.com/mesosphere/marathon/releases/tag/v0.10.0) for further information on the 0.10 release._
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/1744444/assets,https://api.github.com/repos/mesosphere/marathon/releases/1744444,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.1,https://github.com/mesosphere/marathon/releases/tag/v0.10.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.1,v0.10.1,False,False
1698839,2015-08-19T15:19:52Z,2015-08-20T12:26:34Z,v0.10.1-RC2,"This is a release candidate for a bug fix release. Thanks for your feedback!

### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- #2029 Killing task not possible
",https://api.github.com/users/meichstedt,414354,meichstedt,https://api.github.com/repos/mesosphere/marathon/releases/1698839/assets,https://api.github.com/repos/mesosphere/marathon/releases/1698839,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.1-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.10.1-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.1-RC2,v0.10.1-RC2,False,True
1673480,2015-08-14T13:38:07Z,2015-08-14T13:56:02Z,v0.9.3-RC1,"This is the release candidate for a bug fix release. Thanks for your feedback!

### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- Creation of state path in Zookeeper fails when performed concurrently #1984 

### Changelog

Changelog from Marathon 0.9.2 to 0.9.3-RC1: https://github.com/mesosphere/marathon/compare/v0.9.2...v0.9.3-RC1
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1673480/assets,https://api.github.com/repos/mesosphere/marathon/releases/1673480,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.3-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.9.3-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.3-RC1,v0.9.3-RC1,False,True
1673470,2015-08-14T13:42:01Z,2015-08-14T13:53:21Z,v0.10.1-RC1,"This is a release candidate for a bug fix release. Thanks for your feedback!

### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- #1984 Creation of state path in Zookeeper fails when performed concurrently
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1673470/assets,https://api.github.com/repos/mesosphere/marathon/releases/1673470,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.1-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.10.1-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.1-RC1,v0.10.1-RC1,False,True
1672915,2015-08-14T11:43:29Z,2015-08-14T11:51:12Z,v0.9.2,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- #1924 - Launch tasks that require no disk resource even if no disk resource is offered
- #1931 - Flags for reviveOffers and the duration for which to reject offers (to avoid resource starvation when running many frameworks)
- #1927 - Improve logging of unsatisfied resource requirements
- Fix showing Marathon logo in UI

### Changelog

Changelog from Marathon 0.9.1 to 0.9.2: https://github.com/mesosphere/marathon/compare/v0.9.1...v0.9.2
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1672915/assets,https://api.github.com/repos/mesosphere/marathon/releases/1672915,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.2,https://github.com/mesosphere/marathon/releases/tag/v0.9.2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.2,v0.9.2,False,False
1667567,2015-08-13T12:27:35Z,2015-08-13T14:00:20Z,v0.10.0,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended
Mesos version for this release.

### Notes

This will be the last release that supports Java 6, since Java 6 and Java 7 have reached End of Life.
Starting with 0.11.0 we will rely on Java 8.

### Overview

This version corresponds to 0.10.0-RC5.

#### Administratively zeroing the task launch delay

It is now possible to reset the task launch delay via the REST endpoint `/v2/queue/{app_id}/delay`.
The UI displays two additional possible statuses: ""Delayed"" and ""Waiting"". 
The ""Delayed"" status also displays a tooltip showing the remaining time until the next launch attempt.
The App page now allows the user to reset the task launch delay for a ""Delayed"" app, thus forcing a new immediate launch attempt.

#### The FrameworkId is invalidated, if the scheduler reports an error

If the scheduler reports an error, the framework id is removed from the backing persistence store.
This is important because on certain kinds of framework errors (such as exceeding the framework failover timeout),
the scheduler may never re-register with the saved FrameworkID until the leading Mesos master process is killed.

#### Maintain constraints while scaling down

Constraints in Marathon is a powerful mechanism. 
While the constraints are maintained when scaling up, previous versions of Marathon did not do so while scaling down.
This version picks instances to kill based on defined constraints and will not violate those. 

#### Custom prefix for automatically created environment variables

It is now possible to specify a custom prefix via the `--env_vars_prefix`
command line flag. This prefix will be added to the name of task's environment
variables created automatically by Marathon (e.g., `PORT`, `PORTS`)

_Note_: This prefix will not be added to variables that are already prefixed,
such as `MESOS_TASK_ID` and `MARATHON_APP_ID`

#### Handle requests with missing Accept and Content-Type headers correctly

If an HTTP request is made without setting appropriate request headers, the Accept and Content-Type header 
is set automatically to `application/json`.

#### Option to restrict the number of concurrent HTTP requests

With this version of Marathon it is possible to restrict the number of concurrent HTTP requests,
that are handled concurrently in the service layer.
This enables the Marathon service to apply back pressure when receiving too many requests 
and helps prevent Denial of Service attacks.
If the limit of concurrent requests is reached, a HTTP 503 Service Temporarily Unavailable is returned, 
which means that this operation can be retried.
You can turn on this feature by setting the parameter `--http_max_concurrent_requests`.

#### Serialize all concurrent change requests

In former versions of Marathon it was possible that multiple concurrent changes of the same application definition
would lead to an inconsistent state of that application. All changes of groups or application definitions now
get serialized, so the resulting state is always consistent.

#### Enhance the reported metrics

The metrics endpoint (`/metrics`) gives valuable insight into the system behavior.
We now have meters for all service objects as well as the number applications and groups in the system.

#### Decouple API (un)marshalling types from internal models

With this change we can control API changes and are free to change internal models.
This will change nothing in the current API, but will help a lot while we create the v3 API. 

### Infrastructure

#### Added integration tests for all API endpoints

We now have an integration test suite, that covers all endpoints with almost all possible parameter combinations.
This test suite runs with every commit on every pull request.
This test suite is our safety net to ensure compatibility while introducing new functionality in future versions.

#### Code coverage reporting using coveralls

See our github page https://github.com/mesosphere/marathon or go directly to  
https://coveralls.io/github/mesosphere/marathon to see our code coverage reporting.
With every Pull Request we try to make sure, this coverage will be increased.  

#### Improved the release process of Marathon itself

Several changes are made to the sbt build file, but also to the infrastructure that is performing the release.
We now have a more reliable way of pushing distributions.

### Fixed Issues
- #1710 - Too many simultaneous requests will kill Marathon 
- #1709 - Concurrent changes to the same AppDefinition will lead to inconsistent state
- #1669 - Inconsistent content-type and response from REST API 
- #1660 - The GUI doesn't allow creating apps with 0 instances, but it is possible through the v2 API 
- #1647 - Keep the rest-api return format consistent when request headers without ""Accept: application/json""
- #1397 - Kill tasks with scaling does not update group
- #1654 - Marathon 0.8.1 - API - /v2/tasks 
- #555  - Constraints not satisfied when scaling down
- #650  - deployment_success/failed should contain deployment info  
- #1316 - Invalidate framework ID if registration triggers an error  
- #1254 - Add flag to define Marathon PORT prefix
- #1827 - Apps with multiple service ports fail to update
- #1829 - Marathon forgets value for `acceptedResourceRoles` when app is updated (including scaling)
- #1647 - Keep the rest-api return format consistent when request headers without ""Accept: application/json""
- #1853 - App can't be deleted because it ""does not exist"", although /apps still returns it
- #1924 - Launch tasks that require no disk resource
- #1927 - Improve logging of unsatisfied resource requirements
- #1931 - Flag for reviveOffers and the duration for which to reject 

### Changelog

Changelog from Marathon 0.9.0 to 0.10.0: https://github.com/mesosphere/marathon/compare/v0.9.0...v0.10.0

| Commits | Contributor |
| --- | --- |
| 47 | Matthias Veit |
| 29 | Peter Kolloch |
| 18 | Gastón Kleiman |
| 14 | Gaston Kleiman |
| 5 | Matthias Eichstedt |
| 3 | Chris Darko |
| 3 | Cody Maloney |
| 3 | Connor Doyle |
| 2 | Lukas Loesche |
| 2 | Lukas Lösche |
| 2 | Pierluigi Cau |
| 1 | rfast |
| 1 | Arthur Barr |
| 1 | Christoph Neuroth |
| 1 | Dana Renfrow |
| 1 | Felix Gertz |
| 1 | Gastón Kleiman |
| 1 | Konstantin Baumann |
| 1 | Philip Norman |
| 1 | aameek |
| 1 | janisz |
| 1 | Artem Harutyunyan |

generated by `git shortlog -s -n v0.9.0..v0.10.0`
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1667567/assets,https://api.github.com/repos/mesosphere/marathon/releases/1667567,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.0,https://github.com/mesosphere/marathon/releases/tag/v0.10.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.0,v0.10.0,False,False
1612402,2015-07-31T10:52:13Z,2015-07-31T12:14:55Z,v0.9.1,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Fixed Issues
- #1829 - Marathon forgets value for `acceptedResourceRoles` when app is updated (including scaling).

### Changelog

Changelog from Marathon 0.9.0 to 0.9.1: https://github.com/mesosphere/marathon/compare/v0.9.0...v0.9.1
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/1612402/assets,https://api.github.com/repos/mesosphere/marathon/releases/1612402,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.1,https://github.com/mesosphere/marathon/releases/tag/v0.9.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.1,v0.9.1,False,False
1602050,2015-07-29T13:21:58Z,2015-07-29T14:13:50Z,v0.10.0-RC4,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended
Mesos version for this release.

### Notes

For a complete list of the changes in v0.10.0 look [here](https://github.com/mesosphere/marathon/releases/tag/v0.10.0-RC2).

### Fixed Issues
- #1647 - Keep the rest-api return format consistent when request headers without ""Accept: application/json""
- #1853 - App can't be deleted because it ""does not exist"", although /apps still returns it

### Changelog

Changelog from Marathon 0.10.0-RC3 to 0.10.0-RC4: https://github.com/mesosphere/marathon/compare/v0.10.0-RC3...v0.10.0-RC4
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/1602050/assets,https://api.github.com/repos/mesosphere/marathon/releases/1602050,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.10.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.0-RC4,v0.10.0-RC4,False,True
1560667,2015-07-20T15:04:48Z,2015-07-20T16:16:08Z,v0.10.0-RC3,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended
Mesos version for this release.

### Notes

For a complete list of the changes in v0.10.0 look [here](https://github.com/mesosphere/marathon/releases/tag/v0.10.0-RC2).

### Fixed Issues
- #1827 - Apps with multiple service ports fail to update
- #1829 - Marathon forgets value for `acceptedResourceRoles` when app is updated (including scaling)

### Changelog

Changelog from Marathon 0.10.0-RC2 to 0.10.0-RC3: https://github.com/mesosphere/marathon/compare/v0.10.0-RC2...v0.10.0-RC3
",https://api.github.com/users/gkleiman,146374,gkleiman,https://api.github.com/repos/mesosphere/marathon/releases/1560667/assets,https://api.github.com/repos/mesosphere/marathon/releases/1560667,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.10.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.0-RC3,v0.10.0-RC3,False,True
1546172,2015-07-16T12:43:17Z,2015-07-16T13:56:57Z,v0.10.0-RC2,"### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended
Mesos version for this release.

### Notes

This will be the last release that supports Java 6, since Java 6 and Java 7 have reached End of Life.
Starting with 0.11.0 we will rely on Java 8.

### Overview

#### Administratively zeroing the task launch delay

It is now possible to reset the task launch delay via the REST endpoint `/v2/queue/{app_id}/delay`.
The UI displays two additional possible statuses: ""Delayed"" and ""Waiting"". 
The ""Delayed"" status also displays a tooltip showing the remaining time until the next launch attempt.
The App page now allows the user to reset the task launch delay for a ""Delayed"" app, thus forcing a new immediate launch attempt.

#### The FrameworkId is invalidated, if the scheduler reports an error

If the scheduler reports an error, the framework id is removed from the backing persistence store.
This is important because on certain kinds of framework errors (such as exceeding the framework failover timeout),
the scheduler may never re-register with the saved FrameworkID until the leading Mesos master process is killed.

#### Maintain constraints while scaling down

Constraints in Marathon is a powerful mechanism. 
While the constraints are maintained when scaling up, previous versions of Marathon did not do so while scaling down.
This version picks instances to kill based on defined constraints and will not violate those. 

#### Custom prefix for automatically created environment variables

It is now possible to specify a custom prefix via the `--env_vars_prefix`
command line flag. This prefix will be added to the name of task's environment
variables created automatically by Marathon (e.g., `PORT`, `PORTS`)

_Note_: This prefix will not be added to variables that are already prefixed,
such as `MESOS_TASK_ID` and `MARATHON_APP_ID`

#### Handle requests with missing Accept and Content-Type headers correctly

If an HTTP request is made without setting appropriate request headers, the Accept and Content-Type header 
is set automatically to `application/json`.

#### Option to restrict the number of concurrent HTTP requests

With this version of Marathon it is possible to restrict the number of concurrent HTTP requests,
that are handled concurrently in the service layer.
This enables the Marathon service to apply back pressure when receiving too many requests 
and helps prevent Denial of Service attacks.
If the limit of concurrent requests is reached, a HTTP 503 Service Temporarily Unavailable is returned, 
which means that this operation can be retried.
You can turn on this feature by setting the parameter `--http_max_concurrent_requests`.

#### Serialize all concurrent change requests

In former versions of Marathon it was possible that multiple concurrent changes of the same application definition
would lead to an inconsistent state of that application. All changes of groups or application definitions now
get serialized, so the resulting state is always consistent.

#### Enhance the reported metrics

The metrics endpoint (`/metrics`) gives valuable insight into the system behavior.
We now have meters for all service objects as well as the number applications and groups in the system.

#### Decouple API (un)marshalling types from internal models

With this change we can control API changes and are free to change internal models.
This will change nothing in the current API, but will help a lot while we create the v3 API. 

### Infrastructure

#### Added integration tests for all API endpoints

We now have an integration test suite, that covers all endpoints with almost all possible parameter combinations.
This test suite runs with every commit on every pull request.
This test suite is our safety net to ensure compatibility while introducing new functionality in future versions.

#### Code coverage reporting using coveralls

See our github page https://github.com/mesosphere/marathon or go directly to  
https://coveralls.io/github/mesosphere/marathon to see our code coverage reporting.
With every Pull Request we try to make sure, this coverage will be increased.  

#### Improved the release process of Marathon itself

Several changes are made to the sbt build file, but also to the infrastructure that is performing the release.
We now have a more reliable way of pushing distributions.

### Fixed Issues
- #1710 - Too many simultaneous requests will kill Marathon 
- #1709 - Concurrent changes to the same AppDefinition will lead to inconsistent state
- #1669 - Inconsistent content-type and response from REST API 
- #1660 - The GUI doesn't allow creating apps with 0 instances, but it is possible through the v2 API 
- #1647 - Keep the rest-api return format consistent when request headers without ""Accept: application/json""
- #1397 - Kill tasks with scaling does not update group
- #1654 - Marathon 0.8.1 - API - /v2/tasks 
- #555  - Constraints not satisfied when scaling down
- #650  - deployment_success/failed should contain deployment info  
- #1316 - Invalidate framework ID if registration triggers an error  
- #1254 - Add flag to define Marathon PORT prefix

### Changelog

Changelog from Marathon 0.9.0 to 0.10.0-RC2: https://github.com/mesosphere/marathon/compare/v0.9.0...v0.10.0-RC2

| Commits | Contributor |
| --- | --- |
| 43 | Matthias Veit |
| 28 | Gastón Kleiman |
| 22 | Peter Kolloch |
| 5 | Matthias Eichstedt |
| 3 | Chris Darko |
| 3 | Connor Doyle |
| 3 | Cody Maloney |
| 2 | Pierluigi Cau |
| 2 | Lukas Loesche |
| 2 | Lukas Lösche |
| 1 | rfast |
| 1 | Arthur Barr |
| 1 | Christoph Neuroth |
| 1 | Dana Renfrow |
| 1 | Felix Gertz |
| 1 | Gastón Kleiman |
| 1 | Konstantin Baumann |
| 1 | Philip Norman |
| 1 | aameek |
| 1 | janisz |
| 1 | Artem Harutyunyan |
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1546172/assets,https://api.github.com/repos/mesosphere/marathon/releases/1546172,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.10.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.10.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.10.0-RC2,v0.10.0-RC2,False,True
1520989,2015-07-09T10:58:48Z,2015-07-10T14:30:12Z,v0.9.0,"#### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Breaking changes

Please look at the following changes to check whether you have to verify your setup before upgrading:
- Disk resource limits are passed to Mesos.
- New format for the `http_endpoints` command line parameter.
- New default for the `zk_max_versions` command line parameter. In Marathon, most state is versioned. This includes app
  definitions and group definitions. Marathon already allowed restricting the number of versions that are kept by
  `--zk_max_versions` but you had to specify that explicitly.
  
  Starting with this version, Marathon will by default keep only 25 versions. That means that Marathon will start to
  remove old versions in order to enforce the limit.
- Removed the deprecated `zk_hosts` and `zk_state` command line parameters. Use the `zk` parameter instead.

### Overview

#### Restrict applications to certain Mesos roles

Prior Marathon versions already support registering with a `--mesos_role`. This causes Mesos to offer resources
of the specified role to Marathon in addition to resources without any role designation (""*"").
Marathon would use resources of any role for tasks of any app.

Now you can specify which roles Marathon should consider for launching apps per default via the
`--default_accepted_resource_roles` configuration argument. You can override the default by specifying
a list of accepted roles for your app via the `""acceptedResourceRoles""` attribute of the app definition.

#### Event stream as server sent events

Prior Marathon versions already notified other services of events via
[event subscriptions](https://mesosphere.github.io/marathon/docs/rest-api.html#event-subscriptions).
Services could register an HTTP endpoint at which they received all events.

The new Marathon now provides an
[event stream](https://mesosphere.github.io/marathon/docs/rest-api.html#event-stream) endpoint
where you receive all events conveniently as
[Server Sent Events](http://www.w3schools.com/html/html5_serversentevents.asp).

#### Abstraction for persistent storage added with ZooKeeper access directly in the JVM

A new storage abstraction has been created, which allows for different storage providers. It is completely non-blocking
and provides consistent usage patterns.

The new ZooKeeper Storage Provider is implemented in a backward compatible fashion - the same data format and storage
layout is used as prior versions of Marathon.

You can use this version of Marathon without migrating data while it is also possible to switch back to an older
version. The new persistent storage layer is enabled by default, no further action is needed.

#### Satisfy ports from any offered port range

In prior Marathon versions, matching port resources to the demands of a task had various restrictions:
- Marathon could not launch a task if it required port resources with different Mesos roles.
- Dynamically assigned non-docker host ports had to come from a single port range.

Now the port resources of a task can be satisfied by any combination of port ranges with any matching offered
role.

#### Randomize dynamic docker host ports

If a task reuses recently freed port resources, it can happen that dependencies of old tasks still expect
the old task to be reachable at the old port for a limited time span. For this reason, Marathon has already
randomized assignment of dynamic non-docker host ports to minimize the risk of launching a new task on ports recently
used by other tasks.

Now Marathon also randomly assigns dynamic docker host ports.

#### Disk resource limits are passed to Mesos

If you specify a non-zero disk resource limit, this limit is now passed to Mesos on task launch.

If you rely on disk limits, you also need to configure Mesos appropriately. This includes configuring the correct
isolator and enabling disk quotas enforcement with `--enforce_container_disk_quota`.

#### Improved proxying to current leader

One of the Marathon instances is always elected as a leader and is the only instance processing your requests.
For convenience, Marathon has long proxied all requests to non-leaders to the current leader so that
you do not have to lookup the current leader yourself or are annoyed by redirects.

This proxying has now been improved and gained additional configuration parameters:
- `--leader_proxy_connection_timeout` (Optional. Default: 5000):
  Maximum time, in milliseconds, for connecting to the
  current Marathon leader from this Marathon instance.
- `--leader_proxy_read_timeout` (Optional. Default: 10000):
  Maximum time, in milliseconds, for reading from the
  current Marathon leader.

Furthermore, leader proxying now uses HTTPS to talk to the leader if `--http_disable` was specified.

These bugs are now obsolete:
- #1540 A marathon instance should never proxy to itself.
- #1541 Proxying Marathon requests should use timeouts.
- #1556 Proxying doesn't work for HTTPS.

#### Relative URL paths in the UI

The UI now uses relative URL paths making it easier to run Marathon behind a reverse proxy.

#### Restrict the number of versions by default

In Marathon, most state is versioned. This includes app definitions and group definitions. Marathon already allowed
restricting the number of versions that are kept by `--zk_max_versions` but you had to specify that explicitly.

Since some of our users were running into problems with too many versions, we decided to restrict to
a maximum number of `25` versions by default. We recommend to set this to an even lower number, e.g. `3`, since
higher numbers impact performance negatively.

#### New format for the `http_endpoints` command line parameter

We changed the format of the `http_endpoints` command line parameter from a
space-separated to a comma-separated list of endpoints, in order to be
more consistent with the documentation and with the format used in other
parameters.

WARNING: If you use the `http_endpoints` parameter with multiple space
separated URLs, you will need to migrate to the comma-separated format.

#### Do not delay task launches anymore as a result of failed health checks

Marathon uses an exponential back off strategy to delay further task launches after task failures. This should
prevent keeping the cluster busy with task launches which are set up to fail anyway. The delay was also increased
when health checks failed leading to delayed recovery.

Since health checks typically (depending on configuration) take a while to determine that a task is unhealthy,
this already delays restarting sufficiently.

#### Removed deprecated command line arguments `zk_hosts` and `zk_state`

The command line arguments `zk_hosts` and `zk_state` were deprecated for some time and got removed in this version.
Use the `--zk` command line argument to define the ZooKeeper connection string.

#### servicerouter.py

Is a replacement for the haproxy-marathon-bridge. It reads Marathon task information and generates haproxy
configuration. It supports advanced functions like sticky sessions, HTTP to HTTPS redirection, SSL offloading, VHost
support and templating.

#### Be more careful about using `ulimit` in startup script

The startup script now only increases the maximum number of open files if the limit is too low and if the
script is started as `root`.

### Fixed Bugs

#1259 - Reject null bodies in REST API
#1540 - A marathon instance should never proxy to itself
#1541 - Proxying Marathon requests should use timeouts
#1556 - Proxying doesn't work for HTTPS
#1365 - servicePorts are not copied into ports
#1389 - Don't set ulimit in marathon-framework
#1452 - Remove ulimit changes from shell script
#1446 - Validation for app creation & update should not differ
#1456 - Marathon delaying app start by 70min after cluster reboot
#1481 - App stays in locked state
#1520 - Marathon don't match correctly the resources for a defined role
#1522 - Disk resource quota not communicated to Mesos on task launch
#1583 - Task uses invalid resources: disk(_):0
#1564 - args[] does not work
#1569 - http_endpoints not being split on comma
#1572 - Remove $$EnhancerByGuice$$... from class names in metrics
#1684 - Leader Election Process fails, if the fetching of the frameworkId hits a timeout
#1556 - advertise HTTPS port for leader if HTTP is disabled
#1143 - by filtering out all MARATHON_APP_ env variables.
#1716 - Add headers to Marathon responses indicating current leader and proxying

### Changelog

Changelog from Marathon 0.8.2 to 0.9.0: https://github.com/mesosphere/marathon/compare/v0.8.2...v0.9.0

### Contributors

| Commits | Contributor |
| --- | --- |
| 72 | Peter Kolloch |
| 35 | Matthias Veit |
| 31 | Lukas Loesche |
| 20 | Sunil Shah |
| 18 | Cody Maloney |
| 16 | aquamatthias |
| 14 | Dario Rexin |
| 13 | Jeremy Lingmann |
| 7 | Gaston Kleiman |
| 6 | Felix Gertz |
| 5 | Lukas Lösche |
| 5 | Philip Norman |
| 3 | Tamar Ben-Shachar |
| 3 | Gastón Kleiman |
| 2 | Ian Babrou |
| 2 | Connor Doyle |
| 1 | janisz |
| 1 | Chris Heller |
| 1 | Hans van den Bogert |
| 1 | Kamil Warguła |
| 1 | Michael Hausenblas |
| 1 | Pawel Chojnacki |
| 1 | Pradeep Chhetri |
| 1 | Sanjana Joshi Bhat |
| 1 | Thomas French |
| 1 | Tyler Neely |
| 1 | drexin |
| 1 | Adam Avilla |
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1520989/assets,https://api.github.com/repos/mesosphere/marathon/releases/1520989,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.0,https://github.com/mesosphere/marathon/releases/tag/v0.9.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.0,v0.9.0,False,False
1468004,2015-06-27T01:58:43Z,2015-06-27T02:10:20Z,v0.9.0-RC3,"**For a full list of all changes in 0.9.0 see the [Release Notes for Marathon 0.9.0 RC1](https://github.com/mesosphere/marathon/releases/tag/v0.9.0-RC1)**

### Fixed Bugs since 0.9.0-RC2

Fixes #1556 - advertise HTTPS port for leader if HTTP is disabled
Fixes #1143 - by filtering out all MARATHON_APP\* env variables.
Fixes #1716 - Add Proxy headers
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1468004/assets,https://api.github.com/repos/mesosphere/marathon/releases/1468004,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.9.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.0-RC3,v0.9.0-RC3,False,True
1447506,2015-06-22T20:53:07Z,2015-06-22T21:10:59Z,v0.9.0-RC2,"**For a full list of all changes in 0.9.0 see the [Release Notes for Marathon 0.9.0 RC1](https://github.com/mesosphere/marathon/releases/tag/v0.9.0-RC1)**

### Fixed Bugs since 0.9.0-RC1

#1684  Leader Election Process fails, if the fetching of the frameworkId hits a timeout
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1447506/assets,https://api.github.com/repos/mesosphere/marathon/releases/1447506,releasing-0.9,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.9.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.0-RC2,v0.9.0-RC2,False,True
1417700,2015-06-15T14:54:17Z,2015-06-15T15:16:14Z,v0.9.0-RC1,"#### Recommended Mesos version is 0.22.1

We tested this release against Mesos version 0.22.1. Thus, this is the recommended Mesos version for this release.

### Breaking changes

Please look at the following changes to check whether you have to verify your setup before upgrading:
- Disk resource limits are passed to Mesos.
- New format for the `http_endpoints` command line parameter.
- New default for the `zk_max_versions` command line parameter. In Marathon, most state is versioned. This includes app
  definitions and group definitions. Marathon already allowed restricting the number of versions that are kept by
  `--zk_max_versions` but you had to specify that explicitly.
  
  Starting with this version, Marathon will by default keep only 25 versions. That means that Marathon will start to
  remove old versions in order to enforce the limit.
- Removed the deprecated `zk_hosts` and `zk_state` command line parameters. Use the `zk` parameter instead.

### Overview

#### Restrict applications to certain Mesos roles

Prior Marathon versions already support registering with a `--mesos_role`. This causes Mesos to offer resources
of the specified role to Marathon in addition to resources without any role designation (""*"").
Marathon would use resources of any role for tasks of any app.

Now you can specify which roles Marathon should consider for launching apps per default via the
`--default_accepted_resource_roles` configuration argument. You can override the default by specifying
a list of accepted roles for your app via the `""acceptedResourceRoles""` attribute of the app definition.

#### Event stream as server sent events

Prior Marathon versions already notified other services of events via
[event subscriptions](https://mesosphere.github.io/marathon/docs/rest-api.html#event-subscriptions).
Services could register an HTTP endpoint at which they received all events.

The new Marathon now provides an
[event stream](https://mesosphere.github.io/marathon/docs/rest-api.html#event-stream) endpoint
where you receive all events conveniently as
[Server Sent Events](http://www.w3schools.com/html/html5_serversentevents.asp).

#### Abstraction for persistent storage added with ZooKeeper access directly in the JVM

A new storage abstraction has been created, which allows for different storage providers. It is completely non-blocking
and provides consistent usage patterns.

The new ZooKeeper Storage Provider is implemented in a backward compatible fashion - the same data format and storage
layout is used as prior versions of Marathon.

You can use this version of Marathon without migrating data while it is also possible to switch back to an older
version. The new persistent storage layer is enabled by default, no further action is needed.

#### Satisfy ports from any offered port range

In prior Marathon versions, matching port resources to the demands of a task had various restrictions:
- Marathon could not launch a task if it required port resources with different Mesos roles.
- Dynamically assigned non-docker host ports had to come from a single port range.

Now the port resources of a task can be satisfied by any combination of port ranges with any matching offered
role.

#### Randomize dynamic docker host ports

If a task reuses recently freed port resources, it can happen that dependencies of old tasks still expect
the old task to be reachable at the old port for a limited time span. For this reason, Marathon has already
randomized assignment of dynamic non-docker host ports to minimize the risk of launching a new task on ports recently
used by other tasks.

Now Marathon also randomly assigns dynamic docker host ports.

#### Disk resource limits are passed to Mesos

If you specify a non-zero disk resource limit, this limit is now passed to Mesos on task launch.

If you rely on disk limits, you also need to configure Mesos appropriately. This includes configuring the correct
isolator and enabling disk quotas enforcement with `--enforce_container_disk_quota`.

#### Improved proxying to current leader

One of the Marathon instances is always elected as a leader and is the only instance processing your requests.
For convenience, Marathon has long proxied all requests to non-leaders to the current leader so that
you do not have to lookup the current leader yourself or are annoyed by redirects.

This proxying has now been improved and gained additional configuration parameters:
- `--leader_proxy_connection_timeout` (Optional. Default: 5000):
  Maximum time, in milliseconds, for connecting to the
  current Marathon leader from this Marathon instance.
- `--leader_proxy_read_timeout` (Optional. Default: 10000):
  Maximum time, in milliseconds, for reading from the
  current Marathon leader.

Furthermore, leader proxying now uses HTTPS to talk to the leader if `--http_disable` was specified.

These bugs are now obsolete:
- #1540 A marathon instance should never proxy to itself.
- #1541 Proxying Marathon requests should use timeouts.
- #1556 Proxying doesn't work for HTTPS.

#### Relative URL paths in the UI

The UI now uses relative URL paths making it easier to run Marathon behind a reverse proxy.

#### Restrict the number of versions by default

In Marathon, most state is versioned. This includes app definitions and group definitions. Marathon already allowed
restricting the number of versions that are kept by `--zk_max_versions` but you had to specify that explicitly.

Since some of our users were running into problems with too many versions, we decided to restrict to
a maximum number of `25` versions by default. We recommend to set this to an even lower number, e.g. `3`, since
higher numbers impact performance negatively.

#### New format for the `http_endpoints` command line parameter

We changed the format of the `http_endpoints` command line parameter from a
space-separated to a comma-separated list of endpoints, in order to be
more consistent with the documentation and with the format used in other
parameters.

WARNING: If you use the `http_endpoints` parameter with multiple space
separated URLs, you will need to migrate to the comma-separated format.

#### Do not delay task launches anymore as a result of failed health checks

Marathon uses an exponential back off strategy to delay further task launches after task failures. This should
prevent keeping the cluster busy with task launches which are set up to fail anyway. The delay was also increased
when health checks failed leading to delayed recovery.

Since health checks typically (depending on configuration) take a while to determine that a task is unhealthy,
this already delays restarting sufficiently.

#### Removed deprecated command line arguments `zk_hosts` and `zk_state`

The command line arguments `zk_hosts` and `zk_state` were deprecated for some time and got removed in this version.
Use the `--zk` command line argument to define the ZooKeeper connection string.

#### servicerouter.py

Is a replacement for the haproxy-marathon-bridge. It reads Marathon task information and generates haproxy
configuration. It supports advanced functions like sticky sessions, HTTP to HTTPS redirection, SSL offloading, VHost
support and templating.

#### Be more careful about using `ulimit` in startup script

The startup script now only increases the maximum number of open files if the limit is too low and if the
script is started as `root`.

### Fixed Bugs

#1259 - Reject null bodies in REST API
#1540 - A marathon instance should never proxy to itself
#1541 - Proxying Marathon requests should use timeouts
#1556 - Proxying doesn't work for HTTPS
#1365 - servicePorts are not copied into ports
#1389 - Don't set ulimit in marathon-framework
#1452 - Remove ulimit changes from shell script
#1446 - Validation for app creation & update should not differ
#1456 - Marathon delaying app start by 70min after cluster reboot
#1481 - App stays in locked state
#1520 - Marathon don't match correctly the resources for a defined role
#1522 - Disk resource quota not communicated to Mesos on task launch
#1583 - Task uses invalid resources: disk(*):0
#1564 - args[] does not work
#1569 - http_endpoints not being split on comma
#1572 - Remove $$EnhancerByGuice$$... from class names in metrics

### Changelog

Changelog from Marathon 0.8.2 to 0.9.0-RC1: https://github.com/mesosphere/marathon/compare/v0.8.2...v0.9.0-RC1

### Contributors

| Commits | Contributor |
| --- | --- |
| 72 | Peter Kolloch |
| 35 | Matthias Veit |
| 31 | Lukas Loesche |
| 20 | Sunil Shah |
| 18 | Cody Maloney |
| 16 | aquamatthias |
| 14 | Dario Rexin |
| 13 | Jeremy Lingmann |
| 7 | Gaston Kleiman |
| 6 | Felix Gertz |
| 5 | Lukas Lösche |
| 5 | Philip Norman |
| 3 | Tamar Ben-Shachar |
| 3 | Gastón Kleiman |
| 2 | Ian Babrou |
| 2 | Connor Doyle |
| 1 | janisz |
| 1 | Chris Heller |
| 1 | Hans van den Bogert |
| 1 | Kamil Warguła |
| 1 | Michael Hausenblas |
| 1 | Pawel Chojnacki |
| 1 | Pradeep Chhetri |
| 1 | Sanjana Joshi Bhat |
| 1 | Thomas French |
| 1 | Tyler Neely |
| 1 | drexin |
| 1 | Adam Avilla |
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1417700/assets,https://api.github.com/repos/mesosphere/marathon/releases/1417700,releasing-0.9,https://api.github.com/repos/mesosphere/marathon/tarball/v0.9.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.9.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.9.0-RC1,v0.9.0-RC1,False,True
1380427,2015-06-04T15:39:05Z,2015-06-05T09:48:25Z,v0.8.2,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.2.

**Note: We highly recommend to use this version of marathon on top of mesos-0.22.1
since this addresses a serious bug in the state abstraction.**

### Overview

#### New health check option `ignoreHttp1xx`

When set to true, the health check for the given app will ignore HTTP
response codes 100 to 199, in contrast to considering it as unhealthy. With this unbounded task startup times can be handled: the tasks are neither
healthy nor unhealthy as long as e.g. ""100 - continue"" is returned.

#### HTTPS support for health checks

Health checks now work with HTTPS.

#### Faster (configurable) task distribution

Mesos frequently sends resource offers to Marathon (and all other frameworks). Each offer will represent the available resources of a single node in the cluster. Before this change, Marathon would only start a single task per resource offer, which led to slow task launching in smaller clusters. In order to speed up task launching and use the resource offers Marathon receives from Mesos more efficiently, we added a new offer matching algorithm which tries to start as many tasks as possible per task offer cycle. The maximum number of tasks to start is configurable with the following startup parameters:

`--max_tasks_per_offer` (default 1): The maximum number of tasks to start on a single offer per cycle

`--max_tasks_per_offer_cycle` (default 1000): The maximum number of tasks to start in total per cycle

**Example**

Given a cluster with 200 nodes and the default settings for task launching. If we want to start 2000 tasks, it would take at least 10 cycles, because we are only starting 1 task per offer, leading to a total maximum of 200. If we change the `max_tasks_per_offer` setting to 10, we could start 1000 tasks per offer (the default setting for `max_tasks_per_offer_cycle`), reducing the necessary cycles to 2. If we also adjust the `max_tasks_per_offer_cycle` to 2000, we could start all tasks in a single cycle (given we receive offers for all nodes).

**Important**

Starting too many tasks at once can lead to a higher number of status updates being sent to Marathon than it can currently handle. We will improve the number of events Marathon can handle in a future version. A maximum of 1000 tasks has proven to be a good default for now. `max_tasks_per_offer` should be adjusted so that `NUM_MESOS_SLAVES * max_tasks_per_offer == max_tasks_per_offer_cycle`. E.g. in a cluster of 200 nodes it should be set to 5.

#### Security settings configurable through env variables

Security settings are now configurable through the following environment variables:

`$MESOSPHERE_HTTP_CREDENTIALS` for HTTP authentication (e.g. `export MESOSPHERE_HTTP_CREDENTIALS=user:password`)

`$MESOSPHERE_KEYSTORE_PATH` + `$MESOSPHERE_KEYSTORE_PASS` for SSL settings

#### Isolated deployment rollbacks

Marathon allows rolling back running deployments via the [DELETE /v2/deployments/{deploymentId}](https://mesosphere.github.io/marathon/docs/rest-api.html#delete-/v2/deployments/%7Bdeploymentid%7D) command or the ""rollback"" button in the GUI.

In prior Marathon versions, deployment rollbacks reverted all applications to the state before the selected deployment. If you performed concurrent deployments, these would also be reverted.

Now Marathon isolates the changes of the selected deployment and calculates a deployment plan which prevents changing unrelated apps.

#### Empty groups can be overwritten by apps

Instead of declining the creation of an app with the same name as a previously existing group, the group will now be removed if empty and replaced with the app.

#### Performance improvements

App and task related API calls should be considerably faster with large amounts of tasks now.

List of closed issues:
https://github.com/mesosphere/marathon/issues?q=milestone%3A0.8.2+is%3Aclosed

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.2/marathon-0.8.2.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.2/marathon-0.8.2.tgz.sha256

Changelog from Marathon 0.8.1 to 0.8.2:

https://github.com/mesosphere/marathon/compare/v0.8.1...v0.8.2

| Commits | Contributor |
| --- | --- |
| 71 | Dario Rexin |
| 54 | Peter Kolloch |
| 14 | Matthias Veit |
| 13 | Connor Doyle |
| 12 | mlunoe |
| 10 | Sunil Shah |
| 4 | drexin |
| 4 | Sielski |
| 3 | Lukas Lösche |
| 3 | aquamatthias |
| 2 | Felix Bechstein |
| 2 | Tobi Knaup |
| 2 | Krystian Nowak |
| 2 | Jason Swartz |
| 1 | Wouter Kwakernaak |
| 1 | Xu Lijian |
| 1 | Zhuoyun Wei |
| 1 | mroth |
| 1 | nevins-b |
| 1 | Dominic Hamon |
| 1 | Dr. Stefan Schimanski |
| 1 | Ian Babrou |
| 1 | Joerg Schad |
| 1 | Joshua C. Randall |
| 1 | José Armando García Sancio |
| 1 | Kamil Warguła |
| 1 | Ken Sipe |
| 1 | Making GitHub Delicious. |
| 1 | Michael Hausenblas |
| 1 | Scott Rankin |
| 1 | Seth Hoenig |
| 1 | Timo Reimann |

generated by `git shortlog -s -n v0.8.1..v0.8.2`
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1380427/assets,https://api.github.com/repos/mesosphere/marathon/releases/1380427,releasing-0.8.2,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.2,https://github.com/mesosphere/marathon/releases/tag/v0.8.2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.2,v0.8.2,False,False
1348191,2015-05-28T11:59:59Z,2015-05-28T14:16:42Z,v0.8.2-RC4,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.2-RC4.

**Note: We highly recommend to use this version of marathon on top of mesos-0.22.1,
since this addresses a serious bug regarding state abstraction.**

This release candidate addresses an important performance regression #1497 which we found and fixed with the extensive help of @bobrik.

For the complete list of changes in this release, see https://github.com/mesosphere/marathon/releases/v0.8.2-RC1.

### Bug fixes in prior release candidates

Changes in RC3:
Fixes #1507 - Ignore all NonFatal exceptions in MarathonStore.names()

Changes in RC2:
Fixes #1481 - Use timeout in call to Future.get in MarathonStore.names()
Update mesos-util dependency to 0.22.1-1
",https://api.github.com/users/kolloch,339354,kolloch,https://api.github.com/repos/mesosphere/marathon/releases/1348191/assets,https://api.github.com/repos/mesosphere/marathon/releases/1348191,releasing-0.8.2,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.2-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.8.2-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.2-RC4,v0.8.2-RC4,False,True
1307814,2015-05-13T09:26:59Z,2015-05-18T12:50:33Z,v0.8.2-RC3,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.2-RC3.

**Note: We highly recommend to use this version of marathon on top of mesos-0.22.1,
since this addresses a serious bug regarding state abstraction.**

For the complete List of changes in this release, see https://github.com/mesosphere/marathon/releases/v0.8.2-RC1.

Changes in RC2:
Fixes #1481 - Use timeout in call to Future.get in MarathonStore.names()
Update mesos-util dependency to 0.22.1-1

Changes in RC3:
Fixes #1507 - Ignore all NonFatal exceptions in MarathonStore.names()
",https://api.github.com/users/aquamatthias,330485,aquamatthias,https://api.github.com/repos/mesosphere/marathon/releases/1307814/assets,https://api.github.com/repos/mesosphere/marathon/releases/1307814,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.2-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.8.2-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.2-RC3,v0.8.2-RC3,False,True
1232641,2015-04-29T10:28:13Z,2015-04-29T11:33:28Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.2-RC1.

**Overview:**

#### New health check option `ignoreHttp1xx`

When set to true, the health check for the given app will ignore HTTP
response codes 100 to 199, in contrast to considering it as unhealthy. With this unbounded task startup times can be handled: the tasks are neither
healthy nor unhealthy as long as e.g. ""100 - continue"" is returned.

#### HTTPS support for health checks

Health checks now work with HTTPS.

#### Faster (configurable) task distribution

Mesos frequently sends resource offers to Marathon (and all other frameworks). Each offer will represent the available resources of a single node in the cluster. Until now, Marathon would only start a single task per resource offer, which led to slow task launching in smaller clusters. In order to speed up task launching and use the resource offers Marathon receives from Mesos more efficiently, we added a new offer matching algorithm, that tries to start as many tasks as possible per task offer cycle. The maximum numbers of tasks to start are configurable with the following startup parameters:

`--max_tasks_per_offer` (default 1): The maximum number of tasks to start on a single offer per cycle

`--max_tasks_per_offer_cycle` (default 1000): The maximum number of tasks to start in total per cycle

**Example**

Given a cluster with 200 nodes and the default settings for task launching. If we want to start 2000 tasks, it would take at least 10 cycles, because we are only starting 1 task per offer, leading to a total maximum of 200. If we change the `max_tasks_per_offer` setting to 10, we could start 1000 tasks per offer (the default setting for `max_tasks_per_offer_cycle`), reducing the necessary cycles to 2. If we also adjust the `max_tasks_per_offer_cycle` to 2000, we could start all tasks in a single cycle (given we receive offers for all nodes). 

**Important**

Starting too many tasks at once can lead to a higher number of status updates being sent to Marathon than it can currently handle. We will improve the number of events Marathon can handle in a future version. A maximum of 1000 tasks has proven to be a good default for now. `max_tasks_per_offer` should be adjusted so that `NUM_MESOS_SLAVES * max_tasks_per_offer == max_tasks_per_offer_cycle`. E.g. in a cluster of 200 nodes it should be set to 5.

#### Security settings configurable through env variables

Security settings are now configurable through the following environment variables:

`$MESOSPHERE_HTTP_CREDENTIALS` for HTTP authentication (e.g. `export MESOSPHERE_HTTP_CREDENTIALS=user:password`)

`$MESOSPHERE_KEYSTORE_PATH` + `$MESOSPHERE_KEYSTORE_PASS` for SSL settings

#### Deployment rollbacks

Rolling back a deployment should not affect unrelated applications anymore.

#### Empty groups can be overwritten by apps

Instead of declining the creation of an app with the same name as a previously existing group, the group will now be removed if empty and replaced with the app.

#### Performance improvements

App and task related API calls should be considerably faster with large amounts of tasks now.

List of closed issues:
https://github.com/mesosphere/marathon/issues?q=milestone%3A0.8.2+is%3Aclosed

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.2-RC1/marathon-0.8.2-RC1.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.2-RC1/marathon-0.8.2-RC1.tgz.sha256

Changelog from Marathon 0.8.1 to 0.8.2-RC1:

https://github.com/mesosphere/marathon/compare/v0.8.1...v0.8.2-RC1

| Commits | Contributor |
| --- | --- |
| 71 | Dario Rexin |
| 49 | Peter Kolloch |
| 13 | Connor Doyle |
| 12 | mlunoe |
| 10 | Sunil Shah |
| 13 | Matthias Veit |
| 4 | Sielski |
| 3 | Lukas Lösche |
| 2 | Krystian Nowak |
| 2 | Tobi Knaup |
| 2 | Jason Swartz |
| 2 | Felix Bechstein |
| 1 | Wouter Kwakernaak |
| 1 | Xu Lijian |
| 1 | Zhuoyun Wei |
| 1 | mroth |
| 1 | nevins-b |
| 1 | Dominic Hamon |
| 1 | Dr. Stefan Schimanski |
| 1 | Ian Babrou |
| 1 | Joerg Schad |
| 1 | Joshua C. Randall |
| 1 | José Armando García Sancio |
| 1 | Kamil Warguła |
| 1 | Ken Sipe |
| 1 | Making GitHub Delicious. |
| 1 | Michael Hausenblas |
| 1 | Scott Rankin |
| 1 | Seth Hoenig |
| 1 | Timo Reimann |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/1232641/assets,https://api.github.com/repos/mesosphere/marathon/releases/1232641,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.2-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.8.2-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.2-RC1,v0.8.2-RC1,False,True
1040667,2015-03-11T22:21:38Z,2015-03-12T00:18:46Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.1.

Overview:
- New endpoint PUT /v2/groups/{id}?dryRun=true to preview deployment plans
- New endpoint POST /v2/tasks/delete to delete multiple tasks
- POST /v2/apps now rejects existing ids
- PUT /v2/apps/{id} always returns deployment info
- GET /v2/queue includes delay again
- Marathon sends URL to web UI to Mesos on registration
- new config flag --webui_url to set a custom URL for the web UI
- new task health indicator in the app list
- UI is now linkable
- Introducing tasks page with more room for content
- bin/marathon-framework can now be started with `--no-logger` to disable logging to syslog

List of closed issues:
https://github.com/mesosphere/marathon/issues?q=milestone%3A0.8.1+is%3Aclosed

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.1/marathon-0.8.1.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.1/marathon-0.8.1.tgz.sha256

Changelog from Marathon 0.8.0 to 0.8.1:

https://github.com/mesosphere/marathon/compare/v0.8.0...v0.8.1

| Commits | Contributor |
| --- | --- |
| 65 | Dario Rexin |
| 18 | Dr. Stefan Schimanski |
| 14 | Felix Gertz |
| 10 | Connor Doyle |
| 7 | Michael Lunøe |
| 3 | Jeremy Lingmann |
| 4 | Lukas Lösche |
| 1 | José Armando García Sancio |
| 1 | Kamil Warguła |
| 1 | Rohith |
| 1 | Shingo Omura |
| 1 | Sielski |
| 1 | Thomas Rampelberg |
| 1 | Tobi Knaup |
| 1 | Jin Lee |
| 1 | Christoph Neuroth |
| 1 | Christos Kozyrakis |
| 1 | Drew Robb |
| 1 | Federico Feroldi |
| 1 | Ian Babrou |
| 1 | James Miller |
| 1 | Jason Swartz |
| 1 | Aron Wahl |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/1040667/assets,https://api.github.com/repos/mesosphere/marathon/releases/1040667,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.1,https://github.com/mesosphere/marathon/releases/tag/v0.8.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.1,v0.8.1,False,False
1011423,2015-03-04T09:39:38Z,2015-03-04T10:32:33Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.1-RC2.

Overview:
- New endpoint PUT /v2/groups/{id}?dryRun=true to preview deployment plans
  - **IMPORTANT**: changed from POST /v2/deployments/generate in RC1
- New endpoint POST /v2/tasks/delete to delete multiple tasks
  - **IMPORTANT**: changed from DELETE /v2/tasks in RC1
- POST /v2/apps now rejects existing ids
- PUT /v2/apps/{id} always returns deployment info
- GET /v2/queue includes delay again
- Marathon sends URL to web UI to Mesos on registration
- new config flag --webui_url to set a custom URL for the web UI
- new task health indicator in the app list
- UI is now linkable
- Introducing tasks page with more room for content
- bin/marathon-framework can now be started with `--no-logger` to disable logging to syslog

List of closed issues:
https://github.com/mesosphere/marathon/issues?q=milestone%3A0.8.1+is%3Aclosed

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.1-RC2/marathon-0.8.1-RC2.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.1-RC2/marathon-0.8.1-RC2.tgz.sha256

Changelog from Marathon 0.8.0 to 0.8.1-RC2:

https://github.com/mesosphere/marathon/compare/v0.8.0...v0.8.1-RC2

| Commits | Contributor |
| --- | --- |
| 65 | Dario Rexin |
| 18 | Dr. Stefan Schimanski |
| 14 | Felix Gertz |
| 10 | Connor Doyle |
| 7 | Michael Lunøe |
| 3 | Jeremy Lingmann |
| 4 | Lukas Lösche |
| 1 | José Armando García Sancio |
| 1 | Kamil Warguła |
| 1 | Rohith |
| 1 | Shingo Omura |
| 1 | Sielski |
| 1 | Thomas Rampelberg |
| 1 | Tobi Knaup |
| 1 | Jin Lee |
| 1 | Christoph Neuroth |
| 1 | Christos Kozyrakis |
| 1 | Drew Robb |
| 1 | Federico Feroldi |
| 1 | Ian Babrou |
| 1 | James Miller |
| 1 | Jason Swartz |
| 1 | Aron Wahl |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/1011423/assets,https://api.github.com/repos/mesosphere/marathon/releases/1011423,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.1-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.8.1-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.1-RC2,v0.8.1-RC2,False,True
987942,2015-02-25T17:57:00Z,2015-02-25T18:14:46Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.1-RC1.

Overview:
- New endpoint /v2/deployments/generate to preview deployment plans
- New endpoint DELETE /v2/tasks to delete multiple tasks
- POST /v2/apps now rejects existing ids
- PUT /v2/apps/{id} always returns deployment info
- GET /v2/queue includes delay again
- Marathon sends URL to web UI to Mesos on registration
- new config flag --webui_url to set a custom URL for the web UI
- new task health indicator in the app list
- UI is now linkable
- Introducing tasks page with more room for content

List of closed issues:
https://github.com/mesosphere/marathon/issues?q=milestone%3A0.8.1+is%3Aclosed

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.1-RC1/marathon-0.8.1-RC1.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.1-RC1/marathon-0.8.1-RC1.tgz.sha256

Changelog from Marathon 0.8.0 to 0.8.1-RC1:

https://github.com/mesosphere/marathon/compare/v0.8.0...v0.8.1-RC1

| Commits | Contributor |
| --- | --- |
| 61 | Dario Rexin |
| 18 | Dr. Stefan Schimanski |
| 14 | Felix Gertz |
| 10 | Connor Doyle |
| 7 | Michael Lunøe |
| 4 | Lukas Lösche |
| 3 | Jeremy Lingmann |
| 1 | Aron Wahl |
| 1 | James Miller |
| 1 | Jason Swartz |
| 1 | Federico Feroldi |
| 1 | Jin Lee |
| 1 | José Armando García Sancio |
| 1 | Kamil Warguła |
| 1 | Drew Robb |
| 1 | Christos Kozyrakis |
| 1 | Rohith |
| 1 | Shingo Omura |
| 1 | Thomas Rampelberg |
| 1 | Christoph Neuroth |
| 1 | Ian Babrou |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/987942/assets,https://api.github.com/repos/mesosphere/marathon/releases/987942,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.1-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.8.1-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.1-RC1,v0.8.1-RC1,False,True
918457,2015-02-04T18:14:49Z,2015-02-04T23:21:28Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.0.

Overview:
- there is now a `stop deployment` button in the `Deployments` section that stops a deployment without doing a rollback
- apps can now have labels
- when the UI can't fetch the current state, it will now keep showing the last known state
- an app can now define a `maximumOverCapacity` in the `upgradeStrategy` to limit the number of extra tasks that can run during a deployment
- there is now a `/v2/leader` endpoint that returns the current leader on a `GET` and starts a new leader election on a `DELETE` call
- switched to a new build system for the frontend
- modified the representation of docker parameters to allow multiple values for the same option. This is a backwards incompatible change.

**Before:**

``` json
{
...
   ""container"": {
      ""docker"": {
        ""parameters"": {
          ""key"": ""value""
        }
      }
   }
...
}
```

**After:**

``` json
{
...
   ""container"": {
      ""docker"": {
        ""parameters"": [
          { ""key"": ""some_key"", ""value"": ""some_value"" },
          { ""key"": ""some_key"", ""value"": ""some_other_value"" }
        ]
      }
   }
...
}
```
- optimized the task queue, starting large amounts of tasks could lead to performance problems and Marathon holding on the resource offers longer than it should
- the `UNLIKE` operator in constraints now matches if the attribute is not present on the slave
- the default value of `--task_launch_timeout` has been increased from 1 minute to 5 minutes and has been deprecated, as this is only a temporary fix for a Mesos issue (MESOS-1922)
- the output for backoff time in the logs is now in the format ""hours minutes seconds milliseconds"", used to be only nanoseconds
- the task list now shows relative instead of abolute times in the version field
- the maximum backoff for failing tasks is now configurable using `maxLaunchDelay`
- fixed several issues in the leader election that could lead to complete loss of the cluster state
- fixed an issue where health checks have been started for apps in staging state
- fixed an issue where apps that didn't change have been restarted on a group update
- fixed an issue where the `backOff` time of apps didn't expire
- fixed an issue where timeouts have not been set properly
- fixed the JSON responses that included health information
- fixed an issue with stalling deployments when scaling an application
- fixed an issue where health checks of older task version have not been restarted on failover
- fixed an issue that led to the creation of unknown tasks in the task tracker
- fixed an actor leak in the health check module
- fixed an issue that led to periodic tasks (e.g. task reconciliation) being executed on non-leaders
- fixed an issue that could lead to Marathon always using a new framework ID after failover
- fixed an issue in the haproxy-marathon-bridge that could crash the script
- fixed an issue that could lead to errors in leader election
- fixed an issue in the calculation of minimum number of healthy instances that could lead to stalling deployments when scaling down
- fixed an issue where `/v2/apps?embed=apps.tasks` did not embed the tasks

Changelog from Marathon 0.7.6 to 0.8.0:

https://github.com/mesosphere/marathon/compare/v0.7.6...v0.8.0

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.0/marathon-0.8.0.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.0/marathon-0.8.0.tgz.sha256

Enterprise Linux 6:
https://downloads.mesosphere.io/marathon/v0.8.0/marathon-0.8.0-1.1.97.el6.x86_64.rpm

Enterprise Linux 7:
https://downloads.mesosphere.io/marathon/v0.8.0/marathon-0.8.0-1.1.97.el7.x86_64.rpm

Debian / Ubuntu:
https://downloads.mesosphere.io/marathon/v0.8.0/marathon_0.8.0-1.1.97_amd64.deb

**Credits**

| Commits | Contributor |
| --- | --- |
| 78 | Dario Rexin |
| 46 | Dr. Stefan Schimanski |
| 43 | Michael Lunøe |
| 36 | Connor Doyle |
| 19 | Felix Gertz |
| 4 | Xu Lijian |
| 3 | Ian Babrou |
| 3 | Diogo Gomes |
| 2 | Lukas Lösche |
| 2 | Tobi Knaup |
| 1 | Mikael Johansson |
| 1 | Phil Dougherty |
| 1 | Roy Bos |
| 1 | Sam Saccone |
| 1 | Tom Dooner |
| 1 | crackcomm |
| 1 | lingmann |
| 1 | Cory G Watson |
| 1 | Halit Olali |
| 1 | James Miller |
| 1 | Kevin McGrath |
| 1 | Kyle Anderson |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/918457/assets,https://api.github.com/repos/mesosphere/marathon/releases/918457,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.0,https://github.com/mesosphere/marathon/releases/tag/v0.8.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.0,v0.8.0,False,False
892515,2015-01-28T11:00:23Z,2015-01-28T11:22:05Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.0-RC2.

Overview:
- the `UNLIKE` operator in constraints now matches if the attribute is not present on the slave
- the default value of `--task_launch_timeout` has been increased from 1 minute to 5 minutes and has been deprecated, as this is only a temporary fix for a Mesos issue (MESOS-1922)
- the output for backoff time in the logs is now in the format ""hours minutes seconds milliseconds"", used to be only nanoseconds
- fixed an issue that could lead to errors in leader election
- the task list now shows relative instead of abolute times in the version field
- the maximum backoff for failing tasks is now configurable using `maxLaunchDelay`
- fixed an issue in the calculation of minimum number of healthy instances that could lead to stalling deployments when scaling down
- fixed an issue where `/v2/apps?embed=apps.tasks` did not embed the tasks

Changelog from Marathon 0.8.0-RC1 to 0.8.0-RC2:

https://github.com/mesosphere/marathon/compare/v0.8.0-RC1...v0.8.0-RC2

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.0-RC2/marathon-0.8.0-RC2.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.0-RC2/marathon-0.8.0-RC2.tgz.sha256

CentOS 7:
https://downloads.mesosphere.io/marathon/v0.8.0-RC2/marathon-0.8.0-1.1.82.RC2.centos7.x86_64.rpm

RHEL:
https://downloads.mesosphere.io/marathon/v0.8.0-RC2/marathon-0.8.0-1.1.82.RC2.x86_64.rpm

Debian / Ubuntu 10.04:
https://downloads.mesosphere.io/marathon/v0.8.0-RC2/marathon_0.8.0-1.1.82.RC2_amd64.deb
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/892515/assets,https://api.github.com/repos/mesosphere/marathon/releases/892515,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.8.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.0-RC2,v0.8.0-RC2,False,True
872476,2015-01-21T20:07:31Z,2015-01-21T20:50:31Z,,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.8.0-RC1.

Overview:
- there is now a `stop deployment` button in the `Deployments` section that stops a deployment without doing a rollback
- apps can now have labels
- when the UI can't fetch the current state, it will now keep showing the last known state
- an app can now define a `maximumOverCapacity` in the `upgradeStrategy` to limit the number of extra tasks that can run during a deployment
- there is now a `/v2/leader` endpoint that returns the current leader on a `GET` and starts a new leader election on a `DELETE` call
- switched to a new build system for the frontend
- modified the representation of docker parameters to allow multiple values for the same option
- optimized the task queue, starting large amounts of tasks could lead to performance problems and Marathon holding on the resource offers longer than it should
- fixed several issues in the leader election that could lead to complete loss of the cluster state
- fixed an issue where health checks have been started for apps in staging state
- fixed an issue where apps that didn't change have been restarted on a group update
- fixed an issue where the `backOff` time of apps didn't expire
- fixed an issue where timeouts have not been set properly
- fixed the JSON responses that included health information
- fixed an issue with stalling deployments when scaling an application
- fixed an issue where health checks of older task version have not been restarted on failover
- fixed an issue that led to the creation of unknown tasks in the task tracker
- fixed an actor leak in the health check module
- fixed an issue that led to periodic tasks (e.g. task reconciliation) being executed on non-leaders
- fixed an issue that could lead to Marathon always using a new framework ID after failover
- fixed an issue in the haproxy-marathon-bridge that could crash the script

Changelog from Marathon 0.7.6 to 0.8.0-RC1:

https://github.com/mesosphere/marathon/compare/v0.7.6...v0.8.0-RC1

Tarball:
https://downloads.mesosphere.io/marathon/v0.8.0-RC1/marathon-0.8.0-RC1.tgz

SHA:
https://downloads.mesosphere.io/marathon/v0.8.0-RC1/marathon-0.8.0-RC1.tgz.sha256

CentOS 7:
https://downloads.mesosphere.io/marathon/v0.8.0-RC1/marathon-0.8.0-0.1.67.RC1.centos7.x86_64.rpm

RHEL:
https://downloads.mesosphere.io/marathon/v0.8.0-RC1/marathon-0.8.0-0.1.67.RC1.x86_64.rpm

Debian / Ubuntu 10.04:
https://downloads.mesosphere.io/marathon/v0.8.0-RC1/marathon_0.8.0-0.1.67.RC1_amd64.deb

**Credits**

| Commits | Contributor |
| --- | --- |
| 62 | Dario Rexin |
| 42 | Michael Lunøe |
| 41 | Dr. Stefan Schimanski |
| 30 | Connor Doyle |
| 16 | Felix Gertz |
| 1 | Kyle Anderson |
| 2 | Lukas Lösche |
| 1 | Mikael Johansson |
| 1 | Phil Dougherty |
| 1 | Roy Bos |
| 1 | Sam Saccone |
| 1 | Tobi Knaup |
| 1 | Tom Dooner |
| 1 | Xu Lijian |
| 1 | crackcomm |
| 1 | lingmann |
| 1 | Cory G Watson |
| 1 | Halit Olali |
| 1 | Kevin McGrath |
",https://api.github.com/users/drexin,433020,drexin,https://api.github.com/repos/mesosphere/marathon/releases/872476/assets,https://api.github.com/repos/mesosphere/marathon/releases/872476,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.8.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.8.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.8.0-RC1,v0.8.0-RC1,False,True
769461,2014-12-06T21:03:57Z,2014-12-09T21:57:27Z,marathon-0.7.6,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.7.6.

Overview:
- Added GROUP_BY constraint for hostname.
- An event is emitted when Marathon registers with, re-registers, or disconnects from Mesos.
- Task checkpointing is now enabled by default.
- Added a per-app parameter for Docker privileged mode.
- Added a per-app parameter to pass arbitrary options to `docker run`.
- Added handling of new Mesos task state TASK_ERROR.
- The timeout for I/O operations to the persistence layer is now configurable.
- Began migrating JSON (de)serialization to play-json.
- Task names are now set to the fully-qualified app ID (instead of the task ID).
- Added a restart app primitive to simplify rolling deploy implementation.
- Overhauled deployment plan calculation, yielding less stages and actions in general.
- More Mesos and Marathon metadata is available in the task environment (app ID, task ID, slave ID).
- Marathon now periodically queries Mesos for the list of all known tasks via reconciliation.
- The default task reconciliation interval has been increased from 30 seconds to 5 minutes.
- The run script passes JVM options in JAVA_OPTS to Marathon.
- Various bugfixes and improvements.

Changelog from Marathon 0.7.5 to 0.7.6:
https://github.com/mesosphere/marathon/compare/v0.7.5...v0.7.6

Tarball:
http://downloads.mesosphere.io/marathon/v0.7.6/marathon-0.7.6.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.6/marathon-0.7.6.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.6/marathon-0.7.6-1.0.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.6/marathon_0.7.6-1.0_amd64.deb
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/769461/assets,https://api.github.com/repos/mesosphere/marathon/releases/769461,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.6,https://github.com/mesosphere/marathon/releases/tag/v0.7.6,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.6,v0.7.6,False,False
700329,2014-11-13T04:46:54Z,2014-11-13T05:36:52Z,marathon-0.7.5,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.7.5.

**BUGFIX:**

0.7.5 resolves a regression in 0.7.4 where apps with a container and dynamic
service ports (but no port mappings) resulted in Marathon dropping the
container from the app.
See: https://github.com/mesosphere/marathon/issues/779

Changelog from Marathon 0.7.4 to 0.7.5:
https://github.com/mesosphere/marathon/compare/v0.7.4...v0.7.5

Tarball:
http://downloads.mesosphere.io/marathon/v0.7.5/marathon-0.7.5.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.5/marathon-0.7.5.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.5/marathon-0.7.5-1.0.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.5/marathon_0.7.5-1.0_amd64.deb

Packages are also available via the Mesosphere repositories.
See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/700329/assets,https://api.github.com/repos/mesosphere/marathon/releases/700329,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.5,https://github.com/mesosphere/marathon/releases/tag/v0.7.5,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.5,v0.7.5,False,False
695716,2014-11-07T19:14:15Z,2014-11-11T17:47:55Z,marathon-0.7.4,"On behalf of the Marathon contributors, we are pleased to announce 
the availability of version 0.7.4. 

Notable improvements and bug fixes since 0.7.3: 
- Added support for Mesos framework authentication. 
- Added GET /v2/apps?embed=apps.failures to embed a new 
  `lastTaskFailure` key that includes the last abnormal task state, 
  status message, host, timestamp, and other useful debug info. 
- Added DELETE /v2/deployments/{id}?force=true to cancel a running 
  deployment without starting a new deployment to effect a rollback. 
- No more --executor_health_checks flag required to use COMMAND 
  health checks, COMMAND and other health check protocols may now 
  be used in concert. 
- Health checks are now managed per-app-version, which makes for 
  more stable and predictable deployment behavior. 
- Fixed a bug in the scheduler that sometimes caused superfluous 
  tasks to be started. 
- Marathon command arguments can now be passed as environment 
  variables, just like Mesos. 
- Added scalastyle rules to enforce source line length limit. 

Changelog from Marathon 0.7.3 to 0.7.4: 
https://github.com/mesosphere/marathon/compare/v0.7.3...v0.7.4 

Tarball: 
http://downloads.mesosphere.io/marathon/v0.7.4/marathon-0.7.4.tgz 

SHA: 
http://downloads.mesosphere.io/marathon/v0.7.4/marathon-0.7.4.tgz.sha256 

CentOS/RHEL6: 
http://downloads.mesosphere.io/marathon/v0.7.4/marathon-0.7.4-1.0.x86_64.rpm 

Debian/Ubuntu 14.04: 
http://downloads.mesosphere.io/marathon/v0.7.4/marathon_0.7.4-1.0_amd64.deb 

Packages are also available via the Mesosphere repositories. 
See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories 

Statistics: 
- 15 contributors 
- 102 commits 
- 35 issues closed 
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/695716/assets,https://api.github.com/repos/mesosphere/marathon/releases/695716,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.4,https://github.com/mesosphere/marathon/releases/tag/v0.7.4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.4,v0.7.4,False,False
607323,2014-10-06T07:13:55Z,2014-10-06T21:09:14Z,marathon-0.7.2,"> Marathon 0.7.2 is DoA due to a bug in an auxiliary packaging script.
> The tag exists in the source repository, but there are no plans to
> host packages for this version.
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/607323/assets,https://api.github.com/repos/mesosphere/marathon/releases/607323,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.2,https://github.com/mesosphere/marathon/releases/tag/v0.7.2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.2,v0.7.2,False,False
607270,2014-10-06T17:49:08Z,2014-10-06T20:49:23Z,marathon-0.7.3,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.7.3.

**NOTE:**
_Marathon 0.7.2 is DoA due to a bug in an auxiliary packaging script.
The tag exists in the source repository, but there are no plans to
host packages for this version._

Notable improvements and bug fixes since 0.7.1:
- Adds support for an explicit service port when using
  Docker bridged networking mode.
- Marathon now sets the $HOST environment variable,
  inherited by command health checks.
- Fixes a DNS resolution problem for TCP health checks.
- Fixes an issue with the app JSON validator related
  to the health check portIndex value.
- Fixes an issue affecting scaling of applications.
- Fixes an issue where Marathon killed tasks in the
  starting state during reconciliation.
- Fixes an issue with app ID handling when migrating
  from Marathon 0.4.x.
- Fixes exponential backoff (did not reset when an app
  was changed or deleted).
- Fixes internal actor replies when there is no sender,
  avoiding some superfluous logging output.
- Fixes docs for the LIKE constraint operator, adds the
  UNLIKE constraint operator.
- Adds config values inherited from Chaos to the
  /v2/info endpoint.
- Updated from Scala 2.10 to Scala 2.11

Changelog from Marathon 0.7.1 to 0.7.2:
https://github.com/mesosphere/marathon/compare/v0.7.1...v0.7.2

Changelog from Marathon 0.7.2 to 0.7.3:
https://github.com/mesosphere/marathon/compare/v0.7.2...v0.7.3

Tarball:
http://downloads.mesosphere.io/marathon/v0.7.3/marathon-0.7.3.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.3/marathon-0.7.3.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.3/marathon-0.7.3-1.0.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.3/marathon_0.7.3-1.0_amd64.deb

Packages are also available via the Mesosphere repositories.
See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/607270/assets,https://api.github.com/repos/mesosphere/marathon/releases/607270,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.3,https://github.com/mesosphere/marathon/releases/tag/v0.7.3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.3,v0.7.3,False,False
586013,2014-09-26T15:58:18Z,2014-09-26T18:14:19Z,marathon-0.7.1,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.7.1.

This release includes new features and bug fixes, notably:
- Deployments are now persisted with the rest of Marathon’s distributed
  state so they can survive Marathon failover.
- Support for Docker bridged networking mode (requires Mesos 0.20.1).
  See the “Bridged Networking Mode” section on the Marathon docs site:
  https://mesosphere.github.io/marathon/docs/native-docker.html
- New “Deployments” page in the UI, displaying running deployments and
  allowing users to roll them back at the click of a button.
- New “about” modal in the UI, displaying version and configuration values.
- Improved efficiency for persisted task statuses.
- haproxy-marathon-bridge now accepts multiple Marathon endpoints for HA.
- Fix a flaky deployments test.

0.7.1 also introduces keyboard shortcuts in the Web UI!

Navigation:
- `g` and then `a`: go to the apps tab
- `g` and then `d`: go to the deployments tab
- `c`: bring up the new app creation modal
- `esc`: close the current visible modal
- `shift` + `,`: bring up the info modal

Apps:
- `#`: destroy the current active app (with a prompt first)

Changelog from Marathon 0.7.0 to 0.7.1:
https://github.com/mesosphere/marathon/compare/v0.7.0...v0.7.1

Tarball:
http://downloads.mesosphere.io/marathon/v0.7.1/marathon-0.7.1.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.1/marathon-0.7.1.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.1/marathon-0.7.1-1.0.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.1/marathon_0.7.1-1.0_amd64.deb

Packages are also available via the Mesosphere repositories.
See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/586013/assets,https://api.github.com/repos/mesosphere/marathon/releases/586013,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.1,https://github.com/mesosphere/marathon/releases/tag/v0.7.1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.1,v0.7.1,False,False
577333,2014-09-22T16:02:23Z,2014-09-23T17:04:29Z,marathon-0.7.0,"On behalf of the Marathon contributors, we are pleased to announce
the availability of version 0.7.0.

This release includes many new features and bug fixes, notably:
- Compatibility with the native docker containerizer in Mesos 0.20.0
- Application groups
- Rolling deployments
- Artifact cache
- Executor health checks

Perhaps equally exciting, read all about Marathon's capabilities
on the all-new docs site: https://mesosphere.github.io/marathon/docs

Changelog from Marathon 0.6.1 to 0.7.0:
https://github.com/mesosphere/marathon/compare/marathon-0.6.1...v0.7.0

Tarball:
http://downloads.mesosphere.io/marathon/v0.7.0/marathon-0.7.0.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.0/marathon-0.7.0.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.0/marathon-0.7.0-1.0.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.0/marathon_0.7.0-1.1_amd64.deb

Packages are also available via the Mesosphere repositories.
See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/577333/assets,https://api.github.com/repos/mesosphere/marathon/releases/577333,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.0,https://github.com/mesosphere/marathon/releases/tag/v0.7.0,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.0,v0.7.0,False,False
570710,2014-09-19T21:52:39Z,2014-09-19T23:27:04Z,marathon-0.7.0-RC4,"This RC fixes the following problems: 
- When upgrading from a version of Marathon older than 0.5.0 the UI could not display the tasks returned by the REST API because they lacked a version. 
- Various minor issues regarding the assignment of default values for optional parameters in the REST API. 

Tarball: 
http://downloads.mesosphere.io/marathon/v0.7.0-RC4/marathon-0.7.0-RC4.tgz 

SHA: 
http://downloads.mesosphere.io/marathon/v0.7.0-RC4/marathon-0.7.0-RC4.tgz.sha256 

CentOS/RHEL6: 
http://downloads.mesosphere.io/marathon/v0.7.0-RC4/marathon-0.7.0-0.4.RC4.x86_64.rpm 

Debian/Ubuntu 14.04: 
http://downloads.mesosphere.io/marathon/v0.7.0-RC4/marathon_0.7.0-0.4.RC4_amd64.deb 

Debian/Ubuntu 14.04 packages are also available via the Mesosphere testing 
repositories. 

Debian 7:
deb http://repos.mesosphere.io/debian wheezy-testing main 

Ubuntu 14.04:
deb http://repos.mesosphere.io/ubuntu trusty-testing main 

See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories 

Setup:

```
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF 
DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]') 
CODENAME=$(lsb_release -cs) 
```

Add the repository:

```
echo ""deb http://repos.mesosphere.io/${DISTRO} ${CODENAME}-testing main"" | \ 
sudo tee /etc/apt/sources.list.d/mesosphere.list 
sudo apt-get -y update 
```

Install or upgrade Marathon package:

```
sudo apt-get -y install marathon 
```

Changelog from Marathon 0.7.0-RC3 to 0.7.0-RC4: 
https://github.com/mesosphere/marathon/compare/v0.7.0-RC3...v0.7.0-RC4 
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/570710/assets,https://api.github.com/repos/mesosphere/marathon/releases/570710,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.0-RC4,https://github.com/mesosphere/marathon/releases/tag/v0.7.0-RC4,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.0-RC4,v0.7.0-RC4,False,True
562706,2014-09-15T19:14:19Z,2014-09-17T01:38:47Z,marathon-0.7.0-RC3,"Tarball:
http://downloads.mesosphere.io/marathon/v0.7.0-RC3/marathon-0.7.0-RC3.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.0-RC3/marathon-0.7.0-RC3.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.0-RC3/marathon-0.7.0-0.3.RC3.x86_64.rpm

Debian/Ubuntu 14.04:
http://downloads.mesosphere.io/marathon/v0.7.0-RC3/marathon_0.7.0-0.3.RC3_amd64.deb

Debian/Ubuntu 14.04 packages are also available via the Mesosphere testing
repositories.

Debian 7
deb http://repos.mesosphere.io/debian wheezy-testing main

Ubuntu 14.04
deb http://repos.mesosphere.io/ubuntu trusty-testing main

See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories

_Setup_

```
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
CODENAME=$(lsb_release -cs)
```

_Add the repository_

```
echo ""deb http://repos.mesosphere.io/${DISTRO} ${CODENAME}-testing main"" | \
sudo tee /etc/apt/sources.list.d/mesosphere.list
sudo apt-get -y update
```

_Install or upgrade Marathon package_

```
sudo apt-get -y install marathon
```

Changelog from Marathon 0.7.0-RC2 to 0.7.0-RC3:
https://github.com/mesosphere/marathon/compare/v0.7.0-RC2...v0.7.0-RC3
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/562706/assets,https://api.github.com/repos/mesosphere/marathon/releases/562706,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.0-RC3,https://github.com/mesosphere/marathon/releases/tag/v0.7.0-RC3,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.0-RC3,v0.7.0-RC3,False,True
554470,2014-09-12T05:20:11Z,2014-09-12T21:00:44Z,marathon-0.7.0-RC2,"Tarball:
http://downloads.mesosphere.io/marathon/v0.7.0-RC2/marathon-0.7.0-RC2.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.0-RC2/marathon-0.7.0-RC2.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.0-RC2/marathon-0.7.0-0.2.RC2.x86_64.rpm

Debian/Ubuntu 14.04 packages are also available via the Mesosphere testing
repositories.

Debian 7
deb http://repos.mesosphere.io/debian wheezy-testing main

Ubuntu 14.04
deb http://repos.mesosphere.io/ubuntu trusty-testing main

See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories

Changelog:

[Changelog](https://github.com/mesosphere/marathon/compare/v0.7.0-RC1...v0.7.0-RC2) from Marathon 0.7.0-RC1 to 0.7.0-RC2.
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/554470/assets,https://api.github.com/repos/mesosphere/marathon/releases/554470,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.0-RC2,https://github.com/mesosphere/marathon/releases/tag/v0.7.0-RC2,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.0-RC2,v0.7.0-RC2,False,True
546803,2014-09-10T01:19:44Z,2014-09-10T01:21:57Z,marathon-0.7.0-RC1,"Tarball:
http://downloads.mesosphere.io/marathon/v0.7.0-RC1/marathon-0.7.0-RC1.tgz

SHA:
http://downloads.mesosphere.io/marathon/v0.7.0-RC1/marathon-0.7.0-RC1.tgz.sha256

CentOS/RHEL6:
http://downloads.mesosphere.io/marathon/v0.7.0-RC1/marathon-0.7.0-0.1.RC1.x86_64.rpm

Debian/Ubuntu 14.04 packages are also available via the Mesosphere testing
repositories.

Debian 7
deb http://repos.mesosphere.io/debian wheezy-testing main

Ubuntu 14.04
deb http://repos.mesosphere.io/ubuntu trusty-testing main

See: http://mesosphere.io/2014/07/17/mesosphere-package-repositories

```
# Setup
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
CODENAME=$(lsb_release -cs)
```

```
# Add the repository
echo ""deb http://repos.mesosphere.io/${DISTRO} ${CODENAME}-testing main"" | \
 sudo tee /etc/apt/sources.list.d/mesosphere.list
sudo apt-get -y update
```

```
# Install or upgrade Marathon package
sudo apt-get -y install marathon
```

There are many new features available in this RC, notably:
- Compatibility with the native docker containerizer in Mesos `0.20.0`
- Application groups
- Rolling deployments
- Artifact cache
- Executor health checks

Perhaps equally exciting, read all about Marathon's capabilities
on the all-new docs site: https://mesosphere.github.io/marathon/docs

Some fun statistics since `0.6.1`:
- 769 commits across 284 files by 15 contributors
- 52 issues closed
- 88 pull requests merged

Changelog:

[Changelog](https://github.com/mesosphere/marathon/compare/marathon-0.6.1...v0.7.0-RC1) from Marathon 0.6.1 to 0.7.0-RC1.
",https://api.github.com/users/ConnorDoyle,379372,ConnorDoyle,https://api.github.com/repos/mesosphere/marathon/releases/546803/assets,https://api.github.com/repos/mesosphere/marathon/releases/546803,master,https://api.github.com/repos/mesosphere/marathon/tarball/v0.7.0-RC1,https://github.com/mesosphere/marathon/releases/tag/v0.7.0-RC1,https://api.github.com/repos/mesosphere/marathon/zipball/v0.7.0-RC1,v0.7.0-RC1,False,True
438744,2014-07-18T21:37:22Z,2014-07-18T23:51:33Z,marathon-0.6.1,"## Bug Fixes

Marathon 0.6.1 features a number of bug fixes:
- UI alignment bug
- Correct coloring for staged tasks in task list
- JSON for container information no longer requires the options parameter to be present

## Changelog

[Changelog](https://github.com/mesosphere/marathon/compare/marathon-0.6.0...marathon-0.6.1) from Marathon 0.6.0 to 0.6.1.
",https://api.github.com/users/ssk2,355705,ssk2,https://api.github.com/repos/mesosphere/marathon/releases/438744/assets,https://api.github.com/repos/mesosphere/marathon/releases/438744,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.6.1,https://github.com/mesosphere/marathon/releases/tag/marathon-0.6.1,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.6.1,marathon-0.6.1,False,False
396908,2014-06-30T22:42:18Z,2014-07-18T21:32:44Z,marathon-0.6.0,"## New Features
- A major redesign of the UI
- Added health checks to the UI
- Marathon now handles disk resources
- Support for launching Dockers via [Deimos](https://github.com/mesosphere/deimos) and Mesos 0.19

## Major Changes
- Requires Mesos 0.19
- App IDs must conform to the LDH domain name rules so they can be used to generate DNS entries
- Task IDs are now `APP-ID.UUID`, using time based UUIDs

## Bug Fixes

Marathon 0.6.0 features a number of stability improvements and bug fixes. Check the full list of [closed issues](https://github.com/mesosphere/marathon/issues?milestone=5&state=closed) for details.

## Changelog

[Changelog](https://github.com/mesosphere/marathon/compare/marathon-0.5.1...marathon-0.6.0) from Marathon 0.5.1 to 0.6.0.
",https://api.github.com/users/guenter,53613,guenter,https://api.github.com/repos/mesosphere/marathon/releases/396908/assets,https://api.github.com/repos/mesosphere/marathon/releases/396908,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.6.0,https://github.com/mesosphere/marathon/releases/tag/marathon-0.6.0,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.6.0,marathon-0.6.0,False,False
359458,2014-06-05T20:22:05Z,2014-06-05T20:26:55Z,marathon-0.5.1,"## Bug Fixes
- fix thread starvation issues on single core machines
- properly set Zookeeper timeouts

## Changelog

[Changelog](https://github.com/mesosphere/marathon/compare/marathon-0.5.0...marathon-0.5.1) from Marathon 0.5.0 to 0.5.1.
",https://api.github.com/users/guenter,53613,guenter,https://api.github.com/repos/mesosphere/marathon/releases/359458/assets,https://api.github.com/repos/mesosphere/marathon/releases/359458,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.5.1,https://github.com/mesosphere/marathon/releases/tag/marathon-0.5.1,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.5.1,marathon-0.5.1,False,False
333766,2014-05-23T16:11:39Z,2014-05-23T16:27:52Z,marathon-0.5.0,"## New Features
- [App versioning](https://github.com/mesosphere/marathon/blob/master/REST.md#get-v2appsappidversions)
- [Task health checks](https://github.com/mesosphere/marathon/wiki/Health-Checks)

## Bug Fixes

Marathon 0.5.0 features a number of stability improvements and bug fixes. Check the full list of [closed issues](https://github.com/mesosphere/marathon/issues?milestone=4&state=closed) for details.

## Changelog

[Changelog](https://github.com/mesosphere/marathon/compare/marathon-0.4.1...marathon-0.5.0) from Marathon 0.4.1 to 0.5.0.
",https://api.github.com/users/guenter,53613,guenter,https://api.github.com/repos/mesosphere/marathon/releases/333766/assets,https://api.github.com/repos/mesosphere/marathon/releases/333766,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.5.0,https://github.com/mesosphere/marathon/releases/tag/marathon-0.5.0,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.5.0,marathon-0.5.0,False,False
283642,2014-03-07T20:49:53Z,2014-04-22T20:57:37Z,marathon-0.4.1,"Bug fix release on the 0.4.x line.

Differences are visible here: https://github.com/mesosphere/marathon/compare/marathon-0.4.0...marathon-0.4.1

#### Download 0.4.1

Download the release package: [http://downloads.mesosphere.io/marathon/marathon-0.4.1.tgz](http://downloads.mesosphere.io/marathon/marathon-0.4.1.tgz)
",https://api.github.com/users/ssorallen,29612,ssorallen,https://api.github.com/repos/mesosphere/marathon/releases/283642/assets,https://api.github.com/repos/mesosphere/marathon/releases/283642,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.4.1,https://github.com/mesosphere/marathon/releases/tag/marathon-0.4.1,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.4.1,marathon-0.4.1,False,False
212960,2014-01-24T22:47:18Z,2014-03-06T19:47:32Z,marathon-0.4.0,"#### Download 0.4.0

Download the release package: [http://downloads.mesosphere.io/marathon/marathon-0.4.0.tgz](http://downloads.mesosphere.io/marathon/marathon-0.4.0.tgz)
",https://api.github.com/users/ssorallen,29612,ssorallen,https://api.github.com/repos/mesosphere/marathon/releases/212960/assets,https://api.github.com/repos/mesosphere/marathon/releases/212960,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.4.0,https://github.com/mesosphere/marathon/releases/tag/marathon-0.4.0,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.4.0,marathon-0.4.0,False,False
142109,2014-01-08T23:45:28Z,2014-01-08T23:50:16Z,,"## What's new
- UI lists Apps as a table with sortable columns
- Clicking an App displays that App's Tasks
- UI polls the Marathon status every 10 seconds and updates accordingly

### Backbone.View Replaced with React JS

Facebook's [React JS library](http://facebook.github.io/react/) makes rendering
state in UIs straightforward, and so we decided to replace Backbone's View with
React Components in this release. We have found React to be easy to understand
and less prone to odd DOM states that are difficult to debug in other libraries.

### Bugs Fixed
- [#78 - Dead image in README](https://github.com/mesosphere/marathon/issues/78)
- [#85 - MESOS_HOME and MESOS_NATIVE_LIBRARY settings not mentioned in docs](https://github.com/mesosphere/marathon/issues/85)
- [#95 - Show ""No tasks"" in modal if no tasks running for app](https://github.com/mesosphere/marathon/issues/95)

### Release Contributors
- [Ben McCann](https://github.com/benmccann)
- [David Hoyt](https://github.com/davidhoyt)
- [Jason Dusek](https://github.com/solidsnack)
- [Raghu Katti](https://github.com/rkatti)
- [Ross Allen](https://github.com/ssorallen)
- [Thomas Rampelberg](https://github.com/pyronicide)
- [Tobi Knaup](https://github.com/guenter)

#### Download 0.3.0

Download the release package: [http://downloads.mesosphere.io/marathon/marathon-0.3.0.tgz](http://downloads.mesosphere.io/marathon/marathon-0.3.0.tgz)
",https://api.github.com/users/ssorallen,29612,ssorallen,https://api.github.com/repos/mesosphere/marathon/releases/142109/assets,https://api.github.com/repos/mesosphere/marathon/releases/142109,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.3.0,https://github.com/mesosphere/marathon/releases/tag/marathon-0.3.0,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.3.0,marathon-0.3.0,False,False
101911,2013-11-23T19:50:52Z,2013-11-23T23:43:35Z,,"Adds support for constraints, leader proxying, and rate limiting.
",https://api.github.com/users/guenter,53613,guenter,https://api.github.com/repos/mesosphere/marathon/releases/101911/assets,https://api.github.com/repos/mesosphere/marathon/releases/101911,master,https://api.github.com/repos/mesosphere/marathon/tarball/marathon-0.2.1,https://github.com/mesosphere/marathon/releases/tag/marathon-0.2.1,https://api.github.com/repos/mesosphere/marathon/zipball/marathon-0.2.1,marathon-0.2.1,False,False
