id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8289824,2017-10-26T21:20:53Z,2017-10-27T15:36:20Z,v1.10.88,"Changes:

#8778 Use `Uint8ClampedArray`, when returning data, and remove manual clamping in `src/core/jpg.js` (issue 4901)
#8780 Version 1.9.426
#8783 Use `Uint8ClampedArray` when returning image data in `src/core/jbig2.js` and `src/core/jpg.js`
#8785 SVG: Don't render missing glyphs
#8788 Attempt to delay disabling of the attachment view until FileAttachment annotations of the *initial* page has been parsed
#8792 Fix caching of small inline images in `Parser.makeInlineImage` (issue 8790)
#8794 Remove the migration code for old localStorage data in `ViewHistory`
#8557 pdf2svg.js: provides ReadableSVGStream class to serialize a SVG as a stream
#8781 `__non_webpack_require__` -> require in SystemJS
#8491 JBIG2 halftone regions and pattern dictionaries
#8807 Remove handling of fallback arguments from `PDFViewer.scrollPageIntoView`
#8812 Moves global scope out of shared/util.
#8813 Use Array.isArray in the LoopbackPort.
#8810 Cache PdfJs's enabled setting for delayed init
#8800 Try to recover if we reach the end of the stream when searching for the `EI` marker of an inline image (issue 8798)
#8712 Adds node.js logic for networking tasks for PDF.js
#8822 Disable node libs in pdfjs-dist package.json
#8824 Prevent an infinite loop in `XRef.readXRef` by keeping track of already parsed tables (bug 1393476)
#8819 Remove any mention of `compatibility.js` from the ""Getting Started"" docs (issue 8818)
#8817 Set this.isCancelled in close method of streamSink.
#8820 Remove the ability to pass a `scale` parameter in the (optional) `args` object parameter of `PDFViewerApplication.open(file, args)`
#8821 Replace the test-case for issue 8798 with a reduced one (PR 8800 follow-up)
#8826 Enable the `for-direction` ESLint rule
#8825 Account for broken outlines/annotations, where the destination dictionary contains an invalid `/Dest` entry
#8796 Implement text rise for the SVG back-end
#8829 Attempt to improve the `EI` detection heuristics, for inline images, in streams containing `NUL` bytes (issue 8823)
#8831 Update the `gulp minified` command to use uglify-es
#8835 Ensure that `PDFViewerApplication.error` outputs proper messages in FIREFOX/MOZCENTRAL builds
#8768 Adds fetch stream logic for networking part of PDF.js
#8845 Fixes autofetch and firefox nightly fetch streams
#8828 Improve the annotation code by converting to ES6 syntax and removing duplicate code
#8848 Correctly set the `credentials` of a fetch request, when the `withCredentials` parameter was passed to `getDocument`
#8855 Add test for withCredentials option
#8847 Correct the default value for `isRenderable` in the `AnnotationElement` constructor, to fix breaking errors when rendering unsupported annotations
#8857 Avoid some redundant type checks in `XRef.fetchUncompressed`
#8859 Revert PDFPageView.pdfPage reset.
#8862 Replace the `isInt` helper function with the native `Number.isInteger` function
#8864 Replace the `isArray` helper function with the native `Array.isArray` function
#8775 Re-write `PDFHistory` from scratch
#8874 Fix the helloworld example by setting the PDFNetworkStream class (PR 8712 follow-up)
#8866 Correctly validate the response status for non-HTTP fetch requests (PR 8768 follow-up)
#8877 Provide `checked` styles for button widget annotations
#8885 Address a couple of edge-cases in the new `PDFHistory` implementation (PR 8775 follow-up)
#8889 Replace `value === (value | 0)` checks with `Number.isInteger(value)`
#8868 Store the rotation in the `ViewHistory`/`PDFHistory` (issue 5927)
#8865 Hide unsupported `LinkAnnotation`s (issue 3897)
#8691 Implement support for square and circle annotations
#8892 Replace `var` with `let` in `web/genericcom` and `web/genericl10n`
#8891 ES6-ify the code in `web/firefoxcom.js`
#8893 Combine the common styles and overrides for the annotation layer reference tests
#8808 Fix color of image masks inside uncolored patterns
#8904 Provide a stub for `setAttribute` in order to use the SVG back-end with Node.js
#8900 Use the `SimpleLinkService` when running ""annotations"" reference tests
#8910 Fix #8888: Change behaviour of fetch to make it compatible with XHR.
#8913 For /Filter entries containing `Name`s, ignore the /DecodeParms entry if it contains an Array (issue 8895)
#8909 Check `isEvalSupported`, and test that `eval` is actually supported, before attempting to use the `PostScriptCompiler` (issue 5573)
#8917 Implement support for stamp annotations
#8919 Ignore 'change' events that didn't originate in the viewer (issue 8915)
#8921 support tiff predictor for 16bit
#8901 CCITTFaxStream problem when EndOfBlock is false
#8938 Use font's default width even when 0. (bug 1392647)
#8912 [api-minor] Replace `DOMParser` with `SimpleXMLParser`
#8928 Fix #8907: Decode URL to get correct path in node_stream.
#8949 Remove the `instanceof AlternateCS` check in `ColorSpace.parse` since it's dead code
#8932 JBIG2 symbol offsets
#8950 Implement support for polyline and polygon annotations
#8724 Implement a `PDFSinglePageViewer` class (issue 8188)
#8955 Overwrite maxSizeOfInstructions in maxp with computed value.
#8959 Ensure that the same exact version of PDF.js is used in both the API and the Worker
#8962 Check that `this.baseUrl` is defined before attempting to fetch any data in `DOMCMapReaderFactory`/`NodeCMapReaderFactory`
#8968 Split the existing `PDFFunction` in two classes, a private `PDFFunction` and a public `PDFFunctionFactory`, and utilize the latter in `PDFDocument` to allow various code to access the methods of `PDFFunction`
#8976 Simplify the disabling of Node polyfills, in `gulpfile.js`, since we're now using Webpack 3.x
#8971 Closes all promises/streams when handler is destroyed.
#8979 Transform Web Archive URLs to avoid downloading an HTML page instead of the PDF file
#8977 Update all packages to the most recent version
#8981 Update translations
#8983 Remove unused helper code
#8980 Add CDN links
#8990 Added component example for single page viewer
#8994 Fix a regression that (effectively) makes `PDFHistory.forward` a no-op
#9002 Revert ""Closes all promises/streams when handler is destroyed.""
#9001 Prevent the `annotationLayer` from, in some cases, becoming duplicated on the first page when the document loads
#8922 Allow `getOperatorList`/`getTextContent` to skip errors when parsing broken XObjects (issue 8702, issue 8704)
#9008 Mispelled isEvalSupported property at FontFaceObject() creation.
#9009 Only warn about unsupported JavaScript, in the viewer, when non-empty actions exist (issue 5767)
#9013 Fix a `PDFHistory` regression with document hashes of the `nameddest=...` form
#9027 Replace our `WeakMap` polyfill with the one from core-js
#9029 Enable the `--report-unused-disable-directives` ESLint command line option
#9031 Remove all warning/fallback code for obsolete method signatures in `web/` files
#9040 Remove the `enableHandToolOnLoad` preference migration code in `web/pdf_cursor_tools.js`
JavaScript exists
#9044 Use charstring as plain text when lengthIV is -1.
#9032 Simplify the check, and remove the warning, for the `nativeImageDecoderSupport` API parameter
#9052 Attempt to clarify the meaning of ""extension"" in the ISSUE_TEMPLATE
#9054 Replace our `Promise` polyfill with the one from core-js
#9055 Replace `Number` polyfills with the ones from core-js
#9058 Replace a few occurences of `var` with `let` in already ES6 converted web/ files
#9057 Use `let`/`const` instead of `var` in the printing code
#9061 Adds ECCN response statement
#8986 Version 1.10
#9045 Sanitize name index in compile phase of CFF.
#9046 Extract the actual decoding in `CCITTFaxStream` into a new `CCITTFaxDecoder` ""class"", which the new `CCITTFaxStream` depends on
#9072 Use `stringToBytes` in more places
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/8289824/assets,https://api.github.com/repos/mozilla/pdf.js/releases/8289824,c62a19388a9e4598fb38e69b3d826a3f898e5087,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.10.88,https://github.com/mozilla/pdf.js/releases/tag/v1.10.88,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.10.88,v1.10.88,False,True
7391028,2017-08-14T21:44:41Z,2017-08-14T23:40:49Z,v1.9.426,"Changes:

#8281 v1.8.188
#8131 ES6 modules: remove UMD header validation
#8240 [api-minor] Always allow e.g. rendering to continue even if there are errors, and add a `stopAtErrors` parameter to `getDocument` to opt-out of this behaviour (issue 6342, issue 3795, bug 1130815)
#8203 Convert the files in the `/web` folder to ES6 modules
#8286 Changing package.json version to 1.0.0
#8283 Moves Uint32ArrayView and hasCanvasTypedArrays into compatibility.js.
#8285 Change amd to cjs path in ES6 modules
#8287 Allow to convert (some of) ES6 code to ES5.
#8289 Firefox extension: remove unused preference cleanup from `bootstrap.js`
#8288 Moves 'web' target to the gulpfile.
#8291 Ensure that `PDFThumbnailView.draw` is able to handle `RenderingCancelledException` correctly (PR 8157 follow-up)
#8293 Convert the password prompt to ES6 syntax
#8295 Use `createPromiseCapability` in `/web` files and avoid unnecessary `PDFPageView.setPdfPage` calls
#8294 Convert the files in the `/src/display` folder to ES6 modules
#8296 Convert the document properties to ES6 syntax
#8297 Convert the find bar to ES6 syntax
#8299 Import `getGlobalEventBus` correctly from `web/dom_events.js` in various `/web` files, to un-break e.g. the viewer components (PR 8203 follow-up)
#8300 Refactor the `DownloadManager` initialization in `GENERIC`/`CHROME` builds again (PR 8203 follow-up)
#8311 [Firefox addon] Upstream changes from: Bug 1356569 - Remove optional trailing parameters (issue 8310)
#8312 Moves dist and minifiedpost tragets from make.js.
#8315 Remove the `signchromium` target from `make.js`
#8313 [Firefox addon] Upstream changes from: Bug 1346616 - Migrate callsites that are retrieving requested locale from pref, to use LocaleService::GetRequestedLocales
#8321 Change `getPDFFileNameFromURL` to ignore `data:` URLs for performance reasons (issue 8263)
#8322 [Firefox addon] Remove the `window.FirefoxCom` hack from `web/viewer.js`, since it was made redunant by the `setExternalLocalizerServices` refactoring (PR 7202 follow-up)
#8323 Change the `importl10n` script to use the Beta channel, since Aurora is being removed
#8302 Convert the attachments/outline view to ES6 syntax
#8306 Convert the sidebar to ES6 syntax
#8303 Convert the `Preferences` to an ES6 class
#8328 Makefile: remove unused `mozcentralcheck` target
#8339 Convert the `ViewHistory` to an ES6 class, and re-factor it to make it properly asynchronous 
#8331 Enable running the `ui_utils` unit-tests on Travis
#8324 Convert the annotation layer builder, presentation mode and rendering queue to ES6 syntax
#8332 Enable the `object-shorthand` ESLint rule in `src/shared` and `src/display`
#8345 Bots: disable the default browser test and enable E10s
#8346 Restore the `URL.createObjectURL` check to the `createObjectURL` utility function (issue 8344)
#8348 Add the commit hash to the `README.mozilla` file (issue 8347)
#8309 Allow use versions for pdf.js script (i.e. - pdf.js?2412313)
#8352 Removes builder.build().
#8335 Subtract the X/Y offsets when decoding refinement regions of JBIG2 images (issue 7145, 7308, 7401, 7850, 8270)
#8351 Enable the `object-shorthand` ESLint rule in `web`
#8342 Enable the `object-shorthand` ESLint rule in `src/core`
#8298 Convert the files in the `/test/unit` folder to ES6 modules
#8354 [Firefox addon] Replace a `bind(this)` statement with an arrow function in `PdfStreamConverter.jsm` (issue 8343)
#8353 Enable the `object-shorthand` ESLint rule
#8355 Replace unnecessary `bind(this)` and `var self = this` statements with arrow functions in `src/core/evaluator.js`
#8349 Migrate `make.js` to `gulpfile.js`
#8357 Replace unnecessary `bind(this)` and `var self = this` statements with arrow functions in remaining `src/core/` files
#8361 Export LoopbackPort
#8363 Adds initializeFromPort to the WorkerMessageHandler.
#8364 Adds babel caching for system.js.
#8359 Ignore line-breaks between operator and digit in `Lexer.getNumber`
#8369 Add no-default-browser-check to chrome runner.
#8370 Replace unnecessary `bind(this)` and `var self = this` statements with arrow functions in remaining `src/` files
#8358 Change the signatures of the `PartialEvaluator` ""constructor"" and its `getOperatorList`/`getTextContent` methods to take parameter objects
#8377 Replace unnecessary `bind(this)` statements with arrow functions in `web/` files
#8378 Convert the files in the `/src/shared` folder to ES6 modules
#8340 Fix char spacing bug in SVG mode
#8368 Enables source maps for webpack generated files.
#8385 Fix typo in LoopbackPort export
#8381 Re-factor `PDFDocumentProperties` such that it's properly reset when a new PDF file is opened (issue 8371)
#8387 amends Babel cache (#8364) implementation to also work on Safari
#8390 Upstream changes from: Bug 1319111 - Expose result principal URL (""final channel URL"") on LoadInfo, convert current consumers of LOAD_REPLACE
#8393 Replace unnecessary `var self = this` statements with arrow functions in `web/app.js`
#8391 Convert the hand tool, interfaces and secondary toolbar to ES6 syntax
#8350 [api-minor] Fix svg image render
#8397 Simplify `extractText`, and replace unnecessary `var self = this` statements with arrow functions, in `web/pdf_find_controller.js`
#8399 Wait until `PDFDocumentLoadingTask.destroy` is resolved before calling `done` in the API unit-tests
#8400 Wait for previous pdfDocument(s) to be destroyed before running the next reference test
#8398 Convert the `DOMCMapReaderFactory` and `DOMCanvasFactory` to ES6 classes
#8258 Enable running a subset of the API unit-tests on Travis
#8406 Gracefully ignore transaction failure in plugin-babel-cached
#8411 Replace unnecessary `var self = this` statements with arrow functions in `web/pdf_page_view.js` and `web/pdf_thumbnail_view.js`
#8417 Use eslint-plugin-mozilla and the webextensions environment to avoid defining globals in each file.
#8413 [api-minor] Adds additional parameter so background color of canvas can be set
#8388 Cache JPEG images, just as we do for other image formats, in `evaluator.js` (issue 8380)
#8420 Revert ""Upstream changes from: Bug 1319111 - Expose result principal URL (""final channel URL"") on LoadInfo, convert current consumers of LOAD_REPLACE""
#8421 Change the `importl10n` script to use the Nightly channel
#8366 Removes shelljs
#8431 Replace a couple of leftover `make.js` references with `gulpfile.js` in docs/comments
#7635 Unify handling of various cursor tools, e.g. the current Hand Tool and a possible future Zoom Tool, in a new `PDFCursorTools` module
#8432 Remove the special handling for `nameddest`s that look like standard pageNumbers
#8433 Remove the reference to `compatibility.js` from the README, since it's included by default in `GENERIC` builds
#8436 Don't map glyphs to the HANGUL FILLER (0x3164) Unicode location (issue 8424)
#8437 Resets canvas 2d context to the default state.
#8442 Add different code-paths to `{CMap, ToUnicodeMap}.charCodeOf` depending on length, since `Array.prototype.indexOf` can be extremely inefficient for very large arrays (issue 8372)
#8416 Refactor and ES6-ify `PDFLinkService.navigateTo`
#8452 Update webpack.js to support browsers that do not have the Web Workers API
#8450 Convert the overlay manager to ES6 syntax
#8284 Convert the files in the `/src/core` folder to ES6 modules
#8455 Convert the page view to ES6 syntax
#8458 Refactor the `getTempCanvas` function in `pdf_thumbnail_view.js` to a factory, in preparation for ES6 conversion of the thumbnail related code
#8462 Removes last UMDs from the modules.
#8463 Allow specifying the `PDFJS_NEXT` build flag via an environment variable when running the various `gulp` commands
#8396 Adds streams-lib polyfill and exports ReadableStream from shared/util.
#8394 Wraps mozL10n to async calls; splits firefox and generic l10n libs.
#8466 Add a stub `createL10n` to `DefaultExternalServices` in app.js
#8470 Fix inconsistent spacing and trailing commas in objects in `extensions/` files, so we can enable the `comma-dangle` and `object-curly-spacing` ESLint rules later on
#8469 Fix inconsistent spacing and trailing commas in objects in `web/` files, so we can enable the `comma-dangle` and `object-curly-spacing` ESLint rules later on
#8477 Fix inconsistent spacing and trailing commas in objects in `test/` files, so we can enable the `comma-dangle` and `object-curly-spacing` ESLint rules later on
#8475 Fix inconsistent spacing and trailing commas in objects in remaining `src/` files, so we can enable the `comma-dangle` and `object-curly-spacing` ESLint rules later on
#8474 Fix inconsistent spacing and trailing commas in objects in `src/core/` files, so we can enable the `comma-dangle` and `object-curly-spacing` ESLint rules later on
#8478 Fix the remaining cases of inconsistent spacing and trailing commas in objects, and enable the `comma-dangle` and `object-curly-spacing` ESLint rules
#8482 Convert the thumbnail view/viewer to ES6 syntax
#8483 Convert the find controller to ES6 syntax
#8467 Bug 1353029 - Pass PdfJs.enabled into child on change.
#8499 Prevent console errors when clicking to change page while in Presentation Mode (issue 8498)
#8430 Adds sendWithStream method in MessageHandler.
#8441 Ensure that `TilingPattern`s have valid (non-zero) /BBox arrays (issue 8330)
#8508 Fixes duplicate creation of PDFWorker for the same port.
#8510 Prevent the Zoom dropdown from intermittently displaying an incorrect custom scale in Firefox (PR 8394 follow-up)
#8517 Additional check in globalScope detections
#8401 Adds gulp dist-install command; using pdfjs-dist package in examples.
#8519 Preventing from using the same canvas for multiple render()
#8522 Fixes WeakMap polyfill (and improves PDFWorker port check).
#8531 Remove `PDFPageView.updatePosition` since it's not actually necessary
#8515 Adds special case for origin of blob to the compatibility URL.
#8525 Allow for unbinding of events in web application
#8535 Reset `pageRotation` and `downloadComplete` in `PDFViewerApplication.close`
#8539 Remove a redundant `PDFViewer.currentScale` call from `PDFViewerApplication.load`
#8536 Refactor `ObjectLoader` to use `Dict`s correctly, rather than abusing their internal properties
#8543 Add getAttributeNS to domstubs for SVG example
#8544 compatibility.js: Rename parameters in JURL
#8537 Convert the toolbar to ES6 syntax
#8540 Reduce memory requirements of pdf2svg.js example to avoid OOM 
#8552 Ensure canvas is really hidden when used with pdfjs-dist.
#8556 Stop tracking the rotation in `PDFViewerApplication` and directly use `PDFViewer.pagesRotation` instead
#8542 Move svg:clipPath generation from clip to endPath
#8561 Don't use a hidden canvas when constructing the `zoomLayer` in `PDFPageView.update`
#8567 Fix error when using custom CMapReaderFactory
#8488 Streams get text content
#8507 Only special-case OpenType fonts with `CFF` data if it's both a composite (i.e. Type0) font and also has a non-default CID to GID map (issue 8480)
#8571 Mention in the ""Getting the Code"" section of README.md that an ES6 compatible browser is required when using the default viewer with `gulp server`
#8564 SVG: implement fill and stroke opacity
#8576 Remove the `selectScaleOption` helper function, in `Toolbar._updateUIState`, and simply inline its code instead
#8574 SVG: move setting the stroke properties to the `stroke` method
#8578 ES6-ify the code in `web/ui_utils.js`
#8589 Fix missing notdef in expert encoding.
#8582 Convert the text layer builder to ES6 syntax
#8583 ES6-ify the code in `web/app.js` and `web/viewer.js` 
#8585 Check that the `MessageHandler` isn't already terminated in the `onFailure` handler in `src/core/worker.js` (issue 8584)
#8592 Only mask char codes of (3, 0) cmap tables in the range of 0xF000 to 0…
#8594 Change `var` to `let`, and use object destructuring, in a couple of previously class converted `web/*.js` files
#8580 Fix how we detect and handle missing glyph data.
#8596 Fixes wrong structure of fullReader.read() result.
#8615 Fix a stupid spelling error in the `ASCII85Decode` name in `Parser.makeInlineImage` (issue 8613)
#8555 Don't allow setting various properties, such as `currentPageNumber`/`currentScale`/`currentScaleValue`/`pagesRotation`, before `{PDFViewer, PDFThumbnailViewer}.setDocument` has been called
#8621 Bump minimum eslint version to 3.19.0
#8581 Removes error()
#8630 Remove __pdfjsdev_webpack__, use webpack options
#8643 Add `Number.isNaN` and `Number.isInteger` polyfills in compatibility.js, since the Streams polyfill relies on them
#8646 Fixes pdf.js library source detection.
#8640 Check for undefined
#8609 Ensure that `PDFFindBar._adjustWidth` is called in all situations where the width of the findbar might have changed
#8634 Update inconsistent names
#8618 Remove the scale-not-initialized hack from `webViewerResize` (in app.js)
#8641 Update ESLint (and eslint-plugin-mozilla) to the latest version
#8620 Improve compression of PNG images embedded in generated SVG files
#8649 Convert `PDFLinkService` to an ES6 class
#8651 Fix display_svg_spec tests.
#8636 Convert `PDFViewer` to an ES6 class
#8653 Add UI for the cursorToolOnLoad pref in the Chrome extension + migration logic
#8678 Fix a typo, in the `Catalog.numPages` getter, than prevents shadowing from working correctly
#8638 In `src/core/jpg.js`, ensure that the Adobe JPEG marker always takes precedence, even when the color transform code is zero
#8684 Remove most `assert()` calls (issue 8506) 
#8673 [api-minor] Add support for PageMode in the API and viewer (issue 8657)
#8689 Update README.md
#8692 Add a reduced test-case for issue 7696
#8696 Adds ready capability rejection logic for stream sink.
#8666 Fix TypeError that occurs in colorspace.js on accidentally passing an 'Array' instead of 'TypedArray'
#8698 Add a fallback for non-embedded SegoeUISymbol font (issue 8697)
#8617 Adds Streams API support for networking task of PDF.js project.
#8715 Use streams-lib as polyfill
#8611 Add unit-tests for colorspace.js
#8717 Move the `XRefMock` in the unit tests to a central location
#8718 Ensure that the loadingBar isn't displayed again when the entire file has already been fetched
#8722 Fix the helloworld example by importing the `network.js` file (PR 8617 follow-up)
#8721 Reduces the amount of data send via GetDocRequest.
#8627 Fallback on font widths if CFF data is broken
#8681 Fix several issues with glyph id mappings (issue 8668, bug 1383504)
#8744 Checks Edge support for streams.
#8738 Delete workerPort to PDFWorker cache after PDFWorker destroy
#8745 Properly cancel streams and guard at getTextContent.
#8747 Fix two cmap related issues.
#8746 More robust getPage() error handling.
#8752 ES6-ify the code in `web/dom_events.js`
#8756 Remove leftover `args[0].code` checks from the `OPS.paintXObject` cases in evaluator.js
#8761 Fallback to plain object for globalScope.
#8762 Replace the `coded` property with `isType3Font` when building the font `properties` object in `PartialEvaluator.translateFont`
#8764 Convert `DownloadManager` to an ES6 class
#8749 Version 1.9
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/7391028/assets,https://api.github.com/repos/mozilla/pdf.js/releases/7391028,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.9.426,https://github.com/mozilla/pdf.js/releases/tag/v1.9.426,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.9.426,v1.9.426,False,False
6074487,2017-04-13T15:41:36Z,2017-04-13T15:45:41Z,v1.8.188,"Changes (from 1.8.170):

#8249 Release 1.8.170
#8244 Actually skip pages included in the `skipPages` array when running tests, rather than creating empty 1x1 canvases (issue 8241)
#8257 Enable the `prefer-promise-reject-errors` ESLint rule
#8266 Normalize blend mode names.
#8273 Correctly detect if `requestAnimationFrame` is supported in `compatibility.js` (issue 8272)
#8275 Rename PdfJsTelemetry-addon.jsm to PdfJsTelemetry-stub.jsm
#8228 Implement support for line annotations
#8262 Fix worker resolution on using minified version
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/6074487/assets,https://api.github.com/repos/mozilla/pdf.js/releases/6074487,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.8.188,https://github.com/mozilla/pdf.js/releases/tag/v1.8.188,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.8.188,v1.8.188,False,False
6003336,2017-04-06T18:38:03Z,2017-04-06T18:43:01Z,v1.8.170,"Changes:

#8001 Release of 1.7.225
#7991 [Firefox addon] Enforce double quotes, using ESLint, to avoid linting errors in mozilla-central (issue 7957)
#7995 [Firefox addon] Enable the `consistent-return` ESLint rule (issue 7957)
#8003 Move `EOF`/`isEOF` from core/parser.js to core/primitives.js
#8006 Remove usage of `mozFillRule`
#7959 Display a notification on the `sidebarToggle` button for PDF documents with outline/attachments
#8016 Remove the unused `isStream` property on various `Stream`s
#7972 Enable the `no-unused-vars` ESLint rule
#8023 Moves preprocessor stuff to the gulpfile.
#8025 Adjust the `brace-style` ESLint rule to disallow single lines (and also enable `no-iterator`)
#8027 [Firefox addon] Remove the unused `MOZ_CENTRAL` constant
#8002 [api-minor] Fix #7798: Refactor scratch canvas usage.
#8030 Interactive forms: rewrite AcroForms example
#8028 Prevent browser console errors during testing
#8035 [api-minor] Add a `getDocument` parameter that allows disabling of the `NativeImageDecoder` (e.g. for use with Node.js)
#8036 [api-minor] Fixes behaviour of DOMCanvasFactory to return {canvas, context}.
#8038 Moves sed processing into the preprocessing tasks and merging tasks.
#8039 Moving interactive examples to jsfiddle.net
#8040 Update localization files
#8041 Interactive forms: set the `buttonValue` for radio buttons that do not have a `fieldValue`
#8043 Allow automatic print rotation via the enablePrintAutoRotate preference
#8046 Replacing custom bundling with webpack 2
#8053 [Chromium addon] Prevent errors that break the addon, caused by the `DEFAULT_URL` constant being replaced by a `defaultUrl` viewer configuration parameter (PR 8046 follow-up)
#8054 Write the l10n files to the correct destination for `gulp mozcentral` builds (PR 8023 follow-up)
#8058 Fixes pdf.combined.js for webpack
#8056 Use `ChildNode.remove` instead of `ChildNode.ParentNode.removeChild` in a couple of places (bug 1334831, issue 8008)
#8060 Font ascent descent calculation fix
#8062 Improve the README by removing outdated information
#8063 Consume the current character when encountering illegal characters in `Lexer.getObject`, in order to prevent infinite loops during reading of streams (issue 8061)
#8067 Include the `pdfjschildbootstrap.js` file in the output for `gulp mozcentral` builds (PR 8023 follow-up)
#8070 New node.js check to protect from webpack.
#8065 Annotations: refactor setting the normal appearance stream
#8071 Always choose a (3, 1) cmap table for TrueType fonts that have an encoding specified, regardless of the Symbolic font flag (bug 1337429)
#8064 [api-minor] Refactor fetching of built-in CMaps to utilize a factory on the `display` side instead, to allow users of the API to provide a custom CMap loading factory (e.g. for use with Node.js)
#8080 Enable running the `cmap` unit-tests on Travis by utilizing a `NodeCMapReaderFactory`
#8024 Open PDF attachments in the viewer instead of an unconditional download
#8081 iOS Chrome: Fix broken download button
#8091 Gulp: migrate `baseline` target from `make.js`
#8105 Always check all Kids nodes, in `Catalog.getPageDict`, to avoid getting stuck in an empty node further down in the Pages tree (issue 8088)
#8102 Move compatibility code to the shared/compatibility.js.
#8107 Init PDFWorker via MesssagePort.
#8109 Add gulp task to generate refs.
#8106 Ensure that `Dict`s found in Object Streams are assigned an `objId` in `XRef.fetch`
#8110 Interactive forms: make choice widget options inheritable (issue 8094)
#8072 Annotations: move operator list addition logic to `src/core/document.js`
#8050 Replaces RequireJS to SystemJS.
#8115 [CONTRIBUTING.md] Remove any mention of the mailing list, and the weekly meetings
#8116 Get rid of a couple `eslint-disable` statements in `web/download_manager.js` by instead relying on the preprocessor dead-code removal added in PR 7942
#8087 Allows to pull pdf.js from pdf_viewer using require().
#8112 Support the `newWindow` flag in white-listed `app.launchURL` JavaScript actions (PR 7794 follow-up)
#8126 Ensure that we don't ignore `0` values in `Page.getInheritedPageProp` (issue 8125)
#8128 Network: use the current location to prevent errors when using CSP headers
#8120 Publishes processed sources into pdfjs-dist/lib 
#8129 Return `undefined` instead of `Dict.empty` from `Page.getInheritedPageProp` for non-existent properties to prevent possible future bugs
#8130 Don't include `web/compatibility.js` in the output for `gulp lib` (PR 8120 follow-up)
#8138 Get rid of `element.removeChild(element.firstChild)` usage (bug 1345253)
#8132 Viewer: enable find functionality for small devices
#8144 Widget annotations: do not crash if `Parent` is not a dictionary during field name construction (issue 8143)
#8151 Remove unnecessary `.toolbarButton.group` CSS class
#8135 Handle cff fonts with erroneous stackSize (issue 8097)
#8156 Add (and adjust) a couple of findbar `title` attributes, in `viewer.html`, that doesn't agree with the `l10n/en-US/viewer.properties` file
#8154 Change to conditions that `pdfjsLib`
#8168 Normalize the `BBox` entry in Tiling Pattern dictionaries (issue 8117)
#8174 Adjust the `yoda` ESLint rule to apply to inequalities as well
#8172 Upstream the changes from bug 1345294 - nsIPrefBranch should have methods to get/set unicode strings
#8170 Try to recover when encountering JPEG markers with too short marker lengths (issue 8169)
#8164 Don't read past the EOI marker for JPEG images with non-default restart interval (issue 7828)
#8183 Ensure that `PDFDocument.documentInfo` doesn't fail during document load, when the entire XRef table hasn't been fetched yet (issue 8180)
#8184 Rethrow MissingDataException when needed
#8194 Use a proper `MessageHandler` for `PartialEvaluator.getTextContent` to avoid errors for fonts relying on built-in CMap files (PR 8064 follow-up)
#8196 Remove unnecessary `xref` parameters from various method signatures in `PartialEvaluator`, since `this.xref` is already available in the relevant scope
#8198 Example for converting PDF to PNG using the Node canvas library
#8195 Enable babel on sources
#8190 Try harder to find the next valid JPEG marker when decoding Scan data (issue 8182, issue 8189)
#8202 Add a couple of basic ES6 rules to the ESLint config
#8207 Use a simple `RefSetCache` to significantly improve the performance of `Catalog.getPageDict` for certain long documents (PR 8105 follow-up)
#8205 Improve the error handling when loading of built-in CMap files fail (PR 8064 follow-up)
#8210 Refactor removing of the `zoomLayer` into a helper method, and use that in `PDFPageView.reset` to ensure that the entire `zoomLayer` is actually removed (issue 8209)
#8232 Lazily load NetUtil.jsm in PdfStreamConverter.jsm.
#8218 Split pdfjschildbootstrap.js to avoid sync IPC
#8157 [api-minor] Reject the `RenderTask` with an actual `Error`, instead of just a `string`, when rendering is cancelled
#8222 ios: Patch cancelAnimationFrame whenever fakeRequestAnimationFrame is used
#8235 Disable the `NativeImageDecoder` in the `node/pdf2svg.js` example (issue 7901)
#8239 Stub out Firefox addon Telemetry wrapper
#8243 Don’t skip glyph 0 in cmap.
#8248 Version 1.8
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/6003336/assets,https://api.github.com/repos/mozilla/pdf.js/releases/6003336,3ca67550ef076b022b8afa7ea482b70d25a5b9e3,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.8.170,https://github.com/mozilla/pdf.js/releases/tag/v1.8.170,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.8.170,v1.8.170,False,False
5279336,2017-01-26T20:48:49Z,2017-01-26T20:54:08Z,v1.7.225,"Changes:

#7692 Release of 1.6.210
#7670 Only skip parsing a stream in `Parser_makeFilter` when we know for sure that it is empty (PR 6372 follow-up)
#7671 Interactive forms: render choice widget annotations
#7677 Bug 1302069 - Printing canvases at PDF document size.
#7694 Disables Font Loading API for Firefox.
#7697 Refactoring of printing code and mozPrintCallback polyfill
#7514 Ensure that we cancel any pending rendering operations when the viewer is closed (issue 7274)
#7714 Fix getTextContent evaluation to only apply TJ horizontal offsets using numeric items/args
#7722 Update to latest grab-to-pan version
#7726 Remove a remaining old-style preprocessor from `src/core/fonts.js` (PR 7322 follow-up)
#7668 Prevent an infinite loop in `XRef_fetchUncompressed` for encrypted PDF files with indirect objects in the /Encrypt dictionary (issue 7665)
#7727 Let `Parser_makeFilter` pass in the `DecodeParms` data to various image `Stream`s, instead of re-fetching it in various `[...]Stream.prototype.ensureBuffer` methods
#7728 Gulp: port the `all`, `extension` and `jsdoc` targets
#7730 Fix a couple of JSDoc `@typedef`s to use `@property` (instead of `@param`) to fix some missing documentation when running `gulp jsdoc`
#7715 SVG: optimize and refactor group creation code
#7732 Removes SVG this.cgrp usages.
#7717 Explain double-click behaviour on tool tip
#7689 [api-minor] Add support for relative URLs, in both annotations and the outline, by adding a `docBaseUrl` parameter to `PDFJS.getDocument` (bug 766086)
#7749 Avoid accidentally rejecting a named destination that looks like a decimal number or a boolean (PR 7341 follow-up)
#7756 Travis CI: use most recent version of NPM
#7750 Add more validation to `PDFLinkService_navigateTo`
#7757 Remove/deprecate specifying a pageNumber directly after the hash symbol (#), to improve compatibility since other PDF viewers don't support this form (issue 7746)
#7766 Printing refactor split from 7721
#7771 Localization updates
#7773 [l10n] Add Swedish translations for a couple of new/changed localization IDs
#7774 Improve lint coverage and correct code style violations
#7745 [api-minor] Add basic support for `Launch` actions (issue 1778, issue 3897, issue 6616)
#7775 Widget annotation: implement field name according to the specification
#7778 Additional check to ensure pdfViewer object is defined before handleMouseWheel event accesses its property isInPresentationMode
#7782 Use `stringToPDFString` to sanitizing bad ""Prefix"" entries in Page Label dictionaries, and add more validation
#7698 Ignore reserved commands when parsing operands in `CFFParser_parseDict`, instead of just rejecting the entire font (bug 1308536)
#7786 Add HTTPS support for Demo
#7781 Viewer: improve responsiveness and clean up CSS
#7792 Make the `customScaleOption` disabled to prevent it being keyboard accessible (bug 1315608)
#7794 [api-minor] Add support for a couple of white-listed `JavaScript` actions that contains valid URLs (issue 3897, bug 843699)
#7800 Replace the Safari detection in `checkRangeRequests` in compatibility.js with a regular expression
#7801 Enable removing of all comments (except for Copyright notices) when preprocessing code, and reduce the indentation level
#7803 Fix #7701: additional check for http/https protocols to fix unsafe he…
#7819 For commands with with too few arguments, clear out `args` if it's an Array instead of replacing it with `null` in `EvaluatorPreprocessor_read` (issue 7804)
#7789 Refactor toolbar.
#7738 Adds SVG rendering capabilities to the main viewer.
#7826 Prevent ""unreachable code after return statement"" warnings from `PDFPageView_paintOnSvg` in the addons
#7830 Return a mock object in `paintOnSvg` when SVG rendering is not supported, to prevent `TypeError`s in the addons
#7793 Rename the `ViewHistory` localStorage (and sessionStorage) key from `database` to `pdfjs.history`, and migrate existing data on read (issue 7760)
#7839 Correctly detect more cases of non-embedded Arial Black fonts (issue 7835)
#7832 Expose the optional UserUnit entry as a page property
#7841 Compatibility: disable range requests for iOS and refactor user agent detection
#7845 Make: include minified library files for the distribution target
#7846 Bidi: import Unicode types from the specification
#7849 Viewer: remove unused CSS rule
#7853 Fix the JSDoc comment for `Catalog.parseDestDictionary`
#7700 Improve rendering of non-embedded NuptialScript font
#7628 Fallback to the `StandardEncoding` for Nonsymbolic fonts without `/Encoding` entry (issue 7580)
#7858 Make the keyboard shortcuts `Ctrl + Up/Down` behave as `Home/End` (issue 7852)
#7856 Ensure that `PartialEvaluator_extractWidths` is able to handle indirect objects in all kinds of ""width"" data (issue 7855)
#7862 Don't fail if mozL10n is not present.
#7857 add basic unit-tests for murmurhash3.js
#7868 Adjust one of the Page Label unit-tests to use a PDF file where the ""St"" entry is both present and non-default (i.e. greater than one)
#7863 Colorspace: refactoring to prevent unnecessary creation of intermediate arrays
#7881 Remove a misplaced `false` from a condition in `fixMetadata`, in `metadata.js`, since it currently short circuits the entire condition
#7884 Ensure that we resolve indirect objects in `Filter` and `DecodeParms` arrays in `parser.js`
#7873 Document: handle indirect objects in `MediaBox` and `CropBox` entries
#7705 Move symbolic font glyphs to private use area if they don't have unicode mappings (issue 2594, bug 789074, bug 865644)
#7890 Fix a number of code style issues found by various ESLint rules, to make it easier to switch from JSHint to ESLint
#7886 Move the `Preferences` initialization/fetching code to the top of `PDFViewerApplication.initialize`, to enable using them when initializing e.g. the viewer components
#7897 Switch to using ESLint, instead of JSHint, for linting
#7900 Ensure that we handle indirect objects in all types of `Opt` entries in `ChoiceWidget` annotation dictionaries
#7898 Interactive forms: render button widget annotations (checkboxes and radio buttons)
#7879 Make use of textAdvanceScale consistent during combineTextItems. Fix for #7878.
#7829 Let `finishPaintTask` in pdf_page_view.js return a promise instead, to avoid having to throw in the `paintTask.promise` rejection handler, and don't reject the `PDFPageView_draw` promise when rendering is `cancelled`
#7920 Improve the handling of `Encoding` dictionary, with `Differences` array, in `PartialEvaluator_preEvaluateFont`
#7926 [api-minor] Ensure that the `getDocument` Promise is rejected if the `loadingTask` is destroyed, or an `Error` is thrown, inside of the `onPassword` callback (issue 7806)
#7934 Unit test files as modules
#7935 Enable the `no-else-return` ESLint rule
#7939 Enables some unit tests on travis.
#7941 Replace direct lookup of `uniquePrefix`/`idCounters`, in `Page` instances, with an `idFactory` containing an `createObjId` method instead
#7942 Fixes preprocessor testing and adds deadcode removal.
#7943 Various fixes for the `external/builder/test*.js` files
#7944 Removes Promise usage from preferences.js
#7869 Fixes issue #6071 - TIFF with 1 bit-depth
#7945 Moves locale and cmaps tasks to gulpfile.
#7948 Fix inverted calculation of RTL text percentage in bidi
#7951 Rename `annotation_layer_spec.js` to `annotation_spec.js` to better describe what is actually tested, and simplify the `FileAttachmentAnnotation` unit-test to avoid having to use the entire API in the test
#7904 Further adjust the heuristics used to detect OpenType font files with CFF data, to ensure that all Type0 fonts are handled the same way regardless of font Subtype (issue 7901)
#7913 [Firefox addon] Change the minimum supported version to Firefox 45, i.e. the current ESR version, and remove no longer necessary fallback code
#7954 [Bug 1329182] remove trailing newURI null parameters
#7956 [Bug 1330147] removeObserver calls should not supply a third parameter
#7960 Adjust the `space-unary-ops` ESLint rule to comply with mozilla-central lint rules
#7965 [Bug 1331081] omit addEventListener/removeEventListener's third parameter when it's false
#7974 Enable the `no-lone-blocks` ESLint rule
#7980 Fix #7978: Fixes ESLint yoda rule for the URL polyfill.
#7979 Enable the `no-unsafe-finally`/`no-octal`/`no-useless-call` ESLint rules
#7973 Enable the `spaced-comment` ESLint rule
#7985 Fixes IE9 document.readyState and input.type=number issues.
#7977 Ensure that we use the _correct_ `paintedViewport` in `PDFPageView.cssTransform`, to avoid visual glitches on quick rotations (PR 7738 follow-up)
#7982 [Firefox addon] Convert the code to be ES6 friendly, in order to better agree with mozilla-central coding conventions (issue 7957)
#7988 Enable the `no-empty-pattern`/`no-floating-decimal`/`no-self-compare`/`no-delete-var`/`no-new-object` ESLint rules
#7971 remove viewer page div id
#7990 [Firefox addon] Stop bundling `src/core/network.js` into the `FIREFOX`/`MOZCENTRAL` builds (PR 7322 follow-up)
#7987 [api-minor] Adds noopener and nofollow to rel attribute of hyperlinks.
#8000 Version 1.7
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/5279336/assets,https://api.github.com/repos/mozilla/pdf.js/releases/5279336,17d135fcfc0765c3684d9909a096bda080a3dea0,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.7.225,https://github.com/mozilla/pdf.js/releases/tag/v1.7.225,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.7.225,v1.7.225,False,False
4301542,2016-10-04T17:14:18Z,2016-10-04T17:20:00Z,v1.6.210,"Changes:

#7236 Release of 1.5.188
#7237 Prevent accidentally overriding the `error` function in the `commonobj` messageHandler in api.js (issue 7232)
#7130 Add element to text layer even if width === 0
#7241 Makes importl10n and server async gulp functions.
#7202 Refactors dependencies of PDFViewerApplication on external services
#7240 Moves bundle target/task to `gulpfile.js`
#7251 Makes defines parameter non-optional in createBundle.
#7255 Mention web application usage in README.md
#7256 Port the `publish` target to Gulp
#7262 Fixes weird loop in the bidi.js.
#7254 Introducing EventBus for the viewer UI.
#7268 Better components examples.
#7266 Removes circular dependency of secondary toolbar on app.js.
#7272 Adds post UI control change events.
#7273 Prevent ""Prefixed Fullscreen API is deprecated."" warnings in the MOZCENTRAL version (issue 7270)
#7279 Fixes unneed conversion to array in CFF encodeInteger.
#7260 Moves all testing into gulpfile.
#7281 Fixes some static analysis warnings and recommendations
#7242 [Bug 1194700] Ensure that the `customScaleOption` is hidden in e10s
#7285 Split the font_spec.js unit-tests into cff_parser_spec.js and type1_parser_spec.js
#7298 Update link to CONTRIBUTING.md
#7301 Update grab_to_pan.js
#7302 Ignore 'endobj' commands inside of `ObjStm` streams (issue 5241, bug 898610, bug 1037816)
#7299 Prevent intermittent ""Node was not found"" errors when removing the `zoomLayer` in `PDFPageView_draw`
#7305 Remove streamsPrivate usage
#7244 Don't use shadow DOM for rendering <object>/<embed>
#7306 Enables debugger only when needed.
#7289 Disable pagechange event if page is not changing.
#7295 Use `Dict_getArray` in more places in `src/core/` to avoid issues when Arrays contain indirect objects
#7313 Convert the secondary toolbar to a class
#7317 Moves DEFAULT_PREFENCES into JSON format.
#7315 Solving issue #7307, 'use strict' context in compatibility.js
#7332 Fixes AMD name in web/the pdf_viewer.js.
#7337 Attempt to combine text runs positioned with `setTextMatrix`
#7340 Add basic unit-tests for unicode.js
#7316 Remove unused variables
#7300 Prevent adding invalid values in `CFFDict_setByKey` (bug 1068432)
#7344 Remove support for frames in old Chromium versions
#7353 Resolve a regression in the Chromium extension's preferences handling
#7346 Support syncing of settings in Chrome extension
#7352 Let non-viewable Popup Annotations inherit the parent's Annotation Flags if the parent is viewable
#7362 Github -> GitHub
#7374 Fix errors in `setGState` in `PartialEvaluator_getTextContent` that prevents text-selection from working properly
#7370 Add opt-out telemetry to the Chrome extension
#7388 Fix typo in telemetry.js, follow-up to #7370
#7361 Attempt to recover valid `format 3` FDSelect data from broken CFF fonts (bug 1146106)
#7389 Move the `isSpace` utility function from core/parser.js to shared/util.js
#7341 [api-minor] Improve handling of links that are using explicit destination arrays
#7404 Force inline block display style for <object>.
#7400 [Firefox addon] Change the minimum supported version to Firefox 38 and remove a bunch old no longer necessary fallback code
#7428  Unbreak the `importl10n` command by updating the links to point to hg.mozilla.org instead of mxr
#7430 Move Chromium URL rewrite to top of viewer.js
#7409 Upstream the changes from Bug 1242730 - Convert callsites to use channel.async0pen2() within browser/extensions/pdfjs (issue 7386)
#7437 [Firefox addon] Feature detect `originAttributes` to make it Seamonkey 2.40 compatible
#7427 Skip mapping of glyphs to Unicode ""Ideographic space"" (issue 7416)
#7438 Update README.md to only guarantee Firefox addon compatibility with the current ESR version
#7390 Add upper-case `I` as a possible space replacement fallback in `Font.spaceWidth` to improve text-selection (issue 7180)
#7463 Add back moz-specific fullscreen support code for `MOZCENTRAL` builds (bug 1268749, PR 7273 follow-up)
#7467 Add a `getAttachments` unit-test for a PDF file that actually contains attachments
#7441 Fallback to attempt to recover standard glyph names when amending the `charCodeToGlyphId` with entries from the `differences` array in `type1FontGlyphMapping` (issue 7439)
#7473 Update `mxr.mozilla.org` links to point to `dxr.mozilla.org` instead
#7453 Expose the text widget's maximum length.
#7455 Ensure that the necessary src/* dependencies are loaded before the viewer, when it's run with `gulp server` (issue 7448)
#7458 Consolidate updating of various Toolbar state (e.g. page and scale) in one method in `PDFViewerApplication`
#7479 Change the `warn` to `info` in `recoverGlyphName` to reduce the console spam
#7466 Remove handling of fallback arguments from `PDFViewerApplication.open`
#7480 Remove the obsolete `MozBlobBuilder` fallback from the `createBlob` utility function
#7481 [Firefox addon] Remove compatibility.js
#7478 optimize png images using zopflipng
#7489 trivial spelling fixes
#7485 Ensure that we don't reset the current page view if the user inputs an invalid page number (PR 7289 follow-up)
#7493 Catch errors and continue parsing in `parseCMap` (issue 7492)
#7490 Don't map glyphs to the Lepcha Unicode block (issue 7426)
#7447 Ignore .notdef in the`differences`array when building a fallback `toUnicode` map in `PartialEvaluator_buildToUnicode` (issue 5256)
#7347 Slightly refactor the`fontRef`handling in `PartialEvaluator_loadFont` (issue 7403 and issue 7402)
#7505 Use the latest stable Node.js version on Travis CI and enable caching
#7506 Prevent errors when parsing Annotations with missing (or invalid) /Subtype entries (issue 7446)
#7475 [api-minor] Add a parameter to `PDFPageProxy_getTextContent` that controls whether `PartialEvaluator_getTextContent` will attempt to combine same line text items
#7502 Remove the `previousPageNumber` parameter from the `pagechanging`/`pagechange` events, and stop dispatching the events if the input is out of bounds
#7510 Remove `previousPageNumber` from the B2G viewer
#7511 Convert the B2G viewer from an extension to an example
#7519 Stop building the AMO extension
#7520 Add more unit-tests for `primitives.js`
#7526 Add validation of the `rotation` argument passed to `set pagesRotation` in `PDFViewer`
#7529 Log an error when the value passed to `set currentPageNumber` is out of bounds (PR 7502 followup)
#7532 Remove an obsolete comment for `onAfterDraw` in pdf_viewer.js
#7534 Add a parameter to the `isName` function that enables checking not just that something is a `Name`, but also that the actual `name` properties matches
#7548 Avoid window.print in a microtask
#7521 Bug 1291709 - PdfjsChromeUtils.jsm leaks browser.xul windows.
#7555 Add unit-tests for asynchronous methods in `primitives.js`
#7330 Try to prevent `CanvasGraphics_getSinglePixelWidth` from intermittently returning incorrect values in Firefox (issue 7188)
#7563 Upstream l10n changes from Bug 1259859.
#7573 [mobile-viewer] Add an async `close` method to the example, and change `open` to also be async (issue 7571)
#7540 Add a unit-test to check that `ProblematicCharRanges` contains valid entries
#7574 Remove unused globals from fonts unit test file
#7570 Create a fallback annotation `id` for entries in `Annots` dictionaries that are not indirect objects (issue 7569)
#7440  Prevent destinations with bad left/top values from scrolling the wrong page into view (bug 874482)
#7575 Update translations
#7387 Attempt to ignore multiple identical Tf (setFont) commands in `PartialEvaluator_getTextContent` (issue 5808)
#7579 Ensure that the zoom buttons are disabled correctly if the `scale` is smaller/larger than `MIN_SCALE/MAX_SCALE` in `PDFViewerApplication._updateUIToolbar`
#7583 Change the `GoToPage` Named Action to select the contents of the `pageNumber` input, rather than just focusing the element
#7539 [api-minor] Expanding divs to improve selection
#7585 Minor code style improvements after #7539
#7586 Move the `Preferences` initialization/fetching code to the top of `PDFViewerApplication.initialize`, and add a `enhanceTextSelection` preference to the viewer
#7592 Revert the commits from pull request #7586 for causing addon issues
#7407 Assign the `quantizationTables` after parsing the entire JPEG image, to prevent issues when the DQT (Define Quantization Tables) marker is encountered after SOF{n} (Start of Frame) markers (issue 7406)
#7591 Change `src/core/jpg.js` to use the `error` utility function instead of `throw`ing
#7588 Use a `WeakMap` in `src/display/text_layer.js`
#7595 In `display/api.js` ensure that we always reject with an `Error` in `JpegDecode`, and adjust a couple of other rejection sites as well
#7596 Improve the structure for widget annotations
#7602 Render interactive form (AcroForm) text widget annotations
#7619 Only update the `max-height` of the `SecondaryToolbar` when it's actually visible
#7609 Add a `enhanceTextSelection` preference
#7600 Check that Type1C fonts does not actually contain OpenType font files (issue 7598)
#7546 Don't duplicate the first entry in the `charCodeToGlyphId` map for CIDFontType2 fonts with a `CIDToGIDMap` that already mapped the first entry to a non-zero `glyphId` (issue 7544)
#7621 Add a couple more, mostly `text`, reference tests for non-embedded symbolic fonts without included encoding information
#7622 Text widget annotations: implement maximum length and text alignment
#7624 Adding ""proper"" message port for fake worker.
#7623 Change `src/core/jpx.js` to use the `error` utility function instead of using `throw new Error`
#7626 Fix lint warnings in URL polyfill
#7629 Text widget annotations: implement unit testing and sanitize data values
#7634 Remove the deprecated `mozDash`/`mozDashOffset` canvas 2D context methods
#7632 [EnhanceTextSelection] Make `expandTextDivs` more efficient by updating all styles at once instead of piecewise
#7636 Drops unneeded HTTP refresh header for the extension.
#7550 For embedded Type1 fonts without included `ToUnicode`/`Encoding` data, attempt to improve text selection by using the `builtInEncoding` to amend the `toUnicode` map (issue 6901, issue 7182, issue 7217, bug 917796, bug 1242142)
#7633 Text widget annotations: support read-only/multiline fields and improve testing
#7645 Prevent rendering `TextWidgetAnnotation`s in both the `core`/`display` layer (issue 7643)
#7640 Interactive forms: remove global PDFJS usage
#7642 Deduct file type from content-disposition if needed
#7639 Replace empty CharStrings with '.notdef' in `Type1Font_wrap` to prevent OTS from rejecting the font (bug 1252420)
#7652 Prevent errors if the 'resize' event is fired before the `eventBus` has been initialized
#7647 Ensure that `test/driver.js` actually takes the same `Annotation` code-path as the viewer when running `forms` tests (PR 7633 follow-up)
#7649 Text widget annotations: implement comb support
#7661 Respect the 'ColorTransform' entry in the image dictionary when decoding JPEG images (bug 956965, issue 6574)
#7181 Simplified wheel processing
#7653 Bug 1300878 - Add support for touch-swiping between pages in presentation mode
#7656 Attempt to skip zero bytes at the end of Scan blocks when decoding JPEG images (issue 4090)
#7618 fixing #7590 by delaying div shrink after mouse up
#7681 Add a unit-test for annotations where the `URI` action has an incorrect encoding (bug 1122280, PR 5999)
#7691 Version 1.6
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/4301542/assets,https://api.github.com/repos/mozilla/pdf.js/releases/4301542,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.6.210,https://github.com/mozilla/pdf.js/releases/tag/v1.6.210,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.6.210,v1.6.210,False,False
3072526,2016-04-21T20:10:16Z,2016-04-21T20:14:35Z,v1.5.188,"Changes:

#6753 Wraps worker script if its cross-origin location is detected.
#6915 Refactor lookup hash tables/objects
#6934 Adjust a comment discussing transferred ArrayBuffers, to refer to those buffers being detached, not neutered (consistent with bug 1079844)
#6921 Always display `deprecated` messages, regardless of the verbosity setting
#6940 Ensure that we don't modify the `Dict` data when the `Differences` array of a font contains indirect objects
#6953 Correct the upper bound used when building the `transferMap` for SMasks (PR 6723 followup)
#6904 Destroy workers when they are no longer needed in the unit tests
#6913 Improve work-around for importScripts bug.
#6938 Fix 'Ready' message sequence for Firefox ext disabled worker.
#6933 Make type 1 font program decryption faster.
#6954 Various `setGState` improvements
#6971 Replace `getAll` with `getKeys` in `PartialEvaluator_hasBlendModes` to speed up loading of badly generated PDF files (issue 6961)
#6941 Allow local PDF files to be viewed in local frames
#6973 Fix a typo in api.js
#6972 Replace `getAll` with `getKeys` in `loadType3Data`
#6975 Get rid of `getAll` usage in colorspace.js
#6939 Use UglifyJS to minify files in minified target
#6856 move hasHtml to AnnotationElement
#6982 Remove the only remaining `Dict_getAll` usage (in evaluator.js) and the method itself
#6987 Remove Opera from the README file as they removed the extension
#6985 Remove XHTML leftovers from the viewer HTML files
#6998 [api-minor] Change `getOutline` to actually return the RGB color of outline items
#6984 Update `JpegImage.getData` to support `forceRGBoutput` for images with `numComponents === 1` (issue 6066)
#7007 [Addon] Catch errors in `getFindBar` (in PdfStreamConverter.jsm) to fix loading of PDF files in the bookmark sidebar (bug 1248959)
#7012 [api-minor] Don't render highlight/underline/squiggly/strikeout annotations that doesn't have popup
#7009 [api-minor] Always expose data.title and data.contents for TextAnnotation
#6988 Implement support for FileAttachment annotations
#7016 Group popup creation code and apply it to more annotation types
#7030 Remove the `hasImage` property from `PDFThumbnailView`
#7031 Add a default title for outline items, to prevent display issues if the title is missing
#7036 [SVG] Specify the `PDFJS.cMapUrl`/`PDFJS.cMapPacked` parameters in the svgviewer example
#7035 Ensure that `PDFFindController_reset` actually resets _all_ state (issue 7034)
#7038 Move the sidebar related code from viewer.js into `PDFSidebar`
#7040 Remove `PDFThumbnailViewer_ensureThumbnailVisible`
#6879 Makes PDF data reading Streams API friendly.
#7049 Avoid accidentally getting the entire font file in `readNameTable` (issue 7020)
#7023 Only draw glyphs on canvas if they are in the font or the font file is missing.
#7050 For CIDFontType2 use CID as glyph ID when missing CID to GID map.
#7052 Reverts back un-need change made at #6879.
#6943 Add support for bold/italic styled outline items in the viewer
#7054 Correct a minor name issue in the outline viewer code
#7061 Introducing gulp
#7063 Migrate `clean` and `importl10n` target to gulp
#7029 [PDFThumbnailView] Re-factor the `canvas` to `image` conversion such that we always render to a `canvas`, and then replace it with an `image` once rendering is done
#7046 fonts.js: bad metric overrides when values are zero
#7069 Convert `uniXXXX` glyph names to proper ones when building the `charCodeToGlyphId` map for TrueType fonts (bug 1132849, issue 6893, issue 6894)
#6906 avoid apply transform twice for composite context
#7084 Revert renaming `node make` to `gulp` for `mozcentral`
#7088 Pass the `PDFJS.postMessageTransfer` parameter to the worker, so that the `MessageHandler` can be setup correctly in `createDocumentHandler` (issue 6957)
#7093 Use the correct path when checking if a `/l10n` directory exists, to avoid errors during `gulp importl10n` (PR 7063 followup)
#7039 Refactors CMapFactory.create to make it async
#7098 Ensure that TrueType font tables have `uint32` checksums
#7100 Removes core/stream circular dependency on core/parser.
#7105 Add an ISSUE_TEMPLATE
#7005 Fixes insertion of blank pages during print if page sizes differ
#7108 Removes frontWindow usage from the stream converter.
#7113 Disables issue6961 test.
#7053 Removes global PDFJS usage from the src/core/.
#7122 Allow unit-tests to use linked PDF files, by having the `unittest` command download unavailable ones (issue 7117)
#7118 Prevent failures in the Annotation code if the `Rect` array contains indirect objects (issue 7115)
#7129 Updates Jasmine version.
#7128 Add unit-tests for destionations in /Names (NameTree) dictionaries where all entries are indirect objects
#7102 Log uncaught global errors.
#7133 Faster unit-tests by using `beforeAll`/`afterAll` in api_spec.js
#7066 Parse Type1 font files to determine the various `Length{n}` properties, instead of trusting the PDF file (issue 5686, issue 3928)
#7078 Refactor the building of `toFontChar` for non-embedded fonts
#7106 Keep track of the character to glyph mapping in font_renderer.js, to prevent errors when different characters point to the same glyph (issue 7101)
#7134 Refactors to remove stream.js dependency on colorspace.js
#7107 Detect premature worker load error
#7146 Extract CFFParser and Type1Parser from fonts.js
#7148 Forces UMD header to have relative path and extension for CommonJS.
#7114 [Bug 1237908] Make pdf.js use the correct principal origin attributes when loading …
#7144 Prepare viewer.js for async loading and module separation.
#7150 Initial browserify example.
#7158 Update Webpack and Browserify example README files
#7169 Specifies package format for jspm.
#7164 Use `beforeAll`/`afterAll` in `isExternalLinkTargetSet` in dom_utils_spec.js (issue 6905)
#7126 Move all PDFJS display/ usages into global.js file.
#7097 Prevents document zooming if still scrolling and meta keys pressed (Issue #7022)
#7170 Prevent the _entire_ viewer from zooming, when quickly switching from scrolling to zooming using the mousewheel (PR 7097 followup)
#7174 Use `beforeAll`/`afterAll` in `CipherTransformFactory` in crypto_spec.js (issue 6905)
#7171 Remove the remaining usages of `new {Name,Cmd}` in favor of `{Name,Cmd}.get`
#7175 Use `beforeAll`/`afterAll` in font_spec.js (issue 6905)
#7178 Removes hijack describe() hack from unit tests.
#7176 Allow SMask be resumed after restore() and better transform after SMask
#7184 [Bug 1260585] Stops bleeding of pattern edges for mesh.
#7185 Support almond.js #7177
#7189 Removing ""entry-loader"" dependency from webpack.
#7172 Introduces UMD headers to the web/ folder.
#7191 Export the `DefaultAnnotationLayerFactory` to prevent the viewer components from breaking (PR 7172 followup)
#7201 Ensure that the `params` parameter of the `PredictorStream` is a dictionary (issue 7200)
#7197 Remove `combineUrl` and replace it with `new URL`. Issue #7183, for reference.
#7190 Dispatch a `sidebarviewchanged` event in `PDFSidebar` when the view changes
#7116 Refactor `LinkAnnotation` slightly, improve handling of the `GoToR` action, and add unit-tests
#7206 Expose a few non-classes on `PDFViewerApplication`
#7207 Convert the hand tool to a class
#7211 Add a couple of `CipherTransformFactory` unit-tests for blank passwords, and move the `isDict` unit-tests to the correct file
#7210 Split the two paths in `PDFImage.resize` into separate helper functions, placed in colorspace.js and image.js
#7219 Convert the password prompt to a class
#7233 Adjust incorrect first obj number of ""free"" xref entry in `XRef_readXRefTable` (issue 7229)
#7209 Moves all document.getElementById lookups into viewer.js
#7235 Version 1.5
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/3072526/assets,https://api.github.com/repos/mozilla/pdf.js/releases/3072526,0e2d50f8e67adce0b89a6e5b1deb0a3887df613d,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.5.188,https://github.com/mozilla/pdf.js/releases/tag/v1.5.188,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.5.188,v1.5.188,False,False
2502558,2016-01-27T15:31:52Z,2016-01-27T16:31:21Z,v1.4.20,"#6758 Fix incorrect position of text widget
#6683 Adds UMD headers to core, display and shared files.
#6762 Only export `Uint32ArrayView` when it's actually defined, to prevent breaking e.g. the Firefox addon/built-in version
#6764 Collapses UMD headers in bundled files.
#6766 Bump versions to 1.3.
#6773 Changing Firefox Addon ID
#6765 Remove unused variables
#6767 Strip referrer from link annotation.
#6778 Fixing externalLinkTarget
#6772 Remove a superfluous ""s"" in `AnnotationsLayerBuilder` from files in web/
#6770 Refactor annotation display layer code to use classes
#6780 Implement annotation layer regression testing
#6787 Change test-case `issue4914` to an `annotations` test
#6785 Adds/modifies examples for node.js and webpack.
#6792 Implement support for Popup annotations
#6805 Do not modify `data.rect` in `AnnotationElement_createContainer`, since that will corrupt the annotation position on subsequent calls
#6808 Rename and reorder link annotation CSS
#6814 Ensure that the `baseTransform` is applied when rendering annotations
#6807 Ensure that hidden popups do not use any space
#6813 Implement support for Underline annotations
#6821 Bug 951051 - Better crypto key length recovery.
#6771 Removes hardcoded module loading order
#6819 Implement support for StrikeOut annotations
#6823 Implement support for Squiggly annotations
#6827 Implement support for Highlight annotations
#6724 Add validation for callsubr and callgsubr for type 2 charstrings.
#6837 Fix a typo in the ""file"" entry for issue3694_reduced in test_manifest.json
#6834 Strip `null` (\x00) characters from the URLs in LinkAnnotations (issue 6832)
#6842 Update the link location for 'intelisa.pdf' to point to the Internet Archive
#6843 shading-pattern: Decreased `Shadings.SMALL_NUMBER`
#6825 Adds UMD header to pdf.js and pdf.worker.js files.
#6820 Apply Patterns, if necessary, when rendering text
#6839 Check that CIDFontType0 fonts does not actually contain OpenType font files (issue 6782)
#6855 Issue 6854 - Update the link locations to point to the Internet Archive for tests: 20130226130259, JST2007-5, P020121130574743273239, SFAA_Japanese, TaroUTR50SortedList112
#6858 Issue 6854 - Re-enable testing of 'aboutstacks.pdf'
#6859 Update five linked test cases to point to the Internet Archive
#6860 Issue 6854 - Update the link locations to point to the Internet Archive for tests: artofwar, bpl13210, bug766138, bug808084, bug887152
#6862 Issue 6854 - Update the link locations to point to the Internet Archive for tests: cable, fips197, fit11-talk, geothermal, hmm
#6853 Update the link location for 'issue3666.pdf' to point to the Internet Archive
#6864 Update links to point to the Internet Archive for ohkubo-SS04, pal-o47, pdf, piperine and preistabelle
#6865 Update the linked test case hmm.pdf to point to the intended version
#6846 Use URL constructor for combineURL.
#6873 Add an extra set of `//` to the comment for the URL polyfill, since the preprocessor eats one set, thus breaking the world (PR 6846 followup)
#6867 Disable e10s.
#6866 Issue 6854 - Update the link locations to point to the Internet Archive for tests: html5checker, hudsonsurvey, ichiji, issue1010, issue1015
#6869 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1049, issue1096, issue1127, issue1133, issue1169
#6871 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1233, issue1257, issue1309, issue1317, issue1419
#6875 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1466, issue1629, issue1658, issue1685, issue1687
#6876 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1709, issue1721, issue1729, issue1796, issue1810
#6878 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1878, issue1912, issue1936, issue1998, issue2006
#6880 Update links to point to the Internet Archive for issue818, issue919, jai, liveprogramming and mao
#6881 Update links to point to the Internet Archive for issue3384, issue3848, issue3903, issue3925 and issue5592
#6884 Remove 'tcpdf_033.pdf.link', since it has been replaced with a reduced test-case
#6883 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue2129, issue2139, issue2386, issue2442, issue2531
#6885 Replace the linked test-case for issue 1155 with a reduced one
#6886 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue2829, issue2853, issue2881, issue3062, issue3999
#6887 Remove 'issue2537.pdf.link', since it has been replaced with a reduced test-case
#6888 Update links to point to the Internet Archive for issue1597, issue2627 and kdchart
#6848 [TrueType] Recover from a missing ""glyf"" table by replacing it with dummy data, utilizing the existing code in `sanitizeGlyphLocations`
#6895 Update links to point to the Internet Archive for issue2799 and issue5726
#6822 [api-minor] Add support for URLs in the document outline
#6900 Set type=""password"" for the `PasswordPrompt` input dynamically, to prevent unnecessary warnings in Firefox for http:// documents (issue 6898)
#6891 Map missing glyphs to the `notdef` glyph for TrueType (3, 1) fonts regardless if the 'post' table is defined or not (issue 6889)
#6803 [api-minor] Add support for PageLabels in the API
#6916 Allow foriegn origin URLs only for hosted viewers.
#6918 Bump version to 1.4
#6919 Update beta and stable.
#6922 Prevent failures in the ""scanning for endstream"" code, in `Parser_makeStream`, by handling the case where 'endstream' is split between contiguous chunks (issue 1536)
#6928 Fixes URL polyfill check for MS Edge.
#6930 [api-minor] Change `getPageLabels` to always return the pageLabels, even if they are identical to standard page numbering
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/2502558/assets,https://api.github.com/repos/mozilla/pdf.js/releases/2502558,b15f335380749f61bf1dc95a94278410de10864f,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.4.20,https://github.com/mozilla/pdf.js/releases/tag/v1.4.20,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.4.20,v1.4.20,False,False
2476465,2016-01-22T18:37:23Z,2016-01-22T18:42:36Z,v1.4.11,"#6758 Fix incorrect position of text widget
#6683 Adds UMD headers to core, display and shared files.
#6762 Only export `Uint32ArrayView` when it's actually defined, to prevent breaking e.g. the Firefox addon/built-in version
#6764 Collapses UMD headers in bundled files.
#6766 Bump versions to 1.3.
#6773 Changing Firefox Addon ID
#6765 Remove unused variables
#6767 Strip referrer from link annotation.
#6778 Fixing externalLinkTarget
#6772 Remove a superfluous ""s"" in `AnnotationsLayerBuilder` from files in web/
#6770 Refactor annotation display layer code to use classes
#6780 Implement annotation layer regression testing
#6787 Change test-case `issue4914` to an `annotations` test
#6785 Adds/modifies examples for node.js and webpack.
#6792 Implement support for Popup annotations
#6805 Do not modify `data.rect` in `AnnotationElement_createContainer`, since that will corrupt the annotation position on subsequent calls
#6808 Rename and reorder link annotation CSS
#6814 Ensure that the `baseTransform` is applied when rendering annotations
#6807 Ensure that hidden popups do not use any space
#6813 Implement support for Underline annotations
#6821 Bug 951051 - Better crypto key length recovery.
#6771 Removes hardcoded module loading order
#6819 Implement support for StrikeOut annotations
#6823 Implement support for Squiggly annotations
#6827 Implement support for Highlight annotations
#6724 Add validation for callsubr and callgsubr for type 2 charstrings.
#6837 Fix a typo in the ""file"" entry for issue3694_reduced in test_manifest.json
#6834 Strip `null` (\x00) characters from the URLs in LinkAnnotations (issue 6832)
#6842 Update the link location for 'intelisa.pdf' to point to the Internet Archive
#6843 shading-pattern: Decreased `Shadings.SMALL_NUMBER`
#6825 Adds UMD header to pdf.js and pdf.worker.js files.
#6820 Apply Patterns, if necessary, when rendering text
#6839 Check that CIDFontType0 fonts does not actually contain OpenType font files (issue 6782)
#6855 Issue 6854 - Update the link locations to point to the Internet Archive for tests: 20130226130259, JST2007-5, P020121130574743273239, SFAA_Japanese, TaroUTR50SortedList112
#6858 Issue 6854 - Re-enable testing of 'aboutstacks.pdf'
#6859 Update five linked test cases to point to the Internet Archive
#6860 Issue 6854 - Update the link locations to point to the Internet Archive for tests: artofwar, bpl13210, bug766138, bug808084, bug887152
#6862 Issue 6854 - Update the link locations to point to the Internet Archive for tests: cable, fips197, fit11-talk, geothermal, hmm
#6853 Update the link location for 'issue3666.pdf' to point to the Internet Archive
#6864 Update links to point to the Internet Archive for ohkubo-SS04, pal-o47, pdf, piperine and preistabelle
#6865 Update the linked test case hmm.pdf to point to the intended version
#6846 Use URL constructor for combineURL.
#6873 Add an extra set of `//` to the comment for the URL polyfill, since the preprocessor eats one set, thus breaking the world (PR 6846 followup)
#6867 Disable e10s.
#6866 Issue 6854 - Update the link locations to point to the Internet Archive for tests: html5checker, hudsonsurvey, ichiji, issue1010, issue1015
#6869 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1049, issue1096, issue1127, issue1133, issue1169
#6871 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1233, issue1257, issue1309, issue1317, issue1419
#6875 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1466, issue1629, issue1658, issue1685, issue1687
#6876 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1709, issue1721, issue1729, issue1796, issue1810
#6878 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue1878, issue1912, issue1936, issue1998, issue2006
#6880 Update links to point to the Internet Archive for issue818, issue919, jai, liveprogramming and mao
#6881 Update links to point to the Internet Archive for issue3384, issue3848, issue3903, issue3925 and issue5592
#6884 Remove 'tcpdf_033.pdf.link', since it has been replaced with a reduced test-case
#6883 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue2129, issue2139, issue2386, issue2442, issue2531
#6885 Replace the linked test-case for issue 1155 with a reduced one
#6886 Issue 6854 - Update the link locations to point to the Internet Archive for tests: issue2829, issue2853, issue2881, issue3062, issue3999
#6887 Remove 'issue2537.pdf.link', since it has been replaced with a reduced test-case
#6888 Update links to point to the Internet Archive for issue1597, issue2627 and kdchart
#6848 [TrueType] Recover from a missing ""glyf"" table by replacing it with dummy data, utilizing the existing code in `sanitizeGlyphLocations`
#6895 Update links to point to the Internet Archive for issue2799 and issue5726
#6822 [api-minor] Add support for URLs in the document outline
#6900 Set type=""password"" for the `PasswordPrompt` input dynamically, to prevent unnecessary warnings in Firefox for http:// documents (issue 6898)
#6891 Map missing glyphs to the `notdef` glyph for TrueType (3, 1) fonts regardless if the 'post' table is defined or not (issue 6889)
#6803 [api-minor] Add support for PageLabels in the API
#6916 Allow foriegn origin URLs only for hosted viewers.
",https://api.github.com/users/brendandahl,942640,brendandahl,https://api.github.com/repos/mozilla/pdf.js/releases/2476465/assets,https://api.github.com/repos/mozilla/pdf.js/releases/2476465,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.4.11,https://github.com/mozilla/pdf.js/releases/tag/v1.4.11,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.4.11,v1.4.11,False,False
2292730,2016-01-24T15:43:25Z,2016-01-24T15:45:56Z,v1.3.91,"#6633 Replace the unavailable linked test-case for issue 3263 with a reduced test-case
#6637 Replace the unavailable linked test-case for issue 3207 with a reduced test-case
#6638 Replace the unavailable linked test-case for issue 1655 with a reduced test-case
#6639 Replace the unavailable linked test-case for PR 197 with a reduced test-case
#6642 Replace the unavailable linked test-cases for PR 2606 with reduced test-cases
#6645 Replace the unavailable linked test-case for issue 3405 with a reduced test-case
#6627 Uses editorconfig to maintain consistent coding styles
#6646 Version 1.2.109
#6647 Replace the unavailable linked test-case for issue 845 with a reduced test-case
#6640 Apply transformation matrix to RadialGradient radiuses
#6551 [api-minor] Enables subpixel anti-aliasing for most of the content.
#6656 Replace the unavailable linked test-case for issue 1055 with a reduced test-case
#6662 Ensure that the `hidden` attribute is always removed from the canvas when rendering is complete (issue 6661)
#6653 Version 1.3
#6619 [api-minor] Moving text layer rendering into src/display and better ""text"" testing.
#6665 Update README.md to add Seamonkey compatibility
#6669 Use `DEFAULT_SCALE` instead of `1.0` as the default value if the `scale` option isn't specified when initializing `PDFPageView`
#6672 Refactor annotation flags code
#6671 Make `stripCommentHeaders` less greedy, to ensure that it doesn't eat 'use strict' directive at the top of files (PR 6627 follow-up)
#6676 document_colors_disabled shouldn't escape quotes (compare-locales warning)
#6677 Restore the `data.annotationFlags` parameter for annotations (PR 6672 follow-up)
#6675 [api-minor] Let `getAnnotations` fetch all annotations by default, unless an intent is specified
#6679 Improve the comment and deprecation warning for `PDFJS.openExternalLinksInNewWindow`
#6571 [api-minor] Allows a worker to handle multiple documents.
#6681 [api-minor] Add a parameter to `PDFPageProxy_getTextContent` that enables replacing of all whitespace with standard spaces in the textLayer (issue 6612)
#6693 Worker shall wait for MessageHandler to be created at api side.
#6697 Set error font for Type3 if its loading failed.
#6700 Replace `font.bindDOM()` with `font.createFontFaceRule()` in the `FontLoader` for MOZCENTRAL specific code (PR 6571 follow-up)
#6699 Improve code structure of the annotation code
#6695 Ensure that `Lexer_getName` does not fail if a `Name` contains in invalid usage of the NUMBER SIGN (#) (issue 6692)
#6701 Make use of `Util.inherit` in `src/core/pdf_manager.js`
#6698 [api-minor] Replaces UnsupportedManager with callback.
#6712 Use default line height for the text layer
#6715 Remove glyph id's outside the range of valid glyphs.
#6720 Fixes canvas state after smask group ends.
#6725 Fix the `charCodeOf` method in `IdentityToUnicodeMap` in order to prevent text selection from breaking
#6727 Replaces test for #6720 to fix botio-linux slow script.
#6723 Adds transfer function support for SMask.
#6736 Use `adjustWidths` for TrueType fonts if we handle them as OpenType (issue 5027, issue 5084, issue 6556, bug 1204903)
#6739 [Firefox] Prevent internal links from displaying ""resource://pdf.js/web/"" on hover, by tweaking the fallback case in `PDFLinkService_getDestinationHash`
#6651 Fix chars scaling for standard fonts. (redo of #4908)
#6733 Let Travis lint using `node make lint`, instead of a hard-coded command
#6743 Update the Node.js version used by Travis, to prevent deprecation warnings in the output
#6745 Reset the `styleElement` when clearing out loaded fonts (bug 1232071)
#6747 Remove the superfluous `PDFJS.disableFontFace = false;` statement at the top of font_loader.js (issue 6742)
#6684 shading-pattern: While drawing patterns, use transform to baseTransform first
#6757 Implement constants for all annotation types
#6714 [api-minor] Move annotation DOM manipulation logic to src/display/annotation_layer.js
#6916 Allow foriegn origin URLs only for hosted viewers.
",https://api.github.com/users/brendandahl,942640,brendandahl,https://api.github.com/repos/mozilla/pdf.js/releases/2292730/assets,https://api.github.com/repos/mozilla/pdf.js/releases/2292730,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.3.91,https://github.com/mozilla/pdf.js/releases/tag/v1.3.91,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.3.91,v1.3.91,False,False
2134641,2015-11-13T18:10:31Z,2015-11-16T19:26:53Z,v1.2.109,"Changes:

#6464 Version 1.1.469
#6200 Refactor the previous history rewriting logic
#6450 Update the link location for the `issue3115` test file
#6452 Replace the unavailable linked test-case for PR 2875 with a reduced test-case
#6482 Ensure that the `baseTransform` is always defined for TilingPatterns
#6468 Don't clear the `canvas` until re-rendering is finished when the `scale` or `rotation` is changed (issue 6467)
#6475 Tweak `PDFPageView` to reflect that `this.annotationLayer` is an `AnnotationsLayerBuilder` instance, instead of a DOM element (PR 5552 follow-up)
#6485 Prevent `PartialEvaluator_buildFormXObject` from failing if the `Matrix` or `BBox` contains indirect objects
#6411 Remove `Parser_fetchIfRef` since it's obsolete
#6489 Upstream changes from Bug 1202902 - Give loader scripts and XUL frame scripts a lexical scope that doesn't break everything?
#6473 Upstream the changes from Bug 1165272 - unify Get*CodebasePrincipal with createCodebasePrincipal in nsIScriptSecurityManager
#6501 Slightly improved `getPage` unit-tests
#6494 Add a unit-test for bug 1020226
#6491 Make `XRef_indexObjects` even more robust against bad PDF files, by checking for the existence of 'trailer' if 'xref' is not found
#6500 Add a (linked) test-case for PR 4897
#6499 Add a (linked) load test for issue 4387
#6503 Follow-up to PR 6489 - Upstream changes from Bug 1202902
#6502 Add a reduced load test-case for bug 1020858
#6476 Right-size the `map` array in PartialEvaluator_readToUnicode
#6520 [CRX] Call callback instead of onCompleted
#6434 Replace the unavailable linked test-case for issue 4436 with a reduced test-case
#6524 Fix a regression, from PR 5356, that breaks all scrolling in PresentationMode
#6481 Add a (linked) test-case for issue 4914
#6528 Ensure that `Dict_getArray` doesn't fail if `xref` in undefined (PR 6485 follow-up)
#6531 Fixes bluebeam password protection issue
#6532 Add unit-tests for PR 6531
#6540 Add unit-tests for the `onPassword/onProgress` callbacks of the API
#6550 Ignore operators that are known to be unsupported
#6543 Prevent getOperatorList from failing to correctly parse OPS.paintXObject for TilingPatterns that are missing some /Resources entries (issue 6541)
#6554 Add a reduced test-case for issue 4575
#6557 Pushing update reason for gh-pages and bower.
#6546 [api-minor] Adds controlled destruction of the worker.
#6555 Update version number for minor API changes.
#6558 Add a reduced test-case for issue 6151
#6560 Prevent `TypeError: page is undefined` when the document has been destroyed (PR 6546 follow-up)
#6562 Improved `get fingerprint` unit-tests (PR 5124)
#6566 Add a `totalLength` getter to `OperatorList`, since the `length` is zero after flushing
#6568 [api-minor] Add an optional param to DocumentInitParameters for speci…
#6552 Better CSS scaling for deviceRixelRatio != 1.
#6578 Ignore any pending data when worker is terminated.
#6576 Replace the linked test-case for issue 1293 with a reduced test-case
#6445 Fix exception when rotate page without a document
#6580 Find match count (rebase of #5051)
#6585 Replace the linked test-case for issue 3879 with a reduced test-case
#6587 Move VIEW_HISTORY_MEMORY constant to `view_history.js`
#6588 Better spacing in text layer.
#6586 Create a new indeterminate loading bar animation for the default viewer
#6591 Non/less flashing text layer during selection.
#6597 Ensure that the `textLayer` has the same dimensions as the `canvasWrapper` (issue 6596)
#6595 Uses document.currentScript for pdf.worker.js path.
#6590 Combines standalone chars into text groups.
#6601 Fixes incorrect PDF file font metrics.
#6602 Adding to authors
#6604 Add a reduced `text` test-case for issue 4665
#6607 Prevent `readCmapTable` from failing if the `cmap` is missing in TrueType fonts
#6608 Improve error message for non-existent local files
#6617 Correctly handle /FitH destinations with `null` as the parameter
#6620 Use random port in test webserver
#6318 For documents with different page sizes, ensure that the correct page becomes visible on load when e.g. the 'page' hash parameter was provided (bug 1191279, issue 6393)
#6600 Improve reliability of the test server
#6622 Remove mozcentral test files.
#6610 Replace the unavailable linked test-case for issue 2128 with a reduced test-case
#6625 Dispatch the `pagerendered` event when zooming is only done with CSS (issue 6463)
#6599 Generate better API documentation
#6629 Downgrade the JSHint version in order to fix linting failures on Travis
#6628 Ignore the /Mask entry in images unless its /ImageMask entry is explicitly set to `true` (issue 6621)
#6630 Fix minor capitalization issue in viewer
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/2134641/assets,https://api.github.com/repos/mozilla/pdf.js/releases/2134641,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.2.109,https://github.com/mozilla/pdf.js/releases/tag/v1.2.109,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.2.109,v1.2.109,False,False
1843618,2015-09-15T20:53:48Z,2015-09-21T13:45:20Z,v1.1.469,"Changes:
#6273 Refactor annotation code to use a factory
#6285 Rename `PatternType` to `ShadingType` to avoid confusion
#6281 Keep the Link annotation's data URL on one line
#6292 Fix various shading pattern regressions (issue 6287)
#6270 Adjust the heuristics used to detect OpenType font file with CFF data (bug 1186827, bug 1182130, issue 6264)
#6222 Improve robustness of builder (esp. on Windows)
#6304 fix handling of flags 1-3 in coons shading
#6308 Apply hover style to .overlayButton not only when hovered, but also when focused.
#6310 fix handling of flags 1-3 in tensor shading
#6282 Add a `PDFLinkService` instance to the ""simpleviewer"" component example
#6315 Test case for tensor shading PR 6310
#6321 Removes PdfRedirector.js and PlayPreview support.
#6325 Version 1.1.366
#6314 Fix regressions affecting both the 'pagemode' hash parameter and certain 'namedaction' types (PR 5971)
#6327 Prevent switching to disabled views (i.e. outline or attachments) in the sidebar
#6329 cmaps: Use cmap.forEach instead of Array.forEach
#6354 Fix typo in `drawFigures`, in webgl.js, which causes shadingPatterns with `figure.type === triangles` to render incorrectly
#6349 Fixes supportsMozChunked for node.js
#6233 Improve support for viewing PDFs from file://-URLs in the Chrome extension
#6366 Only take the fast-path in `PDFImage_createImageData` for un-masked JPEG images with ""standard"" colour spaces (issue 6364)
#6141 Provide a fallback for font rendering when not allowed to use `eval`
#6332 Serialize errors before invoking postMessage
#6370 api/getDocument: handle ArrayBuffer check for PDF binary data (byteLength)
#6372 Also check `maybeLength` when deciding if a stream is empty in `Parser_makeFilter` (issue 6360, bug 1191694)
#6375 Make `XRef_indexObjects` more robust against bad PDF files (issue 5752)
#6337 Adjust which TrueType (3, 1) glyphs we attempt to skip mapping of (issue 6336)
#6362 Add `disableStream` to the list of preferences read by `PDFViewerApplication.initialize` (issue 6361)
#6369 Add locatization notes for the DocumentProperties strings with parameters
#6358 Don't catch `MissingDataException` in `Parser_tryShift`
#6242 Allow outline to be collapsed / shown via +/-.
#6388 Use the Retina assets for `outlineItemToggler` when in HiDPI mode
#6390 Switch `expanded/collapsed` in the names of the `treeitem-*` assets
#6395 Fix typo in `test_manifest.json` that prevents test-case `issue1419.pdf` from running
#6401 Add a unit-test for skipping `paintXObject` if `Subtype === PS` (PR 4861)
#6386 Add a warning when we encounter an empty stream in `Parser_makeFilter`
#6404 Add unit-tests for Linearization dictionary parsing (PR 5023 follow-up)
#6403 Add a reduced test-case for issue 6113
#6399 Slightly improved test coverage for vertical text
#6402 Set TZ=UTC before calls to zip
#6405 Add a (linked) `load` test for PR 4731
#6357 Avoid more allocations for RTL text in bidi.js
#6417 Add (linked) `load` tests for PR 1976 and 4606
#6414 Ensure that the clipping path is reset when the state is restored (issue 6413)
#6407 Fallback in `readCmapTable`, instead of using `error`, for TrueType fonts with unsupported cmap formats (bug 1200096)
#6421 Adjust the `min-width` of outline items and use more consistent `border-radius` (PR 6242 follow-up)
#6423 Add mirrored triangle (TOC item icon)
#6425 Only choose a (3, 1) cmap table for TrueType fonts that have an encoding specified (issue 6410)
#6431 Add a utility function, for the viewer, that removes `null` (\x00) characters (issue 6416)
#6433 Add unit-tests for `stringToPDFString`
#6420 Add a reduced test-case for PR 4922
#6427 Make `get fingerprint` slightly more robust against corrupt PDF files
#6299 Convert canvas thumbnails to PNG
#6441 Misc. follow-up fixes to PR 6299 (Convert canvas thumbnails to PNG)
#6443 Don't show thumbnails until the `canvas` to `image` conversion is done (issue 6442)
#6447 Add unit-tests for `removeNullCharacters` (PR 6431 follow-up)
#6435 Replace the unavailable linked test-case for issue 3205 with a reduced test-case
#6391 Fix text spacing with vertical fonts (#6387)
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/1843618/assets,https://api.github.com/repos/mozilla/pdf.js/releases/1843618,f06aa6a3802ef6fb6c8919ef3de49bcfe774cb51,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.1.469,https://github.com/mozilla/pdf.js/releases/tag/v1.1.469,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.1.469,v1.1.469,False,False
1639480,2015-08-04T22:53:39Z,2015-08-06T21:10:19Z,v1.1.366,"Changes:
#6131 Version 1.1.215
#6134 Ensure that we fetch all indirect objects (i.e. |Ref|s) in ColorSpace_parseToIR
#6138 Ignore paint form XObject when the name is missing (issue 4558)
#6147 Further improvements of the getStats and getDownloadInfo unit tests
#6146 Add a reduced test-case for issue 4909
#6150 Localization updates (June 29, 2015)
#6140 Move the page switching code into `set currentPageNumber` in `PDFViewer` instead of placing it in the `pagechange` event handler
#5947 Simplify B2G viewer
#6155 Update Adobe CMaps URL and license
#6135 Skip mapping of CIDFontType2 glyphs when the font either has a |IdentityToUnicodeMap| or a |toUnicodeMap| with 65536 elements (issue 5677)
#6171 Adds more characters to the PUA range
#6170 Zoom relative to cursor position via mouse wheel
#6173 Add more reduced test-cases for PR 6171
#6176 [CRX] Ignore PDFs from responses to POST requests
#6177 Pass in a `PDFViewer` instance to `PDFPresentationMode` and use it to eliminate all references to `PDFViewerApplication`
#6178 Remove InteractiveAnnotation abstraction
#6169 Bug 1179262 - Remove PlayPreview registration from PDF Viewer.
#6180 Do not draw a border if neither a Border nor a BS entry is present
#6175 fontLoadPromises -> fontsToLoad
#6181 Add --downloadOnly flag to test.js
#5918 [Firefox] Replace the CPOW with asynchronous messages for the Fallback bar
#6182 Remove the `currentScaleValue` getter from `PDFViewerApplication` (issue 6158)
#6192 Refactor the 'resize' event handler in viewer.js (issue 6158)
#6166 Add a supplemental glyph map for non-embedded ArialBlack fonts (issue 5801)
#6193 Issue a warning instead of an error for long Names
#6195 Remove `PDFViewerApplication.updateScaleControls` (issue 6158)
#6194 Subtract start offset for xrefs in recovery mode
#6110 Refactor viewer code to fix issues with the ""pageviewer"" components example (issue 6056)
#6197 Improve robustness of stream parser (invalid length)
#6199 Simplify the code that resets the value of the `pageNumber` element in `PDFViewerApplication.setInitialView`
#6198 Use taskkill to stop the browser on Windows in tests
#6187 A couple of improvements of `getDestination` (unit-test included)
#6207 Remove `PDFViewerApplication.setScale` and further simplify the `scalechange` event handler (issue 6158)
#6208 Fetch all indirect objects (i.e. `Ref`s) in `NameTree_getAll` and `NameTree_get` (issue 6204)
#6214 Refactor annotation color handling and add unit tests
#6157 Make sure that the document is rendered on zooming and rotation for `PDFViewer` instances using the `defaultRenderingQueue`
#6221 Fixing find toolbar checkboxes not being accessible through keyboard
#6226 Update fonttools location and version (issue 6223)
#6220 Ignore double negative in `Lexer_getNumber` (issue 6218)
#6215 More cleanup regarding annotation border styles
#6201 [CRX] Respect download requests in main frame
#6196 Add --testfilter and -t flags
#6189 Improved build tools (preprocessor & postprocessor)
#6232 Simplify annotation data passing
#6235 Move handling of the 'custom' scale value from pdf_viewer.js to viewer.js
#6239 Refactor annotation rectangle code and add unit tests
#6254 Prevent documents from intermittently opening with the zoom level set to 1% (issue 6253)
#6256 Ensure that the viewer always receives focus when the HOME/END keys are pressed (bug 1186842)
#6257 Remove unused globals and updateViewarea function from viewer.js
#6240 Check if the `Decode` entry is non-default when deciding if JPEG images are natively supported/decodable (issue 6238)
#6268 Optimize text layer: Avoid unneeded .textContent access
#6236 Detect scripted auto-print requests
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/1639480/assets,https://api.github.com/repos/mozilla/pdf.js/releases/1639480,9e9df5600f7275fbdf469f46b3af997ad4c01f66,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.1.366,https://github.com/mozilla/pdf.js/releases/tag/v1.1.366,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.1.366,v1.1.366,False,False
1433165,2015-06-17T18:54:41Z,2015-06-18T14:39:27Z,v1.1.215,"Changes:
#5815 Ensure that entries in the Differences array of Type1 fonts are either numbers or names
#5991 Update README.md with shorter clone command and improved instruction order
#6002 Version 1.1.114
#5867 Change |pages| to be a ""private"" property of |PDFViewer|
#6004 Bug 1163404 - Disables rAF for the printing.
#5898 Extract more accurate glyph heights from type3 fonts
#5910 Fix error reading concatenated pdfs
#5999 Bug 1122280 - Handle UTF-8 encoding in URI
#5989 Add the |location| to the |updateviewarea| UI event
#6015 Add a reduced test-case for issue 5896
#5857 Set page size via @page + size
#5995 Apply char spacing only when there are chars.
#6014 Fix scroll to zoom jump between 25% and 1000%
#5901 Fall back to the |defaultEncoding| when no valid ""post"" table is found in TrueType fonts (bug 1050040)
#6023 Remove unused require() directive
#6020 Tweak the :focus/:hover CSS rules of the .toolbarField class used in Overlay dialogs
#6024 [Firefox] Parse all JPEG images in the addon
#6016 Convert UTF8 encoded passwords to ISO-8859-1 for |R = 6| encryption (issue 6010)
#6030 Fixed the ShellJS version
#6026 Eliminate transition effects from thumbnail loader
#6025 viewer: Support Retina/HiDPI thumbnails
#6021 Refactor the test driver
#6054 [Firefox] Fix newChannel/asyncFetch fallout from bug 1167053
#6051 [Firefox] Re-add _getTabForBrowser compatibility hack for the addon
#6046 Extract correct PDF format version from the catalog
#5971 Extracts PDFLinkService and PDFHistory APIs
#6063 Tweak the PDFLinkService a bit
#6065 Always traverse the entire parent chain in Page_getInheritedPageProp (issue 5954)
#6062 Revert PR 6024 ""[Firefox] Parse all JPEG images in the addon"", since it's fixed upstream
#6080 Ensure that PDFHistory does not incorrectly replace the initial document hash (issue 6079)
#6082 Fetch parameters if they are |Ref|s in Pattern color spaces (issue 6081)
#5823 [Chrome extension] Add Referer request header if needed
#5990 Skip mapping of CIDFontType2 glyphs in fonts with a |IdentityToUnicodeMap|, unless |properties.widths| is defined for the glyph
#6088 Check availability of canvas & PDF before printing
#6089 Update README (Chrome & Opera section)
#5998 Don't map glyphs to certain problematic Thai/Lao Unicode locations (issue 5994)
#6076 Apply padding on <select>, not the button
#6101 Add a test-case for issue 6099 - CalRGB color space where the parameters are a |Ref|
#6093 Slightly improved Crypto unit tests
#6091 Increase the font weight used for non-embedded ArialBlack fonts
#6090 Map missing glyphs to the notdef glyph for TrueType (3, 1) fonts (issue 6068)
#6112 Use the Alternate entry, if it exists, in ICCBased Colour Space dictionaries (issue 5836, issue 5939, issue 6055)
#6114 Ensure that the result of |constructStichedFromIRResult| is a number (issue 6113)
#6122 Fix a typo causing a TypeError when attempting to call pdfHistory_clearHistoryState (issue 6121)
#6125 Remove issue6113.pdf from the test-suite for failing intermittently in Firefox on the Linux bot
#6120 Clear the |getSinglePixelWidth| cache when rendering Type3 fonts (issue 6117)
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/1433165/assets,https://api.github.com/repos/mozilla/pdf.js/releases/1433165,c9a74984ec7eca8a49d33acdf760761e3d6df989,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.1.215,https://github.com/mozilla/pdf.js/releases/tag/v1.1.215,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.1.215,v1.1.215,False,False
1283199,2015-05-06T18:02:20Z,2015-05-11T17:00:55Z,v1.1.114,"Changes:
#5851 V1.1
#5855 Remove broken links from hello world example
#5856 Improve the instructions for the 'hello world' example
#5844 Add a |PDFViewer| option to remove the border shadow around pages (issue 5559)
#5866 Add |pageActualOption| to the list of predefined zoom options in the |scalechange| event handler in viewer.js
#5749 Bug 1072350 - Removing CPOWs used by Find events.
#5705 Don't map glyphs to Unicode ""Dotted circle"" combining mark (bug 1108301)
#5878 PR 5749 followup
#5713 Create a IdentityToUnicodeMap in evaluator.js when toUnicode contains IdentityH/IdentityV
#5868 Add custom |outlineloaded| and |attachmentsloaded| events to the viewer (bug 1112947)
#5882 Don't map glyphs to Unicode position 0x0E33, i.e. Thai character SARA AM (bug1046314)
#5888 Remove reference to GNUpdf from comment in |DocumentProperties.parseDate|
#5886 Restrict logging of errors with verbosity level
#5895 Re-factor and clean-up some preference related code in viewer.js
#5881 Added the data-page-number dom attribute to the page rendered in the browser
#5899 add missing pt-BR page_scale_percent property
#5907 Provide only one browser manifest example
#5906 Fixed a small typo in the italian translation
#5911 Remove commented out code about |disableWorker| in the test suite
#5908 Read jshint version from package.json
#5914 Bug 1151303 - [zh-TW] Translation update proposed for browser/pdfviewer/...
#5913 [B2G] Stub the |DownloadManager| to avoid error
#5912 Remove ShellJS copy and use the NPM version
#5933 Remove commented out code from viewer.html
#5926 prevent viewer from zooming on cmd+mousewheel (bug 1018932)
#5936 Update .gitattributes
#5937 Crypt filter EFF key should have StmF value as default, not StrF
#5923 Don't map glyphs to certain problematic General Punctuation Unicode locations (bug 911034)
#5944 Fail with a more informative error message if the browser executable pat...
#5945 Use Int32Array instead of Uint32Array in FlateStream
#5917 Address review comments from Bug 1148192 - Update pdf.js to version 1.1.24
#5951 Bug 1156287 - Do not extract unreachable code after return
#5655 Avoid getting stuck in empty nodes in the Pages tree when calling |Catalog_getPageDict| (issue 5644)
#5699 Refactor the Presentation Mode code
#5756 Guess CIDFontType0 subtype based on font file contents (issue 5751)
#5963 Clarify bug reporting with regards to providing a pdf
#5809 Attempt to infer if a CMap file actually contains just a standard Identity-H/Identity-V map
#5959 Refactor document properties overlay
#5966 Enable linting of Firefox specific code in viewer.js
#5953 Remove no longer needed hacks that enable spacebar scrolling in Firefox (issue 3498)
#5905 Remove SpecialPowers addon
#5828 Fix flaw in mozCurrentTransform polyfill
#5977 Prevent Firefox from warning about |unreachable code after return statement|
#5598 Disable Range Support for Chrome 39+40 (#5512)
#5979 Revert #5603 regarding Chrome range request bug
#5964 Handle the Encoding being a dictionary in PartialEvaluator_preEvaluateFont (bug 1157493)
#5983 Bug 1152841 - make pdf.js viewer app handle open requests from file viewers
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/1283199/assets,https://api.github.com/repos/mozilla/pdf.js/releases/1283199,3fd44fd24d9e447b74ab0ba529e9a9885a9f7ff7,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.1.114,https://github.com/mozilla/pdf.js/releases/tag/v1.1.114,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.1.114,v1.1.114,False,False
1061823,2015-03-17T21:50:19Z,2015-03-17T21:52:25Z,v1.1.3,"#5552 Creates/refactors PDFPageView class
#5603 Use Content-Range instead of Content-Length #5512
#5618 Version 1.0.1040
#5606 Add a |textlayerrendered| event
#5600 Implement guards for stringToBytes and bytesToString
#5622 Move the |pagerendered| event to pdf_page_view.js
#5554 Refactors getDocument and adds PDFDataRangeTransport.
#5632 Fixes B2G file open sequence.
#5627 Whitelists 'tel' schema.
#5631 Refactor searching for end of inline (EI) JPEG image streams
#5624 Base64 example and be more flexible what type of data is passed
#5638 Fix thumbnail scaling regression for files with different page sizes (issue 5637)
#5641 Prevent setting |isStandardFont| to |undefined| for non-embedded fonts
#5639 Attempt to display the File size quicker in the Document Properties dialog (PR 5554 followup)
#5646 Amend the docs for |disableAutoFetch| to mention that streaming must also be disabled
#5619 Chrome extension: Add options page
#5567 Add marker segment (PLT, PLM) and refactor TLM
#5659 Fix thumbnail rendering regression, when using |draw|, for PDF files with blend modes (issue 5637)
#5660 Fill temporary canvases with a white background too
#5511 Bug 639134 - update check for document colors
#5610 Better thumbnail image scaling
#5596 Fix border sizes around thumbnails
#5588 Remove unused anchor links placed before every page
#5671 Remove unused index.html.template
#5674 Avoid getting |childNodes| twice in PDFPageView_reset, by using the variable instead
#5672 Remove unused viewer-snippet-b2g-activity-header.html
#5675 Remove obselete file from .gitignore
#5669 Avoid out of range array access in JBIG2 decoder
#5673 Refactor the thumbnail code
#5679 Refactor the outline code
#5678 Refactor the attachment code
#5684 Make sure that an A entry in an annotation dictionary is also a dictionary itself
#5691 Use the |shadow| function from src/shared/util.js in viewer.js
#5634 Add support for TrueType (0, 0) cmap tables (issue 5501, issue 5574, and bug 1037973)
#5651 Try to skip mapping of missing TrueType and CIDFontType2 glyphs
#5717 Test case for issue 5567
#5729 Fix CCITTStream regression by byte-aligning rows before checking EOL marker
#5703 Relax the |isSymbolicFont| check for TrueType (3, 1) cmap tables (issue 5701)
#5743 Only skip the |!isSymbolicFont| check for TrueType (3, 1) cmap tables if no previous cmap table was found (PR 5703 followup)
#5763 Update to version 1.0.1149
#5748 Fetch parameters if they are a |Ref| in CalGray/CalRGB color spaces (issue 5747)
#5744 Fix regression that prevents resetting the zoom level to ""Automatic"" when using the |Ctrl + 0| keys
#5721 Move the call to |PDFFindController.resolveFirstPage| into PDFViewer
#5731 Skip fill bytes (0xFF) when decoding JPEG images (issue 5331)
#5711 Remove the |el| property in PDFPageView and PDFThumbnailView
#5586 Update thumbnails only when they are visible (to improve scrolling through large documents)
#5758 Add option to open external links in new window
#5693 cleaned whitespace
#5769 nbsp normalization
#5680 Reset state upon load if showPreviousViewOnLoad
#5771 Remove unused isNull utility function
#5778 Add a |text| test-case for issue 5421
#5734 Lower space factor threshold
#5806 Add a reduced test-case for issue 5734
#5802 Embedded Viewer Should Not Override Page Title
#5770 Correctly detect OpenType font files with CFF data
#5819 Using newChannel2 instead of newChannel in the extension.
#5595 Use binary search in getVisibleElements()
#5582 Fix handling of ""Fit"" zoom values in setHash (issue 5581)
#5692 [l10n] Treat language as case-insensitive
#5821 Correctly detect the presence of the Adobe specific APP14 JPEG marker (bug 1140761)
#5826 WebL10n update (March 2015)
#5829 Fixes minor typo from #5826
#5785 Revert PR 5510, except in WebKit browsers, for breaking print preview in Firefox
#5838 Make presentation mode work again in Safari
#5525 Disable PresentationMode for certain problematic configurations
#5843 Enable OPS.setHScale in the SVG backend
#5848 Fix the node getinfo.js example
",https://api.github.com/users/brendandahl,942640,brendandahl,https://api.github.com/repos/mozilla/pdf.js/releases/1061823/assets,https://api.github.com/repos/mozilla/pdf.js/releases/1061823,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.1.3,https://github.com/mozilla/pdf.js/releases/tag/v1.1.3,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.1.3,v1.1.3,False,False
993416,2015-02-20T21:53:51Z,2015-02-26T23:33:53Z,v1.0.1149,"Changes:

#5552 Creates/refactors PDFPageView class
#5603 Use Content-Range instead of Content-Length #5512
#5618 Version 1.0.1040
#5606 Add a |textlayerrendered| event
#5600 Implement guards for stringToBytes and bytesToString
#5622 Move the |pagerendered| event to pdf_page_view.js
#5554 Refactors getDocument and adds PDFDataRangeTransport.
#5632 Fixes B2G file open sequence.
#5627 Whitelists 'tel' schema.
#5631 Refactor searching for end of inline (EI) JPEG image streams
#5624 Base64 example and be more flexible what type of data is passed
#5638 Fix thumbnail scaling regression for files with different page sizes (issue 5637)
#5641 Prevent setting |isStandardFont| to |undefined| for non-embedded fonts
#5639 Attempt to display the File size quicker in the Document Properties dialog (PR 5554 followup)
#5646 Amend the docs for |disableAutoFetch| to mention that streaming must also be disabled
#5619 Chrome extension: Add options page
#5567 Add marker segment (PLT, PLM) and refactor TLM
#5659 Fix thumbnail rendering regression, when using |draw|, for PDF files with blend modes (issue 5637)
#5660 Fill temporary canvases with a white background too
#5511 Bug 639134 - update check for document colors
#5610 Better thumbnail image scaling
#5596 Fix border sizes around thumbnails
#5588 Remove unused anchor links placed before every page
#5671 Remove unused index.html.template
#5674 Avoid getting |childNodes| twice in PDFPageView_reset, by using the variable instead
#5672 Remove unused viewer-snippet-b2g-activity-header.html
#5675 Remove obselete file from .gitignore
#5669 Avoid out of range array access in JBIG2 decoder
#5673 Refactor the thumbnail code
#5679 Refactor the outline code
#5678 Refactor the attachment code
#5684 Make sure that an A entry in an annotation dictionary is also a dictionary itself
#5691 Use the |shadow| function from src/shared/util.js in viewer.js
#5634 Add support for TrueType (0, 0) cmap tables (issue 5501, issue 5574, and bug 1037973)
#5651 Try to skip mapping of missing TrueType and CIDFontType2 glyphs
#5717 Test case for issue 5567
#5729 Fix CCITTStream regression by byte-aligning rows before checking EOL marker
#5703 Relax the |isSymbolicFont| check for TrueType (3, 1) cmap tables (issue 5701)
#5743 Only skip the |!isSymbolicFont| check for TrueType (3, 1) cmap tables if no previous cmap table was found (PR 5703 followup)
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/993416/assets,https://api.github.com/repos/mozilla/pdf.js/releases/993416,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.1149,https://github.com/mozilla/pdf.js/releases/tag/v1.0.1149,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.1149,v1.0.1149,False,False
827724,2015-01-03T19:39:24Z,2015-01-06T14:20:39Z,v1.0.1040,"Changes:

#5420 Update l10n files (October 2014)
#5422 Avoid rendering invisible Type3 fonts (issue 5421)
#5418 Fix error in WidgetAnnotation
#5350 For JPX decoding only read next packet after checking for byte aligning.
#5433 Version 1.0.907
#5401 Add a reduced test case for bug 847420
#5390 Add a reduced test case for PR 5286
#5426 Fix JPX ""Out of Packets"" Error (issues 4358, 4659, 4814)
#5438 Add fkaelberer to the list of authors
#5409 Black text not visible #5291
#5443 Add a reduced test case for issue 5291
#5447 [issue 5440] fix rtl direction bug for full language codes
#5437 Change bug878194 to an |eq| test
#5454 Fix regression that prevents downloading of font files in the debugger
#5471 Fix typed array assignment in the |constructPostScriptFromIRResult| function (issue 5470)
#5428 Bug 1076909 - change args order in registerAddonHistogram.
#5416 Allow localization of the placement of percent signs in the zoom box
#5203 Fix loadingBar hiding when disableAutoFetch is enabled (issue 3590)
#5478 Prevent text selection in Presentation Mode (bug 1018882)
#5473 Use fewer multiplications for Ycck to Rgb conversion
#5485 fixed multi precinct handling in jpx
#5492 Fixes typo in webgl.js
#5488 Prevent a ""TypeError: pdfViewer is null"" when the viewer loads (PR 5413 followup)
#5465 [GENERIC viewer] Fix the background color of the findInput when the search term is not found
#5516 Fallback to the |Dummy| Pattern when we fail to parse a Shading Pattern (issue 5509)
#5507 Fix passing null as onFullfilled (which is broken in Chrome(-ium) 32)
#5523 removed rounding of values in composeSMaskLuminosity
#5524 Increases chunk size in SMask composition to 1M pixels
#5528 Add a (linked) test case for bug 1064894
#5448 Added try/catch #5427
#5449 Use 3 param method for converting r,g,b into css string.
#5532 Add a (linked) test case for bug 1108753 (PR 5276)
#5508 Refactor searching for the SOI marker of inline JPEG image streams
#5445 Fixes caching of inline images during parsing.
#5406 [Firefox] Enable linting of *.jsm files and update the code style in extensions/firefox/content
#5549 Support EPH and SOP markers.
#5551 Remove the link to the AMO extension from the README
#5553 Two JPX test cases for recently merged PRs
#5383 Fix searching for end of inline (EI) images with ASCII85Decode filters (bug 1077808)
#5494 Support all progression orders
#5510 Added page break hints in viewer css.
#5463 Add basic support for non-embedded Wingdings fonts
#5379 Don't map glyphs to unicode non breaking space.
#5562 Test case for issue 5481
#5446 minor improvements and code cleanup for canvas.js
#5536 Add fallback for non-embedded ""Century Gothic"" CIDFontType2 font (issue 4722 and bug 879561)
#5214 Improves rendering performance of annotation layers.
#5566 Fixed empty packet parsing bug
#5569 Remove unused annotation highlight div
#5578 Update linting on Travis to cover *.jsm files (PR 5406 followup)
#5571 Remove unused hasOperatorList code
#5594 Add a reduced test case for issue 4379
#5597 CCITTFaxStream: fix regression when EncodedByteAlign is true and EndOfLine is false
#5602 Ensure that |get fingerprint| doesn't fail if the ID is not an array (issue 5599)
#5382 Fix the placement of arrows in the zoom box
#5612 Add missing comma to German add-on description
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/827724/assets,https://api.github.com/repos/mozilla/pdf.js/releases/827724,997096f40d03cc0e46458df0e596cba6f26e82ef,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.1040,https://github.com/mozilla/pdf.js/releases/tag/v1.0.1040,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.1040,v1.0.1040,False,False
645368,2014-10-15T23:34:37Z,2014-10-22T13:28:35Z,v1.0.907,"Changes:

#5209 Set transformOrigin for text layer in css.
#5219 Avoid creating intermediate strings in sanitizeMetrics
#5232 Chrome extension: Isolate pageAction logic
#5240 In src/display/api.js, add documentation for the |progressCallback| parameter in |PDFJS.getDocument|
#5242 Fix for minutes tz calculation in document properties
#5237 Fix the placement of the findInput loading indicator in RTL locales
#5259 Handtool: Remove focus from previous node on click
#5251 Add basic support for ZapfDingbats
#5249 CCITTFaxStream parser: resolve xref if needed
#5260 Add more cases to |mapSpecialUnicodeValues| to fix the rendering of various Symbol encoded brackets
#5267 Version 1.0.712
#5226 Fix Zoom box resizing when it's hidden when the viewer loads (issue 5224)
#5248 Add getStats unit test
#5276 Fix handling of RGBA buffers in CalRGB colorspace (issue 5270)
#5235 Remove a duplicate PDF file from the test suite
#5221 Don't scale single-char text divs.
#5281 Fetches params in makeFilter
#5229 Auto zoom landscape documents (like slide presentations) to fit their height
#5271 Opera fixes
#5247 Fix links to wiki subsections and remove TextDecoder feature tests
#5284 Fetch decodeParams if it's a |Ref| in JBIG2Decode streams
#5289 Fixed typo in core/jpx.js #5227
#5287 Bug 1031612 - In PDF Viewer, the buggy XMP title ""Untitled"" overrides th...
#5286 Fix loading of inline JPEG images
#5254 Avoid showing 'blob..' as a title when using pdfjs from B2G
#5233 Workaround for TrueType fonts with exotic cmap tables (bug 1057544)
#5302 Removes examples from jsbin.com
#5275 Fix the exception propagation when rejecting workerReadyCapability
#5245 Further amend GlyphMapForStandardFonts (issue 5244)
#5115 Firefox pdf viewer support for e10s (Bug 942707).
#5306 Update zh-TW translation
#5305 Miscellaneous e10s fixes
#5315 Adds preprocessor directive to the X-Content-Security-Policy stuff
#5317 Bug 1064496 review changes
#5312 For |make firefox/mozcentral| builds, add cleanupJSSource to remove duplicate file headers in extensions/firefox/content/PdfjsChromeUtils.jsm
#5320 Merge of the #5311 and #4956
#5311 Lowerize the params to allow case sensitive
#5321 Fixes milestones link in README.md and adds pdfBugEnabled to the Chrome extension preferences
#5318 textLayer is not used anymore in render context
#5327 Builds distribution package for npm and bower.
#5330 Improve the getData unit test
#5314 Fixes names collisions in content.js
#5282 TextLayer selection coloring improvement for overlap.
#5337 Fix a regression preventing page change in the Stepper in the debugger
#5335 Fix text highlighting in the Font Inspector in the debugger
#5339 Adds readme file for the pdfjs-dist repo.
#5308 Add support for MMType1 fonts with embedded font files
#5263 Implement streaming using moz-chunk-arraybuffer
#5346 Misc follow ups on the streaming requests
#5250 Fix Symbol fonts without font file but with Encoding dictionary (issue 5238)
#5295 Refactoring to move page display code into separate class
#5359 Fixes typo/regression of #5295 for presentation mode
#5360 Followup fix for entering/exiting Presentation mode
#5361 Moves scrollPageIntoView to the PDFViewer.
#5362 Use CSS import to separate pdfviewer styles
#5363 Packages PDFViewer as a UI component.
#5367 Fixes enabling pdfBug
#5366 Use font loader api
#5368 Fixes printing regression a10fde1
#5373 Disables streaming in the extension when length is undefined.
#5369 Fix inconsistencies in the preference names used by PDFViewerApplication
#5371 Fix disableAutoFetch regression in the generic viewer
#5364 Firefox addon: Use isContentWindowPrivate instead of isWindowPrivate if available
#5374 Fix |cleanup| regression in the viewer
#5376 Adds optional argument to FontFace contructor call.
#5351 Require destinations when they are needed and do not fetch all of them in advance
#5352 Use |toUnicode| when creating the glyph map for standard CIDFontType2 fonts without embedded font file
#5325 Update findbar to wrap on initial search
#5399 Fix ""Automatic Zoom"" for landscape documents with very wide pages (issue 5398)
#5396 Bug 1071709 - 5-30% TART / Session Restore regressions on Inbound (v.35) september 22 from rev d3a7f765152f
#5395 [Firefox] Use getTabForBrowser instead of _getTabForBrowser if possible
#5402 Refactors PdfDataLister buffering.
#5407 Package.json update
#5413 Disable zooming in Presentation Mode
#5414 Bug 1072164 - Fixes decoding for CMYK jpegs.
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/645368/assets,https://api.github.com/repos/mozilla/pdf.js/releases/645368,e9072ac0186745c049ded7251311cf2690ec4d04,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.907,https://github.com/mozilla/pdf.js/releases/tag/v1.0.907,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.907,v1.0.907,False,False
536731,2014-08-19T12:24:49Z,2014-09-04T23:17:53Z,v1.0.712,"Changes since last update:

#5075 fix typo
#5080 Version 1.0.473
#5081 Fixes typo in promises implementation for legacy browsers
#5078 Optimize Ref_toString().
#5083 Initialize PDFView.url = ''
#5034 [SVG] Adds clip operator, fixes setGState, fill, stroke operators
#5074 Use Array.join to build up strings in readPostScriptTable().
#5077 Fix loading of PDF files with invalid or missing Type3 characters (issue 5039)
#5088 Stop including cidmaps.js
#5023 Re-factor parsing of the Linearization dictionary
#5063 Avoid creating intermediate strings in the PostScriptLexer
#5096 Right-size |chars.length| and |type.length| in bidi().
#5099 Add a reduced test-case for bug 1027533
#5059 Removing unused code and enforcing additional JSHint options
#5090 Re-run feature detection after downgrading the Chromium browser.
#5103 Add a reduced test-case for issue 4800
#5104 Use CSS.supports instead of '..' in ....style
#5082 Managed preferences for Chrome administrators
#5106 Attempt to fix Travis
#5105 Add a couple of reduced test-cases for PR 4259
#5101 Avoid expensive for..in loops involving CMaps
#5109 Use strict equalities in test/*
#5110 Fix JBIG2 decoding issue #5026
#5108 Use strict equalities in web/*
#5112 Add strict equalities in src/shared/*
#5113 Add strict equalities in src/display/*
#5116 Add strict equalities in src/core/\* (part 1)
#5119 Use strict equalities in make.js, external/\* and extensions/*
#5121 Use strict equalities in src/core/{image, jpx, jpg, jbig2}.js
#5120 Add strict equalities in src/core/\* (part 2)
#5125 Add strict equalities in src/core/\* (part 3)
#5122 Enforce strict equalities with JSHint
#5127 Fix issue where pdfDocument is null
#5129 Add reduced test-cases for issues 4875 and 4881
#5111 Represent cid chars using integers, not strings.
#5136 Properly set this.eof in CCITTFaxStream
#5134 Improves speed of the functions
#5008 Make QueueOptimizer easier to read.
#5095 Adjust the heuristics to recognize more cases of unknown glyphs for |toUnicode| (issue 5070)
#5007 Converting PDFFindBar and PDFFindController to classes
#5071 Optimize a font-heavy document
#5141 Fixes lint errors
#5140 Removes some bind() calls from fetchAsync
#5137 Optimize TextLayerBuilder_renderLayer() for text heavy documents.
#5135 Make IdentityCMaps more compact.
#5100 Load file:-URLs in the main thread.
#5142 Fixes text-selection example
#5143 Simplify text-selection example.
#5145 Revert commit 9a41659 (PR 5005) for breaking the loading of certain PDF files in the Firefox addon when range requests are active
#5149 Fixes CCITTFaxStream regression
#5114 Faster JBIG2 bitmap decoding
#5158 Change Rob's email address
#5157 Disable spellcheck in Chromium's URL popup
#5151 Avoid repeated creation of a simple RegExp object.
#5156 Fixes a regression from PR 4982
#5153 Preserve reference fragment in Chromium URL router
#5154 AES cipher: make padding optional
#5162 [SVG] Reduces amount of used memory during PNG creation.
#5147 [SVG] Adds image and mask features, fixes clippath
#5164 Nit fixes for svg.js
#5150 Fix #4935
#5160 only convert in IE9 if the requested responseType is actually an arraybu...
#5163 Refactoring of OpenType/TrueType font construction
#5166 Remove old unused code from PDFView.close()
#5170 [SVG] Uses float number formatter to print numbers in SVG
#5171 Fix typo
#5169 Attempt to display the File size quicker in the Document Properties dialog
#5175 Disable the ""Go to First/Last Page"" buttons when the first/last page is currently active
#5174 Add even more unit tests for the API
#5172 Avoid an allocation in readCharCode().
#5177 Remove two instances of leftover console.log debug statements
#5179 Miscellaneous code improvements for svg.js
#5180 Minor changes for api.js, font_loader.js and svg.js
#5183 Adds width at the beginning of the Type2 charstring
#5185 Fix CMap unit tests
#5182 SVG Command line tool for exporting output
#5188 Refactors some SVG api and includes svg.js in the build
#5184 Use cff glyph width in the hmtx table
#5191 Right-size the array in getSampleArray().
#5168 Avoid unnecessary array allocations in EvaluatorPreprocessor_read().
#5187 Reduce ASCII checks in makeInlineImage().
#5186 Fix the error handling for CMaps that fail to load
#5181 Optimizes defaults for svg.js
#5165 implement CalRGB color space
#5192 Ignore setGState no-ops.
#5194 Remove `position: absolute` from text divs.
#5195 Add unit test for PDF file loaded as typed array
#5198 Implements paintFormXObject in svg.js
#5199 Bug 1054590 - [pdf.js] Update to use gaia-header
#5200 CalRGB: optimize CalRGB calculations
#5201 Small re-factoring of DocumentProperties
#5205 Remove setGStateForKey() closure.
#5193 Only use data-font-name attributes when necessary.
#5210 Fixes Type3 negative font direction
#5208 Debounces scroll events in web viewer.
#5212 Fix ensureByte() function name (copy-and-paste error)
#5204 Apply the GRAYSCALE_1BPP optimization when `needsDecode` is set.
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/536731/assets,https://api.github.com/repos/mozilla/pdf.js/releases/536731,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.712,https://github.com/mozilla/pdf.js/releases/tag/v1.0.712,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.712,v1.0.712,False,False
448725,2014-07-22T20:17:56Z,2014-07-24T14:51:03Z,v1.0.473,"Changes since last update:

#4879 Version 1.0.277
#4851 Added more preferences for the available hash parameters.
#4866 Removes mozResponseArrayBuffer
#4876 Prevent adding undefined array entries to CMap.map in mapRangeToArray (issue 4875)
#4835 Prevent font error when no preferred cmap table is found (workaround for issue 4800)
#4886 Adds color components decoding to the JPEG
#4891 Fixes typo in getAsync
#4889 Optimized loops in JPG conversion.
#4868 Added a base64 transparent gif image to links for IE
#4894 Optimize JPG.js receiveAndExtend for 1 bit case.
#4896 Deleted unused variables in jpgjs buildComponentData.
#4897 Optimization for FlateStream_getCode, making more pdfs parsable.
#4902 Prevent infinite loop when scanning for endstream (bug 1020226)
#4907 add object id to streams to prevent infinite loops.
#4892 Fixes masked JPEG image
#4867 Fixes murmurhash for old webkit.
#4895 Small optimizations 1
#4870 Enable browser cache when running test server
#4910 Handle cases where the fontName contains non-alphanumeric characters (issue 4909)
#4912 Fixes optional backdrop regression
#4917 Fixed base64 image in CSS
#4920 Zero the height and width of the PageView canvas before deleting.
#4922 Return ErrorFont in loadFont when the fontRef is undefined
#4915 Fix #4914
#4925 Protects PDFJS.disableXXX == true from change
#4864 Translate statcmp.py to JavaScript
#4928 Removes statcmp.py
#4929 Imports most recent l10n files
#4930 Re-add Attachment strings to the Swedish l10n
#4932 Cache pages at the start of drawing, not the end.
#4924 Fixes drawImage for thumbs
#4933 Fix mishandling of incomplete, inverted masks.
#4834 Limit the size of canvases to 5MP (iOS restriction)
#4937 Halve the size of the PageView cache.
#4936 Fix PageView cache re-insertions.
#4938 Added support for decrypting PDF 1.7/2.0 Algorithm 5 revision 5 and 6. (perf)
#4939 Fixes JPX COC support / JPX error reporting refactoring
#4942 Add larger zoom values to zoom dropdown box
#4941 Prevent rendering unnecessary pages when the HOME/END keys are pressed
#4952 Collect More Telemetry Data
#4955 Renames concatenateToArray to appendToArray
#4959 Zero the height and width of cached canvases before deleting them.
#4950 Faster JPEG transform
#4951 Added getOperatorList to api.js
#4946 Refactor fake worker loading (issue 3862)
#4962 Increases page cache size when needed
#4961 Disables broken rAF on iOS
#4966 Add ChunkedStream.ensureByte().
#4965 Splits shared/annotation.js into core/ and display/
#4969 Implements onerror for JpegStreams
#4970 Fixes AnnotationUtils in the extension build
#4968 Build up textChunk.str more efficiently.
#4972 Avoid allocating return object in EvaluatorPreprocessor_read().
#4971 Removes error catch from fetchUncompressed()
#4945 Let Parser_makeFilter return NullStream when an invalid stream is encountered (issue 3417)
#4973 Factor out repeated Ref key string generation code.
#4979 SVG Viewer Example demo
#4981 Misc SVG Viewer example fixes
#4987 Refactoring PDF find controller and implementing page content and query normalization
#4982 Use null instead of [] for ops with no args.
#4991 Refactoring text layer builder and converting text layer builder to a class
#4944 Don't blindly trust toUnicode when building toFontChar for non-standard fonts without a font file (issue 4934)
#4976 Restructured EvaluatorPreprocessor_read to be more natural.
#4980 Additional heuristics to recognize unknown glyphs for toUnicode (bug 1027533)
#4993 Group 'rectangle' operator into constructPath
#4999 [SVG] Optimization of save/restore usage, Addition of paint methods
#4997 Fixes CanvasPixelArray set polyfill (#4974)
#5001 Do not run cleanup while printing is ongoing.
#5004 Improving CanvasPixelArray polyfill for Android
#5000 [SVG] Optimization of constructPath & Adds unit lengths
#5017 [CIDFontType2] Map characters missing in toUnicode to the private use area (bug 1028735 and issue 4881)
#5014 A few small font optimizations
#5025 Improve how DecodeStream handles empty buffers.
#5050 In the reftest analyzer, make it possible to toggle ""Circle differences"" with the D key
#5033 Avoid creating intermediate strings in Util.makeCssRgb().
#5015 Zero the height and width of the WebGL canvases on cleanup
#5005 Faster chunkedStream_getByte()
#5021 Fixes mesh fill pattern with optional matrix
#5062 Adjust the tabindices in the viewer
#5037 Add |fillRgb| method to LabCS
#5012 Prevent CMapFactory.create from failing by passing the necessary parameters from PartialEvaluator_readToUnicode (issue 5010)
#5068 Adds ImageData set support for legacy safari
#5069 Revert commit fc73e2e (PR 5005) for breaking certain PDF files
#4995 Fix another seac regression (issue 4801)
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/448725/assets,https://api.github.com/repos/mozilla/pdf.js/releases/448725,1694cd8d1316c703192128e7e792e8f1e667a6ea,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.473,https://github.com/mozilla/pdf.js/releases/tag/v1.0.473,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.473,v1.0.473,False,False
352530,2014-06-02T14:33:07Z,2014-06-02T17:18:16Z,v1.0.277,"Changes since last update:
#4520 Force default icon size for Text annotations without appearance stream
#4663 Version 1.0.68
#4645 Only handle scroll events when PDFView.pdfDocument is defined (issue 4642)
#4666 PDFImage_resize: copy in place with alpha and ~5x speed up
#4675 Dutch translations for attachments strings
#4674 Move DocumentOutlineView and DocumentAttachmentsView to their own files
#4671 Guesses Type1C font type based on file content
#4679 [Firefox] Workaround for sessionStorage error when the preference network.cookie.lifetimePolicy is set to 1 (bug 1000777)
#4686 Converts attachment items to buttons instead of links
#4697 Fix the display of the indeterminate progress bar when the loaded percentage is NaN (issue 4696)
#4687 Providing content type for attachment downloads
#4676 Force Unix line endings for text files
#4692 Add support for setting multiple values at once in ViewHistory
#4528 Less color conversion
#4693 Ensure that the viewer loads even if there are errors when the preferences are read
#4699 Reduces memory used during testing
#4669 Add a preference to set the sidebarView on load
#4689 Fixes DownloadManager for IE10 and above
#4701 Prevent trying to map characters to the specials unicode block in adjustMapping (issue 4650)
#4707 Link to FAQ from startpage
#4700 Reject polyfill and createPromiseCapability
#4705 Refactor how the database is read in ViewHistory
#4716 Amend GlyphMapForStandardFonts to fix issue 4276
#4709 Remove legacy promises from api.js
#4667 Remove LegacyPromise in src/core/chunked_stream.js
#4721 Tiny updates
#4724 Fixes cancel rendering regression
#4730 Fixes disableWorker regression
#4731 Fixes rendering of PDFs with nested trailer dictionary
#4725 Remove LegacyPromise in src/core/pdf_manager.js
#4727 Remove LegacyPromise in src/shared/annotation.js
#4726 Remove LegacyPromise in src/core/core.js
#4728 Remove LegacyPromise in src/core/worker.js
#4729 Remove LegacyPromise
#4733 Completes unit tests for PostScript evaluator and fixes two bugs in the evaluator itself
#4708 Graphic optimizations 1
#4732 Fixes tests for #926 and #2537
#4750 Reduce the number of resources loaded by GetDoc
#4756 Add getFindBar for Fx extension (refactor)
#4753 Add getFindBar for Fx extension
#4759 Refactoring annotation.js and removing old TODOs/comments
#4683 Groups path commands into single operation
#4763 Uses rAF to interrupt the operator list execution
#4767 Removes unused code from web/compatibility.js
#4740 Adds pageviewport documentation
#4769 update DE translation (attachments)
#4738 Allow unsafe-eval to fix font renderer in Chromium extension
#4771 Fix typo when rejecting Promise in getPage
#4768 Handle more cases of invalid line dash patterns in annotation borders
#4772 Reduce the number of calls to PDFView.getVisiblePages from updateViewarea
#4781 Move jshint & yargs to devDependencies
#4784 Switch to Node.js 0.10
#4783 Use jQuery 2 in examples
#4782 Remove type=""text/javascript"" from script tags.
#4777 Refactor the CSS rules for the overlayContainer
#4752 Refactors MessageHandler.send to remove callbacks
#4793 Fix regression that prevents downloading the PDF file (PR 4752)
#4796 Check if the Names dictionary actually contains a Dests dictionary before attempting to get the destinations
#4795 Add unit test for getData
#4736 Build paths for glyph accents when drawing text as curves
#4797 Update text layer correctly when zooming with USE_ONLY_CSS_ZOOM
#4764 Graphic optimizations 2
#4549 <object> / <embed> support in Chrome / Opera
#4799 Handle nested post script arguments in the preprocessor
#4773 Simplify Jbig2Image.decodeInteger()
#4812 Add more unit tests for the API
#4809 Fix loading of fonts with empty font files (bug 866395 and issue 3522)
#4808 Fix strange looking buttons in mobile Firefox
#4770 Adds Promises to getOperatorList
#4817 Graphic optimizations 3
#4815 Refactors loadFont for translateFont be async
#4821 Fixes regression in the cleanup
#4826 Wrapped localstorage.setItem in try block to avoid uncaught exceptions.
#4831 Adds some addon/mozcentral files to the preprocessor
#4824 Moves colorspace.js and function.js into core/
#4829 small optimizations in parser.getObj(), lexer.getObj()
#4845 adjust the aurora path in the tests browser.json
#4823 Simplify the interaction with overlays by adding an OverlayManager
#4850 Small comment fix
#4833 OpenAction support for printing
#4857 Making sure we are not importing CRs and BOMs
#4858 Bug 1015115 - switch to cloneInto in pdf.js
#4856 [OverlayManager] Add preventDefault to the keydown event handler
#4832 Refactors showText: split type3, remove showSpacedText
#4861 Fixes unhandled XObject subtype PS error
#4803 [WIP] Update web/compatibility.js
#4865 Adds compatibility.js to the Firefox extension
#4877 PdfRedirector checks if plugin is still in PlayPreview mode
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/352530/assets,https://api.github.com/repos/mozilla/pdf.js/releases/352530,250d394e47ff5450844378bb6348a7b80499f627,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.277,https://github.com/mozilla/pdf.js/releases/tag/v1.0.277,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.277,v1.0.277,False,False
283661,2014-04-22T15:58:18Z,2014-04-24T01:21:24Z,v1.0.68,"Changes since last update:
#4621 Setting empty tooltips for zoom select box items
#4628 Ensure that the errorWrapper is closed when a new document is opened (issue 4625)
#4622 version 1.0.21
#4607 Remove a bunch of unused local variables from web/ and src/
#4552 Prevent the annotationLayer from being recreated when the page is redrawn
#4538 Less copying in the JPX decoder
#4633 Fixes spacing in the text layer builder
#4636 Rename getUint32 to getInt32 and collect readInt*() in util.js
#4640 Fix special powers add-on for firefox.
#4637 Fix #3483 and simplify readCodingpasses()
#4638 Recognizes ASCII type1 encoding
#4641 Fixes invalid CFF name for Mac OSX
#4646 Update of zh-TW
#4644 Add Attachment strings to the Swedish l10n
#4656 Fix regression preventing the setting of breakpoints in the Stepper (PDFBug)
#4653 Fix corrupted images #4649
#4655 Add integer conversion to RGB colour values in convertToRgb in DeviceCmykCS (issue 4443)
#4654 Basic node.js example that demonstrate pdf.combined.js file use
#4600 Optimized JPX decoder ~6% faster
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/283661/assets,https://api.github.com/repos/mozilla/pdf.js/releases/283661,ead4cbf2b768a58283d518fc94bcf1a0714cf62a,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.68,https://github.com/mozilla/pdf.js/releases/tag/v1.0.68,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.68,v1.0.68,False,False
271783,2014-04-14T20:23:44Z,2014-04-14T21:56:29Z,v1.0.21,"Changes since last update:
#4535 Avoid drawing text when the font size is zero (issue 4484)
#4512 Clean up duplicate string conversion functions
#4539 Workaround for missing 'Rect' entry in annotation dictionaries (issue 4537)
#4554 Better test process killing for Windows
#4546 Prevent the Document Properties from being empty when the dialog is opened before the file has started loading
#4524 Use full screen width in presentation mode
#4545 Use new Chromium APIs for FTP and redirects
#4482 Rewrite 'Preferences' to make it async
#4516 Added CSS rules to improve scrolling on iOS devices
#4455 Fix download button waiting if document has started but not completed downloading
#4559 Refactors history and how the database is stored
#4563 Test with opera
#4565 Read color info from JPX stream + fix color problem #4540
#4286 WebGL and misc memory optimizations
#4374 Doesn't traverse cyclic references in Dict.getAll; reduces empty-Dict GC
#4578 Workaround for cases where FontName in the FontDescriptor differs from BaseFont in the Font (bug 847420)
#4569 Handle 'space' character correctly in MacRomanEncoding (bug 878026)
#4423 Treat fonts with the same font descriptor and encoding as aliases
#4574 Handle 'space' character correctly in WinAnsiEncoding (bug 850854)
#4568 Jpx optimization
#4570 Build the text layer geometry on the worker.
#4587 Fixes text-selection example
#4584 Create the WORKER_SRC_FILES and EXT_SRC_FILES lists in make
#4585 Redo and add more documentation to gh-pages.
#4593 Fix version numbers.
#4590 Relaxes murmurhash array requirement.
#4589 Remove leading and trailing spaces from info.Producer and info.Creator when printing debug info in the console (bug 872827)
#4556 Use Opaque Canvas
#4577 Removes custom test/reporter.js from the lint process
#4550 Heuristics to recognize the unknown glyphs for toUnicode
#4588 Adds text-only example
#4597 Print WebGL status in the console
#4595 Append whitespace divs so matches still line up.
#4602 Introduces .jshintignore
#4601 Fixes documentation for PDFPage.render
#4599 Adds then method to the RenderTask
#4596 Fix seac regression.
#4598 Work-around for filesystem:-URL bug
#4604 Fixes broken link in the documentation
#4605 1.0 release.
#4611 Exclude B2G stubs from linting
#4612 Fixes number of glyphs in the generated font
#4606 Makes PDF files load when xrefEntry is undefined
#4614 Refactor - remove redundant function and all references
#4617 Changes 'documentload' event behavior.
#4618 Refactoring - remove duplicated code in TextLayerBuilder
#4616 Creates make.js code to build jsdoc.
#4613 Refactors buildImage to use Promise; don't draw bad images
#4581 Check that images have valid dimensions (issue 4575)
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/271783/assets,https://api.github.com/repos/mozilla/pdf.js/releases/271783,f954cde8f4597b199eba7d72da72d0acbce64066,https://api.github.com/repos/mozilla/pdf.js/tarball/v1.0.21,https://github.com/mozilla/pdf.js/releases/tag/v1.0.21,https://api.github.com/repos/mozilla/pdf.js/zipball/v1.0.21,v1.0.21,False,False
266250,2014-03-13T13:31:53Z,2014-04-10T16:53:48Z,v0.8.1181,"#4392 Fixes CSS for webkit
#4399 Fixes infinite loop in DecodeStream_ensureBuffer()
#4397 Fix JPX colors
#4393 Fix scrolling using Shift+Spacebar in Firefox
#4404 Fixes off-by-one error when finding missing endstream
#4318 Improved annotations' display/behavior.
#4412 Making src/core/bidi.js adhere to the style guide
#4414 Add braces to single line statements in src/shared
#4416 Fixes typo in function.js
#4413 Making src/core/ps_parser.js adhere to the style guide
#4417 Making all examples adhere to the style guide
#4418 Making src/core/crypto.js adhere to the style guide
#4421 Making src/display/{metadata,font_loader}.js adhere to the style guide
#4422 Making src/core/jbig2.js adhere to the style guide
#4424 Fix coding style in /web
#4425 Making src/core/jpx.js adhere to the style guide
#4433 Move globals in web/pdf_find_bar.js
#4406 Improve image mask handling again
#4442 Update index.html
#4405 Avoid unnecessary re-reading of streams
#4446 Follow JMPR op only if outside of FDEF and IF
#4431 Extract arithmetic decoder to own file
#4420 Removing set-presence-in-ImageData check from canvas.js
",https://api.github.com/users/brendandahl,942640,brendandahl,https://api.github.com/repos/mozilla/pdf.js/releases/266250/assets,https://api.github.com/repos/mozilla/pdf.js/releases/266250,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v0.8.1181,https://github.com/mozilla/pdf.js/releases/tag/v0.8.1181,https://api.github.com/repos/mozilla/pdf.js/zipball/v0.8.1181,v0.8.1181,False,False
265098,2014-03-31T14:37:26Z,2014-04-10T00:48:23Z,v0.8.1334,"Changes since last update:
#4437 Fixes corrupted by Aspose fonts
#4444 Estimate the size of decoded streams in advance.
#4451 Makes firefox extension's l10n get() behavior similar to webL10n
#4426 Making extensions/chromium/*.js adhere to the style guide
#4434 Jbig2 optimizations
#4460 Fix coding style in external/builder/builder.js
#4465 Fix coding style in src/display
#4467 Fix coding style in /test
#4468 Fix coding style in make.js
#4454 Fix gaia css lint errors.
#4463 Fix copy-paste typo
#4473 Prevent infinite loop in CFFParser_parseHeader
#4477 Fixes HiDPI icons of the secondary toolbar for Chrome
#4440 refactor src/core/pdf_manager.js: rename pdfModel to pdfDocument
#4470 CMaps binary packing
#4447 Allocate fewer objects
#4464 Fixes pages without Resources in their dictionary
#4481 refactor src/core/pdf_manager.js: rename pdfModel to pdfDocument
#4488 Sync pt-BR translations with l10n-mozilla-aurora
#4474 Introduce paintSolidColorImageMask command to handle 1x1 solid image
#4453 Add a cache for glyphs
#4478 Use a vanilla array for fnArray
#4452 Making src/core/{image,obj,parser}.js adhere to the style guide
#4493 Fixes ignoring of the escaped CR LF
#4497 jpgjs performance improvements
#4503 Fix coding style in src/core/fonts.js
#4508 Fix coding style in extensions/firefox
#4507 Fix coding style in src/core
#4505 Making src/core/evaluator.js adhere to the style guide
#4509 Update lint config to enforce braces for single line statements
#4501 [Firefox] Lazy load network.js in PdfStreamConverter.js
#4517 Fixes for small colour variations in tests
#4511 Fix for #3181: jbig2 encoding for number of instances greater than 1
#4518 [Firefox] Stop importing default_preferences.js as a module and include it instead
#4466 Faster 1 bpp image drawing
#4504 Import l10n files from mozilla-aurora
#4525 [Firefox] Only load 'PdfStreamConverter' and 'PdfRedirector' when PDF.js is enabled
#4527 Partially reverts #3641
#4519 Cleaning up the viewer and pdfbug; fixes bugs in Stepper
#4515 Replaces test.py with test.js
#4529 Fix error message typo
#4521 Assign non-zero width/height to all rectangles (issue 4260)
#4541 Cools down Chrome/Windows during testing
#4543 Fixes lint for windows; adds test/font/fontutils.js
#4542 Fix typo/unused argument in fontloader.js->spliceString()
",https://api.github.com/users/yurydelendik,1523410,yurydelendik,https://api.github.com/repos/mozilla/pdf.js/releases/265098/assets,https://api.github.com/repos/mozilla/pdf.js/releases/265098,master,https://api.github.com/repos/mozilla/pdf.js/tarball/v0.8.1334,https://github.com/mozilla/pdf.js/releases/tag/v0.8.1334,https://api.github.com/repos/mozilla/pdf.js/zipball/v0.8.1334,v0.8.1334,False,False
