id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8169422,2017-10-18T16:51:16Z,2017-10-18T16:59:44Z,PHP-Parser 4.0.0 Alpha 1,"This is the first alpha for a new major version of the PHP-Parser library. The biggest new feature in this release is an experimental pretty-printing mode, which [preserves formatting](https://github.com/nikic/PHP-Parser/blob/v4.0.0alpha1/doc/component/Pretty_printing.markdown#formatting-preserving-pretty-printing) for parts of the code which have not been modified.

For more information on BC breaks in this release see the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-4.0.md).

### Added

* Added experimental support for format-preserving pretty-printing. In this mode formatting will be preserved for parts of the code which have not been modified.
* Added `replaceNodes` option to `NameResolver`, defaulting to true. If this option is disabled, resolved names will be added as `resolvedName` attributes, instead of replacing the original names.
* Added `NodeFinder` class, which can be used to find nodes based on a callback or class name. This is a utility to avoid custom node visitor implementations for simple search operations.
* Added `ClassMethod::isMagic()` method.
* Added `BuilderFactory` methods: `val()` method for creating an AST for a simple value, `concat()` for creating concatenation trees, `args()` for preparing function arguments.
* Added `NameContext` class, which encapsulates the `NameResolver` logic independently of the actual AST traversal. This facilitates use in other context, such as class names in doc comments. Additionally it provides an API for getting the shortest representation of a name.
* Added `Node::setAttributes()` method.
* Added `JsonDecoder`. This allows convertion JSON back into an AST.
* Added `Name` methods `toLowerString()` and `isSpecialClassName()`.
* Added `Identifier` and `VarLikeIdentifier` nodes, which are used in place of simple strings in many places.
* Added `getComments()`, `getStartLine()`, `getEndLine()`, `getStartTokenPos()`, `getEndTokenPos()`, `getStartFilePos()` and `getEndFilePos()` methods to `Node`. These provide a more obvious access point for the already existing attributes of the same name.
* Added `ConstExprEvaluator` to evaluate constant expressions to PHP values.
* Added `Expr\BinaryOp::getOperatorSigil()`, returning `+` for `Expr\BinaryOp\Plus`, etc.

### Changed

* Many subnodes that previously held simple strings now use `Identifier` (or `VarLikeIdentifier`) nodes. Please see the UPGRADE-4.0 file for an exhaustive list of affected nodes and some notes on possible impact.
* Expression statements (`expr;`) are now represented using a `Stmt\Expression` node. Previously these statements were directly represented as their constituent expression.
* The `name` subnode of `Param` has been renamed to `var` and now contains a `Variable` rather than a plain string.
* The `name` subnode of `StaticVar` has been renamed to `var` and now contains a `Variable` rather than a plain string.
* The `var` subnode of `ClosureUse` now contains a `Variable` rather than a plain string.
* The `var` subnode of `Catch` now contains a `Variable` rather than a plain string.
* The `alias` subnode of `UseUse` is now `null` if no explicit alias is given. As such, `use Foo\Bar` and `use Foo\Bar as Bar` are now represented differently. The `getAlias()` method can be used to get the effective alias, even if it is not explicitly given.

### Removed

* Support for running on PHP 5 and HHVM has been removed. You can however still parse code of old PHP versions (such as PHP 5.2), while running on PHP 7.
* Removed `type` subnode on `Class`, `ClassMethod` and `Property` nodes. Use `flags` instead.
* The `ClassConst::isStatic()` method has been removed. Constants cannot have a static modifier.
* The `NodeTraverser` no longer accepts `false` as a return value from a `leaveNode()` method. `NodeTraverser::REMOVE_NODE` should be returned instead.
* The `Node::setLine()` method has been removed. If you really need to, you can use `setAttribute()` instead.
* The misspelled `Class_::VISIBILITY_MODIFER_MASK` constant has been dropped in favor of `Class_::VISIBILITY_MODIFIER_MASK`.
* The XML serializer has been removed. As such, the classes `Serializer\XML`, and `Unserializer\XML`, as well as the interfaces `Serializer` and `Unserializer` no longer exist.
* The `BuilderAbstract` class has been removed. It's functionality is moved into `BuilderHelpers`. However, this is an internal class and should not be used directly.",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/8169422/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/8169422,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v4.0.0alpha1,https://github.com/nikic/PHP-Parser/releases/tag/v4.0.0alpha1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v4.0.0alpha1,v4.0.0alpha1,False,True
7615074,2017-09-02T17:11:03Z,2017-09-02T17:13:05Z,PHP-Parser 3.1.1,"### Fixed

* Fixed syntax error on comment after brace-style namespace declaration. (#412)
* Added support for TraitUse statements in trait builder. (#413)",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/7615074/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/7615074,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.1.1,https://github.com/nikic/PHP-Parser/releases/tag/v3.1.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.1.1,v3.1.1,False,False
7208615,2017-07-28T14:45:45Z,2017-07-28T14:47:20Z,PHP-Parser 3.1.0,"This version adds support for PHP 7.2.

### Added

* [PHP 7.2] Added support for trailing comma in group use statements.
* [PHP 7.2] Added support for `object` type. This means `object` types will now be represented as a builtin type (a simple `""object""` string), rather than a class `Name`.
  
### Fixed

* Floating-point numbers are now printed correctly if the LC_NUMERIC locale uses a comma as decimal separator.

### Changed

* `Name::$parts` is no longer deprecated.",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/7208615/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/7208615,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.1.0,https://github.com/nikic/PHP-Parser/releases/tag/v3.1.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.1.0,v3.1.0,False,False
6870352,2017-06-28T20:54:11Z,2017-06-28T20:55:58Z,PHP-Parser 3.0.6,"### Fixed

* Fixed the spelling of `Class_::VISIBILITY_MODIFIER_MASK`. The previous spelling of `Class_::VISIBILITY_MODIFER_MASK` is preserved for backwards compatibility.
* The pretty printing will now preserve comments inside array literals and function calls by printing the array items / function arguments on separate lines. Array literals and functions that do not contain comments are not affected.

### Added

* Added `Builder\Param::makeVariadic()`.

### Deprecated

* The `Node::setLine()` method has been deprecated.",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/6870352/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/6870352,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.6,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.6,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.6,v3.0.6,False,False
5644676,2017-03-05T18:24:15Z,2017-03-05T18:26:00Z,PHP-Parser 3.0.5,"### Fixed

* Name resolution of `NullableType`s is now performed earlier, so that a fully resolved signature is available when a function is entered. (#360)
* `Error` nodes are now considered empty, while previously they extended until the token where the error occurred. This made some nodes larger than expected. (#359)
* Fixed notices being thrown during error recovery in some situations. (#362)",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/5644676/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/5644676,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.5,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.5,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.5,v3.0.5,False,False
5424820,2017-02-10T20:20:19Z,2017-02-10T20:21:41Z,PHP-Parser 3.0.4,"### Fixed
- Fixed some extensibility issues in pretty printer (`pUseType()` is now public and `pPrec()` calls into `p()`, instead of directly dispatching to the type-specific printing method).
- Fixed notice in `bin/php-parse` script.

### Added
- Error recovery from missing semicolons is now supported in more cases.
- Error recovery from trailing commas in positions where PHP does not support them is now supported.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/5424820/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/5424820,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.4,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.4,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.4,v3.0.4,False,False
5357095,2017-02-03T21:57:55Z,2017-02-03T22:00:20Z,PHP-Parser 3.0.3,"### Fixed
- In `""$foo[0]""` the `0` is now parsed as an `LNumber` rather than `String`. (#325)
- Ensure integers and floats are always pretty printed preserving semantics, even if the particular value can only be manually constructed.
- Throw a `LogicException` when trying to pretty-print an `Error` node. Previously this resulted in an undefined method exception or fatal error.

### Added
- [PHP 7.1] Added support for negative interpolated offsets: `""$foo[-1]""`
- Added `preserveOriginalNames` option to `NameResolver`. If this option is enabled, an `originalName` attribute, containing the unresolved name, will be added to each resolved name.
- Added `php-parse --with-positions` option, which dumps nodes with position information.

### Deprecated
- The XML serializer has been deprecated. In particular, the classes `Serializer\XML`, `Unserializer\XML`, as well as the interfaces `Serializer` and `Unserializer` are deprecated.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/5357095/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/5357095,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.3,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.3,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.3,v3.0.3,False,False
4843141,2016-12-06T11:31:14Z,2016-12-06T11:32:28Z,PHP-Parser 3.0.2,"### Fixed
- Fixed name resolution of nullable types.
- Fixed pretty-printing of nullable types.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4843141/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4843141,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.2,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.2,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.2,v3.0.2,False,False
4805279,2016-12-01T12:38:07Z,2016-12-01T12:40:06Z,PHP-Parser 3.0.1,"### Fixed
- Fixed handling of nested `list()`s: If the nested list was unkeyed, it was directly included in the list items. If it was keyed, it was wrapped in `ArrayItem`. Now nested `List_` nodes are always wrapped in `ArrayItem`s. (#321)
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4805279/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4805279,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.1,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.1,v3.0.1,False,False
4798026,2016-11-30T18:20:55Z,2016-11-30T18:25:07Z,PHP-Parser 3.0.0,"**PHP-Parser 3.0 adds support for PHP 7.1 and improves support for error recovery.**

For a description of backwards incompatible changes between version 2.x and 3.0 see the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-3.0.md).

The following changelog only lists changes relative to the beta 2 release. For a complete list of changes see the [complete changelog](https://github.com/nikic/PHP-Parser/blob/master/CHANGELOG.md).

### Added
- Added support for dumping node positions in the NodeDumper through the `dumpPositions` option.
- Added error recovery support for `$`, `new`, `Foo::`.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4798026/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4798026,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.0,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.0,v3.0.0,False,False
4516918,2016-10-29T11:40:18Z,2016-10-29T11:42:32Z,PHP-Parser 3.0.0 Beta 2,"This release primarily improves our support for error recovery.

The following changelog only lists changes relative to the beta 1 release. A description of backwards incompatible changes between version 2.x and 3.0 can be found in the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-3.0.md).

### Added
- Added `Node::setDocComment()` method.
- Added `Error::getMessageWithColumnInfo()` method.
- Added support for recovery from lexer errors.
- Added support for recovering from ""special"" errors (i.e. non-syntax parse errors).
- Added precise location information for lexer errors.
- Added `ErrorHandler` interface, and `ErrorHandler\Throwing` and `ErrorHandler\Collecting` as specific implementations. These provide a general mechanism for handling error recovery.
- Added optional `ErrorHandler` argument to `Parser::parse()`, `Lexer::startLexing()` and `NameResolver::__construct()`.
- The `NameResolver` now adds a `namespacedName` attribute on name nodes that cannot be statically resolved (unqualified unaliased function or constant names in namespaces).

### Fixed
- Fixed attribute assignment for `GroupUse` prefix and variables in interpolated strings.

### Changed
- The constants on `NameTraverserInterface` have been moved into the `NameTraverser` class.
- Due to the error handling changes, the `Parser` interface and `Lexer` API have changed.
- The emulative lexer now directly postprocesses tokens, instead of using `~__EMU__~` sequences. This changes the protected API of the lexer.
- The `Name::slice()` method now returns `null` for empty slices, previously `new Name([])` was used. `Name::concat()` now also supports concatenation with `null`.

### Removed
- Removed `Name::append()` and `Name::prepend()`. These mutable methods have been superseded by the immutable `Name::concat()`.
- Removed `Error::getRawLine()` and `Error::setRawLine()`. These methods have been superseded by `Error::getStartLine()` and `Error::setStartLine()`.
- Removed support for node cloning in the `NodeTraverser`.
- Removed `$separator` argument from `Name::toString()`.
- Removed `throw_on_error` parser option and `Parser::getErrors()` method. Use the `ErrorHandler` mechanism instead.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4516918/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4516918,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.0beta2,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.0beta2,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.0beta2,v3.0.0beta2,False,True
4151769,2016-09-16T12:18:44Z,2016-09-16T12:24:49Z,PHP-Parser 3.0.0 Beta 1,"The following changelog only lists changes relative to the alpha 1 release. A description of backwards incompatible changes between version 2.x and 3.0 can be found in the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-3.0.md).

### Added
- [7.1] Function/method and parameter builders now support PHP 7.1 type hints (void, iterable and nullable types).
- Nodes and Comments now implement `JsonSerializable`. The node kind is stored in a `nodeType` property.
- The `InlineHTML` node now has an `hasLeadingNewline` attribute, that specifies whether the
  preceding closing tag contained a newline. The pretty printer honors this attribute.
- Partial parsing of `$obj->` (with missing property name) is now supported in error recovery mode.
- The error recovery mode is now exposed in the `php-parse` script through the `--with-recovery` or `-r` flags.

## Changes also in PHP-Parser 2.1.1
- The PHP 7 parser will now generate a parse error for `$var =& new Obj` assignments.
- Comments on free-standing code blocks will now be retained as comments on the first statement in the code block.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4151769/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4151769,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.0beta1,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.0beta1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.0beta1,v3.0.0beta1,False,True
4151623,2016-09-16T12:05:22Z,2016-09-16T12:06:34Z,PHP-Parser 2.1.1,"### Changed
- The pretty printer will now escape all control characters in the range `\x00-\x1F` inside double quoted strings. If no special escape sequence is available, an octal escape will be used.
- The quality of the error recovery has been improved. In particular unterminated expressions should be handled more gracefully.
- The PHP 7 parser will now generate a parse error for `$var =& new Obj` assignments.
- Comments on free-standing code blocks will now be retained as comments on the first statement in the code block.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/4151623/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/4151623,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.1.1,https://github.com/nikic/PHP-Parser/releases/tag/v2.1.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.1.1,v2.1.1,False,False
3731917,2016-07-25T13:17:12Z,2016-07-25T13:21:13Z,PHP-Parser 3.0.0 Alpha 1,"**This release adds full compatibility with PHP 7.1.** There are no major API changes, however specific details of the node structure have changed for a number of nodes

A description of backwards incompatible changes between version 2.x and 3.0 can be found in the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-3.0.md).

### Added
- [7.1] Added support for `void` and `iterable` types. These will now be represented as strings (instead of `Name` instances) similar to other builtin types.
- [7.1] Added support for class constant visibility. The `ClassConst` node now has a `flags` subnode holding the visibility modifier, as well as `isPublic()`, `isProtected()` and `isPrivate()` methods. The constructor changed to accept the additional subnode.
- [7.1] Added support for nullable types. These are represented using a new `NullableType` node with a single `type` subnode.
- [7.1] Added support for short array destructuring syntax. This means that `Array` nodes may now appear as the left-hand-side of assignments and foreach value targets. Additionally the array items may now contain `null` values if elements are skipped.
- [7.1] Added support for keys in list() destructuring. The `List` subnode `vars` has been renamed to `items` and now contains `ArrayItem`s instead of plain variables.
- [7.1] Added support for multi-catch. The `Catch` subnode `type` has been renamed to `types` and is now an array of `Name`s.
- `Name::slice()` now supports lengths and negative offsets. This brings it in line with `array_slice()` functionality.

### Changed

Due to PHP 7.1 support additions described above, the node structure changed as follows:
- `void` and `iterable` types are now stored as strings if the PHP 7 parser is used.
- The `ClassConst` constructor changed to accept an additional `flags` subnode.
- The `Array` subnode `items` may now contain `null` elements (destructuring).
- The `List` subnode `vars` has been renamed to `items` and now contains `ArrayItem`s instead of plain variables.
- The `Catch` subnode `type` has been renamed to `types` and is now an array of `Name`s.

Additionally the following changes were made:
- The `type` subnode on `Class`, `ClassMethod` and `Property` has been renamed to `flags`. The `type` subnode has retained for backwards compatibility and is populated to the same value as `flags`. However, writes to `type` will not update `flags`.
- The `TryCatch` subnode `finallyStmts` has been replaced with a `finally` subnode that holds an explicit `Finally` node. This allows for more accurate attribute assignment.
- The `Trait` constructor now has the same form as the `Class` and `Interface` constructors: It takes an array of subnodes. Unlike classes/interfaces, traits can only have a `stmts` subnode.
- The `NodeDumper` now prints class/method/property/constant modifiers, as well as the include and use type in a textual representation, instead of only showing the number.
- All methods on `PrettyPrinter\Standard` are now protected. Previously most of them were public.

### Removed
- Removed support for running on PHP 5.4. It is however still possible to parse PHP 5.2-5.4 code while running on a newer version.
- The deprecated `Comment::setLine()` and `Comment::setText()` methods have been removed.
- The deprecated `Name::set()`, `Name::setFirst()` and `Name::setLast()` methods have been removed.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/3731917/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/3731917,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v3.0.0alpha1,https://github.com/nikic/PHP-Parser/releases/tag/v3.0.0alpha1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v3.0.0alpha1,v3.0.0alpha1,False,True
3051524,2016-04-19T13:42:17Z,2016-04-19T13:44:11Z,PHP-Parser 2.1.0,"### Fixed
- Properly support `B""""` strings (with uppercase `B`) in a number of places.
- Fixed reformatting of indented parts in a certain non-standard comment style.

### Added
- Added `dumpComments` option to node dumper, to enable dumping of comments associated with nodes.
- Added `Stmt\Nop` node, that is used to collect comments located at the end of a block or at the end of a file (without a following node with which they could otherwise be associated).
- Added `kind` attribute to `Expr\Exit` to distinguish between `exit` and `die`.
- Added `kind` attribute to `Scalar\LNumber` to distinguish between decimal, binary, octal and hexadecimal numbers.
- Added `kind` attribtue to `Expr\Array` to distinguish between `array()` and `[]`.
- Added `kind` attribute to `Scalar\String` and `Scalar\Encapsed` to distinguish between single-quoted, double-quoted, heredoc and nowdoc string.
- Added `docLabel` attribute to `Scalar\String` and `Scalar\Encapsed`, if it is a heredoc or nowdoc string.
- Added start file offset information to `Comment` nodes.
- Added `setReturnType()` method to function and method builders.
- Added `-h` and `--help` options to `php-parse` script.

### Changed
- Invalid octal literals now throw a parse error in PHP 7 mode.
- The pretty printer takes all the new attributes mentioned in the previous section into account.
- The protected `AbstractPrettyPrinter::pComments()` method no longer returns a trailing newline.
- The bundled autoloader supports library files being stored in a different directory than `PhpParser` for easier downstream distribution.

### Deprecated
- The `Comment::setLine()` and `Comment::setText()` methods have been deprecated. Construct new objects instead.

### Removed
- The internal (but public) method `Scalar\LNumber::parse()` has been removed. A non-internal `LNumber::fromString()` method has been added instead.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/3051524/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/3051524,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.1.0,https://github.com/nikic/PHP-Parser/releases/tag/v2.1.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.1.0,v2.1.0,False,False
2705919,2016-02-28T19:49:07Z,2016-02-28T19:50:24Z,PHP-Parser 2.0.1,"### Fixed
- `declare() {}` and `declare();` are not semantically equivalent and will now result in different ASTs. The former case will have an empty `stmts` array, while the latter will set `stmts` to `null`.
- Magic constants are now supported as semi-reserved keywords.
- A shebang line like `#!/usr/bin/env php` is now allowed at the start of a namespaced file. Previously this generated an exception.
- The `prettyPrintFile()` method will not strip a trailing `?>` from the raw data that follows a `__halt_compiler()` statement.
- The `prettyPrintFile()` method will not strip an opening `<?php` if the file starts with a comment followed by InlineHTML.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/2705919/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/2705919,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.0.1,https://github.com/nikic/PHP-Parser/releases/tag/v2.0.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.0.1,v2.0.1,False,False
2234520,2015-12-04T15:28:59Z,2015-12-04T15:36:54Z,PHP-Parser 2.0.0,"This release adds complete support for parsing PHP 7 code.

**A description of backwards incompatible changes between version 1.x and 2.0 can be found in the [upgrading guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-2.0.md).**

**A complete list of changes between 1.x and 2.0 can be found in the [changelog](https://github.com/nikic/PHP-Parser/blob/master/CHANGELOG.md).**

There has been only one additional change since version 2.0.0-beta1:
- String parts of encapsed strings are now represented using `Scalar\EncapsStringPart` nodes. Previously raw strings were used. This affects the `parts` child of `Scalar\Encaps` and `Expr\ShellExec`. The change has been done to allow assignment of attributes to encapsed string parts.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/2234520/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/2234520,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.0.0,https://github.com/nikic/PHP-Parser/releases/tag/v2.0.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.0.0,v2.0.0,False,False
1997802,2015-10-21T18:30:56Z,2015-10-21T18:33:51Z,PHP-Parser 2.0.0 Beta 1,"**A description of changes incompatible with version 1.x can be found in the [upgrading guide](UPGRADE-2.0.md).** This changelog lists differences to alpha 1 only.

### Fixed
- Fixed issue with too many newlines being stripped at the end of heredoc/nowdoc strings in some cases. (#227)

### Changed
- Update group use support to be in line with recent PHP 7.0 builds.
- Renamed `php-parse.php` to `php-parse` and registered it as a composer bin.
- Use composer PSR-4 autoloader instead of custom autoloader.
- Specify phpunit as a dev dependency.

### Added
- Added `shortArraySyntax` option to pretty printer, to print all arrays using short syntax.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1997802/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1997802,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.0.0beta1,https://github.com/nikic/PHP-Parser/releases/tag/v2.0.0beta1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.0.0beta1,v2.0.0beta1,False,False
1838297,2015-09-19T14:15:45Z,2015-09-19T14:15:48Z,PHP-Parser 1.4.1,"### Fixed
- Fixed issue with too many newlines being stripped at the end of heredoc/nowdoc strings in some cases. (#227)
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1838297/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1838297,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.4.1,https://github.com/nikic/PHP-Parser/releases/tag/v1.4.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.4.1,v1.4.1,False,False
1536481,2015-07-14T19:15:32Z,2015-07-14T19:18:12Z,PHP-Parser 2.0.0 Alpha 1,"**A more detailed description of backwards incompatible changes can be found in the [upgrading guide](UPGRADE-2.0.md).**

### Removed
- Removed support for running on PHP 5.4. It is however still possible to parse PHP 5.2 and PHP 5.3 code while running on a newer version.
- Removed legacy class name aliases. This includes the old non-namespaced class names and the old names for classes that were renamed for PHP 7 compatibility.
- Removed support for legacy node format. All nodes must have a `getSubNodeNames()` method now.

### Added
- Added support for remaining PHP 7 features that were not present in 1.x:
  - Group use declarations. These are represented using `Stmt\GroupUse` nodes. Furthermore a `type` attribute was added to `Stmt\UseUse` to handle mixed group use declarations.
  - Uniform variable syntax.
  - Generalized yield operator.
  - Scalar type declarations. These are presented using `'bool'`, `'int'`, `'float'` and `'string'` as the type. The PHP 5 parser also accepts these, however they'll be `Name` instances there.
  - Unicode escape sequences.
- Added `PhpParser\ParserFactory` class, which should be used to create parser instances.
- Added `Name::concat()` which concatenates two names.
- Added `Name->slice()` which takes a subslice of a name.

### Changed
- `PhpParser\Parser` is now an interface, implemented by `Parser\Php5`, `Parser\Php7` and `Parser\Multiple`. The `Multiple` parser will try multiple parsers, until one succeeds.
- Token constants are now defined on `PhpParser\Parser\Tokens` rather than `PhpParser\Parser`.
- The `Name->set()`, `Name->append()`, `Name->prepend()` and `Name->setFirst()` methods are deprecated in favor of `Name::concat()` and `Name->slice()`.
- The `NodeTraverser` no longer clones nodes by default. The old behavior can be restored by passing `true` to the constructor.
- The constructor for `Scalar` nodes no longer has a default value. E.g. `new LNumber()` should now be written as `new LNumber(0)`.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1536481/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1536481,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v2.0.0alpha1,https://github.com/nikic/PHP-Parser/releases/tag/v2.0.0alpha1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v2.0.0alpha1,v2.0.0alpha1,False,True
1535991,2015-07-14T17:34:20Z,2015-07-14T17:39:17Z,PHP-Parser 1.4.0,"### Added
- Added interface `PhpParser\Node\FunctionLike`, which is implemented by `Stmt\ClassMethod`, `Stmt\Function_` and `Expr\Closure` nodes. This interface provides getters for their common subnodes.
- Added `Node\Stmt\ClassLike::getMethod()` to look up a specific method on a class/interface/trait.

### Fixed
- Fixed `isPublic()` return value for implicitly public properties and methods that define an additional modifier like `static` or `abstract`.
- Properties are now accepted by the trait builder.
- Fixed `__HALT_COMPILER_OFFSET__` support on HHVM.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1535991/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1535991,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.4.0,https://github.com/nikic/PHP-Parser/releases/tag/v1.4.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.4.0,v1.4.0,False,False
1247780,2015-05-02T15:40:59Z,2015-05-02T15:45:41Z,PHP-Parser 1.3.0,"### Added
- Errors can now store the attributes of the node/token where the error occurred. Previously only the start line was
  stored.
- If file positions are enabled in the lexer, errors can now provide column information if it is available. See  [documentation](https://github.com/nikic/PHP-Parser/blob/master/doc/component/Error.markdown#column-information).
- The parser now provides an experimental error recovery mode, which can be enabled by disabling the `throwOnError` parser option. In this mode the parser will try to construct a partial AST even if the code is not valid PHP. See [documentation](https://github.com/nikic/PHP-Parser/blob/master/doc/component/Error.markdown#error-recovery).
- Added support for PHP 7 `yield from` expression. It is represented by `Expr\YieldFrom`.
- Added support for PHP 7 anonymous classes. These are represented by ordinary `Stmt\Class_` nodes with the name set to `null`. Furthermore this implies that `Expr\New_` can now contain a `Stmt\Class_` in its `class` subnode.

### Fixed
- Fixed registration of PHP 7 aliases, for the case where the old name was used before the new name.
- Fixed handling of precedence when pretty-printing `print` expressions.
- Floating point numbers are now pretty-printed with a higher precision.
- Checks for special class names like `self` are now case-insensitive.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1247780/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1247780,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.3.0,https://github.com/nikic/PHP-Parser/releases/tag/v1.3.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.3.0,v1.3.0,False,False
1123640,2015-04-03T14:35:29Z,2015-04-03T14:37:13Z,PHP-Parser 1.2.2,"- The `NameResolver` now resolves parameter type hints when entering the function/method/closure node. As such other visitors running after it will be able to make use of the resolved names at that point already.
- The autoloader no longer sets the `unserialize_callback_func` ini option on registration - this is not necessary and may cause issues when running PhpUnit tests with process isolation.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1123640/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1123640,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.2.2,https://github.com/nikic/PHP-Parser/releases/tag/v1.2.2,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.2.2,v1.2.2,False,False
1086151,2015-03-24T19:16:56Z,2015-03-24T19:36:40Z,PHP-Parser 1.2.1,"This release fixes the registration of the class aliases introduced in version 1.2.0. Previously the old class names could not be used in `instanceof` checks under some circumstances.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1086151/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1086151,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.2.1,https://github.com/nikic/PHP-Parser/releases/tag/v1.2.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.2.1,v1.2.1,False,False
1077595,2015-03-22T16:28:51Z,2015-03-22T16:32:38Z,PHP-Parser 1.2.0,"### Changed
- To ensure compatibility with PHP 7, the following node classes have been renamed:
  
  ```
  OLD                             => NEW
  PhpParser\Node\Expr\Cast\Bool   => PhpParser\Node\Expr\Cast\Bool_
  PhpParser\Node\Expr\Cast\Int    => PhpParser\Node\Expr\Cast\Int_
  PhpParser\Node\Expr\Cast\Object => PhpParser\Node\Expr\Cast\Object_
  PhpParser\Node\Expr\Cast\String => PhpParser\Node\Expr\Cast\String_
  PhpParser\Node\Scalar\String    => PhpParser\Node\Scalar\String_
  ```
  
  **The previous class names are still supported as aliases.** However it is strongly encouraged to use the new names in order to make your code compatible with PHP 7.
- Subnodes are now stored using real properties instead of an array. This improves performance and memory usage of the initial parse and subsequent node tree operations. The `NodeAbstract` class still supports the old way of specifying subnodes, however this is _deprecated_. In any case properties that are assigned to a node after creation will no longer be considered as subnodes.
- Methods and property declarations will no longer set the `Stmt\Class_::MODIFIER_PUBLIC` flag if no visibility is explicitly given. However the `isPublic()` method will continue to return true. This allows you to distinguish whether a method/property is explicitly or implicitly public and control the pretty printer output more precisely.
- The `Stmt\Class_`, `Stmt\Interface_` and `Stmt\Trait_` nodes now inherit from `Stmt\ClassLike`, which provides a `getMethods()` method. Previously this method was only available on `Stmt\Class_`.
- Support including the `bootstrap.php` file multiple times.
- Make documentation and tests part of the release tarball again.
- Improve support for HHVM and PHP 7.

### Added
- Added support for PHP 7 return type declarations. This adds an additional `returnType` subnode to `Stmt\Function_`, `Stmt\ClassMethod` and `Expr\Closure`.
- Added support for the PHP 7 null coalesce operator `??`. The operator is represented by `Expr\BinaryOp\Coalesce`.
- Added support for the PHP 7 spaceship operator `<=>`. The operator is represented by `Expr\BinaryOp\Spaceship`.
- Added use builder.
- Added global namespace support to the namespace builder.
- Added a constructor flag to `NodeTraverser`, which disables cloning of nodes.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/1077595/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/1077595,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.2.0,https://github.com/nikic/PHP-Parser/releases/tag/v1.2.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.2.0,v1.2.0,False,False
861748,2015-01-18T11:30:26Z,2015-01-18T11:37:00Z,PHP-Parser 1.1.0,"- Methods that do not specify an explicit visibility (e.g. `function method()`) will now have the `MODIFIER_PUBLIC` flag set. This also means that their `isPublic()` method will return true.
- Declaring a property as abstract or final is now an error.
- The `Lexer` and `Lexer\Emulative` classes now accept an `$options` array in their constructors. Currently only the `usedAttributes` option is supported, which determines which attributes will be added to AST nodes. In particular it is now possible to add information on the token and file positions corresponding to a node. For more details see the [Lexer component](https://github.com/nikic/PHP-Parser/blob/master/doc/component/Lexer.markdown) documentation.
- Node visitors can now return `NodeTraverser::DONT_TRAVERSE_CHILDREN` from `enterNode()` in order to skip all children of the current node, for all visitors.
- Added builders for traits and namespaces.
- The class, interface, trait, function, method and property builders now support adding doc comments using the  `setDocComment()` method.
- Added support for fully-qualified and namespace-relative names in builders. No longer allow use of name component arrays.
- Do not add documentation and tests to distribution archive files.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/861748/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/861748,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.1.0,https://github.com/nikic/PHP-Parser/releases/tag/v1.1.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.1.0,v1.1.0,False,False
678508,2014-11-04T22:13:40Z,2014-11-04T22:16:55Z,PHP-Parser 1.0.2,"- The `NameResolver` visitor now also resolves names in trait adaptations (aliases and precedence declarations).
- Remove stray whitespace when pretty-printing trait adaptations that only change visibility.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/678508/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/678508,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.0.2,https://github.com/nikic/PHP-Parser/releases/tag/v1.0.2,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.0.2,v1.0.2,False,False
626456,2014-10-14T19:41:12Z,2014-10-14T19:46:02Z,PHP-Parser 1.0.1,"- Disallow `new` expressions without a class name. Previously `new;` was accidentally considered to be valid code.
- Support `T_ONUMBER` token used by HHVM.
- Add ability to directly pass code to the `php-parse.php` script.
- Prevent truncation of `var_dump()` output in the `php-parse.php` script if XDebug is used.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/626456/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/626456,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.0.1,https://github.com/nikic/PHP-Parser/releases/tag/v1.0.1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.0.1,v1.0.1,False,False
553384,2014-09-12T12:52:33Z,2014-09-12T13:04:37Z,PHP-Parser 1.0.0,"### Upgrading from PHP-Parser 0.9 to 1.0

See **[migration guide](https://github.com/nikic/PHP-Parser/blob/master/UPGRADE-1.0.md)**.

Note: **The 0.9.x branch is no longer supported**.

### Changes since version 0.9.x

The most important changes are:
- Complete support for parsing PHP 5.6.
- Dropped support for running on PHP 5.2 (while parsing PHP 5.2 on newer versions is still possible).
- Move to namespaced class names, e.g. `PhpParser\Parser` instead of `PHPParser_Parser`. The old names using underscored are still supported as aliases.

For a complete list of changes, see the **[Changelog](https://github.com/nikic/PHP-Parser/blob/master/CHANGELOG.md)**.

### Changes since 1.0.0 beta 2
- Removed deprecated `Template` and `TemplateLoader` classes.
- Fixed XML unserializer to properly work with new namespaced node names.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/553384/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/553384,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.0.0,https://github.com/nikic/PHP-Parser/releases/tag/v1.0.0,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.0.0,v1.0.0,False,False
526471,2014-08-31T14:54:40Z,2014-08-31T14:58:09Z,PHP-Parser 1.0.0 Beta 2,"- [PHP 5.6] Updated support for constant scalar expressions to comply with latest changes. This means that arrays and array dimension fetches are now supported as well.
- [PHP 5.6] Direct array dereferencing of constants is supported now, i.e. both `FOO[0]` and `Foo::BAR[0]` are valid now.
- Fixed handling of special class names (`self`, `parent` and `static`) in the name resolver to be case insensitive. Additionally the name resolver now enforces that special class names are only used as unqualified names, e.g. `\self` is considered invalid.
- The case of references to the `static` class name is now preserved. Previously `static` was always lowercased, regardless of the case used in the source code.
- The autoloader now only requires a file if it exists. This allows usages like `class_exists('PhpParser\NotExistingClass')`.
- Added experimental `bin/php-parse.php` script, which is intended to help exploring and debugging the node tree.
- Separated the parser implemention (in `lib/PhpParser/ParserAbstract.php`) and the generated data (in `lib/PhpParser/Parser.php`). Furthermore the parser now uses meaningful variable names and contains comments explaining their usage.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/526471/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/526471,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.0.0beta2,https://github.com/nikic/PHP-Parser/releases/tag/v1.0.0beta2,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.0.0beta2,v1.0.0beta2,False,False
446902,2014-07-23T18:38:45Z,2014-07-23T18:44:18Z,PHP-Parser 0.9.5,"**This is the last release on the 0.9 branch. All users on PHP >= 5.3 are encouraged to use version 1.0 instead, which is mostly compatible.**
- Add `NodeTraverser::removeVisitor()` method, which removes a visitor from the node traverser. The method was not added to the corresponding `NodeTraverserInterface` to avoid BC breaks with custom traversers (it is added in version 1.0).
- Deprecated `PHPParser_Template` and `PHPParser_TemplateLoader`. This functionality does not belong in the main project and - as far as I know - nobody is using it.
- Fix alias resolution in `NameResolver`: Class names are now correctly handled as case-insensitive.
- The undefined variable error, which is used in the lexer to reset the error state, will no longer interfere with  custom error handlers.
- Make lexer compatible with `xdebug.scream`.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/446902/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/446902,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v0.9.5,https://github.com/nikic/PHP-Parser/releases/tag/v0.9.5,https://api.github.com/repos/nikic/PHP-Parser/zipball/v0.9.5,v0.9.5,False,False
243446,2014-03-27T13:13:36Z,2014-03-27T13:19:52Z,PHP-Parser 1.0.0 Beta 1,"- [BC] PHP-Parser now requires PHP 5.3 or newer to run. It is however still possible to _parse_ PHP 5.2 source code, while running on a newer version.
- [BC] The library has been moved to use namespaces with the `PhpParser` vendor prefix. However, the old names using underscores are still available as aliases, as such most code should continue running on the new version without further changes.
  
  However, code performing dispatch operations on `Node::getType()` may be affected by some of the name changes. For example a `+` node will now return type `Expr_BinaryOp_Plus` instead of `Expr_Plus`. In particular this may affect custom pretty printers.
  
  Due to conflicts with reserved keywords, some class names now end with an underscore, e.g. `PHPParser_Node_Stmt_Class` is now `PhpParser\Node\Stmt\Class_`. (But as usual, the old name is still available)
- [PHP 5.6] Added support for the power operator `**` (node `Expr\BinaryOp\Pow`) and the compound power assignment operator `**=` (node `Expr\AssignOp\Pow`).
- [PHP 5.6] Added support for variadic functions: `Param` nodes now have `variadic` as a boolean subnode.
- [PHP 5.6] Added support for argument unpacking: `Arg` nodes now have `unpack` as a boolean subnode.
- [PHP 5.6] Added support for aliasing of functions and constants. `Stmt\Use_` nodes now have an integral `type` subnode, which is one of `Stmt\Use_::TYPE_NORMAL` (`use`), `Stmt\Use_::TYPE_FUNCTION` (`use function`) or `Stmt\Use_::TYPE_CONSTANT` (`use const`).
  
  The `NameResolver` now also supports resolution of such aliases.
- [PHP 5.6] Added support for constant scalar expressions. This means that certain expressions are now allowed as the initializer for constants, properties, parameters, static variables, etc.
- [BC] Improved pretty printing of empty statements lists, which are now printed as `{\n}` instead of `{\n    \n}`. This changes the behavior of the protected `PrettyPrinterAbstract::pStmts()` method, so custom pretty printing code making use it of may need to be adjusted.
- Changed the order of some subnodes to be consistent with their order in the sour code. For example `Stmt\If->cond` will now appear before `Stmt\If->stmts` etc.
- Added `Scalar\MagicConstant->getName()`, which returns the name of the magic constant (e.g. `__CLASS__`).

**The following changes are also included in 0.9.5-dev**:
- [BC] Deprecated `PHPParser_Template` and `PHPParser_TemplateLoader`. This functionality does not belong in the main project and - as far as I know - nobody is using it.
- Add `NodeTraverser::removeVisitor()` method, which removes a visitor from the node traverser. This also modifies the corresponding `NodeTraverserInterface`.
- Fix alias resolution in `NameResolver`: Class names are now correctly handled as case-insensitive.
- The undefined variable error, which is used to the lexer to reset the error state, will no longer interfere with  custom error handlers.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/243446/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/243446,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v1.0.0beta1,https://github.com/nikic/PHP-Parser/releases/tag/v1.0.0beta1,https://api.github.com/repos/nikic/PHP-Parser/zipball/v1.0.0beta1,v1.0.0beta1,False,False
33632,2013-08-25T17:14:18Z,2013-08-27T10:13:06Z,PHP-Parser 0.9.4,"- [PHP 5.5] Add support for `ClassName::class`. This is parsed as an `Expr_ClassConstFetch` with `'class'` being the constant name.
- Syntax errors now include information on expected tokens and mimic the format of PHP's own (pre 5.4) error messages. Example:
  
  ```
  Old: Unexpected token T_STATIC on line 1
  New: Syntax error, unexpected T_STATIC, expecting T_STRING or T_NS_SEPARATOR or '{'
  ```
- `PHPParser_PrettyPrinter_Zend` was renamed to `PHPParser_PrettyPrinter_Default` as the default pretty printer only very loosely applies the Zend Coding Standard. The class `PHPParser_PrettyPrinter_Zend` extends `PHPParser_PrettyPrinter_Default` to maintain backwards compatibility.
- The pretty printer now prints namespaces in semicolon-style if possible (i.e. if the file does not contain a global namespace declaration).
- Added `prettyPrintFile(array $stmts)` method which will pretty print a file of statements including the opening `<?php` tag if it is required. Use of this method will also eliminate the unnecessary `<?php ?>` at the start and end of files using inline HTML.
- There now is a builder for interfaces (`PHPParser_Builder_Interface`).
- An interface for the node traversation has been added: `PHPParser_NodeTraverserInterface`
- Fix pretty printing of `include` expressions (precedence information was missing).
- Improve performance of `PrettyPrinter` construction by no longer using the `uniqid()` function.
",https://api.github.com/users/nikic,216080,nikic,https://api.github.com/repos/nikic/PHP-Parser/releases/33632/assets,https://api.github.com/repos/nikic/PHP-Parser/releases/33632,master,https://api.github.com/repos/nikic/PHP-Parser/tarball/v0.9.4,https://github.com/nikic/PHP-Parser/releases/tag/v0.9.4,https://api.github.com/repos/nikic/PHP-Parser/zipball/v0.9.4,v0.9.4,False,False
