id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6793320,2016-06-21T21:19:24Z,2017-06-21T21:24:49Z,,,https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793320/assets,https://api.github.com/repos/opal/opal/releases/6793320,master,https://api.github.com/repos/opal/opal/tarball/v0.10.0.rc2,https://github.com/opal/opal/releases/tag/v0.10.0.rc2,https://api.github.com/repos/opal/opal/zipball/v0.10.0.rc2,v0.10.0.rc2,False,True
6793316,2016-07-04T20:46:00Z,2017-06-21T21:24:14Z,,"### Added

- Pathname#relative_path_from
- Source maps now include method names
- `Module#included_modules` works
- Internal runtime cleanup (#1241)
- Make it easier to add custom runners for the CLI (#1261)
- Add Rack v2 compatibility (#1260)
- Newly compliant with the Ruby Spec Suite:
    * `Array#slice!`
    * `Array#repeated_combination`
    * `Array#repeated_permutation`
    * `Array#sort_by!`
    * `Enumerable#sort`
    * `Enumerable#max`
    * `Enumerable#each_entry` (#1303)
    * `Module#const_set`
    * `Module#module_eval` with a string
- Add `-L` / `--library` option to compile only the code of the library (#1281)
- Implement `Kernel.open` method (#1218)
- Generate meaningful names for functions representing Ruby methods
- Implement `Pathname#join` and `Pathname#+` methods (#1301)
- Added support for `begin;rescue;else;end`.
- Implement `File.extname` method (#1219)
- Added support for keyword arguments as lambda parameters.
- Super works with define_method blocks
- Added support for kwsplats.
- Added support for squiggly heredoc.
- Implement `Method#parameters` and `Proc#parameters`.
- Implement `File.new(""path"").mtime`, `File.mtime(""path"")`, `File.stat(""path"").mtime`.
- if-conditions now support `null` and `undefined` as falsy values (#867)
- Implement IO.read method for Node.js (#1332)
- Implement IO.each_line method for Node.js (#1221)
- Generate `opal-builder.js` to ease the compilation of Ruby library from JavaScript (#1290)


### Changed

- Remove deprecation of `Opal::Environment` after popular request
- Setting `Opal::Config.dynamic_require_severity` will no longer affect `Opal.dynamic_require_severity` which now needs to be explicitly set if it differs from the default value of `""warning""` (See also the `Opal.dynamic_require_severity` rename below).
- The new default for `Opal::Config.dynamic_require_severity` is now `:warning`
- `Opal.dynamic_require_severity` and `OPAL_CONFIG` are now merged into `Opal.config.missing_require_severity` (defaults to `error`, the expected ruby behavior) and `Opal.config.unsupported_features_severity` (defaults to `warning`, e.g. a one-time heads up that freezing isn't supported). Added variable `__OPAL_COMPILER_CONFIG__` that contains compiler options that may be used in runtime.
- `Hash` instances should now list the string map (`$$smap`) as the first key, making debugging easier (most hashes will just have keys there).
- Handle Pathname object in Pathname constructor


### Deprecated

- `Opal::Processor.stubbed_files` and `Opal::Processor.stub_file` in favor of `Opal::Config.stubbed_files`


### Removed

- Removed the previously deprecated `Opal::Fragment#to_code`
- Removed the previously deprecated `Opal::Processor.load_asset_code`
- Removed the previously deprecated acceptance of a boolean as single argument to `Opal::Server.new`


### Fixed

- `Module#ancestors` and shared code like `====` and `is_a?` deal with singleton class modules better (#1449)
- `Class#to_s` now shows correct names for singleton classes
- `Pathname#absolute?` and `Pathname#relative?` now work properly
- `File::dirname` and `File::basename` are now Rubyspec compliant
- `SourceMap::VLQ` patch (#1075)
- `Regexp::new` no longer throws error when the expression ends in \\\\
- `super` works properly with overwritten alias methods (#1384)
- `NoMethodError` does not need a name to be instantiated
- `method_added` fix for singleton class cases
- Super now works properly with blocks (#1237)
- Fix using more than two `rescue` in sequence (#1269)
- Fixed inheritance for `Array` subclasses.
- Always populate all stub_subscribers with all method stubs, as a side effect of this now `method_missing` on bridged classes now works reliably (#1273)
- Fix `Hash#instance_variables` to not return `#default` and `#default_proc` (#1258)
- Fix `Module#name` when constant was created using `Opal.cdecl` (constant declare) like `ChildClass = Class.new(BaseClass)` (#1259)
- Fix issue with JavaScript `nil` return paths being treated as true (#1274)
- Fix `Array#to_n`, `Hash#to_n`, `Struct#to_n` when the object contains native objects (#1249, #1256)
- `break` semantics are now correct, except for the case in which a lambda containing a `break` is passed to a `yield` (#1250)
- Avoid double ""/"" when `Opal::Sprockets.javascript_include_tag` receives a prefix with a trailing slash.
- Fixed context of evaluation for `Kernel#eval` and `BasicObject#instance_eval`
- Fix `Module#===` to use all ancestors of the passed object (#1284)
- Fix `Struct.new` to be almost compatible with Rubyspec (#1251)
- Fix `Enumerator#with_index` to return the result of the previously called method.
- Improved `Date.parse` to cover most date formatting cases.
- Fixed `Module#const_get` for dynamically created constants.
- Fixed `File.dirname` to return joined String instead of Array.
- Fixed multiple assignment for constants, i.e., allowing `A, B = 1, 2`.
- Fixed `Number#[]` with negative number. Now `(-1)[1]` returns 1.
- Fixed parsing of pre-defined `$-?` global variables.
- Fixed parsing of unicode constants.
- Fixed parsing of quoted heredoc identifier.
- Fixed parsing of mass assignment of method call without parentheses.
- Fixed parsing of `%I{}` lists.
- Fixed parsing of `%{}` lists when list item contains same brackets.
- Fixed an issue with `""-""` inside the second arg of `String#tr`
- Fixed Base64 and enabled specs
- Fixed method definition in method body.
- Partially implemented `Marshal.load`/`Marshal.dump`. In order to use it require `opal/full`.
- Fixed docs for Compiled Ruby - Native section. Rename opal variable to win since window was causing error
- Fixed the `--map` option, now correclty outputs the sourcemap as json


### Removed

- Remove support for configuring Opal via `Opal::Processor`, the correct place is `Opal::Config`
- Remove `Opal.process` which used to be an alias to `Sprockets::Environment#[]`

",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793316/assets,https://api.github.com/repos/opal/opal/releases/6793316,master,https://api.github.com/repos/opal/opal/tarball/v0.10.0,https://github.com/opal/opal/releases/tag/v0.10.0,https://api.github.com/repos/opal/opal/zipball/v0.10.0,v0.10.0,False,False
6793310,2016-07-06T19:44:54Z,2017-06-21T21:23:54Z,,"### Fixed

- Fixed `-L` option for compiling requires as modules (#1510)
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793310/assets,https://api.github.com/repos/opal/opal/releases/6793310,master,https://api.github.com/repos/opal/opal/tarball/v0.10.1,https://github.com/opal/opal/releases/tag/v0.10.1,https://api.github.com/repos/opal/opal/zipball/v0.10.1,v0.10.1,False,False
6793305,2016-09-09T21:30:54Z,2017-06-21T21:23:36Z,,"### Changed

- Avoid special utf-8 chars in method names, now they start with `$$`
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793305/assets,https://api.github.com/repos/opal/opal/releases/6793305,master,https://api.github.com/repos/opal/opal/tarball/v0.10.2,https://github.com/opal/opal/releases/tag/v0.10.2,https://api.github.com/repos/opal/opal/zipball/v0.10.2,v0.10.2,False,False
6793302,2016-10-31T22:33:30Z,2017-06-21T21:23:23Z,,"### Fixed

- Fixed inheritance from the `Module` class (#1476)
- Fixed source map server with url-encoded paths
- Silence Sprockets 3.7 deprecations, full support for Sprockets 4 will be available in Opal 0.11
- Don't print the full stack trace with deprecation messages
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793302/assets,https://api.github.com/repos/opal/opal/releases/6793302,master,https://api.github.com/repos/opal/opal/tarball/v0.10.3,https://github.com/opal/opal/releases/tag/v0.10.3,https://api.github.com/repos/opal/opal/zipball/v0.10.3,v0.10.3,False,False
6793300,2017-05-06T22:56:26Z,2017-06-21T21:23:05Z,,"### Changed

- Better `Opal::Config` options documentation and organization
- Always cache source-maps at build-time so they're available once enabled
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793300/assets,https://api.github.com/repos/opal/opal/releases/6793300,master,https://api.github.com/repos/opal/opal/tarball/v0.10.4,https://github.com/opal/opal/releases/tag/v0.10.4,https://api.github.com/repos/opal/opal/zipball/v0.10.4,v0.10.4,False,False
6793298,2017-06-21T21:17:39Z,2017-06-21T21:22:50Z,,"### Fixed

- Fix `Time#zone` for zones expressed numerically
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793298/assets,https://api.github.com/repos/opal/opal/releases/6793298,master,https://api.github.com/repos/opal/opal/tarball/v0.10.5,https://github.com/opal/opal/releases/tag/v0.10.5,https://api.github.com/repos/opal/opal/zipball/v0.10.5,v0.10.5,False,False
6793249,2017-05-01T00:53:30Z,2017-06-21T21:18:21Z,,,https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/6793249/assets,https://api.github.com/repos/opal/opal/releases/6793249,master,https://api.github.com/repos/opal/opal/tarball/v0.11.0.rc1,https://github.com/opal/opal/releases/tag/v0.11.0.rc1,https://api.github.com/repos/opal/opal/zipball/v0.11.0.rc1,v0.11.0.rc1,False,True
1948960,2015-02-01T23:39:04Z,2015-10-12T21:20:40Z,,"-   Stop keyword-arg variable names leaking to global javascript scope
-   `Class#native_class` now also exposes `MyClass.new` (Ruby) as `Opal.global.MyClass.new()` (JS)
-   Add CRuby (MRI) tests harness to start checking Opal against them too.
-   Add Minitest to the stdlib.
-   Add `Date#<=>` with specs.
-   Show extended info and context upon parsing, compiling and building errors.
-   Support keyword arguments in method calls and definitions.
-   Fix `begin`/`rescue` blocks to evaluate to last expression.
-   Add support for `RUBY_ENGINE/RUBY_PLATFORM != ""opal""` pre-processor directives.
  
  ```
  if RUBY_ENGINE != ""opal""
    # this code never compiles
  end
  ```
-   Fix donating methods defined in modules. This ensures that if a class includes more than one module, then the methods defined on the class respect the order in which the modules are included.
-   Improved support for recursive `Hash` for both `#inspect` and `#hash`.
-   Optimized `Hash` implementation for `String` and `Symbol`, they have a separate hash-table in which they're used as both keys and hashes.
-   Added real `#hash` / `eql?` support, previously was relying on `.toString()`.
-   `String#to_proc` now uses `__send__` instead of `send` for calling
  methods on receivers.
-   Deprecated `Opal::Sprockets::Environment`. It can easily be replaced by `Opal::Server` or by appending `Opal.paths` to a `Sprockets::Environment`:
  
  ```
  Sprockets::Environment.new.tap { |e| Opal.paths.each {|p| e.append_path(p)} }
  ```
-   Add `Set` methods `#classify`, `#collect!`, `#map!`, `#subtract` `#replace`,
  `#difference` and `#eql?`
-   Support `module_function` without args to toggle module functions.
-   Fix bug where command calls with no space and sym arg were incorrectly parsed.
-   Add some `StringScanner` methods.
-   Add `Date#<<` and `Date#>>` implementations.
-   Support nested directories using `require_tree` directive.
-   Fix bug where Exception subclasses could not have methods defined on them.
-   Fix symbols with interpolations `:""#{foo}""`
-   Implement $1..N matchers and rewrite support for $~, $', $& and $`.
-   Implement `Regexp.last_match`.
-   Fixed `-@` unary op. precedence with a numeric and followed by a method call (e.g. `-1.foo` was parsed as `-(1.foo)`)
-   `require_relative` (with strings) is now preprocessed, expanded and added to `Compiler#requires`
-   Rewritten the require system to respect requires position (previously all the requires were stacked up at the top of the file)
-   Implement for-loop syntax
-   Add Array#|
-   Fix Range.new to raise `ArgumentError` on contructor values that cannot
  be compared
-   Fix compiler bug where Contiguous strings were not getting concatenated.
-   Cleanup generated code for constant access. All constant lookups now go through `$scope.get('CONST_NAME')` to produce cleaner code and a unified place for const missing dispatch.
-   Remove `const_missing` option from compiler. All constant lookups are now strict.
-   Add initial support for Module#autoload.
-   Fix `Enumerator#with_index`, `Numeric#round`.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/1948960/assets,https://api.github.com/repos/opal/opal/releases/1948960,master,https://api.github.com/repos/opal/opal/tarball/v0.7.0,https://github.com/opal/opal/releases/tag/v0.7.0,https://api.github.com/repos/opal/opal/zipball/v0.7.0,v0.7.0,False,False
1948958,2015-02-13T23:37:30Z,2015-10-12T21:20:17Z,,"-   CLI options `-d` and `-v` now set respectively `$DEBUG` and `$VERBOSE`
-   Fixed a bug that would make the `-v` CLI option wait for STDIN input
-   Add the `-E` / `--no-exit` CLI option to skip implicit `Kernel#exit` call
-   Now the CLI implicitly calls `Kernel#exit` at the end of the script, thus making `at_exit` blocks be respected.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/1948958/assets,https://api.github.com/repos/opal/opal/releases/1948958,master,https://api.github.com/repos/opal/opal/tarball/v0.7.1,https://github.com/opal/opal/releases/tag/v0.7.1,https://api.github.com/repos/opal/opal/zipball/v0.7.1,v0.7.1,False,False
1948954,2015-04-23T20:50:45Z,2015-10-12T21:20:02Z,,"-   Remove Sprockets 3.0 support (focus moved to upcoming 0.8)
-   Fix version number consistency.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/1948954/assets,https://api.github.com/repos/opal/opal/releases/1948954,master,https://api.github.com/repos/opal/opal/tarball/v0.7.2,https://github.com/opal/opal/releases/tag/v0.7.2,https://api.github.com/repos/opal/opal/zipball/v0.7.2,v0.7.2,False,False
1948951,2015-07-16T16:09:22Z,2015-10-12T21:19:37Z,,"-   Update to Sprockets v3.0.
-   Delegate dependency management directly to Sprockets (when used) making sourcemaps swift again.
  This means code generated by sprockets will always need to be bootstrapped via `Opal.load` or `Opal.require`.
  Luckily `Opal::Processor.load_asset_code(sprockets, name)` does just that in the right way.
-   Enable operator inlining by default in the compiler.
-   Fix `Promise#always`.
-   Update to Sprockets v3.0.
-   Delegate dependency management directly to Sprockets (when used) making sourcemaps swift again.
  This means code generated by sprockets will always need to be bootstrapped via `Opal.load` or `Opal.require`.
  Luckily `Opal::Processor.load_asset_code(sprockets, name)` does just that in the right way.
-   Enable operator inlining by default in the compiler.
-   Fix `Promise#always`.
-   Fix `String#split` when no match is found and a limit is provided
-   Fix `require_tree(""."")` when used from file at the root of the assets paths
-   `Hash[]` implementation fully compliant with rubyspec
-   Removed `minitest` from stdlib. It's not part of MRI and it never belonged there, checkout the `opal-minitest` gem instead.
-   Parser: Allow trailing comma in paren arglists, after normal args as
  well as assoc args.
-   Parser: Fix parsing of parens following divide operator without a
  space.
-   Parser: Fix bug where keyword arguments could not be parsed if
  method definition did not have parens around arguments.
-   Newly compliant with RubySpec:
  -   `Array#bsearch`
  -   `Array#combination`
  -   `Array#permutation`
  -   `Array#product`
  -   `Array#rotate!`
  -   `Array#rotate`
  -   `Array#sample`
  -   `Array#to_h`
  -   `Array#values_at`
  -   `Array#zip`
  -   `Enumerator#with_index`
  -   `Kernel#===`
  -   `Kernel#Array`
  -   `Kernel#Float`
  -   `Kernel#Hash`
  -   `Kernel#Integer`
  -   `Kernel#String`
  -   `Kernel#format`
  -   `Kernel#sprintf`
  -   `MatchData#==`
  -   `MatchData#eql?`
  -   `MatchData#values_at`
  -   `Module#instance_methods`
  -   `Regexp#match`
  -   `String#%`
  -   `String#===`
  -   `String#==`
  -   `String#[]`
  -   `String#each_line`
  -   `String#eql?`
  -   `String#index`
  -   `String#inspect`
  -   `String#lines`
  -   `String#match`
  -   `String#next`
  -   `String#oct`
  -   `String#scan`
  -   `String#slice`
  -   `String#split`
  -   `String#succ`
  -   `String#to_i`
  -   `String#try_convert`
-   Misc corelib fixes:
  -   `Module#const_get` accepts a scoped constant name
  -   `Regexp#===` sets global match data vars
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/1948951/assets,https://api.github.com/repos/opal/opal/releases/1948951,master,https://api.github.com/repos/opal/opal/tarball/v0.8.0,https://github.com/opal/opal/releases/tag/v0.8.0,https://api.github.com/repos/opal/opal/zipball/v0.8.0,v0.8.0,False,False
1948948,2015-10-12T20:45:35Z,2015-10-12T21:18:48Z,,"-   Use official Sprockets processor cache keys API:
  The old cache key hack has been removed.
  Add `Opal::Processor.cache_key` and `Opal::Processor.reset_cache_key!` to
  reset it as it’s cached but should change whenever `Opal::Config` changes.
-   Fix an issue for which a Pathname was passed instead of a String to Sprockets.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/1948948/assets,https://api.github.com/repos/opal/opal/releases/1948948,master,https://api.github.com/repos/opal/opal/tarball/v0.8.1,https://github.com/opal/opal/releases/tag/v0.8.1,https://api.github.com/repos/opal/opal/zipball/v0.8.1,v0.8.1,False,False
288561,2014-04-24T20:55:58Z,2014-04-25T09:45:44Z,v0.6.2,"-   Added Range#size
-   `opal` executable now reads STDIN when no file or `-e` are passed
-   `opal` executable doesn't exit after showing version on `-v` if other options are passed
-   (Internal) improved the mspec runner
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/288561/assets,https://api.github.com/repos/opal/opal/releases/288561,master,https://api.github.com/repos/opal/opal/tarball/v0.6.2,https://github.com/opal/opal/releases/tag/v0.6.2,https://api.github.com/repos/opal/opal/zipball/v0.6.2,v0.6.2,False,False
272615,2014-03-05T12:55:13Z,2014-04-15T12:05:02Z,v0.6.0,"-   Fix parsing of escapes in single-strings ('foo\n'). Only ' and \
  characters now get escaped in single quoted strings. Also, more escape
  sequences in double-quoted strings are now supported: `\a`, `\v`, `\f`,
  `\e`, `\s`, octal (`\314`), hex (`\xff`) and unicode (`\u1234`).
-   Sourcemaps revamp. Lexer now tracks column and line info for every token to
  produce much more accurate sourcemaps. All method calls are now located on
  the correct source line, and multi-line xstrings are now split to generate
  a map line-to-line for long inline javascript parts.
-   Merged sprockets support from `opal-sprockets` directly into Opal. For the
  next release, the exernal `opal-sprockets` gem is no longer needed. This
  commit adds `Opal::Processor`, `Opal::Server` and `Opal::Environment`.
-   Introduce pre-processed if directives to hide code from Opal. Two special
  constant checks now take place in the compiler. Either `RUBY_ENGINE` or
  `RUBY_PLATFORM` when `== ""opal""`. Both if and unless statements can pick
  up these logic checks:
  
  ```
  if RUBY_ENGINE == ""opal""
    # this code compiles
  else
    # this code never compiles
  end
  ```
  
  Unless:
  
  ```
  unless RUBY_ENGINE == ""opal""
    # this code never compiles
  end
  ```
  
  This is particularly useful for avoiding `require()` statements being
  picked up, which are included at compile time.
-   Add special `debugger` method to compiler. Compiles down to javascript
  `debugger` keyword to start in-browser debug console.
-   Add missing string escapes to `read_escape` in lexer. Now most ruby escape
  sequences are properly detected and handled in string parsing.
-   Disable escapes inside x-strings. This means no more double escaping all
  characters in x-strings and backticks. (`\n` => `\n`).
-   Add `time.rb` to stdlib and moved `Time.parse()` and `Time.iso8601()`
  methods there.
-   `!` is now treated as an unary method call on the object. Opal now parsed
  `!` as a def method name, and implements the method on `BasicObject`,
  `NilClass` and `Boolean`.
-   Fixed bug where true/false as object literals from javascript were not
  correctly being detected as truthy/falsy respectively. This is due to the
  javascript ""feature"" where `new Boolean(false) !== false`.
-   Moved `native.rb` to stdlib. Native support must now be explicitly required
  into Opal. `Native` is also now a module, instead of a top level class.
  Also added `Native::Object#respond_to?`.
-   Remove all core `#as_json()` methods from `json.rb`. Added them externally
  to `opal-activesupport`.
-   `Kernel#respond_to?` now calls `#respond_to_missing?` for compliance.
-   Fix various `String` methods and add relevant rubyspecs for them. `#chars`,
  `#to_f`, `#clone`, `#split`.
-   Fix `Array` method compliance: `#first`, `#fetch`, `#insert`, `#delete_at`,
  `#last`, `#splice`, `.try_convert`.
-   Fix compliance of `Kernel#extend` and ensure it calls `#extended()` hook.
-   Fix bug where sometimes the wrong regexp flags would be generated in the
  output javascript.
-   Support parsing `__END__` constructs in ruby code, inside the lexer. The
  content is gathered up by use of the parser. The special constant `DATA`
  is then available inside the ruby code to read the content.
-   Support single character strings (using ? prefix) with escaped characters.
-   Fix lexer to detect dereferencing on local variables even when whitespace
  is present (`a = 0; a [0]` parses as a deference on a).
-   Fix various `Struct` methods. Fixed `#each` and `#each_pair` to return
  self. Add `Struct.[]` as synonym for `Struct.new`.
-   Implemented some `Enumerable` methods: `#collect_concat`, `#flat_map`,
  `#reject`, `#reverse_each`, `#partition` and `#zip`.
-   Support any Tilt template for `index_path` in `Opal::Server`. All index
  files are now run through `Tilt` (now supports haml etc).
-   Fix code generation of `op_asgn_1` calls (`foo[val] += 10`).
-   Add `base64` to stdlib.
-   Add promises implementation to stdlib.
-   Add `Math` module to corelib.
-   Use `//#` instead of `//@` deprecated syntax for sourceMappingURL.
-   Implicitly require `erb` from stdlib when including erb templates.
-   Fix `Regexp.escape` to also escape '(' character.
-   Support '<' and '>' as matching pairs in string boundrys `%q<hi>`.
-   `Opal::Server` no longer searches for an index file if not specified.
-   Move `Math` and `Encoding` to stdlib. Can be required using
  `require 'math'`, etc.
-   Fix some stdlib `Date` methods.
-   Fix `Regexp.escape` to properly escape \n, \t, \r, \f characters.
-   Add `Regexp.quote` as an alias of `escape`.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/272615/assets,https://api.github.com/repos/opal/opal/releases/272615,master,https://api.github.com/repos/opal/opal/tarball/v0.6.0,https://github.com/opal/opal/releases/tag/v0.6.0,https://api.github.com/repos/opal/opal/zipball/v0.6.0,v0.6.0,False,False
272613,2014-04-14T22:32:42Z,2014-04-15T12:03:33Z,v0.6.1,"-   Updated RubySpecs to master and added `rubysl-*` specs. Thanks to Mike Owens (@mieko)
-   Added `Kernel#require_remote(url)` in `opal-parser` that requires files with basic synchronous ajax
  GET requests. It is used to load `<scripts type=""text/ruby"" src=""…url…"">`.
-   Various parsing fixes (Hash parsing, `def` returns method name, cleanup `core/util`, Enumerator fixes)
-   Added `#native_reader`, `#native_writer` and `#native_accessor`as class methods
  donated by `include Native`
-   Added specs for Sprockets' processors (both .js.rb and .opalerb), backported from `opal-rails`
-   Set 2.1.1 as RUBY_VERSION
-   Add `opal-build` command utility to easily build libraries to js
-   Add `opal-repl` to gemspec executables,
  previously was only available by using Opal from source
-   Fix parsing `=>` in hash literals where it would sometimes incorrectly
  parse as a key name.
",https://api.github.com/users/elia,1051,elia,https://api.github.com/repos/opal/opal/releases/272613/assets,https://api.github.com/repos/opal/opal/releases/272613,master,https://api.github.com/repos/opal/opal/tarball/v0.6.1,https://github.com/opal/opal/releases/tag/v0.6.1,https://api.github.com/repos/opal/opal/zipball/v0.6.1,v0.6.1,False,False
102831,2013-11-25T12:43:23Z,2013-11-25T12:45:30Z,v0.5.5,"- Fix regression: add `%i[foo bar]` style words back to lexer
- Move corelib from `opal/core` to `opal/corelib`. This stops files in `core/` clashing with user files.
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/102831/assets,https://api.github.com/repos/opal/opal/releases/102831,master,https://api.github.com/repos/opal/opal/tarball/v0.5.5,https://github.com/opal/opal/releases/tag/v0.5.5,https://api.github.com/repos/opal/opal/zipball/v0.5.5,v0.5.5,False,False
98905,2013-11-20T17:47:13Z,2013-11-20T17:51:01Z,v0.5.4,"- Reverted `RUBY_VERSION` to `1.9.3`. Opal `0.6.0` will be the first release for `2.0.0`.
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/98905/assets,https://api.github.com/repos/opal/opal/releases/98905,master,https://api.github.com/repos/opal/opal/tarball/v0.5.4,https://github.com/opal/opal/releases/tag/v0.5.4,https://api.github.com/repos/opal/opal/zipball/v0.5.4,v0.5.4,False,False
98853,2013-11-20T16:48:13Z,2013-11-20T16:50:15Z,v0.5.3,"- Opal now targets ruby 2.0.0
- Named function inside class body now generates with `$` prefix, e.g. `$MyClass`. This makes it easier to wrap/bridge native functions.
- Support Array subclasses
- Various fixes to `String`, `Kernel` and other core classes
- Fix `Method#call` to use correct receiver
- Fix `Module#define_method` to call `#to_proc` on explicit argument
- Fix `super()` dispatches on class methods
- Support `yield()` calls from inside a block (inside a method)
- Cleanup string parsing inside lexer
- Cleanup parser/lexer to use `t` and `k` prefixes for all tokens
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/98853/assets,https://api.github.com/repos/opal/opal/releases/98853,master,https://api.github.com/repos/opal/opal/tarball/v0.5.3,https://github.com/opal/opal/releases/tag/v0.5.3,https://api.github.com/repos/opal/opal/zipball/v0.5.3,v0.5.3,False,False
91233,2013-11-11T17:43:31Z,2013-11-12T11:03:25Z,v0.5.2,"- Include native into corelib for 0.5.x
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/91233/assets,https://api.github.com/repos/opal/opal/releases/91233,master,https://api.github.com/repos/opal/opal/tarball/v0.5.2,https://github.com/opal/opal/releases/tag/v0.5.2,https://api.github.com/repos/opal/opal/zipball/v0.5.2,v0.5.2,False,False
90251,2013-11-10T13:06:31Z,2013-11-11T10:39:14Z,v0.5.1,"- Move all corelib under `core/` directory to prevent filename clashes with `require`
- Move `native.rb` into stdlib - must now be explicitly required
- Implement `BasicObject#__id__`
- Cleanup and fix various `Enumerable` methods
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/90251/assets,https://api.github.com/repos/opal/opal/releases/90251,master,https://api.github.com/repos/opal/opal/tarball/v0.5.1,https://github.com/opal/opal/releases/tag/v0.5.1,https://api.github.com/repos/opal/opal/zipball/v0.5.1,v0.5.1,False,False
85957,2013-11-03T19:06:43Z,2013-11-06T09:48:41Z,v0.5.0,"https://github.com/opal/opal/compare/v0.4.4...v0.5.0
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/85957/assets,https://api.github.com/repos/opal/opal/releases/85957,master,https://api.github.com/repos/opal/opal/tarball/v0.5.0,https://github.com/opal/opal/releases/tag/v0.5.0,https://api.github.com/repos/opal/opal/zipball/v0.5.0,v0.5.0,False,False
25544,2013-08-13T09:56:52Z,2013-08-13T10:00:43Z,v0.4.4,"- Remove native object method calls
- Add Struct class
- Add method stubs as method_missing option, stubs enabled by default
- Native is now used to wrap native objects directly
- Fix Hash.new and Hash.allocate for subclasses
- Generate sourcemaps from fragments
- Allow blocks to be passed to zsuper (no args) calls
- Fix yield when given 1 or multiple arguments for block destructuring
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/25544/assets,https://api.github.com/repos/opal/opal/releases/25544,master,https://api.github.com/repos/opal/opal/tarball/v0.4.4,https://github.com/opal/opal/releases/tag/v0.4.4,https://api.github.com/repos/opal/opal/zipball/v0.4.4,v0.4.4,False,False
15052,2013-07-24T18:27:45Z,2013-07-24T18:45:43Z,,"- Re-implement class system. Classes are now real objects instead of converted Procs. This allows classes to properly inherit methods from each other.
- Fix exception hierarchy. Not all standard exception classes were subclassing the correct parent classes, this is now fixed.
- Move ERB into stdlib. The erb compiler/parser has also been moved into lib/
- Opal::Builder class. A simple port/clone of sprockets general building. This allows us to build projects similar to the way opal-sprockets does.
- Move json.rb to stdlib.
",https://api.github.com/users/adambeynon,68938,adambeynon,https://api.github.com/repos/opal/opal/releases/15052/assets,https://api.github.com/repos/opal/opal/releases/15052,master,https://api.github.com/repos/opal/opal/tarball/v0.4.3,https://github.com/opal/opal/releases/tag/v0.4.3,https://api.github.com/repos/opal/opal/zipball/v0.4.3,v0.4.3,False,False
