id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
7581866,2017-08-28T14:11:00Z,2017-08-30T22:28:02Z,Bump soversion,"Also, fix writeCommentBeforeValue() iter deref",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/7581866/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/7581866,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.8.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.8.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.8.3,1.8.3,False,False
7536680,2017-08-27T20:30:15Z,2017-08-27T20:34:05Z,Move operators; minor fixes,"* Some C++ ""move"" operators.
  * (If these require a bump in the ABI number, please let us know.)
* Fix uninitialized value detected by valgrind. (Thanks to @ya1gaurav for first noticing this.)
* Other minor improvements.
* Moved most READ docs to Wiki.",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/7536680/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/7536680,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.8.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.8.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.8.2,1.8.2,False,False
6830955,2017-06-26T05:01:22Z,2017-06-26T05:18:22Z,Meson build,"* `meson.build`
* Minor bug fixes and optimizations
* Improved docs",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/6830955/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/6830955,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.8.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.8.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.8.1,1.8.1,False,False
4922224,2016-12-14T19:39:05Z,2016-12-14T19:41:27Z,Require cmake>=3.1,"Plus some other build-related changes. I don't think there is anything functionally different from 1.7.7, or even any binary incompatibilities, but the cmake change is significant.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4922224/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4922224,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.8.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.8.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.8.0,1.8.0,False,False
4283452,2016-10-02T16:32:21Z,2016-10-02T16:33:54Z,Bump SOVERSION,"At the suggestion of Peter Spiess-Knafl, we will bump the SOVERSION independent of the MAJOR.MINOR.MICRO version, in case we break binary compatibility.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4283452/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4283452,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.7,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.7,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.7,1.7.7,False,False
4225658,2016-09-26T00:05:56Z,2016-09-26T00:08:40Z,Allow non-null-terminated input,"- Prevent possible SEGV. (Thanks to @ngg.)
- Add RPATH for OSX libs. (Please let us know if this causes a problem.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4225658/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4225658,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.6,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.6,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.6,1.7.6,False,False
4026178,2016-09-01T07:45:08Z,2016-09-01T07:53:39Z,Minor improvements,"- Fix locale for decimal points
  - Plus a fix for Android
- `int64_t` for 64-bit integers
- Optionally suppress space after comma
- Avoid null for empty stringValue
- Fix null ctor/dtor, using a ""Meyers Singleton""
  - Thanks to @marklakata and @BillyDonahue in #488 in #490.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4026178/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/4026178,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.5,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.5,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.5,1.7.5,False,False
3622167,2016-07-09T18:27:28Z,2016-07-09T18:29:50Z,Fix pkg-config,"- https://github.com/open-source-parsers/jsoncpp/pull/493
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3622167/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3622167,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.4,1.7.4,False,True
3527104,2016-06-27T05:12:23Z,2016-06-27T05:13:11Z,Fix static initialization,"- Fix static initialization of `null` with Myers Singleton. (Thanks @marklakata )
- Fix other minor compiler and installation problems and warnings.
- Fix amalgamated header.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3527104/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3527104,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.3,1.7.3,False,False
3074885,2016-04-22T05:28:53Z,2016-04-22T05:30:15Z,Minor build improvements,,https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3074885/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/3074885,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.6,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.6,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.6,0.10.6,False,False
2890457,2016-03-25T20:09:15Z,2016-03-25T20:10:27Z,Fix a clang warning,"We have clang tests but for some reason did not see this warning.

Otherwise, same as 1.7.1.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2890457/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2890457,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.2,1.7.2,False,False
2859701,2016-03-22T02:17:56Z,2016-03-22T02:18:58Z,GCC-6 compatibility,"- New _precision_ setting in `StreamBuilder`
- Move-semantics for some ctors
- Added details to exception messages
  - Clarified when exceptions are thrown
- Support `isinfinite()`
- Secure memory-wiping allocator (via compilation flag, settable via cmake)
  - For this, we changed all STL datatypes to macros, but all unchanged by default.
- Lots of minor build-related improvements
  - Notably, cmake support for ccache
  - More supported systems
    - gcc-6
    - musl
    - MinGW
    - Cygwin
    - QNX
    - VS2010 (for now, but you can always use old versions of JsonCpp)

Note: 1.7.0 was recalled b/c it accidentally included `SecureAlloc` by default.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2859701/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2859701,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.1,1.7.1,False,False
2848099,2016-03-20T00:30:30Z,2016-03-20T00:48:02Z,GCC-6 compatibility - RECALLED (Accidentally released with secure-allocators on.),,https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2848099/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/2848099,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.7.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.7.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.7.0,1.7.0,False,True
1574365,2015-07-23T05:26:13Z,2015-07-23T05:45:38Z,Expose Exception classes,"Other changes are just comments.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1574365/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1574365,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.6.5,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.6.5,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.6.5,1.6.5,False,False
1574363,2015-07-23T05:32:47Z,2015-07-23T05:44:55Z,Expose Exception classes,"Other changes are just comments.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1574363/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1574363,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.5,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.5,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.5,0.10.5,False,False
1526864,2015-07-12T20:02:28Z,2015-07-12T20:03:37Z,minor bug fix,"We have done some house-keeping, so even tough the only real change here is a minor bug-fix, this release is an improvement.
- -Werror
- -Wshadow, plus a big-fix found from it
- fixed most warnings (but still cannot use -Wconversion with older compilers, or -Wsign-conversion with newer)
- dockerized Travis CI builds
- explicitly use older compiler in Travis (gcc-4.6, while _master_ branch uses gcc-4.9 or later, plus -std=c++11)

(`0.10.3` was a non-release because of a signing error in `0.10.2`.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1526864/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1526864,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.4,0.10.4,False,False
1435953,2015-06-11T02:22:24Z,2015-06-19T03:21:36Z,Fix unit-test for ARM,"- issue #290
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1435953/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1435953,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.2-p1,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.2-p1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.2-p1,0.10.2-p1,False,False
1153913,2015-04-11T19:49:59Z,2015-04-11T19:53:29Z,Fix UTF-8 for old (deprecated) Writers,"(Based on `1.6.2`.)
- Do not truncate output at embedded zeroes.

This was already fixed the new `StreamWriter`, which is used by the default stream inserter. This fix will not break anything that wasn't already broken.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1153913/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1153913,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.2,0.10.2,False,False
1153911,2015-04-11T19:45:33Z,2015-04-11T19:52:34Z,Fix UTF-8 for old (deprecated) Writers,"- Do not truncate output at embedded zeroes.

This was already fixed the new `StreamWriter`, which is used by the default stream inserter. This fix will not break anything that wasn't already broken.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1153911/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1153911,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.6.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.6.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.6.2,1.6.2,False,False
1112281,2015-03-31T20:07:14Z,2015-03-31T20:12:32Z,Fix compilation error for `snprintf()` for some compilers.,"- Fix compilation error for `snprintf()` for some compilers.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1112281/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1112281,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.6.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.6.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.6.1,1.6.1,False,False
1112278,2015-03-31T20:07:43Z,2015-03-31T20:12:09Z,Fix compilation error for `snprintf()` for some compilers.,"(Based on 1.6.1. Binary-compatible with the old 0.6.0-rc2 from sourceforge.)
- Fix compilation error for `snprintf()` for some compilers.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1112278/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1112278,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.1,0.10.1,False,False
1052465,2015-03-15T19:25:04Z,2015-03-15T19:28:11Z,Json::Exception,"(Based on `1.6.0`. Binary-compatible with the old `0.6.0-rc2` from sourceforge.)
- Added `Json::Exception`, plus derived types:
  - `Json::RuntimeError`
  - `Json::LogicError`
- Clarified when exceptions are thrown.
  - If you are trapping `std::exception`, nothing will change for you.
- Fixed deprecation macro. (Thx to @Dani-Hub.)
- Fixed compilation error for **gcc-4.8**. (Thx to @connormanning.)
- Fixed `CharReader::Factory` base. (Thx to Tengiz Sharafiev.) (Technically, this is not a binary-compatible change, but it is a pretty serious bug. So we have deprecated 0.8 and 0.9, which are quite recent. This version is fully binary-compatible with `0.6.0-rc2`, the very old release in common use.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1052465/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1052465,0.y.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.10.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.10.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.10.0,0.10.0,False,False
1027665,2015-03-15T18:49:24Z,2015-03-15T18:52:59Z,Json::Exception,"- Added `Json::Exception`, plus derived types:
  - `Json::RuntimeError`
  - `Json::LogicError`
- Clarified when exceptions are thrown.
  - If you are trapping `std::exception`, nothing will change for you.
- Fixed deprecation macro. (Thx to @Dani-Hub.)
- Fixed compilation error for **gcc-4.8**. (Thx to @connormanning.)
- Fixed `CharReader::Factory` base. (Thx to Tengiz Sharafiev.) (Technically, this is not a binary-compatible change, but it is a pretty serious bug. So we have deprecated 1.4 and 1.5.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1027665/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1027665,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.6.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.6.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.6.0,1.6.0,False,False
1026427,2015-03-07T21:48:14Z,2015-03-07T21:50:34Z,Full UTF-8 support,"(Based on [`1.5.4`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.4).)
- Support embedded 0s in strings (since UTF-8 allows them).
  - If you use c-string methods, or `std::string::c_str()`, you can still have problems.
  - Note that this support has a price: keys are now limited to 1 billion characters (2^30).
- Add feature to allow single-quotes in input JSON (since JavaScript allows them).
- Propagate rarely-used `StaticString` thru copy-ctor.
- Let JSON_ASSERT throw `std::logic_error` instead of `std::runtime_error`.
- Skip Python tests by default, and run C++ unit-tests only for changes.
- Ignore cmake-generated files for in-source builds.
- Add tests. Fix other tests.
- Remove unused code (JSON_VALUE_USE_INTERNAL_MAP).
- Add `rejectDupKeys` feature.
  - Now part of _strictMode_.
- Fix minor build issues for VisualStudio.
- Fix compile error for VS2013, plus warnings.
- Add `operator[]` to Builders.
- In Builders, fix `::validate()` (which was always returning `true`).
- Fix UTF-8 zeroes bugs in previous patch-versions.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1026427/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1026427,v0.9.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.9.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.9.4,0.9.4,False,True
1026421,2015-03-07T21:47:39Z,2015-03-07T21:50:08Z,Full UTF-8 support,"- Support embedded 0s in strings (since UTF-8 allows them).
  - If you use c-string methods, or `std::string::c_str()`, you can still have problems.
  - Note that this support has a price: keys are now limited to 1 billion characters (2^30).
- Add feature to allow single-quotes in input JSON (since JavaScript allows them).
- Propagate rarely-used `StaticString` thru copy-ctor.
- Let JSON_ASSERT throw `std::logic_error` instead of `std::runtime_error`.
- Skip Python tests by default, and run C++ unit-tests only for changes.
- Ignore cmake-generated files for in-source builds.
- Add tests. Fix other tests.
- Remove unused code (JSON_VALUE_USE_INTERNAL_MAP).
- Add `rejectDupKeys` feature.
  - Now part of _strictMode_.
- Fix minor build issues for VisualStudio.
- Fix compile error for VS2013, plus warnings.
- Add `operator[]` to Builders.
- In Builders, fix `::validate()` (which was always returning `true`).
- Fix UTF-8 zeroes bugs in previous patch-versions.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1026421/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1026421,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.5.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.5.4,1.5.4,False,True
1024742,2015-03-06T22:12:12Z,2015-03-06T22:14:11Z,Full UTF-8 support,"(Based on [`1.5.3`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.3).)
- Fixed `get(key, default)` for key with embedded zeroes.
- Added `rejectDupKeys` feature.
  - Now part of _strictMode_.
- Fixed minor build issues for VisualStudio.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1024742/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1024742,v0.9.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.9.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.9.3,0.9.3,False,False
1024723,2015-03-06T18:58:55Z,2015-03-06T22:05:08Z,Full UTF-8 support,"- Fixed `get(key, default)` for key with embedded zeroes.
- Added `rejectDupKeys` feature.
  - Now part of _strictMode_.
- Fixed minor build issues for VisualStudio.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1024723/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1024723,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.5.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.5.3,1.5.3,False,False
1017575,2015-03-05T15:20:44Z,2015-03-05T15:44:22Z,Full UTF-8 support,"- Fixed compile error for VS2013.
- Added `operator[]` to Builders. (Builders are not yet widely used, and 0.9.z is very new, so we have not bumped the minor version number.)

See also:
- [`1.5.0`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.0)
- [`1.5.1`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.1)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1017575/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1017575,v0.9.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.9.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.9.2,0.9.2,False,False
1017564,2015-03-05T15:18:44Z,2015-03-05T15:42:38Z,Full UTF-8 support,"- Fixed compile error for VS2013.
- Added `operator[]` to Builders. (Builders are not yet widely used, and 0.9.z is very new, so we have not bumped the minor version number.)

See also:
- [`0.9.0`](https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.0)
- [`0.9.1`](https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.1)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1017564/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1017564,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.5.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.5.2,1.5.2,False,False
1015565,2015-03-05T03:20:43Z,2015-03-05T03:25:46Z,Full UTF-8 support,"Plus a minor bug-fix. (For the Builders, `::validate()` was always returning `true`.)

See [`0.9.0`](https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.0).
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1015565/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1015565,v0.9.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.9.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.9.1,0.9.1,False,False
1015564,2015-03-05T03:18:05Z,2015-03-05T03:25:01Z,Full UTF-8 support,"Plus a minor bug-fix. (For the Builders, `::validate()` was always returning `true`.)

See [`1.5.0`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.0).
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1015564/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1015564,v1.5.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.5.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.5.1,1.5.1,False,False
1008403,2015-03-03T16:16:47Z,2015-03-03T16:27:35Z,Full UTF-8 support,"(Based on `1.5.0`.)
- Support embedded 0s in strings (since UTF-8 allows them).
  - If you use c-string methods, or `std::string::c_str()`, you can still have problems.
  - Note that this support has a price: keys are now limited to 1 billion characters (2^30).
- Add feature to allow single-quotes in input JSON (since JavaScript allows them).
- Propagate rarely-used `StaticString` thru copy-ctor.
- Let JSON_ASSERT throw `std::logic_error` instead of `std::runtime_error`.
- Fix VisualStudio warning.
- Skip Python tests by default, and run C++ unit-tests only for changes.
- Ignore cmake-generated files for in-source builds.
- Add tests.
- Remove unused code (JSON_VALUE_USE_INTERNAL_MAP).
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008403/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008403,v0.9.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.9.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.9.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.9.0,0.9.0,False,False
1008386,2015-03-03T16:15:09Z,2015-03-03T16:23:45Z,Full UTF-8 support,"- Support embedded 0s in strings (since UTF-8 allows them).
  - If you use c-string methods, or `std::string::c_str()`, you can still have problems.
  - Note that this support has a price: keys are now limited to 1 billion characters (2^30).
- Add feature to allow single-quotes in input JSON (since JavaScript allows them).
- Propagate rarely-used `StaticString` thru copy-ctor.
- Let JSON_ASSERT throw `std::logic_error` instead of `std::runtime_error`.
- Fix VisualStudio warning.
- Skip Python tests by default, and run C++ unit-tests only for changes.
- Ignore cmake-generated files for in-source builds.
- Add tests.
- Remove unused code (JSON_VALUE_USE_INTERNAL_MAP).
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008386/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008386,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.5.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.5.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.5.0,1.5.0,False,False
1008006,2015-03-03T15:04:10Z,2015-03-03T15:09:04Z,Fixed allowDroppedNullPlaceholders in Readers.,"(Based on `1.4.4`)

The odd allowDroppedNullPlaceholders feature of Readers (corresponding to dropNullPlaceholders in Writers) can be helpful when parsing javascript as JSON, when null elements have been discarded.

This release fixes the Reader for several cases of the missing null. However, we do not guarantee that all corner cases are covered.

Also, re-add `Json::Value::null` for binary-compatibility.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008006/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/1008006,v0.8.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.4,0.8.4,False,True
969453,2015-02-19T21:37:57Z,2015-02-19T21:44:34Z,Fixed allowDroppedNullPlaceholders in Readers.,"The odd `allowDroppedNullPlaceholders` feature of Readers (corresponding to `dropNullPlaceholders` in Writers) can be helpful when parsing javascript as JSON, when `null` elements have been discarded.

This release fixes the Reader for several cases of the missing `null`. However, we do not guarantee that all corner cases are covered.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/969453/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/969453,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.4,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.4,1.4.4,False,True
964033,2015-02-18T15:26:28Z,2015-02-18T15:27:18Z,Exceptions from JSON_ASSERT,"- Turn on exceptions for `JSON_ASSERT` if `JSON_USE_EXCEPTION`.
- Make `amalgamate.py` more helpful.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/964033/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/964033,v0.8.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.3,0.8.3,False,True
964011,2015-02-18T15:20:28Z,2015-02-18T15:25:26Z,Exceptions from JSON_ASSERT,"- Turn on exceptions for `JSON_ASSERT` if `JSON_USE_EXCEPTION`.
- Make `amalgamate.py` more helpful.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/964011/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/964011,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.3,1.4.3,False,True
953297,2015-02-15T09:01:26Z,2015-02-15T09:08:24Z,Minor bug-fix,"- Bug-fix for `ValueIterator::operator-()` (issue #169)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/953297/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/953297,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.2,1.4.2,False,True
953295,2015-02-15T09:03:47Z,2015-02-15T09:07:42Z,Minor bug-fix,"- Bug-fix for `ValueIterator::operator-()` (issue #169)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/953295/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/953295,v0.8.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.2,0.8.2,False,True
949985,2015-02-13T16:00:38Z,2015-02-13T16:20:52Z,new feature in CharReaderBuilder: failIfExtra,"This setting tells the Reader to fail (return false) if there is extra non-whitespace after a properly parsed JSON value. It catches mistakes like this (missing initial `{`):

```
""key"" : ""value"" }
```

which would otherwise be interpretted as simply

```
""key""
```

`failIfExtra` is available by itself, and is also added for `strictMode()`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/949985/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/949985,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.1,1.4.1,False,True
949980,2015-02-13T16:26:07Z,2015-02-13T16:31:02Z,new feature in CharReaderBuilder: failIfExtra,"This setting tells the Reader to fail (return false) if there is extra non-whitespace after a properly parsed JSON value. It catches mistakes like this (missing initial `{`):

```
""key"" : ""value"" }
```

which would otherwise be interpretted as simply

```
""key""
```

`failIfExtra` is available by itself, and is also added for `strictMode()`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/949980/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/949980,v0.8.z,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.1,0.8.1,False,True
942320,2015-02-11T17:22:07Z,2015-02-11T17:23:42Z,Binary-compatible w/ 0.6.0-rc2; includes most fixes from 1.4.0,"- This release is binary-compatible with `0.6.0-rc2`, but _not_ with `0.7.z`, which was a mistaken release. This includes the major bug-fixes and enhancements from that and from [`1.4.z`](https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0).
- `0.8.z` releases are based on the _v0.8.z_ branch.
- `0.y.z` releases continue to use fairly old compilers. Unlike `1.4+.z`, they do not require C++11.
- Binary-compatiblility was checked both by careful diffing and by dynamically loading the new version into `test_lib_json` compiled against `0.6.0-rc2`. The handful of old test-failures relate to our relaxed type-checking and type-conversions, which will not matter for typical use-cases. E.g.

```
* Detail of ValueTest/isInt test failure:
  src/test_lib_json/main.cpp(167): checkIs( integer_, checks )
  src/test_lib_json/main.cpp(249): check.isDouble_ == value.isDouble()
    Expected: false
    Actual  : true
  src/test_lib_json/main.cpp(251): check.isUInt_ == value.isUInt()
    Expected: false
    Actual  : true
```
- Of course, current tests all pass.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/942320/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/942320,v0.8.0,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.0,0.8.0,False,True
942275,2015-02-11T17:15:32Z,2015-02-11T17:21:09Z,Builders and security fix,"- Added `CharReaderBuilder` and `StreamWriterBuilder`
  - See [Advanced Usage in our docs](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/).
  - These allow consistent configuration of `CharReader` and `StreamWriter` for users who require customization.
  - They will also let us add new features without breaking binary-compatibility.
  - If you are using `operator<<(ostream, Json::Value)` and `operator>>(istream, Json::Value)`, you will not notice a change.
  - The old `Reader` and old `Writers` are deprecated, but still maintained.
- Fixed security hole.
  - A deeply-nested JSON input could cause a seg-fault.
  - The fix is imperfect. Please stop using the deprecated classes.
- Minor bug-fixes and enhancements, including:
  - `-Wall -Wextra -pedantic` for gcc
  - Minor formatting improvements, mainly to the deprecated `StyledStreamWriter` (which was the default for `operator<<(ostream, Value)`.
- Reverted C++11 features.
  - We still use C++11 in **cmake**, but we are rebasing the `v0.8.z` branch (which is binary-compatible with the ancient sourceforge `0.6.0-rc2` release) in order to provide all the bug-fixes possible.
  - Going forward, we intend to follow the [Apache versioning model](http://apr.apache.org/versioning.html) for functional-, source-, and binary-compatibility.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/942275/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/942275,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.0,1.4.0,False,True
940339,2015-02-11T05:29:14Z,2015-02-11T05:48:27Z,StreamWriterBuilder/CharReaderBuilder,"We store settings as `Json::Value` within `StreamWriterBuiler` and `CharReaderBuilder`, so that we can add features without breaking binary-compatibility.

Some of the experimental classes from previous release candidates have been dropped. The builders offer the full functionality of those experiments.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/940339/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/940339,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.0-rc4,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0-rc4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.0-rc4,1.4.0-rc4,False,True
940332,2015-02-11T05:31:29Z,2015-02-11T05:42:39Z,binary-compatible with 0.6.0-rc2,"Binary-compatible with `0.6.x`, but now with Builders and fixes from `0.4.0-rc.3`.

This is _not_ binary-compatible with `0.7.x`, which was a mistaken release. But it includes the major bug-fixes and enhancements from that and from `1.4.x`.

Binary-compatiblility was checked both by careful diffing and by dynamically loading the new version into `test_lib_json` compiled against `0.6.0-rc2`. The handful of test-failures relate to our relaxed type-checking and type-conversions, which will not matter for typical use-cases. E.g.

```
* Detail of ValueTest/isInt test failure:
src/test_lib_json/main.cpp(167): checkIs( integer_, checks )
  src/test_lib_json/main.cpp(249): check.isDouble_ == value.isDouble()
    Expected: false
    Actual  : true
  src/test_lib_json/main.cpp(251): check.isUInt_ == value.isUInt()
    Expected: false
    Actual  : true
```

Travis CI passed. (See pull-request #159.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/940332/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/940332,v0.8.0,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.0-rc4,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.0-rc4,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.0-rc4,0.8.0-rc4,False,True
935522,2015-02-10T01:05:05Z,2015-02-10T01:07:31Z,**binary-compatible with 0.6.0-rc2**,"Binary-compatible with `0.6.x`, but now with Builders and fixes from `0.4.0-rc.3`.

This is _not_ binary-compatible with `0.7.x`, which was a mistaken release. But it includes the major bug-fixes and enhancements from that and from `1.4.x`.

Binary-compatiblility was checked both by careful diffing and by dynamically loading the new version into `test_lib_json` compiled against `0.6.0-rc2`. The handful for test-failures relate to our relaxed type-checking and type-conversions, which will not matter for typical use-cases. E.g.

```
* Detail of ValueTest/isInt test failure:
src/test_lib_json/main.cpp(167): checkIs( integer_, checks )
  src/test_lib_json/main.cpp(249): check.isDouble_ == value.isDouble()
    Expected: false
    Actual  : true
  src/test_lib_json/main.cpp(251): check.isUInt_ == value.isUInt()
    Expected: false
    Actual  : true
```

Travis CI passed. (See pull-request #159.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/935522/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/935522,v0.8.0,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.8.0-rc3,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.8.0-rc3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.8.0-rc3,0.8.0-rc3,False,True
935513,2015-02-10T00:55:55Z,2015-02-10T01:01:58Z,Builders configured by Json::Value,"The Builders of previous release candidates are now implemented with Json::Value `settings_`. That way, we can add new features without breaking binary-compatibility.

As an added advantage, the builder settings can be written and read as JSON, which should help users to preserve their configurations.

See [Advanced Usage in our docs](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/).
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/935513/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/935513,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.0-rc.3,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0-rc.3,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.0-rc.3,1.4.0-rc.3,False,True
931524,2015-02-08T19:25:08Z,2015-02-09T02:52:49Z,CharReaderBuilder,"For reading, our implementation is currently not streaming, so we provide a simple `CharReader` interface. (See docs for details of the new [`CharReaderBuilder`](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/class_json_1_1_char_reader_builder.html).)

For now, the old `Reader` is only deprecated (and still tested), but in order to reduce our maintenance burden, we might drop it completely in `2.0.0`. If you are using `operator>>(istream, Json::Value&)`, then you will not be affected at all.

Also in this release:
- `StreamWriter` interface and `StreamWriterBuilder`
- `-Wall -Wextra -pedantic` for gcc
- Minor fixes.
- Minor formatting improvements, mainly to `StyledStreamWriter` (which was the default for `operator<<(ostream, Value)`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/931524/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/931524,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.0-rc.2,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0-rc.2,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.0-rc.2,1.4.0-rc.2,False,True
886768,2015-01-26T17:38:38Z,2015-01-26T20:50:42Z,`StreamWriterBuilder`,"For writing, streams should _always_ be preferred because they reduce memory overhead with no significant cost. (See docs for details of the new [`StreamWriterBuilder`](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/class_json_1_1_stream_writer_builder.html).)

For now, the old Writers are only deprecated (and still tested), but in order to reduce our maintenance burden, we might drop them completely in `2.0.0`. The [`OldCompressingStreamWriterBuilder`](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/class_json_1_1_old_compressing_stream_writer_builder.html) includes settings to recover the behavior of the older Writers, as needed. If you are using `operator<<(ostream, Json::Value)`, then you will not be affected at all (aside from minor changes to default formatting).

Also in this release:
- `-Wall -Wextra -pedantic` for gcc
- Minor fixes.
- Minor formatting improvements, mainly to `StyledStreamWriter` (which was the default for `operator<<(ostream, Value)`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/886768/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/886768,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.4.0-rc.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.4.0-rc.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.4.0-rc.1,1.4.0-rc.1,False,True
876443,2015-01-23T01:26:46Z,2015-01-23T01:32:36Z,C++11,"From here on, jsoncpp requires C++11. (Well, c++0x with gcc.)

Also, this changes how `removeMember()` should be called.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/876443/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/876443,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.3.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.3.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.3.0,1.3.0,False,False
868510,2015-01-20T18:49:51Z,2015-01-20T19:04:58Z,Bug-fix: Copy comments in `operator=()`,"Changed operator=() to copy (and over-write) comments. This was probably expected by most users and is thus more like a bug-fix, but it could break some unit-tests. There is no performance penalty because the comments were already copied into an intermediate Value.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/868510/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/868510,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.2.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.2.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.2.0,1.2.0,False,False
828778,2015-01-06T19:08:34Z,2015-01-06T19:11:44Z,Fix Solaris and older gcc,"DEPRECATED

Cherry-picked from `master` branch.

Please switch to `0.8.z` or `1.4.z`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828778/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828778,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.7.1,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.7.1,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.7.1,0.7.1,False,True
828760,2014-11-20T14:48:33Z,2015-01-06T19:05:11Z,Maintenance branch,"DEPRECATED

This is compatible with the old `0.6.0rc2`, but not binary compatible. Please switch to `0.8.z` or `1.4.z`.
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828760/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828760,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/0.7.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/0.7.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/0.7.0,0.7.0,False,True
828751,2015-01-06T18:54:39Z,2015-01-06T19:01:59Z,Print doubles as `%.17g`,"This corrects a long-standing problem with the round-trip double->string->double. Unfortunately, this change can break some existing round-trip tests. However, it will make round-trip tests more reliable in general.

See #98 and #109.

(For minor improvements, see the git history.)
",https://api.github.com/users/cdunn2001,450656,cdunn2001,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828751/assets,https://api.github.com/repos/open-source-parsers/jsoncpp/releases/828751,master,https://api.github.com/repos/open-source-parsers/jsoncpp/tarball/1.1.0,https://github.com/open-source-parsers/jsoncpp/releases/tag/1.1.0,https://api.github.com/repos/open-source-parsers/jsoncpp/zipball/1.1.0,1.1.0,False,False
