id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8094165,2017-10-12T12:07:02Z,2017-10-12T12:08:37Z,V2.0.0-develop.5,"## Improvements
* Added stringification for std::chrono::{duration,time_point}

## Fixes
* fixed benchmarks when using multiple reporters (which happens when you register a listener).
* fixed command line parser (Clara) to report unrecognised options again
* fixed single include for MSVC (#1020)
* (partial) workaround for long-standing bug in some compilers' support for uncaught_exception() (#1028)
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/8094165/assets,https://api.github.com/repos/philsquared/Catch/releases/8094165,master,https://api.github.com/repos/philsquared/Catch/tarball/v2.0.0-develop.5,https://github.com/philsquared/Catch/releases/tag/v2.0.0-develop.5,https://api.github.com/repos/philsquared/Catch/zipball/v2.0.0-develop.5,v2.0.0-develop.5,False,True
7811297,2017-09-19T16:42:43Z,2017-09-19T16:44:03Z,,"## Improvements
* More warnings are silenced
* Don't use console colour if running in XCode
* More compile time optimisations

## Fixes
* CATCH_CONFIG_FAST_COMPILE now now builds again
* explicit constructor in reporter base class
* Many fixes for building in Objective-C context
* Fixed text formatting with multiple consecutive newlines (from Clara)

## Breaking changes
* Removed deprecated matcher utility functions `Not`, `AllOf` and `AnyOf`.
  * They are superseded by operators `!`, `&&` and `||`, which are natural and do not have limited arity
* No longer accept non-const comparison operators
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/7811297/assets,https://api.github.com/repos/philsquared/Catch/releases/7811297,master,https://api.github.com/repos/philsquared/Catch/tarball/v2.0.0-develop.4,https://github.com/philsquared/Catch/releases/tag/v2.0.0-develop.4,https://api.github.com/repos/philsquared/Catch/zipball/v2.0.0-develop.4,v2.0.0-develop.4,False,False
7571789,2017-08-30T10:20:21Z,2017-08-30T10:27:57Z,v2.0.0-develop.3,"## Fixes
* Fixed compilation error when comparing a pointer to long `NULL`
* Fixed missing platform detection when `CATCH_CONFIG_FAST_COMPILE` was used
* Silenced unused return value warning in `wait-for-keypress` option
* Enabled workaround for VS2017 issue with raw string literals in assertions

## Improvements
* Added `CATCH_CONFIG_DISABLE` compile-time toggle inspired by Doctest
  * Assertions are turned into no-ops
  * `TEST_CASE`s are not registered
  * Exception translators are not registered
  * Reporters are not registered
  * Listeners are not registered
  * Further improvements are coming
* `REGISTER_TEST_CASE` can be now used in global scope to provide automatic registration of test function

## Breaking changes
* Removed legacy `[hide]` tag
  * `[!hide]`, `[.]` and `[.foo]` are kept
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/7571789/assets,https://api.github.com/repos/philsquared/Catch/releases/7571789,catch2,https://api.github.com/repos/philsquared/Catch/tarball/v2.0.0-develop.3,https://github.com/philsquared/Catch/releases/tag/v2.0.0-develop.3,https://api.github.com/repos/philsquared/Catch/zipball/v2.0.0-develop.3,v2.0.0-develop.3,False,False
7531868,2017-08-26T13:34:18Z,2017-08-26T13:35:22Z,v1.10.0,"# 1.10.0

### Fixes
* Evaluation layer has been rewritten (backported from Catch 2)
  * The new layer is much simpler and fixes some issues (#981)
* Implemented workaround for VS 2017 raw string literal stringification bug (#995)
* Fixed interaction between `[!shouldfail]` and `[!mayfail]` tags and sections
  * Previously sections with failing assertions would be marked as failed, not failed-but-ok

### Improvements
* Added [libidentify](https://github.com/janwilmans/LibIdentify) support
* Added ""wait-for-keypress"" option
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/7531868/assets,https://api.github.com/repos/philsquared/Catch/releases/7531868,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.10.0,https://github.com/philsquared/Catch/releases/tag/v1.10.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.10.0,v1.10.0,False,False
7443922,2017-08-18T14:58:21Z,2017-08-18T15:04:28Z,v2.0.0-develop.2,"## Fixes
- fixed issue when comparing non-copyable values
- fixed issue with exception message checking with matchers

## Features
- introduced `CATCH_CONFIG_EXTERNAL_INTERFACES` so that, e.g., reporters can be implemented outside the main file.

## Breaking changes
- reverted `-d` syntax to previous behaviour (so it takes an argument again, `yes` or `no`).
- removed deprecated `INTERNAL_CATCH_REGISTER_LISTENER` (use `CATCH_REGISTER_LISTENER`)",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/7443922/assets,https://api.github.com/repos/philsquared/Catch/releases/7443922,master,https://api.github.com/repos/philsquared/Catch/tarball/v2.0.0-develop.2,https://github.com/philsquared/Catch/releases/tag/v2.0.0-develop.2,https://api.github.com/repos/philsquared/Catch/zipball/v2.0.0-develop.2,v2.0.0-develop.2,False,True
7422231,2017-08-17T07:39:35Z,2017-08-17T08:15:13Z,v2.0.0-develop.1,"# 2.0.0-develop.1

This is the first beta release of Catch2, which rebases on C++11.

It includes many changes - some breaking - including:

### Internal
* Migrated lots of code to C++11 and removed most compatibility workarounds
* Reworked expression decomposition layer - now much simpler and less code
* Added, and started using in some places, a `StringRef`, which is similar to C++17's `string_view`
* Use new, rewritten, version of Clara (for command line parsing)
* Use new, rewritten, text formatting sub-lib, TextFlow.
* Full project now has .cpp files instead of headers with implementation - still merged down to a single header.
* Lots of other fixes and tweaks

### Features
* Can now use commas in assertion macros (e.g. when using template argument lists)
* Command line can now be easily extended (as Clara has a composable interface)
* Experimental micro-benchmarking support added

### Breaking
* Removed `Catch::toString()` - you must now specialise `Catch::StringMaker<>` instead
* `-d` command line option no longer takes an argument
* Removed old, experimental, generators support (new version will be coming)
* Changed interface of  `Catch::Session` as it relates to Clara - in particular removed `unusedTokens()`, the `unusedOptionBehaviour` argument from `applyCommandLine()` and changed the type that `cli()` returns.
* Removed redundant `SCOPED_MSG` and `SCOPED_CAPTURE`",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/7422231/assets,https://api.github.com/repos/philsquared/Catch/releases/7422231,master,https://api.github.com/repos/philsquared/Catch/tarball/v2.0.0-develop.1,https://github.com/philsquared/Catch/releases/tag/v2.0.0-develop.1,https://api.github.com/repos/philsquared/Catch/zipball/v2.0.0-develop.1,v2.0.0-develop.1,False,True
7354494,2017-08-10T22:01:20Z,2017-08-10T22:01:57Z,v1.9.7,"# 1.9.7

### Fixes
* Various warnings from clang-tidy, Resharper-C++ and PVS Studio have been addressed (#957)
* Dynamically generated sections are now properly reported (#963)
* Writes to `std::clog` are redirected for reporters (#989)
  * Previously only `std::cerr` writes were redirected
  * Interleaved writes to `std::cerr` and `std::clog` are combined properly
* Assertions failed before signals/structured exceptions fails test case are properly reported as failed (#990)

### Improvements
* Catch's runtime overhead has been decreased further (#940)
* Added support for IBM i ILE c++ compiler (#976)
  * This means that AS/400 is now supported.
* The default reporter can be configured at compile time (#978)
  * That is, the reporter used if no reporter is explicitly specified

### Other
* `ParseAndAddCatchTests` cmake script has couple new customization options

",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/7354494/assets,https://api.github.com/repos/philsquared/Catch/releases/7354494,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.7,https://github.com/philsquared/Catch/releases/tag/v1.9.7,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.7,v1.9.7,False,False
6839944,2017-06-27T10:21:48Z,2017-06-27T10:27:39Z,v1.9.6,"# 1.9.6

### Improvements
* Catch's runtime overhead has been significantly decreased (#937, #939)
* Added `--list-extra-info` cli option (#934).
  * It lists all tests together with extra information, ie filename, line number and description.
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6839944/assets,https://api.github.com/repos/philsquared/Catch/releases/6839944,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.6,https://github.com/philsquared/Catch/releases/tag/v1.9.6,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.6,v1.9.6,False,False
6723361,2017-06-15T11:08:26Z,2017-06-15T11:08:51Z,v1.9.5,"# 1.9.5

### Fixes
* Truthy expressions are now reconstructed properly, not as booleans (#914)
* Various warnings are no longer erroneously suppressed in test files (files that include `catch.hpp`, but do not define `CATCH_CONFIG_MAIN` or `CATCH_CONFIG_RUNNER`) (#871)
* Catch no longer fails to link when main is compiled as C++, but linked against Objective-C (#855)
* Fixed incorrect gcc version detection when deciding to use `__COUNTER__` (#928)
  * Previously any GCC with minor version less than 3 would be incorrectly classified as not supporting `__COUNTER__`.
* Suppressed C4996 warning caused by upcoming updated to MSVC 2017, marking `std::uncaught_exception` as deprecated. (#927)

### Improvements
* CMake integration script now incorporates debug messages and registers tests in an improved way (#911)
* Various documentation improvements

",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6723361/assets,https://api.github.com/repos/philsquared/Catch/releases/6723361,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.5,https://github.com/philsquared/Catch/releases/tag/v1.9.5,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.5,v1.9.5,False,False
6400534,2017-05-16T11:59:29Z,2017-05-16T12:01:01Z,v1.9.4,"### Fixes
* `CATCH_FAIL` macro no longer causes compilation error without variadic macro support
* `INFO` messages are no longer cleared after being reported once

### Improvements and minor changes
* Catch now uses `wmain` when compiled under Windows and `UNICODE` is defined.
  * Note that Catch still officially supports only ASCII",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6400534/assets,https://api.github.com/repos/philsquared/Catch/releases/6400534,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.4,https://github.com/philsquared/Catch/releases/tag/v1.9.4,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.4,v1.9.4,False,False
6182403,2017-04-25T14:25:10Z,2017-04-25T14:35:18Z,v1.9.3,"### Fixes
* Completed the fix for (lack of) uint64_t in earlier Visual Studios
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/6182403/assets,https://api.github.com/repos/philsquared/Catch/releases/6182403,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.3,https://github.com/philsquared/Catch/releases/tag/v1.9.3,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.3,v1.9.3,False,False
6178390,2017-04-25T09:08:02Z,2017-04-25T09:08:58Z,v1.9.2,"### Improvements and minor changes
* All of `Approx`'s member functions now accept strong typedefs in C++11 mode (#888)
  * Previously `Approx::scale`, `Approx::epsilon`, `Approx::margin` and `Approx::operator()` didn't.


### Fixes
* POSIX signals are now disabled by default under QNX (#889)
  * QNX does not support current enough (2001) POSIX specification
* JUnit no longer counts exceptions as failures if given test case is marked as ok to fail.
* `Catch::Option` should now have its storage properly aligned.
* Catch no longer attempts to define `uint64_t` on windows (#862)
  * This was causing trouble when compiled under Cygwin

### Other
* Catch is now compiled under MSVC 2017 using `std:c++latest` (C++17 mode) in CI
* We now provide cmake script that autoregisters Catch tests into ctest.
  * See `contrib` folder.
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6178390/assets,https://api.github.com/repos/philsquared/Catch/releases/6178390,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.2,https://github.com/philsquared/Catch/releases/tag/v1.9.2,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.2,v1.9.2,False,False
6025832,2017-04-09T19:25:20Z,2017-04-09T19:26:34Z,v1.9.1,"### Fixes
* Unexpected exceptions are no longer ignored by default (#885, #887)",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6025832/assets,https://api.github.com/repos/philsquared/Catch/releases/6025832,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.1,https://github.com/philsquared/Catch/releases/tag/v1.9.1,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.1,v1.9.1,False,False
6005375,2017-04-07T20:56:36Z,2017-04-07T20:57:00Z,v1.9.0,"
### Improvements and minor changes
* Catch no longer attempts to ensure the exception type passed by user in `REQUIRE_THROWS_AS` is a constant reference.
  * It was causing trouble when `REQUIRE_THROWS_AS` was used inside templated functions
  * This actually reverts changes made in v1.7.2
* Catch's `Version` struct should no longer be double freed when multiple instances of Catch tests are loaded into single program (#858)
  * It is now a static variable in an inline function instead of being an `extern`ed struct.
* Attempt to register invalid tag or tag alias now throws instead of calling `exit()`.
  * Because this happen before entering main, it still aborts execution
  * Further improvements to this are coming
* `CATCH_CONFIG_FAST_COMPILE` now speeds-up compilation of `REQUIRE*` assertions by further ~15%.
  * The trade-off is disabling translation of unexpected exceptions into text.
* When Catch is compiled using C++11, `Approx` is now constructible with anything that can be explicitly converted to `double`.
* Captured messages are now printed on unexpected exceptions

### Fixes:
* Clang's `-Wexit-time-destructors` should be suppressed for Catch's internals
* GCC's `-Wparentheses` is now suppressed for all TU's that include `catch.hpp`.
  * This is functionally a revert of changes made in 1.8.0, where we tried using `_Pragma` based suppression. This should have kept the suppression local to Catch's assertions, but bugs in GCC's handling of `_Pragma`s in C++ mode meant that it did not always work.
* You can now tell Catch to use C++11-based check when checking whether a type can be streamed to output.
  * This fixes cases when an unstreamable type has streamable private base (#877)
  * [Details can be found in documentation](docs/configuration.md#catch_config_cpp11_stream_insertable_check)


### Other notes:
* We have added VS 2017 to our CI
* Work on Catch 2 should start soon

",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/6005375/assets,https://api.github.com/repos/philsquared/Catch/releases/6005375,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.9.0,https://github.com/philsquared/Catch/releases/tag/v1.9.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.9.0,v1.9.0,False,False
5724889,2017-03-13T20:29:30Z,2017-03-13T20:30:45Z,v1.8.2,"
### Improvements and minor changes
* TAP reporter now behaves as if `-s` was always set
  * This should be more consistent with the protocol desired behaviour.
* Compact reporter now obeys `-d yes` argument (#780)
  * The format is ""XXX.123 s: <section-name>"" (3 decimal places are always present).
  * Before it did not report the durations at all.
* XML reporter now behaves the same way as Console reporter in regards to `INFO`
  * This means it reports `INFO` messages on success, if output on success (`-s`) is enabled.
  * Previously it only reported `INFO` messages on failure.
* `CAPTURE(expr)` now stringifies `expr` in the same way assertion macros do (#639)
* Listeners are now finally [documented](docs/event-listeners.md).
  * Listeners provide a way to hook into events generated by running your tests, including start and end of run, every test case, every section and every assertion.


### Fixes:
* Catch no longer attempts to reconstruct expression that led to a fatal error  (#810)
  * This fixes possible signal/SEH loop when processing expressions, where the signal was triggered by expression decomposition.
* Fixed (C4265) missing virtual destructor warning in Matchers (#844)
* `std::string`s are now taken by `const&` everywhere (#842).
  * Previously some places were taking them by-value.
* Catch should no longer change errno (#835).
  * This was caused by libstdc++ bug that we now work around.
* Catch now provides `FAIL_CHECK( ... )` macro (#765).
  * Same as `FAIL( ... )`, but does not abort the test.
* Functions like `fabs`, `tolower`, `memset`, `isalnum` are now used with `std::` qualification (#543).
* Clara no longer assumes first argument (binary name) is always present (#729)
  * If it is missing, empty string is used as default.
* Clara no longer reads 1 character past argument string (#830)
* Regression in Objective-C bindings (Matchers) fixed (#854)

### Other notes:
* We have added VS 2013 and 2015 to our CI
* Catch Classic (1.x.x) now contains its own, forked, version of Clara (the argument parser).",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/5724889/assets,https://api.github.com/repos/philsquared/Catch/releases/5724889,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.8.2,https://github.com/philsquared/Catch/releases/tag/v1.8.2,https://api.github.com/repos/philsquared/Catch/zipball/v1.8.2,v1.8.2,False,False
5608139,2017-03-01T16:05:07Z,2017-03-01T16:08:17Z,v1.8.1,"### Fixes

Cygwin issue with `gettimeofday` - `#define` was not early enough
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/5608139/assets,https://api.github.com/repos/philsquared/Catch/releases/5608139,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.8.1,https://github.com/philsquared/Catch/releases/tag/v1.8.1,https://api.github.com/repos/philsquared/Catch/zipball/v1.8.1,v1.8.1,False,False
5547096,2017-02-28T14:19:09Z,2017-02-28T14:20:50Z,v1.8.0,"## New features/ minor changes
- Matchers have new, simpler (and documented) interface.
  - Catch provides string and vector matchers.
  - For details see [Matchers documentation](docs/matchers.md).
- Changed console reporter test duration reporting format (#322)
  - Old format: `Some simple comparisons between doubles completed in 0.000123s`
  - New format: `xxx.123s: Some simple comparisons between doubles` _(There will always be exactly 3 decimal places)_
- Added opt-in leak detection under MSVC + Windows (#439)
  - Enable it by compiling Catch's main with `CATCH_CONFIG_WINDOWS_CRTDBG`
- Introduced new compile-time flag, `CATCH_CONFIG_FAST_COMPILE`, trading features for compilation speed.
  - Moves debug breaks out of tests and into implementation, speeding up test compilation time (~10% on linux).
  - _More changes are coming_
- Added [TAP (Test Anything Protocol)](https://testanything.org/) and [Automake](https://www.gnu.org/software/automake/manual/html_node/Log-files-generation-and-test-results-recording.html#Log-files-generation-and-test-results-recording) reporters.
  - These are not present in the default single-include header and need to be downloaded from GitHub separately.
  - For details see [documentation about integrating with build systems](docs/build-systems.md).
-  XML reporter now reports filename as part of the `Section` and `TestCase` tags.
- `Approx` now supports an optional margin of absolute error
  - It has also received [new documentation](docs/assertions.md).

## Fixes
- Silenced C4312 (""conversion from int to 'ClassName *"") warnings in the evaluate layer.
- Fixed C4512 (""assignment operator could not be generated"") warnings under VS2013.
- Cygwin compatibility fixes
  - Signal handling is no longer compiled by default.
  - Usage of `gettimeofday` inside Catch should no longer cause compilation errors.
- Improved `-Wparentheses` supression for gcc (#674)
  - When compiled with gcc 4.8 or newer, the supression is localized to assertions only
  - Otherwise it is supressed for the whole TU
- Fixed test spec parser issue (with escapes in multiple names)

## Other
- Various documentation fixes and improvements
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/5547096/assets,https://api.github.com/repos/philsquared/Catch/releases/5547096,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.8.0,https://github.com/philsquared/Catch/releases/tag/v1.8.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.8.0,v1.8.0,False,False
5441958,2017-02-13T16:15:56Z,2017-02-13T16:24:52Z,v1.7.2,"### Fixes and minor improvements

Xml:

(technically the first two are breaking changes but are also fixes and arguably break few if any people)
- C-escape control characters instead of XML encoding them (which requires XML 1.1)
- Revert XML output to XML 1.0
- Can provide stylesheet references by extending the XML reporter
- Added description and tags attribites to XML Reporter
- Tags are closed and the stream flushed more eagerly to avoid stdout interpolation

Other:
- `REQUIRE_THROWS_AS` now catches exception by `const&` and reports expected type
- In `SECTION`s the file/ line is now of the `SECTION`. not the `TEST_CASE`
- Added std:: qualification to some functions from C stdlib
- Removed use of RTTI (`dynamic_cast`) that had crept back in
- Silenced a few more warnings in different circumstances
- Travis improvements
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/5441958/assets,https://api.github.com/repos/philsquared/Catch/releases/5441958,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.7.2,https://github.com/philsquared/Catch/releases/tag/v1.7.2,https://api.github.com/repos/philsquared/Catch/zipball/v1.7.2,v1.7.2,False,False
5375877,2017-02-07T09:06:52Z,2017-02-07T09:07:21Z,v1.7.1,"### Fixes:
- Fixed inconsistency in defining `NOMINMAX` and `WIN32_LEAN_AND_MEAN` inside `catch.hpp`.
- Fixed SEH-related compilation error under older MinGW compilers, by making Windows SEH handling opt-in for compilers other than MSVC.
  - For specifics, look into the [documentation](docs/configuration.md).
- Fixed compilation error under MinGW caused by improper compiler detection.
- Fixed XML reporter sometimes leaving an empty output file when a test ends with signal/structured exception.
- Fixed XML reporter not reporting captured stdout/stderr.
- Fixed possible infinite recursion in Windows SEH.
- Fixed possible compilation error caused by Catch's operator overloads being ambiguous in regards to user-defined templated operators.
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/5375877/assets,https://api.github.com/repos/philsquared/Catch/releases/5375877,7b8a27eadb70bc92c0027e5028b47526095a719d,https://api.github.com/repos/philsquared/Catch/tarball/v1.7.1,https://github.com/philsquared/Catch/releases/tag/v1.7.1,https://api.github.com/repos/philsquared/Catch/zipball/v1.7.1,v1.7.1,False,False
5312812,2017-02-01T20:47:43Z,2017-02-01T20:49:09Z,v1.7.0,"### Features/ Changes:
- Catch now runs significantly faster for passing tests
  - Microbenchmark focused on Catch's overhead went from ~3.4s to ~0.7s.
  - Real world test using [JSON for Modern C++](https://github.com/nlohmann/json)'s test suite went from ~6m 25s to ~4m 14s.
- Catch can now run specific sections within test cases.
  - For now the support is only basic (no wildcards or tags), for details see the [documentation](docs/command-line.md).
- Catch now supports SEH on Windows as well as signals on Linux.
  - After receiving a signal, Catch reports failing assertion and then passes the signal onto the previous handler.
- Approx can be used to compare values against strong typedefs (available in C++11 mode only).
  - Strong typedefs mean types that are explicitly convertible to double.
- CHECK macro no longer stops executing section if an exception happens.
- Certain characters (space, tab, etc) are now pretty printed.
  - This means that a `char c = ' '; REQUIRE(c == '\t');` would be printed as `' ' == '\t'`, instead of `== 9`.

### Fixes:
- Text formatting no longer attempts to access out-of-bounds characters under certain conditions.
- THROW family of assertions no longer trigger `-Wunused-value` on expressions containing explicit cast.
- Breaking into debugger under OS X works again and no longer requires `DEBUG` to be defined.
- Compilation no longer breaks under certain compiler if a lambda is used inside assertion macro.

### Other:
- Catch's CMakeLists now defines install command.
- Catch's CMakeLists now generates projects with warnings enabled.
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/5312812/assets,https://api.github.com/repos/philsquared/Catch/releases/5312812,ce37f48ffad2401e6c23a54cae3f015c01fdc200,https://api.github.com/repos/philsquared/Catch/tarball/v1.7.0,https://github.com/philsquared/Catch/releases/tag/v1.7.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.7.0,v1.7.0,False,False
5216811,2017-01-20T11:49:59Z,2017-01-20T11:51:36Z,v1.6.1,"### Features/ Changes:
- Catch now supports breaking into debugger on Linux

### Fixes:
- Generators no longer leak memory (generators are still unsupported in general)
- JUnit reporter now reports UTC timestamps, instead of ""tbd""
- `CHECK_THAT` macro is now properly defined as `CATCH_CHECK_THAT` when using `CATCH_` prefixed macros

### Other:
- Types with overloaded `&&` operator are no longer evaluated twice when used in an assertion macro.
- The use of `__COUNTER__` is supressed when Catch is parsed by CLion
  - This change is not active when compiling a binary
- Approval tests can now be run on Windows
- CMake will now warn if a file is present in the `include` folder but not is not enumerated as part of the project
- Catch now defines `NOMINMAX` and `WIN32_LEAN_AND_MEAN` before including `windows.h`
  - This can be disabled if needed, see [documentation](docs/configuration.md) for details.
",https://api.github.com/users/horenmar,9026413,horenmar,https://api.github.com/repos/philsquared/Catch/releases/5216811/assets,https://api.github.com/repos/philsquared/Catch/releases/5216811,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.6.1,https://github.com/philsquared/Catch/releases/tag/v1.6.1,https://api.github.com/repos/philsquared/Catch/zipball/v1.6.1,v1.6.1,False,False
5131324,2017-01-11T16:44:50Z,2017-01-11T16:48:52Z,v1.6.0,"### Cmake/ projects:
- Moved CMakeLists.txt to root, made it friendlier for CLion and generating XCode and VS projects, and removed the manually maintained XCode and VS projects.

### Features/ Changes:
- Approx now supports `>=` and `<=`
- Can now use `\` to escape chars in test names on command line
- Standardize C++11 feature toggles

### Fixes:
- Blue shell colour
- Missing argument to `CATCH_CHECK_THROWS`
- Don't encode extended ASCII in XML
- use std::shuffle on more compilers (fixes deprecation warning/error)
- Use `__COUNTER__` more consistently (where available)

### Other:
- Tweaks and changes to scripts - particularly for Approval test - to make them more portable
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/5131324/assets,https://api.github.com/repos/philsquared/Catch/releases/5131324,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.6.0,https://github.com/philsquared/Catch/releases/tag/v1.6.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.6.0,v1.6.0,False,False
3093335,2016-04-25T18:08:08Z,2016-04-25T18:10:16Z,,"Now uses Clara 0.0.2.3 - which has a new parser and now supports forward slash introduced short opts on Windows.
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/3093335/assets,https://api.github.com/repos/philsquared/Catch/releases/3093335,master,https://api.github.com/repos/philsquared/Catch/tarball/V1.5.0,https://github.com/philsquared/Catch/releases/tag/V1.5.0,https://api.github.com/repos/philsquared/Catch/zipball/V1.5.0,V1.5.0,False,False
3093295,2016-03-15T07:25:17Z,2016-04-25T18:03:39Z,,"Unique names are generated using **COUNTER**, where possible, to make them unique even across translation units.
The --use-colour command line argument has been added to given finer control over how colour is used
- various other bug fixes and documentation corrections.
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/3093295/assets,https://api.github.com/repos/philsquared/Catch/releases/3093295,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.4.0,https://github.com/philsquared/Catch/releases/tag/v1.4.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.4.0,v1.4.0,False,False
2292728,2015-12-09T18:12:41Z,2015-12-15T18:36:32Z,,"Release notes:

Can manually register test functions (as discussed in #421).

Exception translators considered even for types deriving from std::exception (#498)

Added &&, || and ! operator overloads for matchers

Not matcher #482

New section tracker (mostly for internal reasons - but also fixes #519)

Fix infinite loop/ uncaught_exception issue #495, #271 (and possibly #352)

Added Listeners (programatically provided extra reporters) #475

Set group name to -n parameter (or exe name) - as discussed in #469

long long support #97

_THROWS_WITH macros - with matchers #394

Reseeds rng before each test case and provides access to seed through Catch::rngSeed() function #453
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/2292728/assets,https://api.github.com/repos/philsquared/Catch/releases/2292728,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.3.0,https://github.com/philsquared/Catch/releases/tag/v1.3.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.3.0,v1.3.0,False,False
1479745,2015-06-29T17:07:48Z,2015-06-30T17:44:32Z,"First tagged, semantically versioned, release","Going forward releases should follow the GitHub approach. Release commits will be tagged and the versioning is now following proper Semantic Versioning.
I'll try and write release notes too.
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/1479745/assets,https://api.github.com/repos/philsquared/Catch/releases/1479745,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.2.0,https://github.com/philsquared/Catch/releases/tag/v1.2.0,https://api.github.com/repos/philsquared/Catch/zipball/v1.2.0,v1.2.0,False,False
1479695,2015-06-30T17:26:21Z,2015-06-30T17:33:17Z,v1.2.1,"This patch release includes a (potential) fix for use of incomplete type (TrackedSection) #450 and an extension of the compiler feature toggles to allow suppression with _NO_ forms.
",https://api.github.com/users/philsquared,92878,philsquared,https://api.github.com/repos/philsquared/Catch/releases/1479695/assets,https://api.github.com/repos/philsquared/Catch/releases/1479695,master,https://api.github.com/repos/philsquared/Catch/tarball/v1.2.1,https://github.com/philsquared/Catch/releases/tag/v1.2.1,https://api.github.com/repos/philsquared/Catch/zipball/v1.2.1,v1.2.1,False,False
