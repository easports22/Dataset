id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
6466690,2017-05-22T19:06:38Z,2017-05-22T20:15:42Z,Manta,"This release backports bugfixes and improvements from master to libsass 3.4.

Release was tested with valgrind against all spec-tests to be free of (known) leaks.

### Features

- Implement trailing commas in parameters and arguments (@xzyfer, #2288)
- Implement unary slash expressions (@mgreter, #2349 and #2384)

### Fixes

- Fix Attribute Selector equal compare operator (@mgreter, #2350)
- Fix segfault for varargs with non-string keys (@mgreter, #2352)
- Fix Element Selector compare operators (@mgreter, #2347)
- Fix compiler issue with spec regression on NetBSD 6.1 (@mgreter, #2357)
- Fix some segfaults caused by the parser being too forgiving (@xzyfer, #2367)
- Fix segfault with invalid map keys (@xzyfer, #2368)
- Fix null pointer dereference in css_error (@xzyfer, #2370)
- Fix bug when parsing selector schemas (@xzyfer, #2371)
- Fix null pointer dereference in parse_selector_schema (@xzyfer, #2372)
- Fix segfault when extending pseudo selectors failed (@mgreter, #2366)
- Fix parser for urls looking like ruleset selectors (@mgreter, #2376)
- Error for trailing rulesets comma (@mgreter, #2365)
- Improve selector and binominal look ahead (@mgreter, #2346)
- Improve hex escape handling in interpolation (@mgreter, #2320)
- Fix wrong parsing of calc functions as number units (@mgreter, #2382)
- Skip comment evaluation for compressed output (@mgreter, #2359)
- Improve parent selector handling in selector schema (@mgreter, #2358)
- Improve parameter vararg and keyword handling (@mgreter, #2394)
- Hotfix to avoid invalid nested :not selectors (@mgreter, #2399)
- Fix a few minor memory leaks (@mgreter, #2400)
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/6466690/assets,https://api.github.com/repos/sass/libsass/releases/6466690,3.4-stable,https://api.github.com/repos/sass/libsass/tarball/3.4.5,https://github.com/sass/libsass/releases/tag/3.4.5,https://api.github.com/repos/sass/libsass/zipball/3.4.5,3.4.5,False,False
5921539,2017-03-05T04:57:36Z,2017-03-30T11:48:21Z,Zoom,"This release back ports bug fixes and improves from the master to 3.4.x.

### Features

- Update Visual Studio build facade (@am11, #2288)
- Update read me (@mgreter, #2310)
- Performance improvements for `@extend` (@mgreter, #2314)
- Performance improvements (@mgreter, #2339)

### Fixes

- Disable FMA3 when compiling with Visual Studio 2013 (@am11, sass/node-sass#1854)
- Fix for loop variable to be referenced (@mgreter, #2330)
- Fix number compare issues when used as map keys with old gcc (@mgreter, #2331)
- Fix results of map-get not being evaluated (@mgreter, #2309)
- Fix null pointer access (@mgreter, sass/node-sass#1880)
- Fix null pointer access (@mgreter, #2321)
- Fix bug with media queries and `@extend` (@mgreter, #2341)

### Misc

- Cleanup initial shared ptr interface (@mgreter, #2299)
- Refactor selector list and schema handling (@mgreter, #2300)
- Cleanup context usage and extend code (#2313)
- Cleanup misc (#2316, @nschonni)
- Cleanup issues detected by clangs static analyser (#2336, @xzyfer)
- Remove Textual intermediate AST node (@mgreter, #2338)
- Add libsass-python to README (@asottile, #2340)

",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5921539/assets,https://api.github.com/repos/sass/libsass/releases/5921539,3.4-stable,https://api.github.com/repos/sass/libsass/tarball/3.4.4,https://github.com/sass/libsass/releases/tag/3.4.4,https://api.github.com/repos/sass/libsass/zipball/3.4.4,3.4.4,False,False
5508079,2017-02-18T06:37:30Z,2017-02-20T09:52:14Z,DeVille,"This release is focused largely on clean up work before 3.5.0 goes stable. See #2313 #2316 #2336

## Features
- Update Visual Studio build facade (@am11, #2288)
- Update read me (@mgreter, #2310)
- Performance improvement with `@extends` (@mgreter, #2314)

## Fixes
- Disable FMA3 when compiling with Visual Studio 2013 (@am11, sass/node-sass#1854)
- Fix for loop variable to be referenced (@mgreter, #2330)
- Fix number compare issues when used as map keys with old gcc (@mgreter, #2331)
- Fix results of `map-get` not being evaluated (@mgreter, #2309)
- Fix null pointer access (@mgreter, sass/node-sass#1880)
- Fix null pointer access (@mgreter, #2321)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5508079/assets,https://api.github.com/repos/sass/libsass/releases/5508079,master,https://api.github.com/repos/sass/libsass/tarball/3.5.0.beta.3,https://github.com/sass/libsass/releases/tag/3.5.0.beta.3,https://api.github.com/repos/sass/libsass/zipball/3.5.0.beta.3,3.5.0.beta.3,False,False
5269879,2017-01-21T17:10:47Z,2017-01-26T01:57:45Z,DeVille,"Most of the work in this release was internal housekeeping which should result in a minor performance improvement. 

See #2299 and #2300 for more details.

## Fixes
- Remove `image-url` function signature
- Fix bug with nested `@import` (#2295)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5269879/assets,https://api.github.com/repos/sass/libsass/releases/5269879,master,https://api.github.com/repos/sass/libsass/tarball/3.5.0.beta.2,https://github.com/sass/libsass/releases/tag/3.5.0.beta.2,https://api.github.com/repos/sass/libsass/zipball/3.5.0.beta.2,3.5.0.beta.2,False,True
5139314,2017-01-11T09:13:33Z,2017-01-12T11:10:39Z,DeVille,"After 3 years we completed Sass 3.4 compatibility in December 2016.

A few short weeks later we're excited to announce our first beta release of the upcoming LibSass 3.5.  Our emphasis will be on implementing Sass 3.5 features. You can read more about what's coming in [Sass 3.5 on their blog](http://blog.sass-lang.com/posts/809572-sass-35-release-candidate).

This release is production ready however we cannot guarantee C ABI stability until 3.5.0 stable.

# CSS Grid Layout

Thanks to hard work of @delapuente with support from @xzyfer we now have support for the new [CSS Grid Layout](https://css-tricks.com/snippets/css/complete-guide-grid/) syntax.

> The new [CSS Grid Layout](https://css-tricks.com/snippets/css/complete-guide-grid/) module added a new type of syntax: identifiers surrounded by square brackets. We're always striving to be totally compatible with CSS, which meant we needed to support these brackets as well. Here's what they look like in CSS:
> 
> ``` css
> .container {
>  grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
>  grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];
> }
> ```
> 
> The solution was clear: Sass already has a list data type, so we'd just allow lists to have square brackets. So `[first]` is just a list containing the unquoted string `first`. Like all Sass lists, bracketed lists can either be space-separated or comma-separated: `[foo bar baz]` and `[foo, bar, baz]` are both lists containing three elements.
> 
> We've also added function support for bracketed lists. The`is-bracketed($list)` function returns whether a list is bracketed or not, and `join()` has a new `$bracketed` parameter that allows the caller to choose whether or not the resulting list will have brackets (by default, the result is bracketed if the first list is).

# C ABI break

This release marks the first breaking change to the C ABI and a resulting ABI bump to 1:0:0. The `sass_make_list` function signature was update to support bracket lists.

``` diff
-union Sass_Value* sass_make_list (size_t len, enum Sass_Separator sep);
+union Sass_Value* sass_make_list (size_t len, enum Sass_Separator sep, bool is_bracketed);
```

The resulting `Sass_List` struct also got a `bool is_bracketed` property.

# Invert

The `invert()` function got support for the new `$weight` parameter thanks to @mgreter (#2273).

> This is a percentage between 0% and 100% that indicates how inverted the resulting color should be. It defaults to 100%.

# Add Sass call stack to the C API

It's now possible to query the the current mixin and function call stack from the C API. Now implementors can expose much more detailed information about the current execution environment. It's super cool, and we're excited to see what people do with it. Thanks @mgreter (#2251) 

Check out the [API docs](https://github.com/sass/libsass/blob/master/docs/api-doc.md) for more information.

## Features
- Add weight parameter to `invert()` function (@mgreter @xzyfer, #2273)
- Bump the `LIBSASS_LANGUAGE_VERSION` to 3.5 (@nschonni, #2274)
- Expose `is_bracketed` attribute to the C API (@xzyfer, #2282)
- Update list equality checks to consider brackets (@xzyfer, #2281)
- Update the C API documentation (@mgreter @xzyfer)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5139314/assets,https://api.github.com/repos/sass/libsass/releases/5139314,master,https://api.github.com/repos/sass/libsass/tarball/3.5.0.beta.1,https://github.com/sass/libsass/releases/tag/3.5.0.beta.1,https://api.github.com/repos/sass/libsass/zipball/3.5.0.beta.1,3.5.0.beta.1,False,True
5095178,2017-01-07T10:34:01Z,2017-01-07T14:01:02Z,The Bluesmobile,"### Fixes
- Fix segfault when comparing pseudo selectors (@xzyfer, #2289)
- Fix thread-safety for mixin recursions check (@mgreter, #2286)
- Fix false parser errors (@xzyfer, #2095)
- Fix bad source mappings for interpolated selectors (@mgreter, #2224)
- Fix not erring when encountering bad interpolations (@mgreter, #2081)
- Fix some error messages to match Ruby Sass (@mgreter, #2267)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5095178/assets,https://api.github.com/repos/sass/libsass/releases/5095178,3.4,https://api.github.com/repos/sass/libsass/tarball/3.4.3,https://github.com/sass/libsass/releases/tag/3.4.3,https://api.github.com/repos/sass/libsass/zipball/3.4.3,3.4.3,False,False
5023023,2016-12-28T04:18:43Z,2016-12-28T06:02:29Z,Automobile,"## Better memory management

After a massive effort by @mgreter our memory management has been completely overhauled (#2222). Expect to see significantly less memory usage from now!

### Features
- Sass 3.4.23: Support url() with quotes in unknown directives (@mgreter, #2243)

### Fixes
- Test bootstrap ignoring `SASS_SPEC_PATH` and `SASS_SASSC_PATH` environment variables (@xzyfer, #2265)
- Incorrect equality of interpolated values (@mgreter, #2261)
- Incorrect error when `@content` is inside `@at-root` (@mgreter, #2260)
- C-API `copy_options` function losing some options (@mgreter, #2257)
- Segfault with `call`ing calc (@mgreter, @xzyfer)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/5023023/assets,https://api.github.com/repos/sass/libsass/releases/5023023,master,https://api.github.com/repos/sass/libsass/tarball/3.4.2,https://github.com/sass/libsass/releases/tag/3.4.2,https://api.github.com/repos/sass/libsass/zipball/3.4.2,3.4.2,False,False
4955872,2016-12-19T11:16:02Z,2016-12-19T11:30:18Z,Ecto-1,"### Fixes
- Incorrect `@extend` with interpolated selectors in `@at-root` (@mgreter, #2246)
- Incorrect `dp` unit conversions (@nex3, sass/sass#2143)
- Incorrect `str-slice` behaviour with `$end-at` is negative (@xzyfer, #2240 sass/sass#2211)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/4955872/assets,https://api.github.com/repos/sass/libsass/releases/4955872,3.4,https://api.github.com/repos/sass/libsass/tarball/3.4.1,https://github.com/sass/libsass/releases/tag/3.4.1,https://api.github.com/repos/sass/libsass/zipball/3.4.1,3.4.1,False,False
4883199,2016-12-07T00:08:23Z,2016-12-10T00:31:09Z,KITT,"LibSass started almost 4 years ago with the singular goal to be a drop in
replacment for Ruby Sass. Since then @hcatlin, @akhleung, @mgreter, and @xzyfer
have been chasing the lofty goal of Sass 3.4. compatibility. 

This release marks the completion of that major milestone, and we couldn't be 
more excited to release LibSass 3.4 today! :tada:

## Sass 3.4

Over the last couple years we've worked very closely with the Ruby Sass team to
reach Sass 3.4 compatibility. 

It's become clear that need to draw a line in sand with exactly how exactly
we can match Sass 3.4, especially in the face of changes in Sass 3.5.

With this release the LibSass team is marking the completion of active
development on Sass 3.4 compatibility. From today we'll focus our efforts on
Sass 3.5 compatibility, first prioritising CSS compatibility features like 
support for CSS custom property and CSS grids.  

## Improves to @at-root

`@at-root` has mostly worked since it's introduction to LibSass but there have
always been issue when it was combined with conditions (like `@if`) or mixins.
These issues were due to a fundamental difference in the LibSass implementation.
The difference has been addressed, so `@at-root` is now fully supported. 

You can read more about the specifics of this issue in #2089
- Implement the Trace AST node (@xzyfer, #1585)
- Remove the selector stack from the CSSize visitor (@xzyfer, #2091)
- Workaround parent selector issues with at-root (@xzyfer, #2006 #2198)

## Delayed Values

Knowing when to evaluate a string, function, do concatenation, or perform math
is a complicated problem with many edge cases. @mgreter has continued his work
on improving the accuracy of these decisions.
- Significant improvements to delayed values (@mgreter, #2042, #2034 #2057)
- `/` interpreted as division instead of separator (@mgreter, #2149)
- Mishandling quotes (@mgreter, #2153 #2156)

## Continued improvements to @extend

`@extend` is hard. With every release we get better at it and this release is no
exception. 
- Extending inner of :not can lead to invalid css (@mgreter, #2054)
- Segfault with `@extend` (@mgreter, #2051)
- Extending a placeholder from a media query outputs nothing (@mgreter, #2150)
- Don't drop pseudo elements in wrapped selectors (@xzyfer, #2200)

## Memory improvments

@mgreter has done some great work on improving our memory usage when dealing 
with large maps, and lists. He's not done yet, keep your eyes peeled for further
improvments in upcomming releases. 
- Improve memory footprint when evaluating in loops (@mgreter, #2171)

## Support list functions on maps

Implementing Sass maps was my first major contribution to LibSass. A couple
year later I can finally all the job complete with support for maps in list
functions.
- Support list functions on maps (@xzyfer, #1930)

## Sourcemaps

@mgreter and @nschonni have made some significant improvements to our 
sourcemaps. You can read more about the specifics in the bug links below.
- Bugfixes for source maps (@mgreter, #2216)
  - Fixes parent selector mappings
  - Fixes media block/query mappings
  - Fixes range over binary expressions
  - Don't include semicolon for statics
  - Fixes variable assignment mappings
- Make paths in source comments relative to CWD (@mgreter, #2219)
- Implement source_map_file_urls option (@mgreter, #2220)
- Re-order the sourcemap writing to match spec (@nschonni, #2193)

### Features
- Improve debugger coverage (@xzyfer, #2093)
- Add Sass lang version to `3.4` (@am11, #2077)
- Automake compile on msys2 and mingw64 (@mgreter, #2063)
- Improve `Sass_Value` documentation (@mgreter, #2045)
- Add initial CONTRIBUTING.md and ISSUE_TEMPLATE.md (@mgreter, #2044)
- Update sass2scss to latest version (@mgreter, #2177 #1990 #1781)
- Implement the check nesting visitor (@xzyfer, #2062)

### Fixes
- `color-change()` with `$hue` (@mgreter, #2113)
- `@import` causing process to hang (@mgreter, #2106)
- Broken link (@MoritzKn, #2105)
- Specificity for `Simple_Selectors` nodes (@xzyfer, #2099)
- `@at-root` without arguments (@xzyfer, #2092)
- Segfault with calc prefix and underscore vs hyphen (@mgreter, #2074)
- Error message for missing arguments (@mgreter, #2067)
- Warning under MSVC x86_64 (@asottile, #2047)
- MSVC x86_64 buffer overrun in error reporting (@mgreter, #2046)
- Handling ""\a"" in interpolations (@mgreter, #1786)
- Including a `@mixin` when outside of selector still outputs properties (@xzyfer, #1732)
- Add error when comma lists are used as map keys (@mgreter, #1537)
- Evaluation of `&` in sass script (@mgreter, #2124 #2116)
- Handle unicode chars in unquoted urls (@mgreter, #2120 @xzyfer, #2125)
- `hue()` for rgb colors when `$saturation: 0` (@mgreter, #2135)
- Invalid duplicate keys in maps (@mgreter, #2118)
- `str-slice()` with negative length (@mgreter, #2132)
- Segfault parsing multiple operations in calc (@mgreter, #2151)
- Stackoverflow and segmentation failure on recrusive dependence mixins (@mgreter, #2144)
- Don't allow math on maps (@mgreter, #2147)
- Don't allow math on colors (@xzyfer, #2140)
- CSS comment inside of @supports incorrect CSS output (@mgreter, #2158)
- Check and error on empty variable assignments (@mgreter, #2143 #2146)
- Incorrect output when concatenating an empty string (@mgreter, #2169)
- Brew 1.0.0 release causing OSX CI failures (@xzyfer, #2183)
- Handling empty nested media queries (@xzyfer, #2154)
- `@at-root` for loop and logic statements (@mgreter, #2187)
- Typo in docs (@asottile, @2201)
- Memory leak (@mgreter, #2211 #2213)
- Using `...` in an overloaded function causes fatal error (@mgreter, #2205)
- Should error when attempting to output an empty list or map (@mgreter, #1452)
- Don't error when an @import is terminated by the end of the block (@xzyfer, #2233)
- Fix modulo operation (@mgreter, #2236)

### Misc
- Rename some selector AST nodes to better match the reference (@xzyfer, #2101)
- Add php wrapper project link (@lesstif, #2121)
- Add Elixir wrapper project link (@scottdavis, #2141)
- Updated README (@am11, #2172)
- Enabling debug builds by setting env var DEBUG=1 (@delapuente, #2176)
- Remove `-ldl` flag from OpenBSD too (@parhs, #2210)
- Remove superfluous dev error message (@mgreter, #2217)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/4883199/assets,https://api.github.com/repos/sass/libsass/releases/4883199,master,https://api.github.com/repos/sass/libsass/tarball/3.4.0,https://github.com/sass/libsass/releases/tag/3.4.0,https://api.github.com/repos/sass/libsass/zipball/3.4.0,3.4.0,False,False
4460115,2016-10-22T10:44:33Z,2016-10-23T12:51:35Z,KITT,"See [the 3.4.0 release notes](https://github.com/sass/libsass/releases/tag/3.4.0) for a full recap.

### Features
- Improve debugger coverage (@xzyfer, #2093)
- Add Sass lang version to `3.4` (@am11, #2077)
- Automake compile on msys2 and mingw64 (@mgreter, #2063)
- Improve `Sass_Value` documentation (@mgreter, #2045)
- Add initial CONTRIBUTING.md and ISSUE_TEMPLATE.md (@mgreter, #2044)
- Update sass2scss to latest version (@mgreter, #2177 #1990 #1781)
- Implement the check nesting visitor (@xzyfer, #2062)
- Implement source_map_file_urls option (@mgreter, #2220)
- Re-order the sourcemap writing to match spec (@nschonni, #2193)
- Implement the Trace AST node (@xzyfer, #1585)
- Significant improvements to delayed values (@mgreter, #2042, #2034 #2057)
- Improve memory footprint when evaluating in loops (@mgreter, #2171)
- Support list functions on maps (@xzyfer, #1930)

### Fixes
- Extending inner of :not can lead to invalid css (@mgreter, #2054)
- Segfault with `@extend` (@mgreter, #2051)
- Extending a placeholder from a media query outputs nothing (@mgreter, #2150)
- Don't drop pseudo elements in wrapped selectors (@xzyfer, #2200)
- `/` interpreted as division instead of separator (@mgreter, #2149)
- Mishandling quotes (@mgreter, #2153 #2156)
- Remove the selector stack from the CSSize visitor (@xzyfer, #2091)
- Workaround parent selector issues with at-root (@xzyfer, #2006 #2198)
- Bugfixes for source maps (@mgreter, #2216)
- Make paths in source comments relative to CWD (@mgreter, #2219)
- `color-change()` with `$hue` (@mgreter, #2113)
- `@import` causing process to hang (@mgreter, #2106)
- Broken link (@MoritzKn, #2105)
- Specificity for `Simple_Selectors` nodes (@xzyfer, #2099)
- `@at-root` without arguments (@xzyfer, #2092)
- Segfault with calc prefix and underscore vs hyphen (@mgreter, #2074)
- Error message for missing arguments (@mgreter, #2067)
- Warning under MSVC x86_64 (@asottile, #2047)
- MSVC x86_64 buffer overrun in error reporting (@mgreter, #2046)
- Handling ""\a"" in interpolations (@mgreter, #1786)
- Including a `@mixin` when outside of selector still outputs properties (@xzyfer, #1732)
- Add error when comma lists are used as map keys (@mgreter, #1537)
- Evaluation of `&` in sass script (@mgreter, #2124 #2116)
- Handle unicode chars in unquoted urls (@mgreter, #2120 @xzyfer, #2125)
- `hue()` for rgb colors when `$saturation: 0` (@mgreter, #2135)
- Invalid duplicate keys in maps (@mgreter, #2118)
- `str-slice()` with negative length (@mgreter, #2132)
- Segfault parsing multiple operations in calc (@mgreter, #2151)
- Stackoverflow and segmentation failure on recrusive dependence mixins (@mgreter, #2144)
- Don't allow math on maps (@mgreter, #2147)
- Don't allow math on colors (@xzyfer, #2140)
- CSS comment inside of @supports incorrect CSS output (@mgreter, #2158)
- Check and error on empty variable assignments (@mgreter, #2143 #2146)
- Incorrect output when concatenating an empty string (@mgreter, #2169)
- Brew 1.0.0 release causing OSX CI failures (@xzyfer, #2183)
- Handling empty nested media queries (@xzyfer, #2154)
- `@at-root` for loop and logic statements (@mgreter, #2187)
- Typo in docs (@asottile, @2201)
- Memory leak (@mgreter, #2211 #2213)
- Using `...` in an overloaded function causes fatal error (@mgreter, #2205)
- Should error when attempting to output an empty list or map (@mgreter, #1452)

### Misc
- Rename some selector AST nodes to better match the reference (@xzyfer, #2101)
- Add php wrapper project link (@lesstif, #2121)
- Add Elixir wrapper project link (@scottdavis, #2141)
- Updated README (@am11, #2172)
- Enabling debug builds by setting env var DEBUG=1 (@delapuente, #2176)
- Remove `-ldl` flag from OpenBSD too (@parhs, #2210)
- Remove superfluous dev error message (@mgreter, #2217)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/4460115/assets,https://api.github.com/repos/sass/libsass/releases/4460115,master,https://api.github.com/repos/sass/libsass/tarball/3.4.0-RC1,https://github.com/sass/libsass/releases/tag/3.4.0-RC1,https://api.github.com/repos/sass/libsass/zipball/3.4.0-RC1,3.4.0-RC1,False,True
3083018,2016-04-23T06:43:23Z,2016-04-23T09:07:26Z,Herbie,"I woke up this morning to an inbox full of gifts from @mgreter 🎁 🙌 

### Feature
- Expose the Sass language version via the C API (@chriseppstein, #2021)

### Fixes
- Incorrectly erring on comments in at-rules (@mgreter, #1233)
- Incorrectly dropping internal state of AST nodes (@mgreter, #1661)
- Incorrectly parsing the `calc` function (@mgreter, #1706)
- Segfault during error handling (@mgreter, #2016)
- Incorrectly identifying the selectors with `type-of` (@mgreter, #2020)
- Incorrectly erring on ID selectors starting with a number (@mgreter, @2023)
- Producing incorrect output when compile with MSVC (@mgreter, #2039)
- Various segfaults and incorrect output from `@extend` (@mgreter, #2017 #2031)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/3083018/assets,https://api.github.com/repos/sass/libsass/releases/3083018,master,https://api.github.com/repos/sass/libsass/tarball/3.3.6,https://github.com/sass/libsass/releases/tag/3.3.6,https://api.github.com/repos/sass/libsass/zipball/3.3.6,3.3.6,False,False
3042966,2016-04-18T02:34:23Z,2016-04-18T15:15:44Z,General Lee,"This is a modest release focused continues to address some regressions as well general improvements to `@extend` :ambulance: with sprinkling of improvements to the C API 🎉 

### Expose our memory allocator

This feature has taken many proposed forms over the last 4 months. After much [patent](https://github.com/sass/libsass/pull/1821) and [considered](https://github.com/sass/libsass/pull/1973) discussion by @am11 @mgreter @saper and @xoofx you can now [access our memory allocator on the C-API](https://github.com/sass/libsass/pull/1983).

```
void* sass_alloc_memory(size_t size)
char* sass_copy_c_string(const char* str)
void sass_free_memory(void* ptr)
```

#### Features
- Re-add `sass_option_push_include_path` and `sass_option_push_plugin_path` (@xoofx, #1974)

#### Build
- Enable address sanitizer for clang (@mgreter, #2003)
- MSVC assert too strict (@mgreter, #1985)
- Update Sass spec (@xzyfer, 1967)

#### Fixes
- Incorrectly erring on `@extend` and `@media` (@mgreter, #2009 #2007, #1927, #1923)
- Incorrectly erring on `@extend` and interpolated selectors (@mgreter, #2000)
- Builds not failing when Sass spec fails to load (@saper, #1997)
- Incorrectly erring on Sass comments in selectors (@mgreter, #1996)
- Incorrectly erring on `@extend` and interpolated selectors with the `!optional` flag (@mgreter, #1993)
- Incorrectly treating `0` and `false` as the same value when used as map keys (@mgreter, #1991)
- Incorrectly erring on escaped and unicode selectors (@mgreter, #1977)
- Incorrectly rendering `@extend` and `@supports` (@mgreter, #1971) 
- Incorrectly erring on functions beginning with `calc` (@mgreter, #1969)
- Incorrectly quoting interpolated strings in selectors (@mgreter, #1947)
- Incorrectly escaped escaped strings in selectors (@mgreter, #1945)
- Incorrectly duplicating executing of function in interpolated string (@mgreter, #1944)
- Prevent parsing `url()` resulting in an endless loop (@mgreter, #1931)
- Compilation error with using `-DDEBUG` flag (@tony, #1917)
- Incorrectly removing `@media` blocks that contain only CSS comments (@mgreter, #1889)
- Better handling of `/` in function arguments (@mgreter, #1417)

Special thanks to @am11, @tony, @xoofx for their contributions to this release! :clap: 
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/3042966/assets,https://api.github.com/repos/sass/libsass/releases/3042966,master,https://api.github.com/repos/sass/libsass/tarball/3.3.5,https://github.com/sass/libsass/releases/tag/3.3.5,https://api.github.com/repos/sass/libsass/zipball/3.3.5,3.3.5,False,False
2845689,2016-03-17T14:51:35Z,2016-03-19T04:42:39Z,Christine,"This is a modest release focused on addressing some regressions that popped up in the previous 3.3.3 release. :ambulance: 

#### Fixes
- Inconsistent error message produced when nesting functions and mixins (@xzyfer, #1941)
- Ensure custom importers are executed for all `@imports` (@xzyfer, #1935)
- Ensure custom importers are executed in the correct order (@xzyfer, #1921)
- Possible segfault when generating sourcemaps (@usta, #1920)
- Memory leak (@usta, #1919)
- Unused variable warning (@xzyfer, #1918)
- Segfaulting when `@extend`ing an undefined selector (@mgreter, #1916)
- Incorrectly erring when `@extend`ing inside a mixin (@xzyfer, #1915)
- Handle signed char when considering `@charset` (@asottile, #1914)
- New link to `sassc-ruby` in documentation (@itkrt2y, #1910)
- Incorrectly quoting interpolated strings join with `+` (@mgreter, #1907)
- Incorrectly erring when using `&` and interpolation together (@xzyfer, #1904)
- Incorrectly duplicating nested pseudo selectors (@mgreter, #1901)
- Unused function breaking breaking unity builds (@drewwells, #1896)
- Segfaulting when `url()` is empty (@xzyfer, #1886)
- Should error when `&` is used without a parent selector (@xzyfer, #1644)

Special thanks to @asottile, @drewwells, @itkrt2y, @usta for their contributions to this release! :clap: 

### Upcoming version 3.3.5

We weren't able to get around the planned breaking changes to the C-API. This work will continue in 3.3.5.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/2845689/assets,https://api.github.com/repos/sass/libsass/releases/2845689,master,https://api.github.com/repos/sass/libsass/tarball/3.3.4,https://github.com/sass/libsass/releases/tag/3.3.4,https://api.github.com/repos/sass/libsass/zipball/3.3.4,3.3.4,False,False
2457159,2016-01-20T01:16:06Z,2016-01-20T03:38:38Z,Delorean,"Here we go with the latest and most awesome LibSass release ever (so far). First release in 2016 and version 3.3.3 brings us even closer to ruby sass, which is currently at [version 3.4.21](https://github.com/sass/sass/releases/tag/3.4.21), and we should be on par as far as our [spec tests](https://github.com/sass/sass-spec) go. Lots of improvements were done under the hood and will only be visible on the surface with certain edges cases, while a few others will have a more profound impact. If you find differences or other problems, please always check our [open issues](https://github.com/sass/libsass/issues) on github first before opening a new ticket :mag: :book:  :bug: :ambulance: 

## Parser and rendering refactorings

LibSass is now able to use stringification functions for its internal AST objects whenever its needed. Previously this was only possible when we had access to a context instance, which sometimes made it impossible to invoke the right code path. This tight coupling has been factored out and we can now use these more freely to get our output even closer to ruby sass. Parser now supports [multiple operations without parentheses](https://github.com/sass/libsass/issues/1727) (`a > b == c`) correctly and an extensive [generated test suite](https://github.com/sass/sass-spec/pull/671) for this feature was added to [sass-spec](https://github.com/sass/sass-spec). :athletic_shoe: :smile:

## Full support for variable arguments

Since the introduction variable arguments in Sass 3.3 LibSass has been playing whack-a-mole with bug fixes. As of this release we should have argument handling compatible with the latest stable Ruby Sass. Thanks to @davidkpiano for his many detailed bug reports and his fantastic [sassdash](https://davidkpiano.github.io/sassdash/) library whose extensive test suite helped make this possible.

## Lots of bug-fixes

There were two weeks of ongoing bug slaughtering by @mgreter after new-years eve, which resulted in over 80 closed issues (there are 117 closed github issues in total for this release). @xzyfer also had a good streak with 14 closed issues. Special thanks to @ksmadsen for his c++11 `random_device` fix. Also a big thanks for our continuing contributors @am11 and @saper for their inputs, feedback and pull requests :wave: :bow: 
- Ensure we keep around memory for parser source (@mgreter, #1884)
- Avoid wrong error due to misused map object in At_Rule (@mgreter, #1881)
- Implement css linefeed `\a` handling better (@mgreter, #1880)
- Improve parsing for complex number units (@mgreter, #1879)
- Fix potential issue with wrong std container usage (@mgreter, #1878)
- Improve parsing for complex number units (@mgreter, #1877)
- Improve operating on numbers with complex units (@mgreter, #1876)
- Make generating source excerpt on error unicode aware (@mgreter, #1875)
- Improve error handling API (always return formatted json) (@mgreter, #1874)
- Improve identifier schema to include variables (@mgreter, #1872)
- Disable error check for extend placement check (@mgreter, #1870)
- Improve pseudo selector parsing (@mgreter, #1864)
- Fix `each` iteration over selector lists (@mgreter, #1863)
- Use `to_sass` for `@debug`, `@warn` and `@error` message (@mgreter, #1862)
- Improve lower/upper boundary check error in `for` loop (@mgreter, #1861)
- Implement incompatible unit test for interpolation in eval (@mgreter, #1860)
- Implement correct empty list `to_sass` output (@mgreter, #1859)
- Remove `To_String` by using `AST->to_string` and `inspect` (@mgreter, #1858)
- Update license year range to 2016 (@pra85, #1857)
- Incorrect 'Invalid UTF-8' error with a specific input length (@mgreter, #1856)
- Adds include headers to VS meta files on windows (@am11, #1850)
- Implement missing error checks (@mgreter, #1848)
- Fix SmartOS compilation once and for all (@mgreter, #1847)
- Relative imports fail when outside working directory (@mgreter, #1846)
- Disable error for empty source string on context (@mgreter, #1845)
- Fix expression parsing with comment between factors (@mgreter, #1844)
- Refactor/milestone 3.4 (@mgreter, #1841)
- `@custom-media` throws error (@mgreter, #1839)
- Fix iterating over parent selector list with `@each` (@mgreter, #1837)
- Include <cstdint> unconditionally (@saper, #1835)
- No file information for empty source string (@mgreter, #1834)
- Improve parsing of media queries with comments (@mgreter, #1833)
- Prevent segfault with nested properties edge case (@mgreter, #1832)
- Implement `extend` for wrapped selectors (@mgreter, #1831)
- Only parse interpolations in kept block comments (@mgreter, #1830)
- Implement import recursion check (@mgreter, #1829)
- Error on invalid parent selector placements (@mgreter, #1828)
- Fix look-ahead of parent selector with trailing BEM separator (@mgreter, #1827)
- Fix `join_paths` when left path is not canonical (@mgreter, #1826)
- Error incorrectly thrown for `&__` selector (@mgreter, #1825)
- Update .editorconfig (@numeraltwo, #1824)
- Ampersand glued to the selector should be rejected (@mgreter, #1822)
- Selector-unify should return null instead of an empty list (@xzyfer, #1819, #1820)
- Fix interpolations returning quoted string in selectors (@xzyfer, #1818)
- Adds CRLF awareness to Util::quote() (@am11, #1817)
- Fix multiple issues with function parameter binding (@xzyfer, #1815)
- While loops should release their local env when exiting early (@xzyfer, #1814)
- Regression in variable scoping causing segfault (@xzyfer, #1813)
- Incorrect output for unknown at-rules (@mgreter, #1812)
- Emit DLL which exports symbols on windows VS (@am11, #1811)
- Add exit code for explicit test (@am11, #1810)
- Support multiline url declarations (@xzyfer, #1809)
- Incompatible units error in interpolations (@mgreter, #1804)
- Segfault on missing semicolon (@mgreter, #1803)
- Infinite import loop results in a stack overflow (@mgreter, #1801)
- Segmentation fault for interpolations in certain comments (@mgreter, #1798)
- Placeholder selector inside :not() (@mgreter, #1797)
- Append function doesn't appear to append correctly inside loops (@mgreter, #1796)
- Media queries fail to parse when comment is present (@mgreter, #1794)
- Incompatible units error for expressions in media queries (@mgreter, #1793)
- Incorrectly building dynamic library on Windows (@mgreter, #1790)
- Fix libsass build for SmartOS (@mgreter, #1782)
- Fix-up some docs on importers (undefined variables) (@asottile, #1780)
- Using 'calc' shoes an Error: Incompatible units: 'px' and '%' (@mgreter, #1776)
- Converts wchar_t\* to UTF-8 std::string on windows (@am11, #1774)
- String Interpolation incorrectly quotes parent selectors (@xzyfer, #1770)
- `@debug` on an empty list should produce () (@mgreter, #1768)
- Removing duplicated content from c api example (@rodneyrehm, #1767)
- Comments between binary operands prevents evaluation (@mgreter, #1765)
- Add crutch to help browsers interpreting source-maps (@mgreter, #1759)
- bug with & (parent-selector) and `@each` directive in 3.3.2 (@mgreter, #1757)
- Fix possible segfault in `Each` expansion (@mgreter, #1756)
- Remove `sixtuplet` flag on Colors and fix edge case (@mgreter, #1755)
- Refactor to remove `Context` dependency from `To_String` (@mgreter, #1754)
- Segmentation fault `@each` with argslist node-sass 3.4.2 (@mgreter, #1752)
- Wrong line reported in invalid operands for multiplication (@mgreter, #1751)
- Implement variable shadow scoping (@mgreter, #1748)
- Nested styles refer to top-level parent in source-map line number (@mgreter, #1747)
- Variables in control flow should not be accessible in outer scopes (@mgreter, #1746)
- Fix #1742 - same expression on both sides of && (@saper, #1744)
- Don't allocate std::random_device statically (@ksmadsen, #1743)
- Ampersands in :not selector (@mgreter, #1741)
- Improve binary expressions to preserve white-space at operands (@mgreter, #1739)
- Defer creation of hash maps into eval stage (@mgreter, #1736)
- Fix edge-case for extend with `Wrapped_Selector` (@mgreter, #1735)
- Interpolated, double-quoted vars can produce an empty output (@mgreter, #1734)
- Fix error messages for `min` and `max` (@xzyfer, #1731)
- Multiple nth-child selector with @extend compiles wrong (@mgreter, #1729)
- Fix Binary operators adjacent to interpolations (@mgreter, #1728)
- Allow multiple unparenthesized expressions for operators (@mgreter, #1727)
- Error: Import may not be used within controls or mixins. [$100](@mgreter, #1724)
- Different results with `@each` and `@for` loop (@mgreter, #1723)
- Extra white-space after ""#{}"" interpolation (@mgreter, #1722)
- Fixes for Windows version (@Taritsyn, #1721)
- `@each` on nested lists assigns the wrong value. (@mgreter, #1709)
- Avoid some clang compiler warnings (@mgreter, #1707)
- Implement rounding precision (@mgreter, #1704)
- No error for `@extend %an-undefined-placeholder` (@mgreter, #1670)
- Error on `@debug`, `@warn` or `@error` in properties (@mgreter, #1653)
- Improve selector look-ahead for ""negative"" binomials (@mgreter, #1652)
- `@extend` inside `@at-root` doesn't work (@mgreter, #1651)
- Space in argument for `:nth-of-type(2n - 1)` results in error (@mgreter, #1650)
- All interpolation is unquoted (@xzyfer, #1647)
- Arglist as single arg for varargs improperly gets destructed (@xzyfer, #1645)
- Use the correct parsing semantics for @import url() (@xzyfer, #1597)
- Single comma separated must be surrounded by `()` on inspect. (@mgreter, #1583)
- Error message mismatch for empty interpolation as an argument (@mgreter, #1564)
- Error message mismatch for min (@xzyfer, #1559)
- Disallow functions to be defined in control directives or mixins (@mgreter, #1550)
- Minor issue parsing number units after double dash (@mgreter, #1526)
- Fixes some clang warnings (@mgreter, #1523)
- Better support for @-moz-document (@mgreter, #1401)
- Quoted colors in maps produces 'Duplicate key ""transparent"" in map' (@mgreter, #1169)
- Permit multiline in URL (@xzyfer, #1096)
- No error for missing imported base class in `@extend` (@mgreter, #871)

## Improved spec tests

With this release we have a bit more than 275 new spec tests. We started to include error tests too, which was quite difficult at the beginning, since we need to get the output 100% correct to really pass a spec test, although we really only test the first line for error specs so far. None the less, with this release a lot more error messages are matching the ones of ruby sass and we also catch more cases. But we still let a lot more syntax silently pass than ruby sass does.

## Upcoming version 3.3.4

We plan to do at least an additional 3.3.4 release which should include the last missing features for the C-API. Version 3.4.0 is our next window to introduce breaking API changes and I already can say that it will probably only touch the experimental API part. Other than that we are pretty much down to only a handful of open issues and can hopefully close a few of those for the next version, which is currently scheduled for March (without any guarantee of course).
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/2457159/assets,https://api.github.com/repos/sass/libsass/releases/2457159,master,https://api.github.com/repos/sass/libsass/tarball/3.3.3,https://github.com/sass/libsass/releases/tag/3.3.3,https://api.github.com/repos/sass/libsass/zipball/3.3.3,3.3.3,False,False
2090471,2015-11-11T08:08:38Z,2015-11-11T08:41:47Z,Eleanor,"## Changelog

### Features
- Improve rounding (@mgreter, #1688)
- Improve error reporting for duplicate keys in maps (@mgreter, #1561)
- Improve internals of `@import` (@mgreter, #1626)
- Improve Makefile compatibility for cygwin compilation (@mgreter, #1662)
- Improve to how we run tests in CI (@mgreter, #1643 #1686)

### Fixes
- Fix segfault when too many arguments are passed to a functoin/mixin (@xzyfer, #1716)
- Fix incorrectly using relative paths on the C API (@xzyfer, #1713)
- Fix incorrectly parsing numbers with unit (@mgreter, #1705)
- Fix not erring when functions are passed too many arguments (@xzyfer, #1682)
- Fix inconsistencies with deprecation messages (@xzyfer, #1681)
- Fix segfault on binary operations in interpolants (@mgreter, #1669)
- Fix incorrectly outputting `""""` for `@debug(null)` (@xzyfer, #1679)
- Fix incorrectly compressing lists in `@debug` in compressed mode (@xzyfer, #1679)
- Fix to file paths in `@debug` (@xzyfer, #1679)
- Fix documentation links and typos (@penman, #1674)
- Fix incorrectly handling binary operations with interpolants (@xzyfer, #1671)
- Fix map keys striping off units (@mgreter, #1667)
- Fix ambigious usage of `0` for `NULL` (@saper, #1660)
- Fix not erring on `@else` without an `@if` (@xzyfer, 1659)
- Fix handling of nested placeholders for extend  (@mgreter, #1654)
- Fix incorrectly parsing `@if` and `@else` with comments (@mgreter, 1648)
- Fix `@content` inside `@else` not being executed (@mgreter, #1640)
- Fix implementation documentation for header file move (@mgreter, #1639)
- Fix incorrect extension on markdown file (@drewwells, #1628)
- Fix incorrectly parsing of `#{}` as function argument sometimes (@mgreter, #1606)
- Fix incorrectly parsing of `&` sometimes (@mgreter, #1601)
- Fix error sometimes being reported on the wrong line (@mgreter, #1577)
- Fix incorrectly parsing upper case and/or in media queries (@mgreter, #1557)

## Thanks

A big thanks to everyone who took the time report issues.
The LibSass team (@hcatlin, @mgreter, @saper, @xzyfer) couldn't do this without your help.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/2090471/assets,https://api.github.com/repos/sass/libsass/releases/2090471,master,https://api.github.com/repos/sass/libsass/tarball/3.3.2,https://github.com/sass/libsass/releases/tag/3.3.2,https://api.github.com/repos/sass/libsass/zipball/3.3.2,3.3.2,False,False
2022436,2015-10-26T23:22:07Z,2015-10-27T01:51:15Z,Too fast too furious,"This is a follow up patch release for 3.3.1 addressing some regressions that have cropped up.

## Changelog

### Fixes
- Fix regression with `call()` and empty list arguments (@mgreter, #1634)
- Fix regression with static value parsing (@xzyfer, #1632)
- Fix regression with `/` and string values (@xzyfer, #1629)
- Fix regression with using interpolants in selectors (@xzyfer, #1624)
- Fix regression with lists as varargs arguments to `call()` (@xzyfer, #1622)
- Fix declaration properties without spaces in `.sass` not being treated as selectors (@mgreter, #1578)

## Thanks

A big thanks to everyone who took the time report issues.
The LibSass team (@hcatlin, @mgreter, @saper, @xzyfer) couldn't do this without your help.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/2022436/assets,https://api.github.com/repos/sass/libsass/releases/2022436,master,https://api.github.com/repos/sass/libsass/tarball/3.3.1,https://github.com/sass/libsass/releases/tag/3.3.1,https://api.github.com/repos/sass/libsass/zipball/3.3.1,3.3.1,False,False
2012335,2015-10-24T00:47:21Z,2015-10-24T02:40:06Z,Grease lightning,"Today we release the long awaited 3.3 stable, which once again tops our last major releases in terms of commits and fixed bugs. Good news for all implementors is that we only did some minor changes on the C Interface, and all of them only touch the still experimental features like custom importers and headers.

Main new features for this release are a completely refactored parent selector ('&') and we finally have all selector functions implemented. It also contains some big refactorings for the parser and for the evaluation phase. This fixes some major performance problems with tight loops and also adds some decent performance improvements in general (we would love to get some real world numbers from our users).

With this release we're rapidly reaching 100% feature parity yet. There will be a long tail of minor bugs between now and 3.4, but the base work for all main features is done. We now need all of you to help and open issues to find the missing details and to improve our test suite!

## By the numbers!

368 commits
260 files changed
274 closed issues
13 contributors
604 new tests passing
62% less skipped tests

## News

We're also happy to welcome @saper to the LibSass core team!
He's been an incredible asset and we couldn't have come this far so quickly without him.

## Acknowledgements

As always we want to thank our beloved contributors who breathe life into this piece of code. :heart: 
@am11, @djensen47, @drewwells, @ekskimn, @mgonzalez999, @tysongach, @driekus77, @una, @unmole and everyone who opened issues. Without your contributions we wouldn't be where we are today.
We (@mgreter, @xzyfer, @saper, @hcatlin) hope you all will enjoy this release :rocket: 

# Changelog

## Selector functions

We now implement all [3.4 selector functions](http://sass-lang.com/documentation/file.SASS_CHANGELOG.html#selector_functions). This massive effort was initially booted by @ekskimn, @mgonzalez999 and was finished and polished by @mgreter with a major refactoring in how selectors are parsed and evaluated, which was the ground work for the parent selector refactoring.

## Shadow DOM support

We now correctly support `/deep/` reference combinators thanks to @mgreter

## Performance improvements

In order to fix some of the trickier long standing bugs, another major internal refactoring was required. This turned out to be very tricky, as pretty much all layers of LibSass were involved. @mgreter was up for the challenge and consequently closed a swath of outstanding issues. As a bonus the improved parser gave us an impressive speed boost. You should see the biggest gains with tight loops.

> This branch also includes quite a few performance optimisations.
> It brought my sass-spec test suite runtime from 27s down to 7s!

## C-API breaking changes

This release includes the new function `sass_value_op` that implementers can use to access all internal value operations. This enables implementers to have the same operations in their bindings as LibSass . 

There was another minor refactoring for custom importer. We renamed two API functions to be more close to their actual use (@mgreter, #1509):
- `sass_import_get_path` -> `sass_import_get_imp_path`
- `sass_import_get_base` -> `sass_import_get_abs_path` 
- Moved C-API library headers into the `sass` subfolder (@mgreter, #1360)
- Pass `Sass_Compiler*` to custom function signature (@mgreter, #1617)

## Improvements to `url()`

After many bug fixes @xzyfer has started overhauling the `url()` implementation to closer match the Ruby Sass implementation (#675).

## Documentation

Thanks to the hard work of @drewwells and @una the wiki has been converted to markdown and added to the `docs/` folder (#1234). This will help us, and our contributors, keep the docs up to date moving forward!

## Fixes

### Improvements to the parser
- Fix incorrectly parsing declarations without semicolons (@xzyfer, #1610)
- Fix incorrectly parsing named arguments after unnamed arguments (@xzyfer, #1579)
- Fix incorrectly parsing font shorthand values (@xzyfer, #1570)
- Fix incorrectly parsing media queries with comments (@xzyfer, @1567)
- Fix incorrectly parsing comments in declarations (@mgeter, #1568)
- Fix sass2scss sometimes producing incorrect output for `@include` (@xzyfer, #1547)
- Fix incorrectly parsing `-` as a minus operation (@mgreter, #1486)
- Fix incorrectly erring with interpolants in feature queries (@xzyfer, #1425)
- Fix incorrectly erring with comment in declaration value (@xzyfer, #1422)
- Fix incorrectly not ignoring the space following a CSS escape sequence (@mgreter, #1419)
- Fix incorrectly parsing identifiers with units (@mgreter, #1405)
- Fix multiple `-` in indentifiers sometimes being merged (@mgreter, #1404)
- Fix interpolations in propset being ignored (@mgreter, #1393)
- Fix functions calls followed by an interpolant being treated as String(@mgreter, #1333)
- Fix incorrectly erring with `@import` with media queries (@mgreter, #1323)
- Fix incorrectly erring with variables and interpolants in media queries (@mgreter, #1322)
- Fix crashing with some number units (@mgreter, #1307)
- Fix incorrectly erring with classnames with interpolants starting with `-` (@mgreter, #1301)
- Fix incorrectly erring with multiplication with interpolants (@mgreter, #1291)
- Fix incorrectly erring with interpolated values in Lists (@mgreter, #1277)
- Fix incorrectly erring with unknown @at-rules (@mgreter, #1263)
- Fix incorrectly erring with named arguments Varargs (@mgreter, #1259)
- Fix incorrectly evaluating variables in @at-rules (@mgreter, #1253)
- Fix incorrectly erring with parsing some @at-rules (@mgreter, #1214)
- Fix incorrectly erring with division with interpolants (@mgreter, #948)
- Fix incorrectly erring with comments inside selectors (@mgreter, #941)

### Improvements to character escaping
- Fix incorrectly parsing escape sequences (@mgreter, #1492)
- Fix incorrectly escaping apostrophes in Strings with interpolants (@mgreter, #1295)
- Fix incorrectly escaping in Strings with interpolants (@mgreter, #1115, #1231, #1271)

### Improvements to Varargs, Restargs and Arglists
- Fix Varags that are lists sometimes being lost (@xzyfer, #1604)
- Fix incorrect coercion of rest arguments (@xzyfer, 1566)
- Fix difference when using Varargs with `@each` (@mgreter, #1440)
- Fix incorrectly erring with empty Arglists as a required parameter (@mgreter, #1305)
- Fix crash when using an Arglist as a List (@mgreter, #1269)
- Fix crash when using an Arglist as the only argument (@mgreter, #1257)
- Fix crash when using `set-nth` with Arglists (@mgreter, #1255)
- Fix Varags that are lists sometimes being flattened (@mgreter, #1171)

### Improvements to `&`
- Fix `&` not always being a list (@mgreter, #1590)
- Fix `&` outputting incorrect selectors when used in a mixin (@mgreter, #1584)
- Fix crashing with `&` without a parent (@mgreter, #1569)
- Fix crashing with `& {}` (@mgreter, #1524)
- Fix crashing when using `&` with `@extend` (@mgreter, #1519)
- Fix outputting incorrect selectors when using `&` with `@extend` (@mgreter, #1482)
- Fix second selector omitted when using `& + &` (@mgreter, #1441)
- Fix duplicating parts of selectors when using `&` as a List (@ekskimn, #1304)
- Fix incorrectly erring with `&` being used as an argument (@mgreter, #1260)
- Fix incorrectly erring with `&` selector in `@at-root` (@mgreter, #1043, #1210)
- Fix incorrectly erring with `&` being used as string (@mgreter, #1170)

### Improvements to `url()`
- Fix incorrectly unquoting variables `url()` (@mgreter, #1480)
- Fix variable not being evaluated in `url()` (@mgreter, #1370)
- Fix incorrectly erring with protocol relative urls in a `url()` (@mgreter, #1298)
- Fix incorrectly erring with interpolating a function in a `url()` (@mgreter, #1273, #1438)

### Improvements to insignificant whitespace CSS output
- Fix insignificant whitespace being outputted with binary operations in media queries (@mgreter, #1398)
- Fix insignificant whitespace being outputted when curly braces are on new line (@mgreter, #1448)
- Fix insignificant whitespace being outputted with multi-line property lists (@mgreter, #1230)
- Fix insignificant new lines not being removed in nested output (@mgreter, #1061)

### Improvements to `@extend`
- Fix selectors sometimes being dropped when `@extend`ing multiple attribute selectors (@xzyfer, #1574)
- Fix selector specificity with deep `@extend`s (@mgreter, #1248)
- Fix selectors sometimes being dropped when extending inside loops (@mgreter, #1029)

### Improvements to erring messages
- Fix poor error message formatting for long lines (@xzyfer, #1575)
- Fix missing error with `is-superselector(""foo"", null)` (@saper, #1571)
- Fix poor error message for `simple-selector(null)` (@saper, #1571)
- Fix error message capitalization (@saper, #1558)
- Fix poor error message for missing closing brace (@mgreter, #1506)
- Fix erring messages sometimes showing weird characters (@mgreter, #1496)
- Fix missing error with binary operations on Strings (@mgreter, #1451)
- Fix missing error with calling a function with missing named arguments (@mgreter, #1418)
- Fix missing error when passing a block into a mixin without `@content` (@mgreter, #1487)
- Fix missing error with `@return;` (@mgreter, #1355)
- Fix missing error when outputting a Map to CSS (@mgreter, #1246)
- Fix missing error with `#{}` (@xzyfer, #1093)

### Improvements to the C API
- Fix path inconsistencies with `get_included_files` (@mgreter, #1040)
- Made `source_map_embed` independent of `source_map_file` (@mgreter, #885)

### Improvements to Visual Studio support
- Fix extern ""C"" functions throwing exceptions in Visual Studio (@saper #1521)
- Fix include guard condition for Visual Studio 2015 (@am11 #1495)
- Remove now unnecessary `NOMINMAX` macros (@am11 #1454)
- Fix crashing with invalid `@warn` input in Visual Studio (@mgreter, #1460)
- Fix crashing with invalid input in with Visual Studio (@xzyfer, #1443)
- Fix compiler warnings in Visual Studio (@driekus77, #1375)

### Misc
- Fix allocation of pointer array (@unmole, #1609)
- Fix compilation warnings (@mgreter, #1609)
- Fix potential crash when using `call()` (@xzyfer, #1588)
- Fix link to SassC in readme (@khchanel, #1573)
- Fix memory not being well aligned (@mgreter, #1548)
- Fix floating point rounding (@mgreter, #1514)
- Fix sourcemap path resolution on Windows (@mgreter, #1500)
- Fix Arglist sometimes having the wrong type (@mgreter, #1488)
- Fix compilations warnings on OSX with Clang (@xzyfer, #1461)
- Fix outputting unicode ranges sometimes removes the `+` (@mgreter, #1459)
- Fix media queries with only CSS comment as content not being outputted (@mgreter, #1437)
- Fix named arguments to `call()` being lost (@xzyfer, #1418)
- Fix falsey Map keys being silently dropped (@mgreter, #1416)
- Fix incorrectly outputting consecutive Strings, quoted Strings and interpolants (@mgreter, #1413 #1396)
- Fix difference when outputting quoted Strings in binary operations (@mgreter, #1399)
- Fix difference when outputting interpolated function calls (@mgreter, #1397)
- Fix whitespace being lost when joining escaped literals (@mgreter, #1394)
- Fix `Null` values in Lists not removed when converted to Strings (@mgreter, #1376)
- Fix possible stack overflow by recursive call (@mgreter, #1361)
- Fix handling of percentage values in `rgb()` and `rgba()` (@mgreter, #1332)
- Fix @debug incorrectly outputting Maps with `null` keys (@xzyfer, #1331)
- Fix sometimes outputting `\a` between selectors (@mgreter, #1328)
- Fix compilation errors with SmartOS/Solaris (@djensen47, #1308)
- Fix dropping parts of selectors when using `@at-root` with interpolants (@mgreter, #1297)
- Fix ignoring `@at-root` inside loops (@mgreter, #1285)
- Fix clashing Map keys when using Lists (@mgreter, #1283)
- Fix treating named Colors as Strings (@mgreter, #1281)
- Fix quoting some strings (@mgreter, #1207 #1258 #1279)
- Fix processing `@import`s breadth-first (@mgreter, #1262)
- Fix producing duplicate selectors `@at-root` sometimes (@mgreter, #1236)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/2012335/assets,https://api.github.com/repos/sass/libsass/releases/2012335,master,https://api.github.com/repos/sass/libsass/tarball/3.3.0,https://github.com/sass/libsass/releases/tag/3.3.0,https://api.github.com/repos/sass/libsass/zipball/3.3.0,3.3.0,False,False
1958185,2015-10-14T07:03:12Z,2015-10-14T10:02:31Z,3.3.0-beta3,"This is the final 3.3.0 beta release! We've addressed a handful of regressions due to the major refactors.

### Fixed
- Potential SEGFAULT for call function (@xzyfer, #1588)
- Incorrect parsing of named arguments after unnamed arguments (@xzyfer, #1579)
- Error message formatting for long lines (@xzyfer, #1575)
- Sometimes losing selectors when `@extend`ing multiple attribute selectors (@xzyfer, #1574)
- Missing link to SassC in readme (@khchanel, #1573)
- Error message accuracy with `simple-selector(null)` (@saper, #1571)
- Throw error for `is-superselector(""foo"", null)` (@saper, #1571)
- Incorrect parsing of `font` shorthand values (@xzyfer, #1570)
- Incorrect parsing of media queries with comments (@xzyfer, @1567)
- Incorrect coercion of rest arguments (@xzyfer, 1566)
- Error message capitalization (@saper, #1558)
- Named arguments to `call()` being lost (@xzyfer, #1418)
- Throw error for `#{}` (@xzyfer, #1093)
- Incorrect parsing of `url()` (@xzyfer, #675)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1958185/assets,https://api.github.com/repos/sass/libsass/releases/1958185,master,https://api.github.com/repos/sass/libsass/tarball/3.3.0-beta3,https://github.com/sass/libsass/releases/tag/3.3.0-beta3,https://api.github.com/repos/sass/libsass/zipball/3.3.0-beta3,3.3.0-beta3,False,True
1821666,2015-09-14T13:34:54Z,2015-09-16T13:24:11Z,3.3.0-beta2,"This is the second beta for the 3.3.0 release which addresses a memory alignment issue discovered by @rodneyrehm 

#### Fixes
- Memory not being well aligned (@mgreter, #1548)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1821666/assets,https://api.github.com/repos/sass/libsass/releases/1821666,master,https://api.github.com/repos/sass/libsass/tarball/3.3.0-beta2,https://github.com/sass/libsass/releases/tag/3.3.0-beta2,https://api.github.com/repos/sass/libsass/zipball/3.3.0-beta2,3.3.0-beta2,False,True
1734755,2015-09-09T00:30:43Z,2015-09-09T02:23:53Z,3.3.0-beta1,"Today we release the long awaited 3.3 RC1, which once again tops our last major releases in terms of commits and fixed bugs. Good news for all implementors is that we only did some minor changes on the C Interface, and all of them only touch the still experimental features like custom importers and headers.

Main new features for this release are a completely refactored parent selector ('&') and we finally have all selector functions implemented. It also contains some big refactorings for the parser and for the evaluation phase. This fixes some major performance problems with tight loops and also adds some decent performance improvements in general (we would love to get some real world numbers from our users).

We do not have 100% feature parity yet. There will be a long tail of minor bugs between now and 3.4, but the base work for all main features is done. We now need all of you to help and open issues to find the missing details and to improve our test suite!

## By the numbers!

305 commits
180 files changed
107 closed issues
9 contributors
544 new tests passing
62% less skipped tests

## Acknowledgements

As always we want to thank our beloved contributors who breathe life into this piece of code. :heart: 
@am11, @djensen47, @drewwells, @ekskimn, @mgonzalez999, @saper, @tysongach, @driekus77 and everyone who opened issues. Without your contributions we wouldn't be where we are today.
We (@mgreter, @xzyfer, @hcatlin) hope you all will enjoy this release :rocket: 

# Changelog

## Selector functions

We now implement all [3.4 selector functions](http://sass-lang.com/documentation/file.SASS_CHANGELOG.html#selector_functions). This massive effort was initially booted by @ekskimn, @mgonzalez999 and was finished and polished by @mgreter with a major refactoring in how selectors are parsed and evaluated, which was the ground work for the parent selector refactoring.

## Shadow DOM support

We now correctly support `/deep/` reference combinators thanks to @mgreter

## Performance improvements

In order to fix some of the trickier long standing bugs, another major internal refactoring was required. This turned out to be very tricky, as pretty much all layers of LibSass were involved. @mgreter was up for the challenge and consequently closed a swath of outstanding issues. As a bonus the improved parser gave us an impressive speed boost. You should see the biggest gains with tight loops.

> This branch also includes quite a few performance optimisations.
> It brought my sass-spec test suite runtime from 27s down to 7s!

## C-API breaking changes

This release includes the new function `sass_value_op` that implementers can use to access all internal value operations. This enables implementers to have the same operations in their bindings as LibSass . 

There was another minor refactoring for custom importer. We renamed two API functions to be more close to their actual use (@mgreter, #1509):
- `sass_import_get_path` -> `sass_import_get_imp_path`
- `sass_import_get_base` -> `sass_import_get_abs_path` 

We also moved C-API library headers into the `sass` subfolder (@mgreter, #1360)

## Fixes

### Improvements to the parser
- Fix sass2scss sometimes producing incorrect output for `@include` (@xzyfer, #1547)
- Fix incorrectly parsing `-` as a minus operation (@mgreter, #1486)
- Fix incorrectly erring with interpolants in feature queries (@xzyfer, #1425)
- Fix incorrectly erring with comment in declaration value (@xzyfer, #1422)
- Fix incorrectly not ignoring the space following a CSS escape sequence (@mgreter, #1419)
- Fix incorrectly parsing identifiers with units (@mgreter, #1405)
- Fix multiple `-` in indentifiers sometimes being merged (@mgreter, #1404)
- Fix interpolations in propset being ignored (@mgreter, #1393)
- Fix functions calls followed by an interpolant being treated as String(@mgreter, #1333)
- Fix incorrectly erring with `@import` with media queries (@mgreter, #1323)
- Fix incorrectly erring with variables and interpolants in media queries (@mgreter, #1322)
- Fix crashing with some number units (@mgreter, #1307)
- Fix incorrectly erring with classnames with interpolants starting with `-` (@mgreter, #1301)
- Fix incorrectly erring with multiplication with interpolants (@mgreter, #1291)
- Fix incorrectly erring with interpolated values in Lists (@mgreter, #1277)
- Fix incorrectly erring with unknown @at-rules (@mgreter, #1263)
- Fix incorrectly erring with named arguments Varargs (@mgreter, #1259)
- Fix incorrectly evaluating variables in @at-rules (@mgreter, #1253)
- Fix incorrectly erring with parsing some @at-rules (@mgreter, #1214)
- Fix incorrectly erring with division with interpolants (@mgreter, #948)
- Fix incorrectly erring with comments inside selectors (@mgreter, #941)

### Improvements to character escaping
- Fix incorrectly parsing escape sequences (@mgreter, #1492)
- Fix incorrectly escaping apostrophes in Strings with interpolants (@mgreter, #1295)
- Fix incorrectly escaping in Strings with interpolants (@mgreter, #1115, #1231, #1271)

### Improvements to Varargs, Restargs and Arglists
- Fix Varags that are lists sometimes being flattened (@mgreter, #1171)
- Fix difference when using Varargs with `@each` (@mgreter, #1440)
- Fix crash when using an Arglist as a List (@mgreter, #1269)
- Fix crash when using an Arglist as the only argument (@mgreter, #1257)
- Fix crash when using `set-nth` with Arglists (@mgreter, #1255)
- Fix incorrectly erring with empty Arglists as a required parameter (@mgreter, #1305)

### Improvements to `&`
- Fix crashing with `& {}` (@mgreter, #1524)
- Fix crashing when using `&` with `@extend` (@mgreter, #1519)
- Fix outputting incorrect selectors when using `&` with `@extend` (@mgreter, #1482)
- Fix second selector omitted when using `& + &` (@mgreter, #1441)
- Fix duplicating parts of selectors when using `&` as a List (@ekskimn, #1304)
- Fix incorrectly erring with `&` being used as an argument (@mgreter, #1260)
- Fix incorrectly erring with `&` selector in `@at-root` (@mgreter, #1043, #1210)
- Fix incorrectly erring with `&` being used as string (@mgreter, #1170)

### Improvements to `url()`
- Fix incorrectly unquoting variables `url()` (@mgreter, #1480)
- Fix variable not being evaluated in `url()` (@mgreter, #1370)
- Fix incorrectly erring with protocol relative urls in a `url()` (@mgreter, #1298)
- Fix incorrectly erring with interpolating a function in a `url()` (@mgreter, #1273, #1438)

### Improvements to insignificant whitespace CSS output
- Fix insignificant whitespace being outputted with binary operations in media queries (@mgreter, #1398)
- Fix insignificant whitespace being outputted when curly braces are on new line (@mgreter, #1448)
- Fix insignificant whitespace being outputted with multi-line property lists (@mgreter, #1230)
- Fix insignificant new lines not being removed in nested output (@mgreter, #1061)

### Improvements to `@extend`
- Fix selector specificity with deep `@extend`s (@mgreter, #1248)
- Fix selectors sometimes being dropped when extending inside loops (@mgreter, #1029)

### Improvements to erring messages
- Fix poor erring message for missing closing brace (@mgreter, #1506)
- Fix erring messages sometimes showing weird characters (@mgreter, #1496)
- Fix missing erring with binary operations on Strings (@mgreter, #1451)
- Fix missing erring with calling a function with missing named arguments (@mgreter, #1418)
- Fix missing erring when passing a block into a mixin without `@content` (@mgreter, #1487)
- Fix missing erring with `@return;` (@mgreter, #1355)
- Fix missing erring when outputting a Map to CSS (@mgreter, #1246)

### Improvements to the C API
- Fix path inconsistencies with `get_included_files` (@mgreter, #1040)
- Made `source_map_embed` independent of `source_map_file` (@mgreter, #885)

### Improvements to Visual Studio support
- Fix extern ""C"" functions throwing exceptions in Visual Studio (@saper #1521)
- Fix include guard condition for Visual Studio 2015 (@am11 #1495)
- Remove now unnecessary `NOMINMAX` macros (@am11 #1454)
- Fix crashing with invalid `@warn` input in Visual Studio (@mgreter, #1460)
- Fix crashing with invalid input in with Visual Studio (@xzyfer, #1443)
- Fix compiler warnings in Visual Studio (@driekus77, #1375)

### Misc
- Fix floating point rounding (@mgreter, #1514)
- Fix sourcemap path resolution on Windows (@mgreter, #1500)
- Fix Arglist sometimes having the wrong type (@mgreter, #1488)
- Fix compilations warnings on OSX with Clang (@xzyfer, #1461)
- Fix outputting unicode ranges sometimes removes the `+` (@mgreter, #1459)
- Fix media queries with only CSS comment as content not being outputted (@mgreter, #1437)
- Fix falsey Map keys being silently dropped (@mgreter, #1416)
- Fix incorrectly outputting consecutive Strings, quoted Strings and interpolants (@mgreter, #1413 #1396)
- Fix difference when outputting quoted Strings in binary operations (@mgreter, #1399)
- Fix difference when outputting interpolated function calls (@mgreter, #1397)
- Fix whitespace being lost when joining escaped literals (@mgreter, #1394)
- Fix `Null` values in Lists not removed when converted to Strings (@mgreter, #1376)
- Fix possible stack overflow by recursive call (@mgreter, #1361)
- Fix handling of percentage values in `rgb()` and `rgba()` (@mgreter, #1332)
- Fix @debug incorrectly outputting Maps with `null` keys (@xzyfer, #1331)
- Fix sometimes outputting `\a` between selectors (@mgreter, #1328)
- Fix compilation errors with SmartOS/Solaris (@djensen47, #1308)
- Fix dropping parts of selectors when using `@at-root` with interpolants (@mgreter, #1297)
- Fix ignoring `@at-root` inside loops (@mgreter, #1285)
- Fix clashing Map keys when using Lists (@mgreter, #1283)
- Fix treating named Colors as Strings (@mgreter, #1281)
- Fix quoting some strings (@mgreter, #1207 #1258 #1279)
- Fix processing `@import`s breadth-first (@mgreter, #1262)
- Fix producing duplicate selectors `@at-root` sometimes (@mgreter, #1236)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1734755/assets,https://api.github.com/repos/sass/libsass/releases/1734755,master,https://api.github.com/repos/sass/libsass/tarball/3.3.0-beta1,https://github.com/sass/libsass/releases/tag/3.3.0-beta1,https://api.github.com/repos/sass/libsass/zipball/3.3.0-beta1,3.3.0-beta1,False,True
1396144,2015-06-09T20:36:35Z,2015-06-09T22:01:33Z,Holiday Patch,"I'm on holidays so progress has been slow. This releases lands some small bug fixes we've had on master for a while that I wanted to get live before I came home.

## Fixes
- Fix segmentation fault in `min` and `max` functions (@richo, #1266)
- Fix erroneous duplicate key errors (@xzyfer, #1254)
- Fix the shortest colour code not always being used in compressed more (@xzyfer, #1251)
- Fix quoted strings incorrectly failing equality checks (@xzyfer, #1247)
- Fix unmergable media queries being merged poorly (@xzyfer, #1224)
- Fix incorrect error when parsing optional `;` in top level directives (@xzyfer, #1243)
- Fix colour rounding to match Ruby Sass 3.4.14 (@xzyfer, #1239)
- Fix incorrect quoting in media query expressions (@xzyfer, #1218)
- Fix a parsing regression with some `@at-rules` (@xzyfer, #1214)
- Fix division operations sometimes being ignored in interpolants (@xzyfer, 1206)
- Fix parsing error with comments (@xzyfer, #1208)

## Features
- Add missing importer list methods to the C API (@tristanlins, #1225)

## Thanks

A big thanks to everyone who made this release possible. Honorable mentions to @AlbertoElias, @callumacrae, @cvrebert, @ericam, @mzgol, @tristanlins, @richo, and @xzyfer.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1396144/assets,https://api.github.com/repos/sass/libsass/releases/1396144,master,https://api.github.com/repos/sass/libsass/tarball/3.2.5,https://github.com/sass/libsass/releases/tag/3.2.5,https://api.github.com/repos/sass/libsass/zipball/3.2.5,3.2.5,False,False
1289620,2015-05-13T00:09:44Z,2015-05-13T01:32:09Z,Patch Adams,"The next patch level release, containing a lot of fixes and the first piece of the missing selector functions. We also fixed a lot of issues we originally scheduled for the upcoming 3.3 release.

## Numbers
- 13 closed issues and 8 PRs merged
- 26 new uniquely passing spec tests
- 98.53% Ruby Sass compatibility (+1.47%)

## Features

With `is_superselector`, we have added the first of the missing selector functions. This is in preparation for the full support for all selector functions in the next upcoming major release (3.3). Big thanks to @onedayitwillmake, who already put a lot of effort into adding the missing functionality (#1064).

## Bugfixes
- Fix `is_superselector` function (@mgreter, #1202, #823, #1063, #1091)
- Fix interpolation edge case in value parsing (@mgreter, #1198, #442)
- Improve parsing for nth-child binomials (@mgreter, #1197, #593)
- Improve url (string) parsing (@mgreter, #1196, #1096)
- Fix duplicate key handling for maps (@mgreter, #1195, #1187)
- Fix IE specific parsing (@mgreter, #1194, #931, #1102, #1107, #1188)
- Fix keyword handling in arglists (@mgreter, #1192, #1193)
- Replace bad usage of std::to_string in code (@saper, #1191)
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1289620/assets,https://api.github.com/repos/sass/libsass/releases/1289620,master,https://api.github.com/repos/sass/libsass/tarball/3.2.4,https://github.com/sass/libsass/releases/tag/3.2.4,https://api.github.com/repos/sass/libsass/zipball/3.2.4,3.2.4,False,False
1277444,2015-05-09T04:32:03Z,2015-05-09T05:04:31Z,Reassurance Elbow Suite,"We have another patch level release ready that lets libsass rock even more :guitar: 
This release mainly fixes output issues related to lists, numbers and interpolations :beetle: 
Totally 17 issues fixed with 16 pull requests and 26 new unique passing spec tests :beers:

## Bugfixes
- Normalize numbers after operations (@mgreter, #1163, #1164)
- Force evaluation of binary expression in interpolation (@mgreter, #1162, #1165)
- Fix precision output format for numbers (@mgreter, #1153, #1166)
- Implement missing unit groups conversions (@mgreter, #1167, #1172)
- Fix append function when handling argument lists (@mgreter, #1171, #1173)
- Fix interpolation escape sequence edge case (@mgreter, #1168, #1174)
- Fix edge case with parent selector evaluation (@mgreter, #1170, #1176)
- Implement correct String Schema parsing (@mgreter, #1158, #1177)
- Fix a few list output edge cases (@mgreter, #1178, #1179)
- Add error message for empty interpolations (@mgreter, #1093, #1180)
- Fix white-space error with nested output style (@mgreter, #1092, #1181)
- Fix some compiler warnings (@mgreter, #1117, #1182)
- Fix parent selector interpolation in attribute selector (@mgreter, #1016, #1183)
- Fix `String_Schema` and `Binary_Expression` parsing (@mgreter, #948, #1177)
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1277444/assets,https://api.github.com/repos/sass/libsass/releases/1277444,master,https://api.github.com/repos/sass/libsass/tarball/3.2.3,https://github.com/sass/libsass/releases/tag/3.2.3,https://api.github.com/repos/sass/libsass/zipball/3.2.3,3.2.3,False,False
1242604,2015-05-01T01:58:27Z,2015-05-01T02:05:00Z,Elbow Patched Suit,"This release is a follow up to 3.2.1 addressing some issues we felt couldn't wait for our next major release.

### Features
- error when max stack depth is exceeded (@carsonmcdonald,  #1157)

### Fixes
- remove all traces of `compact` once and for all (@xzyfer, #1156)
- add missing C-API function declarations for `is_quoted` (@mgreter,  #1154)

### Thanks!

Big thanks to @carsonmcdonald!
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1242604/assets,https://api.github.com/repos/sass/libsass/releases/1242604,master,https://api.github.com/repos/sass/libsass/tarball/3.2.2,https://github.com/sass/libsass/releases/tag/3.2.2,https://api.github.com/repos/sass/libsass/zipball/3.2.2,3.2.2,False,False
1237240,2015-04-30T03:22:02Z,2015-04-30T04:45:43Z,Patchwork quilt,"This release is a follow up to 3.2.0 addressing some issues we felt couldn't wait for our next major release.

Most notably it fixes a regression in `url()`s that contain unconventional characters like in the cause of Google web fonts.

### Features
- expose `is_quoted` on `Sass_String` nodes in the C API (@mgreter,  #1148)

### Fixes
- fix `str-slice` function to work with utf8 strings (@mgreter, #1047)
- fix mathematical operations with different units (@mgreter,  #1049)
- fix error registering a custom function named `compact` (@mgreter,  #1055)
- fix order of `@imports` and comments at the top of a file (@mgreter,  #1080)
- fix trailing 0s integers being trimmed from integers with precision is 0 (@xzyfer,  #1140)
- fix missing header causing compilations issues in some environments (@xzyfer,  #1144)
- fix regression in `url()`s (@mgreter,  #1145 #1146)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1237240/assets,https://api.github.com/repos/sass/libsass/releases/1237240,master,https://api.github.com/repos/sass/libsass/tarball/3.2.1,https://github.com/sass/libsass/releases/tag/3.2.1,https://api.github.com/repos/sass/libsass/zipball/3.2.1,3.2.1,False,False
1221766,2015-04-27T11:45:02Z,2015-04-27T13:09:41Z,Spring Clean,"Today we're marking the completion of the biggest Libsass release to date!

The core developer team kept the pace high [fixing a ton of open issues](https://github.com/sass/libsass/pulls?pulls_only=true&q=milestone%3A3.2+is%3Apr), while also refactoring large amounts of code, implementing a handful of new major features, and even some performance improvements to boot! 

The sheer amount of features, fixes and refactors introduced quite a few regressions delaying this release. We want to thank all the people that reported issues, patches or contributed in any other form, that made this release happen :clap: 

### By the numbers
- 108 closed issues
- 357+ new sass specs (including new output type)
- 1.047+ new assertions
- 8% increase in code coverage

## Major new features

### Output styles

The way Libsass outputs the final css was refactored to make the code more modular. This allowed us to add the missing compact and expanded output styles. This refactor also allows us to produce more accurate nested and compressed output styles (@mgreter, #910).

We updated our spec suite to support all output styles which added nearly 3,400 runs and 10,000 new assertions.

### Strings and interpolation

String and interpolation parsing and evaluating was refactored too, which brings Libsass even closer to Ruby Sass in terms of output styles now  (@mgreter, #847).

### Sourcemaps

The refactoring work on strings, interpolations and output styles made it a lot easier to guarantee the correctness of the generated sourcemap files (@mgreter, #879)

### Directive bubbling

`@media`, `@supports`, `@keyframes` directives (and more!) are correctly bubbled so you always get CSS 2.0 compliant output.

This means `@media` rules will be ""combined"" with all bubbled up `@media` rules to better reflect the Ruby Sass behaviour (@xyfer, #800, #821).

### @at-root

Full support for the `@at-root` directive has been implemented (@xyfer, #799, #859).

### `&` in SassScript

Partial support for `&` in SassScript (@ekskimn, #966, #548)

`&` can now be used a css property or passed as an argument to functions and mixins.  

### Variable scope

Full support for `!global` variable scoping  has been implemented (@mgreter, #986, #990)

## New experimental feature

This release contains initial (and experimental) support to load 3rd party **plugins** in the form of precompiled `.dll` (win) or `.so` (nix) files. We really would like to see some people [playing around with this new toy](https://github.com/sass/libsass/wiki/API-Plugins). It could help us determine what we actually want to do with this technology! (@mgreter, #919)

## Breaking changes
- Change in `sass_make_data_context` - libsass now really takes memory ownership (#925)
- Hard deprecated `image-url` and `compact` functions (throw errors until removed) (#834, #835)

## Changes in [C-API](https://github.com/sass/libsass/wiki/API-Documentation)
- Implement error status for importer entries (#926)
- Breaking change in `sass_make_data_context` (#925)
- Add `char* indent` and `char* linefeed` to options (#787)
- Add `string_list* plugin_paths` to options (#919)
- Add `char* plugin_path` to options (#919)
- Add `char* source_map_root` to options (#926)
- Add `char* error_text` to options (#915)
- Add `sass_option_push_plugin_path` function (#919)
- Remove `char* image_path` from options (#834)
- A few source files have been added and some removed

## Improved spec tests

Due to the new support for all output styles, the spec tests have been enhanced to test all four output styles. The tests are now much more white-space sensitive than before, as only multiple line-feeds are normalized. This should ensure that libsass gets and stays closer to the exact output of ruby sass in the future. 

## Minor features
- Implement raw css imports (@mgreter, #754, #318)
- Implement number prefix parsing (/[+-]+/) (@mgreter, #535)
- Improve source-mapping implementation (@mgreter, #792)
- Improve handling of negative numbers (@xyfer, #828)
- Add support for -ms-calc (@xyfer, #842)
- Add an example plugin (@mgreter, d3de957)
- Add Visual Studio file to .gitignore (@am11, #944)
- Fully evaluate nested binary operations (@xyfer, #770)
- Normalize CSS function string arguments (@xyfer, #817)
- Made linefeed and indent configurable (@mgreter, #787)
- Speed up Windows CI build times (@am11, #944)
- Update number function signatures (@xyfer, #826)
- Simplify autotools build (@saper, #992)
- Performance improvements in parser (@mgreter, #985, #990)
- Provide a formatted error output (@mgreter, #938)
- Add sass_context_take_included_files() (@rodneyrehm, #982)
- Support multiple importers (alpha, @mgreter, #1000, #962)
- Custom headers (experimental, @mgreter, #1000, #960)
- Implement /deep/ shadow DOM selector (@mgreter, #452)
- Enable `@extend`ing selector groups (@mgreter, #950)
- Enable OS-X CI testing via Travis (@mgreter, #1024)
- Enable url function overloading (@mgreter, #1010, #674)
- Add `units-level-3` and `at-error` feature flag (@xyfer, #1011, #1013)

## Fixes
- Fix parsing of dash in declaration values (@xyfer, #733)
- Fix math operations sometimes returing wrong units (@xyfer, #783)
- Fix str-slice returning incorrect value when $end-at is omitted (@xyfer, #815)
- Fix arguments sometimes being passed by value not reference (@xyfer, #813, #909)
- Fix segfault if a function definition has a css comment (@xyfer, #646)
- Fix `@charset` not being output if utf8 characters are in top comment  (@mgreter, #820)
- Fix error message line numbers drifting with indented style (@anlutro, #866)
- Fix desaturation of greyscale colours (@anlutro, #864)
- Fix crash in Parser::parse_term (@mmaxim, #846)
- Fix greedy not operator (@xyfer, #873, #897, #920, #934)
- Fix function names not consistently normalized (@xyfer, #877)
- Fix color related issues in functions (@mgreter, #911)
- Fix dash parsing after other tokens (@mgreter, #922)
- Fix interpolation in media queries (@mgreter, #346)
- Fix comments on in propsets causing segfaults (@xzyfer, #901)
- Fix relative path issue on Window (@mgreter, #939)
- Fix relative path issue with Source Maps (@am11, #964)
- Fix memory management issues (@mgreter, #940)
- Fix block comment parsing regression (@mgreter, #941)
- Fix @error to exit with error message (@asottile, #967)
- Fix reported position when no token can be parsed (@mgreter, #972)
- Fix variable length parameter (@mgreter, #980)
- Fix regression with str-slice (@mgreter, #988)
- Fix allowing illegal extend error across media-queries (@mgreter, #943)
- Fix error parsing comments in propsets (@xyfer, #890)
- Fix error message line numbers drifting (@mgreter, #533, #972)
- Fix error on illegal parent selectors in root blocks (@mgreter, #325)
- Fix error on illegal media blocks extending (@mgreter, #317, #712)
- Fix error on multiline string with trailing backslash (@mgreter, #942)
- Fix error when property-value is missing (@mgreter, #945)
  = Fix edge case in Parent_Selector evaluation (@mgreter, #1004)
- Fix build to copy sass_version header (@drewwells, #998)
- Fix `&` interpolation causing segfaults (@mgreter, #978)
- Fix wrong line in error message (@mgreter, #972)
- Fix variable Interpolation in @keyframe (@mgreter, #947)
- Fix tabs when bubbling feature blocks (@mgreter, #1044)
- Fix white-space issue with wrapped selectors (@mgreter, #1025)
- Fix bug in C-API with context compiler status (@mgreter, #1038)
- Fix `@extend` specificity problems (@mgreter, #592)
- Fix parsing of another missed block comment (@mgreter, #1021)
- Fix parsing of some more missed block commen (@mgreter, #1007)
- Fix dynamic exception as per C++11 specs. (@am11, #1006)
- Fix argument handling for dynamic `call` function (@mgreter, #1075)
- Fix interpolation with unary expressions (@mgreter, #1074)
- Fix operator parsing regression (@mgreter, #1068)
- Fix backslash multiline string with win linefeed (@mgreter, #1067)
- Fix incorrect semantics of `@else` (@xyfer, #1062)
- Fix source-map regression (@mgreter, #1056)
- Fix one regression with error reporting (@mgreter, #1054)
- Fix url parsing with trailing spaces in url (@mgreter, #1051)
- Fix `@elseif` keyword not being parsed (@xyfer, #1060)
- Fix empty ruleset blocks sometimes being outputted (@mgreter, #1109 )
- Fix `random()` not always being random (@xzyfer, #1104)
- Fix compilation errors on SmartOS (@Candid @saper, #850)
- Fix map key handling (@mgreter, #1086)
- Fix errors parsing block comments in lists (@mgreter, #1082)
- Threadsafe `atof` implementation (@npiguet, #929)
- Unquoting null should return null (@xyfer, #1106, #1124)
- Allow empty rest arguments in varargs (@mgreter, #1130)
- Fix the RGB to HSL algorithm (@xyfer, #1132)
- Fix call function incorrectly epanding map arguments (@xyfer, #1133)
- IE property hacks should be parsed as static values (@xyfer, #1098)
- Fix comment_to_string edge case (@xyfer, #1121)
- Fix various string handling regressions (@xyfer, #1127)
- Fix interpolation issues with escape sequence (@mgreter, #1115)
- Fix hsla argument overflow (@mgreter, #1101)

## Known issues
- Still some @extends edge cases - (#1029, #1063, #1091)
- Interpolating `&` in selectors with `@at-root` produces incorrect output - (#1043)
- Interpolating `&` in attribute selectors doesn't work - (#1016)

## Thanks!

A huge thanks to everyone who reported issues :high_brightness: !!
Honourable mentions to @am11, @anlutro, @asottile, @Candid, @chriseppstein, @ekskimn, @hcatlin, @HugoGiraudel, @lunelson, @mgreter, @mmaxim, @npiguet, @rodneyrehm, @saper, @Snugug and @xzyfer for their contributions to Libsass and Sass spec that made this release possible.

## What's next?

With this release we've hit 97% feature parity with Ruby Sass according to [sass-compatibility.github.io](https://sass-compatibility.github.io/#stats).

There are no signs of slowing down! We already have a bunch of features queued for 3.2.1.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1221766/assets,https://api.github.com/repos/sass/libsass/releases/1221766,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0,https://github.com/sass/libsass/releases/tag/3.2.0,https://api.github.com/repos/sass/libsass/zipball/3.2.0,3.2.0,False,False
1141142,2015-04-19T14:10:54Z,2015-04-20T01:11:52Z,Spring Clean (beta.6),"This is the sixth 3.2.0 beta release and the third release candidate.

The last synced beta round with node-sass (thanks to @am11) brought up a few regressions as expected. It helped us to improve the spec tests by exposing previously untested code parts (notable mention was the lack of any `else if` spec test). Beside that we also fixed quite a few other bugs on the way.

### Bugfixes
- Improve hash map key handling (@mgreter, #1086)
- Add hotfix for url issue with single variable (@mgreter, #1087)
- Improve block comment parsing for lists (@mgreter, #1082)
- Improve scope handling for variables (@mgreter, #1081)
- Backtrace lines are off-by-one (@saper, #1078)
- Fix argument handling for dynamic `call` function (@mgreter, #1075)
- Fix interpolation with unary expressions (@mgreter, #1074)
- Fix operator parsing regression (@mgreter, #1068)
- Fix backslash multiline string with win linefeed (@mgreter, #1067)
- Fix incorrect semantics of `@else` (@xyfer, #1062)
- Fix source-map regression (@mgreter, #1056)
- Fix one regression with error reporting (@mgreter, #1054)
- Fix url parsing with trailing spaces in url (@mgreter, #1051)
- Fix `@elseif` keyword not being parsed (@xyfer, #1060)
- Fix empty ruleset blocks sometimes being outputted (@mgreter, #1109 )
- Fix `random` not always being random (@xzyfer, #1104)
- Fix compilation errors on SmartOS (@Candid @saper, #850)

### Known issues
- Variable interpolation causes additional string escaping (#1115)
- Erroneous space inserted when using IE property hack (#1098)

### Thanks!

This release would not be possible without the hard work of @Candid, @mgreter, @saper and @xzyfer.

We already have a bunch of features queued for 3.2.1 and plan to release 3.2.0 in one or two weeks; if we don't get any blocking issues reported in the meantime! So stay tuned and keep testing :clock1: 
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1141142/assets,https://api.github.com/repos/sass/libsass/releases/1141142,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.6,https://github.com/sass/libsass/releases/tag/3.2.0-beta.6,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.6,3.2.0-beta.6,False,True
1121690,2015-04-05T05:00:16Z,2015-04-05T07:00:25Z,Spring Clean (beta.5),"This is the fifth 3.2.0 beta release and the second release candidate.

### Features
- Enable to extend selector groups (@mgreter, #950)
- Enable OS-X CI testing via Travis (@mgreter, #1024)
- Enable url function overloading (@mgreter, #1010, #674)

### Bugfixes
- Fix tabs when bubbling feature blocks (@mgreter, #1044)
- Fix white-space issue with wrapped selectors (@mgreter, #1025)
- Fix bug in C-API with context compiler status (@mgreter, #1038)
- Fix `@extend` specificity problems (@mgreter, #592)
- Fix parsing of another missed block comment (@mgreter, #1021)
- Add units-level-3 and at-error feature flag (@xyfer, #1011, #1013)
- Fix parsing of some more missed block commen (@mgreter, #1007)
- Fix dynamic exception as per C++11 specs. (@am11, #1006)
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1121690/assets,https://api.github.com/repos/sass/libsass/releases/1121690,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.5,https://github.com/sass/libsass/releases/tag/3.2.0-beta.5,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.5,3.2.0-beta.5,False,True
1102505,2015-03-30T00:17:26Z,2015-03-30T00:21:00Z,Spring Clean (beta.4),"This is the fourth 3.2.0 beta release and the first release candidate for 3.2.0.

This beta brings the last and probably biggest chunk of breaking changes to the C-API (only for custom functions and importers). Hopefully the right step to stabilize those APIs. Adds support for multiple importers and a new experimental feature called custom headers, which works very similar to custom importers. It all evolved from a ticket named [custom mixins](https://github.com/sass/libsass/issues/960), which can now be achieved by using custom headers. For a complete list of C-API changes and how to update your code, consult PR [#1000](https://github.com/sass/libsass/pull/1000).

### Features
- Support multiple importers (alpha, @mgreter, #1000, #962)
- Custom headers (experimental, @mgreter, #1000, #960)

### Bugfixes
- Fix edge case in `Parent_Selector` evaluation (@mgreter, #1004)
- Fix build to copy sass_version header (@drewwells, #998)
- Implement `/deep/` shadow DOM selector (@mgreter, #452)
- Fix `&` interpolation causing segfaults (@mgreter, #978)
- Fix wrong line in error message (@mgreter, #972)
- Fix variable Interpolation in `@keyframe` (@mgreter, #947)
- Code clean up in `listize.cpp` (@xyfer, #975)

### Credits

We are looking forward to make the 3.2.0 release happen soon :rocket: !
Thanks to all beta testers and specially to the [node-sass](https://github.com/sass/node-sass) team :bee: !
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1102505/assets,https://api.github.com/repos/sass/libsass/releases/1102505,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.4,https://github.com/sass/libsass/releases/tag/3.2.0-beta.4,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.4,3.2.0-beta.4,False,True
1100272,2015-03-27T22:46:37Z,2015-03-27T22:59:05Z,Spring Clean (beta.3),"This is the third 3.2.0 beta release.

It includes two new major features, that have not been available before! @ekskimn tackled `&` support in SassScript while @mgreter implemented correct variable scoping! Beside these features, we have merged a lot of bugfixes and performance improvements! 

### Features
- Implement support for `&` in SassScript (@ekskimn, #966, #548)
- Add correct variable scoping (@mgreter, #986, #990)
- Performance improvements in parser (@mgreter, #985, #990)
- Provide a formatted error output (@mgreter, #938)
- Add `sass_context_take_included_files()` (@rodneyrehm, #982)

### Bugfixes
- Fix memory management issues (@mgreter, #940)
- Fix block comment parsing regression (@mgreter, #941)
- Support multiline string with trailing backslash (@mgreter, #942)
- Refine illegal extend error across media-queries (@mgreter, #943)
- Error when property-value is missing (@mgreter, #945)
- Fix `@error` to exit with error message (@asottile, #967)
- Fix reported position when no token can be parsed (@mgreter, #972)
- Fix variable length parameter (@mgreter, #980)
- Fix regression with `str-slice` (@mgreter, #988)
- Simplify autotools build (@saper, #992)

### Credits

Special shout-out to @ekskimn for his great work on `&` support and to @HugoGiraudel for the extensive spec-tests on variable scoping! We also want to thank @asottile, @rodneyrehm and @saper for their contributions. Another release brought to you by @mgreter and @xzyfer :sunrise: 
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1100272/assets,https://api.github.com/repos/sass/libsass/releases/1100272,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.3,https://github.com/sass/libsass/releases/tag/3.2.0-beta.3,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.3,3.2.0-beta.3,False,True
1062867,2015-03-18T06:44:41Z,2015-03-18T06:52:54Z,Spring Clean (beta.2),"This the second 3.2.0 beta release.

### Features
- Added an example plugin (@mgreter, https://github.com/sass/libsass/commit/d3de95714fba7534bbc4fe07d5ab86a5b5e6b620)
- Added Visual Studio file to .gitignore (@am11, https://github.com/sass/libsass/pull/944)
- Speed up Windows CI build times (@am11, https://github.com/sass/libsass/pull/944)

### Fixes
- Relative path issue on Window (@mgreter, https://github.com/sass/libsass/pull/939)
- Relative path issue with Source Maps (@am11, https://github.com/sass/libsass/pull/964)

### Thanks

This release is brought to you by the hard work of @mgreter and @am11.
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/1062867/assets,https://api.github.com/repos/sass/libsass/releases/1062867,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.2,https://github.com/sass/libsass/releases/tag/3.2.0-beta.2,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.2,3.2.0-beta.2,False,True
1040338,2015-03-12T03:11:28Z,2015-03-12T04:09:16Z,Spring Clean (beta.1),"The core developer team kept the pace high over the last weeks and [fixed a ton of open issues](https://github.com/sass/libsass/pulls?pulls_only=true&q=milestone%3A3.2+is%3Apr), while also refactoring an awfull lot of code, plus implementing new and missing features. We want to thank all the people that reported issues, patches or contributed in any other form, that made this release happen :clap: 

### By the numbers
- 103 closed issues
- 67+ new sass specs
- 282+ new assertions
- 22% less skipped specs 
- 8% increase in code coverage

## Major new features

### Output styles

The way Libsass outputs the final css was refactored to make the code more modular. This allowed us to add the missing compact and expanded output styles. This refactor also allows us to produce more accurate nested and compressed output styles (@mgreter, #910).

### Strings and interpolation

String and interpolation parsing and evaluating was refactored too, which brings Libsass even closer to Ruby Sass in terms of output styles now  (@mgreter, #847).

### Sourcemaps

The refactoring work on strings, interpolations and output styles made it a lot easier to guarantee the correctness of the generated sourcemap files (@mgreter, #879)

### Directive bubbling

`@media`, `@supports`, `@keyframes` directives (and more!) are correctly bubbled so you always get CSS 2.0 compliant output.

This means `@media` rules will be ""combined"" with all bubbled up `@media` rules to better reflect the Ruby Sass behaviour (@xyfer, #800, #821).

### @at-root

Full support for the `@at-root` directive has been implemented (@xyfer, #799, #859).

## New experimental feature

This release contains initial (and experimental) support to load 3rd party **plugins** in the form of precompiled `.dll` (win) or `.so` (nix) files. We really would like to see some people [playing around with this new toy](https://github.com/sass/libsass/wiki/API-Plugins). It could help us determine what we actually want to do with this technology! (@mgreter, #919)

## Breaking changes
- Change in `sass_make_data_context` - libsass now really takes memory ownership (#925)
- Hard deprecated `image-url` and `compact` functions (throw errors until removed) (#834, #835)

## Changes in [C-API](https://github.com/sass/libsass/wiki/API-Documentation)
- Implemented error status for importer entries (#926)
- Breaking change in `sass_make_data_context` (#925)
- Added `char* indent` and `char* linefeed` to options (#787)
- Added `string_list* plugin_paths` to options (#919)
- Added `char* plugin_path` to options (#919)
- Added `char* source_map_root` to options (#926)
- Added `char* error_text` to options (#915)
- Removed `char* image_path` from options (#834)
- Added `sass_option_push_plugin_path` function (#919)
- A few source files have been added and some removed

## Improved spec tests

Due to the new support for all output styles, the spec tests have been enhanced to test all four output styles. The tests are now much more white-space sensitive than before, as only multiple line-feeds are normalized. This should ensure that libsass gets and stays closer to the exact output of ruby sass in the future. Beside we further improved the specs with new test:
- Added 10 color related function spec tests (@mgreter, #911)
- Added 185 generated tests for interpolation parsing (@mgreter)

## Other fixes and features
- Implement raw css imports (@mgreter, #754, #318)
- Fix parsing of dash in declaration values (@xyfer, #733)
- Fully evaluate nested binary operations (@xyfer, #770)
- Made linefeed and indent configurable (@mgreter, #787)
- Improved source-mapping implementation (@mgreter, #792)
- Properly hydrate numbers after operations (@xyfer, #783)
- str-slice $end-at defaults to -1 if omitted (@xyfer, #815)
- Normalize CSS function string arguments (@xyfer, #817)
- Improved handling of negative numbers (@xyfer, #828)
- Update number function signatures (@xyfer, #826)
- Pass arguments by value not reference (@xyfer, #813, #909)
- Parse css comment in function definition (@xyfer, #646)
- Test complete buffer for utf8 characters (@mgreter, #820)
- Pass ""keep comments"" flag to sass2scss (@anlutro, #866)
- Fix desaturation of greyscale colours (@anlutro, #864)
- Fix crash in Parser::parse_term (@mmaxim, #846)
- Add support for -ms-calc (@xyfer, #842)
- Fix greedy not operator (@xyfer, #873, #897, #920, #934)
- Parse comments in propsets (@xyfer, #890)
- Consistently normalize function names (@xyfer, #877)
- Fix color related issues in functions (@mgreter, #911)
- Fix dash parsing after other tokens (@mgreter, #922)
- Implement number prefix parsing (/[+-]+/) (@mgreter, #535)
- Error on illegal parent selectors in root blocks (@mgreter, #325)
- Fix interpolation in media queries (@mgreter, #346)
- Parse line comments in blocks (@mgreter, #533)
- Error on illegal media blocks extending (@mgreter, #317, #712)
- Threadsafe `atof` implementation (@npiguet, #929)
- Fix comments on in propsets causing segfaults (@xzyfer, #901)

## Thanks!

A huge thanks to everyone who reported issues :high_brightness: !!
Honourable mentions to @am11, @anlutro, @chriseppstein, @hcatlin, @HugoGiraudel, @lunelson, @mgreter, @mmaxim, @npiguet, @Snugug and @xzyfer for their contributions to Libsass and Sass spec that made this release possible.
",https://api.github.com/users/mgreter,282293,mgreter,https://api.github.com/repos/sass/libsass/releases/1040338/assets,https://api.github.com/repos/sass/libsass/releases/1040338,master,https://api.github.com/repos/sass/libsass/tarball/3.2.0-beta.1,https://github.com/sass/libsass/releases/tag/3.2.0-beta.1,https://api.github.com/repos/sass/libsass/zipball/3.2.0-beta.1,3.2.0-beta.1,False,True
816587,2015-01-02T02:42:53Z,2015-01-02T02:43:09Z,Bulleit Bottle,"Happy new year! What better way to start the year than with a new Libsass release! 

Capitalising on the 3.0 momentum @mgreter and @xzyfer, with help from the Libsass community, have been hard work on this massive release!

Libsass 3.1 brings us closer than ever to Sass feature parity! We've even got a back log of completed features ready to go for the next release!

I'd like to give a shoutout to node-sass team for helping us release and test our RC releases!

### Features
- implemented `@debug` - @mgreter
- implemented `@error` - @mgreter
- implemented `inspect()` - @mgreter
- implemented `feature-exists()` - @xzyfer
- implemented `unique-id()` - @xzyfer
- implemented `random()` - @xzyfer
- implemented negative `@for` loops - @mgreter 
- implemented the `not` operator - @xzyfer
- implemented `nth()` for maps - @xzyfer
- implemented custom functions and importers - @mgreter 
- implemented C API to fetch compiled version - @mgreter 
- implemented decrementing in for loops - @mgreter
- improvements to the static value look ahead parser - @xzyfer
- improvements handling of string quotes - @mgreter
- added support for colors `rebeccapurple` and `transparent` - @mgreter 
- added/improved build scripts for windows - @mgreter 
- added AppVeyor for windows CI builds - @mgreter 
- added support for converting angle units - @mgreter  
- significant speed boost to `map-get()` - @xzyfer
- better Windows compilation support - @mgreter @am11 
- emit `@charset ""UTF-8""` when required - @mgreter 
- major updates to the C API - @mgreter 

### Fixes
- no longer allow concatenating with `null` - @xzyfer (https://github.com/sass/libsass/issues/698)
- improved handling of colors - @mgreter (https://github.com/sass/libsass/issues/558)
- better support for BEM style selectors - @xzyfer (https://github.com/sass/libsass/issues/738)
- better support for IE properties - @mgreter (https://github.com/sass/libsass/issues/683)
- better support of interoplants in selectors - @xzyfer (https://github.com/sass/libsass/issues/641)
- normalize quotes map keys in `keywords()`  - @xzyfer (https://github.com/sass/libsass/issues/721)
- normalize quotes in `str-slice` and `str-insert` - @xzyfer (https://github.com/sass/libsass/issues/763)
- normalize decimal output - @mgreter @xzyfer (https://github.com/sass/libsass/issues/550, https://github.com/sass/libsass/issues/623)
- fixed allowing redefinition of reserved functions - @xzyfer (https://github.com/sass/libsass/issues/713)
- fixed `keywords()` crashing when no vararg is present - @xzyfer (https://github.com/sass/libsass/issues/672)
- fixed default arguments for function arguments - @mgreter (https://github.com/sass/libsass/issues/708)
- fixed colors and number as map keys - @xzyfer (https://github.com/sass/libsass/issues/652, https://github.com/sass/libsass/issues/534)
- fixed incorrect content type for embedded sourcemaps - @xdissent (https://github.com/sass/libsass/pull/723)
- fixed evaluation of negative variables - @xzyfer (https://github.com/sass/libsass/issues/344)
- fixed `@return` sometimes not exiting functions - @xzyfer (https://github.com/sass/libsass/issues/736)
- fixed an edge case with `str-slice` - @xzyfer (https://github.com/sass/libsass/issues/762)
- fixed parsing of assignments with `!default` and `!global` flags - @xzyfer (https://github.com/sass/libsass/issues/759)
- fixed `!default` assignments not overriding `null` values - @xzyfer (https://github.com/sass/libsass/issues/740)
- fixed allowing maps to be instantiated with duplicate keys - @xzyfer (https://github.com/sass/libsass/issues/628)
- fixed empty css blocks sometimes being outputted - @xzyfer (https://github.com/sass/libsass/issues/659)
- fixed some cases where number comparisons would fail - @xzyfer (https://github.com/sass/libsass/issues/590)
- fixed crashes when multiple semicolons were encountered - @xzyfer (https://github.com/sass/libsass/issues/502)
- fixed a bug with maps and `@each` with only on variable - @xzyfer (https://github.com/sass/libsass/issues/784)
- fixed a bug with string interpolation in `url()`s - @mgreter (https://github.com/sass/libsass/issues/644)
- fixed some bugs with the C API - @mgreter (https://github.com/sass/libsass/issues/776)

### Documentation

This release saw a big increase in the amount of [available documentation](https://github.com/sass/libsass/wiki) thanks to @mgreter and @drewwells!!

### Sass spec

[Sass spec](https://github.com/sass/sass-spec) got a major update bringing it up to date with Sass 3.4 thanks to @hcatlin and @xzyfer.

#### Know issues
- `!global` is parsed but the scoping rules aren't respected - (https://github.com/sass/libsass/issues/613)
- nested media queries aren't combined - (https://github.com/sass/libsass/issues/614)
- operations in brackets like `(1/2)` are sometimes not treated as numbers - (https://github.com/sass/libsass/issues/442, https://github.com/sass/libsass/issues/590)
- still some `@extends` edge cases - (https://github.com/sass/libsass/issues/316, https://github.com/sass/libsass/issues/317, https://github.com/sass/libsass/issues/592)
- still some sourcemaps issues - (https://github.com/sass/libsass/issues/324)

Huge thanks to everyone that reported bugs, wrote specs and submitted patched. Honourable mentions to @HugoGiraudel, @xdissent, @drewwells, @jakob-e, @lunelson, @am11, @hcatlin, @mgreter and @xzyfer for their multiple contributions which made this release possible!
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/816587/assets,https://api.github.com/repos/sass/libsass/releases/816587,master,https://api.github.com/repos/sass/libsass/tarball/3.1.0,https://github.com/sass/libsass/releases/tag/3.1.0,https://api.github.com/repos/sass/libsass/zipball/3.1.0,3.1.0,False,False
809339,2014-12-29T05:55:08Z,2014-12-29T05:55:21Z,Bulleit Bottle (beta2),"This is the second beta RC for Libsass 3.1.0.

### Features
- improvements to the static value look ahead parser - @xzyfer
- improvements handling of string quotes - @mgreter 

### Fixes
- fixed an edge case with `str-slice` - @xzyfer (https://github.com/sass/libsass/issues/762)
- normalise quotes in `str-slice` and `str-insert` - @xzyfer (https://github.com/sass/libsass/issues/763)
- fixed parsing of assignments with `!default` and `!global` flags - @xzyfer (https://github.com/sass/libsass/issues/759)
- fixed `!default` assignments not overriding `null` values - @xzyfer (https://github.com/sass/libsass/issues/740)
- error if a map is instantiated with a duplicate key - @xzyfer (https://github.com/sass/libsass/issues/628)
- don't output empty css block - @xzyfer (https://github.com/sass/libsass/issues/659)
- fixed some cases where number comparisons would fail - @xzyfer (https://github.com/sass/libsass/issues/590)
- fixed crashes when multiple semicolons were encountered - @xzyfer (https://github.com/sass/libsass/issues/502)
- fixed a bug with maps and `@each` with only on variable - @xzyfer (https://github.com/sass/libsass/issues/784)
- fixed a bug with string interpolation in `url()`s - @mgreter (https://github.com/sass/libsass/issues/644)
- fixed some bugs with the C API - @mgreter (https://github.com/sass/libsass/issues/776)
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/809339/assets,https://api.github.com/repos/sass/libsass/releases/809339,master,https://api.github.com/repos/sass/libsass/tarball/3.1.0-beta.2,https://github.com/sass/libsass/releases/tag/3.1.0-beta.2,https://api.github.com/repos/sass/libsass/zipball/3.1.0-beta.2,3.1.0-beta.2,False,True
804713,2014-12-23T05:00:15Z,2014-12-30T23:04:23Z,Bulleit Bottle (beta),"This is the first beta RC for LibSass 3.1.

Hot on the heels of 3.0 and in time for  the feature packed 3.1!

## Features
- implemented `@debug` - @mgreter
- implemented `@error` - @mgreter
- implemented `inspect()` - @mgreter
- implemented `feature-exists()` - @xzyfer
- implemented `unique-id()` - @xzyfer
- implemented `random()` - @xzyfer
- implemented negative `@for` loops - @mgreter 
- implemented the `not` operator - @xzyfer
- implemented `nth()` for maps - @xzyfer
- Better Windows compilation support - @mgreter @am11 
- emit `@charset ""UTF-8""` when required - @mgreter 
- major updates to the C API - @mgreter 
- implemented custom functions and importers - @mgreter 
- added support for colors `rebeccapurple` and `transparent` - @mgreter 
- added/improved build scripts for windows - @mgreter 
- added AppVeyor for windows CI builds - @mgreter 
- implemented C API to fetch compiled version - @mgreter 
- support converting angle units - @mgreter  
- significant speed boost to `map-get()` - @xzyfer

## Bug fixes
- BEM style selectors wouldn't work in come cases i.e. `&--1foo` - @xzyfer (https://github.com/sass/libsass/issues/738)
- `@return` would sometimes not exit functions - @xzyfer (https://github.com/sass/libsass/issues/736)
- no longer allow concatenating with `null` - @xzyfer (https://github.com/sass/libsass/issues/698)
- better handling of `-$foo` - @xzyfer (https://github.com/sass/libsass/issues/344)
- don't allow redefining of reserved functions - @xzyfer (https://github.com/sass/libsass/issues/713)
- correctly handle quoted map keys and `keywords()` - @xzyfer (https://github.com/sass/libsass/issues/721)
- use correct content type for embedded sourcemaps - @xdissent (https://github.com/sass/libsass/pull/723)
- improved handling of colours - @mgreter (https://github.com/sass/libsass/issues/558)
- normalize decimal output - @mgreter @xzyfer (https://github.com/sass/libsass/issues/550, https://github.com/sass/libsass/issues/623)
- `keywords()` fails gracefully - @xzyfer (https://github.com/sass/libsass/issues/672)
- allow colors and number as map keys - @xzyfer (https://github.com/sass/libsass/issues/652, https://github.com/sass/libsass/issues/534)
- better support for ie properties - @mgreter (https://github.com/sass/libsass/issues/683)
- better handling of interoplants in selectors - @xzyfer (https://github.com/sass/libsass/issues/641)
- default arguments for function arguments - @mgreter (https://github.com/sass/libsass/issues/708)
- decrementing in for loops fixed - @mgreter (https://github.com/sass/libsass/issues/703)
- improvements to sourcemap generation - @mgreter 

## Documentation

This release saw a big increase in the amount of [available documentation](https://github.com/sass/libsass/wiki) thanks to @mgreter and @drewwells!!

#### Know issues
- `!global` is parsed but the scoping rules aren't respected - (https://github.com/sass/libsass/issues/613)
- nested media queries aren't combined - (https://github.com/sass/libsass/issues/614)
- opertions in brackets like `(1/2)` are sometimes not treated as numbers - (https://github.com/sass/libsass/issues/442, https://github.com/sass/libsass/issues/590)
- still some `@extends` edge cases - (https://github.com/sass/libsass/issues/316, https://github.com/sass/libsass/issues/317, https://github.com/sass/libsass/issues/592)
- still some sourcemaps issues - (https://github.com/sass/libsass/issues/324)

Huge thanks to everyone that reported bugs, wrote specs and submitted patched. Honourable mentions to @HugoGiraudel, @xdissent, @drewwells, @jakob-e, @lunelson, @am11, @mgreter and @xzyfer for their multiple contributions which make this release possible!
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/804713/assets,https://api.github.com/repos/sass/libsass/releases/804713,master,https://api.github.com/repos/sass/libsass/tarball/3.1.0-beta,https://github.com/sass/libsass/releases/tag/3.1.0-beta,https://api.github.com/repos/sass/libsass/zipball/3.1.0-beta,3.1.0-beta,False,True
799973,2014-12-20T05:01:14Z,2014-12-20T10:10:20Z,Bulleit Bottle (alpha2),"This is the second RC for LibSass 3.1. We have a new interface available that all downstream projects should be using.

**_Please use this to test the new interface... this does not represent the final list of features! Do not use in production environments!**_
",https://api.github.com/users/xzyfer,579928,xzyfer,https://api.github.com/repos/sass/libsass/releases/799973/assets,https://api.github.com/repos/sass/libsass/releases/799973,master,https://api.github.com/repos/sass/libsass/tarball/3.1-alpha2,https://github.com/sass/libsass/releases/tag/3.1-alpha2,https://api.github.com/repos/sass/libsass/zipball/3.1-alpha2,3.1-alpha2,False,True
789103,2014-12-16T20:48:08Z,2014-12-16T23:30:34Z,Bulleit Bottle (alpha),"This is the first RC for LibSass 3.1. We have a new interface available that all downstream projects should be using. 

**_Please use this to test the new interface... this does not represent the final list of features! Do not use in production environments!**_
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/789103/assets,https://api.github.com/repos/sass/libsass/releases/789103,master,https://api.github.com/repos/sass/libsass/tarball/3.1-alpha,https://github.com/sass/libsass/releases/tag/3.1-alpha,https://api.github.com/repos/sass/libsass/zipball/3.1-alpha,3.1-alpha,False,True
677291,2014-11-04T01:42:38Z,2014-11-04T15:53:49Z,Daughter of Dragon,"Well, @xzyfer and @mgreter continue their non-stop onslaught on libsass' shortcomings. We wanted to get these fixes out ASAP again, instead of waiting for 3.1.

Main fixes / features:
- Support for keyword arguments and var-args (@xzyfer)
- Source maps now include comments and the source code itself (@mgreter)
- Basic support for... `@supports` (@xzyfer)
- Fixed bug where blocks errored when ended with a `;`
- Travis testing improvements (@mgreter)
- support for interpolated strings as map keys (@xzyfer) 
- Allow map keys to be functions (@xzyfer)
- Allow `\` in identifiers (@xzyfer)

Definitely recommend upgrading as soon as possible.
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/677291/assets,https://api.github.com/repos/sass/libsass/releases/677291,master,https://api.github.com/repos/sass/libsass/tarball/3.0.2,https://github.com/sass/libsass/releases/tag/3.0.2,https://api.github.com/repos/sass/libsass/zipball/3.0.2,3.0.2,False,False
660059,2014-10-28T17:15:51Z,2014-10-28T17:41:38Z,Son of Dragon,"Hark! Hereth is Son of DRAGON!!!!!

Oh, okay, sorry about that. I'm getting carried away. This is a minor release that adds one major feature, fixes some dastardly bugs, and improves performance.
- Looping over maps should now work w/ each #492 (@xzyfer)
- variables are now more permissive in their names #561 (@benesch)
- custom precision is back in working order (@mgreter)
- str-slice() now works #565 (@kaishin)
- map-merge() bug is fixed #554 (@xzyfer)
- media query w/ compressed output bug is fixed #566 (@xzyfer)
- memory leak fixing duty (@mgreter)
- compiler warning duty (@am11)
- maps were given a speed boost (@xzyfer)

Also, I'm proud to announce that @xzyfer and @mgreter are now officially part of the development team here at libsass headquarters. Most of the code and fixes in this release (and, let's be honest, a ton in the release before) and their dedication to making this project better in all ways makes me very comfortable letting them into the tent.

Special thanks this release to @ericam for his tireless work getting the test cases setup so we can get Susy support going!

KNOWN ISSUES:
- not behaviour is still not correct
- numeric keys in maps can get tricky
- some extends edgecases remain
- the release is still a 3.2/3.3/3.4 mongrel when it comes to behaviours.
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/660059/assets,https://api.github.com/repos/sass/libsass/releases/660059,master,https://api.github.com/repos/sass/libsass/tarball/3.0.1,https://github.com/sass/libsass/releases/tag/3.0.1,https://api.github.com/repos/sass/libsass/zipball/3.0.1,3.0.1,False,False
631726,2014-10-16T15:17:40Z,2014-10-16T15:54:22Z,Dragon Master,"## Overview

This is @hcatlin reporting in with the libsass 3.0 release. It's been a wild month here at libsass HQ (currently an airbnb in NYC). Just before SassConf I was made aware of some great work going on with the `@extends` feature and was able to get it merged in during SassConf just last week here in NYC. Since then, we've been doing 3.0 release candidates and testing with the major upstream projects. And, awesomely, a ton of great contributors have shown up to help! Mostly, I'll point out @mgreter and @xzyfer for their tireless work on this release, fixing a ton of issues.

I'd also like to call out the work of @uberska @jaddessi and @michaek for finally writing a decent `@extends` implementation. There are still some edgecases to work out (listed here: https://github.com/sass/sass-spec/tree/master/spec/libsass-todo-tests/extend-tests), but the implementation is really solid now and works very well for us mere humans.

LibSass 3.0 is officially targeting Sass 3.4 (s3.4 in libsass parlance) features in this release instead of s3.2 which was our main target for libsass 2.0 and before. libsass 3.1 will be the release where we more strictly follow 3.4 guidelines (see the list of known issues below)

**NOTE**: LibSass now requires GCC version 4.7 or higher. OS X users should be fine, but Linux users with an older OS might need to update _or_ build the package and install it as a binary.

## Features:
- Decent extends support by @uberska, @jaddessi, @themichaek
- Basic Sass Maps Support by @xzyfer
- Better UTF-8 Support @mgreter 
- call() function by @wonja 
- Better Windows Support by @mgreter 
- Spec Enhancements by @themichaek

## Bug Fixes:
- Lot's of fixes to compressed output (@xzyfer)
- Whitespace fixes (@xzyfer)
- map-remove() function fix (@xzyfer)
- color name fixes (@SparkyBluefang)
- css-filter names now supported (@benesch)
- ""----"" interpolant bug fixed (@carsonmcdonald)
- ""null"" stops printing out in compressed output (@xzyfer)

## API Changes:
- Moved `source_map_file` from context to options.
- Fix for `omit_source_map_url` (propagate to cpp_ctx).
- Removed superfluous `source_maps` from struct, generate
- Source maps when `source_map_file` string contains data.
- Added in `quote` and `unquote` functions by @mgreter 
- sass2scss is now part of the project, officially by @mgreter. No need to deal with pulling it individually. 

## Known Issues
- Support for `@each` with maps. There are workarounds for now.
- Scoped Variables. Everything is still global, which is more like 3.2.
- !global is an allowed keyword, but does nothing at the moment.
- Can't use numbers as keys in maps
- Foundation support is temporarily broken until they make a small change. Should be released soon! See a quick fix for it here. zurb/foundation#5932
- Sass Spec is currently not passing all tests against Ruby Sass 3.4. In the next phase, we will be working to fix all tests to match 3.4 behaviour exactly.

## Special Thanks To...

Xzyfer @xzyfer 
Scott Douglas @uberska
Jamie Addessi @jaddessi 
Michael Hellein @themichaek
Brian Jones @benesch 
Aaron Leung @akhleung
Wonja Fairbrother @wonja
Ian Carrico @iamcarrico 
Nikhil Benesch @benesch 
Carson McDonald @carsonmcdonald 
and everyone else who pitched in!

Also, special thanks to @bdkjones for helping to coordinate CodeKit releases and work with the Foundation team to fix and for never letting us slide on quality. ;)
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/631726/assets,https://api.github.com/repos/sass/libsass/releases/631726,master,https://api.github.com/repos/sass/libsass/tarball/3.0,https://github.com/sass/libsass/releases/tag/3.0,https://api.github.com/repos/sass/libsass/zipball/3.0,3.0,False,False
620884,2014-10-12T16:29:03Z,2014-10-12T16:36:14Z,Small Dragons Only,"Hot on the heels of rc3, which had an issue compiling with gcc that I totally missed because I'm an idiot (@hcatlin), I've reverted the -V feature and we can revisit that later. rc4!

Hoping to get this tested with node-sass.
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/620884/assets,https://api.github.com/repos/sass/libsass/releases/620884,master,https://api.github.com/repos/sass/libsass/tarball/3.0rc4,https://github.com/sass/libsass/releases/tag/3.0rc4,https://api.github.com/repos/sass/libsass/zipball/3.0rc4,3.0rc4,False,True
620783,2014-10-12T14:35:18Z,2014-10-12T14:41:03Z,A Couple Dragons!,"This is probably the last release before 3.0. Made a small change to the sass_interface.h file, requiring a source_string in the sass context.
- Lot's of fixes to compressed output (@xzyfer)
- New -V option to sassc (@jlinton)
- Maps now far more robust (@xzyfer)
- Whitespace fixes (@xzyfer)
- map-remove() function fix (@xzyfer)
- color name fixes (@SparkyBluefang)
- css-filter names now supported (@benesch)
- ""----"" interpolant bug fixed (@carsonmcdonald)
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/620783/assets,https://api.github.com/repos/sass/libsass/releases/620783,master,https://api.github.com/repos/sass/libsass/tarball/3.0rc3,https://github.com/sass/libsass/releases/tag/3.0rc3,https://api.github.com/repos/sass/libsass/zipball/3.0rc3,3.0rc3,False,True
604804,2014-10-05T19:49:57Z,2014-10-05T20:06:49Z,Thar Be Less Dragons!,"We've closed a lot of bugs and should be getting close to releasing 3.0 officially. The main change in this is there is a change in the sass_interface.h files. This is important for downstream projects as it will change the API.
- Moved `source_map_file` from context to options.
- Fix for `omit_source_map_url` (propagate to cpp_ctx).
- Removed superfluous `source_maps` from struct, generate
- source maps when `source_map_file` string contains data.

See: #505 for more info.
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/604804/assets,https://api.github.com/repos/sass/libsass/releases/604804,master,https://api.github.com/repos/sass/libsass/tarball/3.0rc2,https://github.com/sass/libsass/releases/tag/3.0rc2,https://api.github.com/repos/sass/libsass/zipball/3.0rc2,3.0rc2,False,True
599711,2014-10-02T19:05:47Z,2014-10-02T19:08:46Z,Thar Be Dragons,"Now with decent extends and sass maps support! This is an RC, so please file issues on regressions as they are discovered. We will be freezing ""new compatibilities"" for now, and focusing on regressions. 

**NOTE**: LibSass now requires GCC version 4.7 or higher.

Now Passing over 600 of the Sass specs!
- Decent extends support by @uberska, @jaddessi, @themichaek
- Basic Sass Maps Support by @xzyfer
- Better UTF-8 Support
- Better Windows Support
- Spec Enhancements by @themichaek

Pending:
- Autoconf seems to be broken. No one on the core team knows how autoconf works, so if someone wants to fix it, go ahead.

SPECIAL THANKS:
Xzyfer @xzyfer 
Scott Douglas @uberska
Jamie Addessi @jaddessi 
Michael Hellein @themichaek
Aaron Leung @akhleung 
Ian Carrico @iamcarrico 
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/599711/assets,https://api.github.com/repos/sass/libsass/releases/599711,master,https://api.github.com/repos/sass/libsass/tarball/3.0rc1,https://github.com/sass/libsass/releases/tag/3.0rc1,https://api.github.com/repos/sass/libsass/zipball/3.0rc1,3.0rc1,False,True
363956,2014-06-08T01:02:59Z,2014-06-09T10:56:46Z,LibSass 2.1 Beta,"Hot on the heels of 2.0, we are proud to release the 2.1 beta. There's been a ton of quick activity on the project due to the attention we've gotten, so had some nice new fixes to get out faster rather than slower. Plus, we have to catch up with Sass' versioning eventually, so why not go with a minor bump?
- FIXED gcc complication issues due to Makefile changes
- ADDED emscripten compilation support
- FIXED trailing commas in lists 
- FIXED escaped quotes issue
- FIXED allow selector lists as arguments to pseudo selectors

If anything in this release breaks your build, then please put in your tickets in over the next couple of days and let us know. Any further changes will be to the 2.1 branch.
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/363956/assets,https://api.github.com/repos/sass/libsass/releases/363956,master,https://api.github.com/repos/sass/libsass/tarball/2.1.0-beta,https://github.com/sass/libsass/releases/tag/2.1.0-beta,https://api.github.com/repos/sass/libsass/zipball/2.1.0-beta,2.1.0-beta,False,True
358375,2014-06-04T01:14:31Z,2014-06-05T10:34:38Z,LibSass 2.0,"After 6 months of coding, and over 200 commits, we're proud to release libsass 2.0. Since the last release, some of the internals have gotten a major rewrite and we have some exciting features rolling out with this release. As with any libsass release, none of it would be possible without [Aaron Leung](http://github.com/akhleung)'s awesome work on the project, and without [Moovweb](http://developer.moovweb.com) sponsoring his work and time on this project.

Let's go through what's changed...

## NEW! Indented Syntax Support (.sass files)

First, and biggest of these features is the _beta support for .sass files_, aka, the original indented syntax that I created years and years and years ago. As I've been touring the world giving talks about libsass (why we're doing it and how freaking hard it is) the number one thing people have asked for is this feature. Thanks to the work of Marcel Greter, we now have this feature! It's in a separate repository and, at least for now, will be managed as a side project of [sass2scss](https://github.com/mgreter/sass2scss). 

## NEW! Expanded Selector Support (BEM!)

In Ruby Sass 3.2, selectors got pickier and the new stylish BEM-selectors broke. ;( As we were developing against 3.2 as a target syntax, we followed suite. Well, with Sass 3.3, the team over at the other project decided to change it back and support crazier selectors. So! We've done it too. Now, you can BEM your projects to your heart content. 

## NEW! String Functions

Thanks to [Wonja Fairbrother](http://github.com/wonja) (another Moovweb'er), we now have support for all the major string functions that Sass supports. That's including support for..... 

## FIXED! UTF-8 Support

I'm not sure if this one counts as ""new"" or ""fixed"", but we now don't barf on UTF-8 characters thanks again to Marcel Greter. This support is pretty limited, since we aren't including any external libraries... so don't expect to go sorting your emoji or any such non-sense. But now we allow characters that would have previously blown up the house. See the discussion here: https://github.com/hcatlin/libsass/issues/244

## FIXED! Tons of Shit!

We've covered way more edge-cases and fixed way more small bugs that don't get a direct mention. But, the project has never been more stable.

## BROKEN! extends

When we started this insane project, we had no freaking idea how complicated extends is. It's one of those big hairy problems that keeps falling to the bottom of the todo list. If you want to read up on the status, https://github.com/hcatlin/libsass/issues/146 go for it. 

We know this is a big issue and sorry that it's been so long. I mean, it works _sometimes_, but it's not super stable to say the least.

## Next Up

Obviously, extends is majorly on our radar, but maybe more than that is support for Sass 3.3-style Maps. It seems that all the major libraries are using this feature now, and so it's really important that we get this feature into the next release and get it out to you all, so you can use the newest versions of the awesome Sass frameworks out there.

## How you can help!

The biggest help we could get is someone to really own and maintain Sass-Spec. It's the project that I started by pulling out the test suite from Ruby Sass and try and build a test-runner-harness thing so that it's easier to test compatibility. But, at this point, it's really limited. It would be _amazing_ to be able to have a grid of features and show text failure and passing based on features and version compatibility. It shouldn't be that technically hard (not like coding a compiler) and would really help with the future of Sass. 

This is definitely one of those ""opportunities to get famous"" kind of deal to whoever takes it over and starts making it awesome.

Again, special thanks goes out to Aaron Leung (@akhleung), Marcel Greeter (@mgreeter), Wonja Fairbrother (@wonja), Nick Schonning (@nschonni), Rowan Beentje (@rowanbeentje), Stijn Van Nieuwenhuyse (@svnieuw), Niko Sams (@nsams), tons of people I'm forgetting, and myself for not committing any code.

_Love and Hugs,_
_Hampton Catlin (@hcatlin)_
",https://api.github.com/users/hcatlin,111,hcatlin,https://api.github.com/repos/sass/libsass/releases/358375/assets,https://api.github.com/repos/sass/libsass/releases/358375,master,https://api.github.com/repos/sass/libsass/tarball/v2.0,https://github.com/sass/libsass/releases/tag/v2.0,https://api.github.com/repos/sass/libsass/zipball/v2.0,v2.0,False,False
126641,2013-12-20T16:54:31Z,2013-12-19T04:46:01Z,Release version 1.0.1,,https://api.github.com/users/jbussdieker,792768,jbussdieker,https://api.github.com/repos/sass/libsass/releases/126641/assets,https://api.github.com/repos/sass/libsass/releases/126641,master,https://api.github.com/repos/sass/libsass/tarball/v1.0.1,https://github.com/sass/libsass/releases/tag/v1.0.1,https://api.github.com/repos/sass/libsass/zipball/v1.0.1,v1.0.1,False,False
