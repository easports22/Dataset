id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8281504,2017-10-27T02:40:11Z,2017-10-27T04:01:21Z,1.0.3,"This is a hotfix release for sbt 1.0.x series.

### Bug fixes

- Fixes `~` recompiling in loop (when a source generator or sbt-buildinfo is present). [#3501][3501]/[#3634][3634] by [@dwijnand][@dwijnand]
- Fixes undercompilation on inheritance on same source. [zinc#424][zinc424] by [@eed3si9n][@eed3si9n]
- Fixes the compilation of package-protected objects. [zinc#431][zinc431] by [@jvican][@jvican]
- Workaround for Java returning `null` for `getGenericParameterTypes`. [zinc#446][zinc446] by [@jvican][@jvican]
- Fixes test detection regression. sbt 1.0.3 filters out nested objects/classes from the list, restoring compatibility with 0.13. [#3669][3669] by [@cunei][@cunei]
- Uses Scala 2.12.4 for the build definition. This includes fix for runtime reflection of empty package members under Java 9. [#3587][3587] by [@eed3si9n][@eed3si9n]
- Fixes extra `/` in Ivy style patterns. [lm#170][lm170] by [@laughedelic][@laughedelic]
- Fixes ""destination file exist"" error message by including the file name. [lm171][lm171] by [@leonardehrenfried][@leonardehrenfried]
- Fixes JDK 9 warning ""Illegal reflective access"" in library management module and Ivy. [lm173][lm173] by [@dwijnand][@dwijnand]
- Fixes `ScalaInstance` not using `allJars`, which affects IntelliJ. [#3561][3561] by [@jastice][@jastice]

### Improvements

- Adds `sbt.watch.mode` system property to allow switching back to old polling behaviour for watch. See below for more details.

#### Alternative watch mode

sbt 1.0.0 introduced a new mechanism for watching for source changes based on the NIO `WatchService` in Java 1.7. On
some platforms (namely macOS) this has led to long delays before changes are picked up. An alternative `WatchService`
for these platforms is planned for sbt 1.1.0 ([#3527][3527]), in the meantime an option to select which watch service
has been added.

The new `sbt.watch.mode` JVM flag has been added with the following supported values:

- `polling`: (default for macOS) poll the filesystem for changes (mechanism used in sbt 0.13).
- `nio` (default for other platforms): use the NIO based `WatchService`.

If you are experiencing long delays on a non-macOS machine then try adding `-Dsbt.watch.mode=polling` to your sbt
options.

[#3597][3597] by [@stringbean][@stringbean]

### Contributors

A huge thank you to everyone who's helped improve sbt and Zinc 1 by using them, reporting bugs, improving our documentation, porting builds, porting plugins, and submitting and reviewing pull requests.

This release was brought to you by 15 contributors, according to `git shortlog -sn --no-merges v1.0.2..v1.0.3` on sbt, zinc, librarymanagement, util, io, and website: Eugene Yokota, Dale Wijnand, Michael Stringer, Jorge Vicente Cantero (jvican), Alexey Alekhin, Antonio Cunei, Andrey Artemov, Jeffrey Olchovy, Kenji Yoshida (xuwei-k), Dominik Winter, Long Jinwei, Arnout Engelen, Justin Kaeser, Leonard Ehrenfried, Sakib Hadžiavdić. Thank you!

  [@dwijnand]: https://github.com/dwijnand
  [@cunei]: https://github.com/cunei
  [@eed3si9n]: https://github.com/eed3si9n
  [@jvican]: https://github.com/jvican
  [@stringbean]: https://github.com/stringbean
  [@laughedelic]: https://github.com/laughedelic
  [@leonardehrenfried]: https://github.com/leonardehrenfried
  [@jastice]: https://github.com/jastice
  [3669]: https://github.com/sbt/sbt/pull/3669
  [3583]: https://github.com/sbt/sbt/issues/3583
  [3587]: https://github.com/sbt/sbt/issues/3587
  [3527]: https://github.com/sbt/sbt/issues/3527
  [3597]: https://github.com/sbt/sbt/pull/3597
  [3501]: https://github.com/sbt/sbt/issues/3501
  [3634]: https://github.com/sbt/sbt/pull/3634
  [lm170]: https://github.com/sbt/librarymanagement/pull/170
  [lm171]: https://github.com/sbt/librarymanagement/pull/171
  [lm173]: https://github.com/sbt/librarymanagement/pull/173
  [zinc424]: https://github.com/sbt/zinc/pull/424
  [zinc431]: https://github.com/sbt/zinc/pull/431
  [zinc446]: https://github.com/sbt/zinc/pull/446
  [3561]: https://github.com/sbt/sbt/pull/3561",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/8281504/assets,https://api.github.com/repos/sbt/sbt/releases/8281504,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.3,https://github.com/sbt/sbt/releases/tag/v1.0.3,https://api.github.com/repos/sbt/sbt/zipball/v1.0.3,v1.0.3,False,False
7982596,2017-10-03T16:23:29Z,2017-10-03T18:06:06Z,1.1.0-M1,"https://github.com/sbt/sbt/compare/v1.0.2...v1.1.0-M1
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7982596/assets,https://api.github.com/repos/sbt/sbt/releases/7982596,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.1.0-M1,https://github.com/sbt/sbt/releases/tag/v1.1.0-M1,https://api.github.com/repos/sbt/sbt/zipball/v1.1.0-M1,v1.1.0-M1,False,True
7781132,2017-09-16T19:31:05Z,2017-09-17T00:37:05Z,1.0.2,"This is a hotfix release for sbt 1.0.x series.

### Bug fixes

- Fixes terminal echo issue. [#3507][3507] by [@kczulko][@kczulko]
- Fixes `deliver` task, and adds `makeIvyXml` as a more sensibly named task. [#3487][3487] by [@cunei][@cunei]
- Replaces the deprecated use of `OkUrlFactory`, and fixes connection leaks. [lm#164][lm164] by [@dpratt][@dpratt]
- Refixes false positive in DSL checker for setting keys. [#3513][3513] by [@dwijnand][@dwijnand]
- Fixes `run` and `bgRun` not picking up changes to directories in the classpath. [#3517][3517] by [@dwijnand][@dwijnand]
- Fixes `++` so it won't change the value of `crossScalaVersion`. [#3495][3495]/[#3526][3526] by [@dwijnand][@dwijnand]
- Fixes sbt server missing some messages. [#3523][3523] by [@guillaumebort][@guillaumebort]
- Refixes `consoleProject`. [zinc#386][zinc386] by [@dwijnand][@dwijnand]
- Adds JVM flag `sbt.gigahorse` to enable/disable the internal use of Gigahorse to workaround NPE in `JavaNetAuthenticator` when used in conjunction with `repositories` override. [lm#167][lm167] by [@cunei][@cunei]
- Adds JVM flag `sbt.server.autostart` to enable/disable the automatic starting of sbt server with the sbt shell. This also adds new `startServer` command to manually start the server. by [@eed3si9n][@eed3si9n]

### Internal

- Fixes unused import warnings. [#3533][3533] by [@razvan-panda][@razvan-panda]

### Contributors

A huge thank you to everyone who's helped improve sbt and Zinc 1 by using them, reporting bugs, improving our documentation, porting plugins, and submitting and reviewing pull requests.

This release was brought to you by 19 contributors, according to `git shortlog -sn --no-merges v1.0.1..v1.0.2` on sbt, zinc, librarymanagement, and website: Dale Wijnand, Eugene Yokota, Kenji Yoshida (xuwei-k), Antonio Cunei, David Pratt, Karol Cz (kczulko), Amanj Sherwany, Emanuele Blanco, Eric Peters, Guillaume Bort, James Roper, Joost de Vries, Marko Elezovic, Martynas Mickevičius, Michael Stringer, Răzvan Flavius Panda, Peter Vlugter, Philippus Baalman, and Wiesław Popielarski. Thank you!

  [@dwijnand]: https://github.com/dwijnand
  [@cunei]: https://github.com/cunei
  [@eed3si9n]: https://github.com/eed3si9n
  [@dpratt]: https://github.com/dpratt
  [@kczulko]: https://github.com/kczulko
  [@razvan-panda]: https://github.com/razvan-panda
  [@guillaumebort]: https://github.com/guillaumebort
  [3487]: https://github.com/sbt/sbt/pull/3487
  [lm164]: https://github.com/sbt/librarymanagement/pull/164
  [3495]: https://github.com/sbt/sbt/issues/3495
  [3526]: https://github.com/sbt/sbt/pull/3526
  [3513]: https://github.com/sbt/sbt/pull/3513
  [3517]: https://github.com/sbt/sbt/pull/3517
  [3507]: https://github.com/sbt/sbt/pull/3507
  [3533]: https://github.com/sbt/sbt/pull/3533
  [3523]: https://github.com/sbt/sbt/pull/3523
  [zinc386]: https://github.com/sbt/zinc/pull/386
  [lm167]: https://github.com/sbt/librarymanagement/pull/167
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7781132/assets,https://api.github.com/repos/sbt/sbt/releases/7781132,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.2,https://github.com/sbt/sbt/releases/tag/v1.0.2,https://api.github.com/repos/sbt/sbt/zipball/v1.0.2,v1.0.2,False,False
7547428,2017-08-28T17:25:48Z,2017-08-28T18:51:26Z,1.0.1,"This is a hotfix release for sbt 1.0.x series.

### Improvements

- Various improves around watch source feature. See below.

### Bug fixes

- Fixes command support for cross building `+` command. The `+` added to sbt 1.0 traveres over the subprojects, respecting `crossScalaVersions`; however, it no longer accepted commands as arguments. This brings back the support for it. [#3446][3446] by [@jroper][@jroper]
- Fixes `addSbtPlugin` to use the correct version of sbt during cross building. [#3442][3442] by [@dwijnand][@dwijnand]
- Fixes `run in Compile` task not including `Runtime` configuration, by reimplementing `run` in terms of `bgRun`. [#3477][3477] by [@eed3si9n][@eed3si9n]
- Shows `actual` as a potential option of `inspect` [#3335][3335] by [@Duhemm][@Duhemm]
- Includes base directory to watched sources. [#3439][3439] by [@Duhemm][@Duhemm]
- Adds an attempt to workaround intermittent `NullPointerException` arround logging. [util#121][util121] by [@eed3si9n][@eed3si9n]
- Reverts a bad forward porting. [#3481][3481] by [@eed3si9n][@eed3si9n]

### WatchSource

The watch source feature went through a major change from sbt 0.13 to sbt 1.0 using NIO; however, it did not have clear migration path, so we are rectifying that in sbt 1.0.1.

First, `sbt.WatchSource` is a new alias for `sbt.internal.io.Source`. Hopefully this is easy enough to remember because the key is named `watchSources`. Next, `def apply(base: File)` and `def apply(base: File, includeFilter: FileFilter, excludeFilter: FileFilter)` constructors were added to the companion object of `sbt.WatchSource`.

For backward compatiblity, sbt 1.0.1 adds `+=` support (`Append` instance) from `File` to `Seq[WatchSource]`.

So, if you have a directory you want to watch:

```scala
watchSources += WatchSource(sourceDirectory.value)
```

If you have a list of files:

```scala
watchSources ++= (sourceDirectory.value ** ""*.scala"").get
```

[#3438][3438] by [@Duhemm][@Duhemm]; [#3478][3478] and [io#74][io74] by [@eed3si9n][@eed3si9n]

  [3335]: https://github.com/sbt/sbt/pull/3335
  [3438]: https://github.com/sbt/sbt/pull/3438
  [3478]: https://github.com/sbt/sbt/pull/3478
  [3439]: https://github.com/sbt/sbt/pull/3439
  [io74]: https://github.com/sbt/io/pull/74
  [3442]: https://github.com/sbt/sbt/pull/3442
  [3446]: https://github.com/sbt/sbt/pull/3446
  [3477]: https://github.com/sbt/sbt/pull/3477
  [3481]: https://github.com/sbt/sbt/pull/3481
  [util121]: https://github.com/sbt/util/pull/121
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: http://github.com/dwijnand
  [@jvican]: https://github.com/jvican
  [@Duhemm]: https://github.com/Duhemm
  [@jroper]: https://github.com/jroper
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7547428/assets,https://api.github.com/repos/sbt/sbt/releases/7547428,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.1,https://github.com/sbt/sbt/releases/tag/v1.0.1,https://api.github.com/repos/sbt/sbt/zipball/v1.0.1,v1.0.1,False,False
7342785,2017-08-10T04:48:50Z,2017-08-10T21:31:22Z,1.0.0,"### Features, fixes, changes with compatibility implications

See [Migrating from sbt 0.13.x][Migrating-from-sbt-013x] also.

- sbt 1.0 uses **Scala 2.12** for build definitions and plugins. This also requires JDK 8.
- Many of the case classes are replaced with pseudo case classes generated using Contraband. Migrate `.copy(foo = xxx)` to `withFoo(xxx)`.
  For example, `UpdateConfiguration`, `RetrieveConfiguration`, `PublishConfiguration` are refactored to use builder pattern.
- Zinc 1 drops support for Scala 2.9 and earlier. Scala 2.10 must use 2.10.2 and above. Scala 2.11 must use 2.11.2 and above. (latest patch releases are recommended)
- `config(""xyz"")` must be directly assigned to a *capitalized* `val`, like `val Xyz = config(""xyz"")`. This captures the lhs identifier into the configuration so we can use it from the shell later.
- Changes `publishTo` and `otherResolvers` from SettingKeys to TaskKeys. [#2059][2059]/[#2662][2662] by [@dwijnand][@dwijnand]
- `Path.relativizeFile(baseFile, file)` is renamed to `IO.relativizeFile(baseFile, file)`.
- `PathFinder`'s `.***` method is renamed to `.allPaths` method.
- `PathFinder.x_!(mapper)` is moved to `def pair` on `PathFinder`.
- A number of the methods on `sbt.Path` (such as `relativeTo` and `rebase` and `flat`) are now no longer in the
    default namespace by virtue of being mixed into the sbt package object. Use `sbt.io.Path` to access them
    again.
- sbt 1.0 renames `Global` as scope component to `Zero` to disambiguate from `GlobalScope`. [@eed3si9n][@eed3si9n]
- sbt 1.0 uses `ConfigRef` in places where `String` was used to reference configuration, such as `update.value.configuration(...)`. Pass in `Configuration`, which implicitly converts to `ConfigRef`.
- Changes `sourceArtifactTypes` and `docArtifactTypes` from `Set[String]` to `Seq[String]` settings.
- Renames early command feature from `--<command>` to `early(<command>)`.
- Drops sbt 0.12 style hyphen-separated key names (use `publishLocal` instead of `publish-local`).
- Log options `-error`, `-warn`, `-info`, `-debug` are added as shorthand for `""early(error)""` etc.
- `sbt.Process` and `sbt.ProcessExtra` are dropped. Use `scala.sys.process` instead.
- `incOptions.value.withNameHashing(...)` option is removed because name hashing is always on.
- `TestResult.Value` is now called `TestResult`.
- The scripted plugin is cross-versioned now, so you must use `%%` when depending on it.

**Dropped dreprecations**:

- sbt 0.12 style `Build` trait that was deprecated in sbt 0.13.12, is removed. Please [migrate to build.sbt](Migrating-from-sbt-013x.html#Migrating+from+the+Build+trait). Auto plugins and `Build` trait do not work well together, and its feature is now largely subsumed by multi-project build.sbt.
- sbt 0.12 style `Project(...)` constructor is restricted down to two parameters. This is because `settings` parameter does not work well with Auto Plugins. Use `project` instead.
- sbt 0.12 style key dependency operators `<<=`, `<+=`, `<++=` are removed. Please [migrate to :=, +=, and ++=](Migrating-from-sbt-013x.html#Migrating+simple+expressions). These operators have been sources of confusion for many users, and have long been removed from 0.13 docs, and have been formally deprecated since sbt 0.13.13.
- Non-auto `sbt.Plugin` trait is dropped. Please migrate to AutoPlugin. Auto plugins are easier to configure, and work better with each other.
- Removes the `settingsSets` method from `Project` (along with `add/setSbtFiles`).
- Drops deprecated `InputTask` `apply` method and `inputTask` DSL method. Use `Def.inputTask` and `Def.spaceDelimited().parsed`.
- Drops deprecated `ProjectReference` implicit lifts. Use `RootProject(<uri>)`, `RootProject(<file>)` or `LocalProject(<string>)`.
- Drops deprecated `seq(..)` DSL method. Use `Seq` or pass in the settings without wrapping.
- Drops deprecated `File`/`Seq[File]` setting enrichments. Use `.value` and `Def.setting`.
- Drops deprecated `SubProcess` `apply` overload. Use `SubProcess(ForkOptions(runJVMOptions = ..))`.
- Drops `toError(opt: Option[String]): Unit` (equivalent to `opt foreach sys.error`); if used to wrap
    `ScalaRun#run` then the replacement is `scalaRun.run(...).failed foreach (sys error _.getMessage)`

### Features

- New incremental compiler called Zinc 1. Details below.
- The interactive shell adds network API. Details below.
- Library management API and parallel artifact download. See below.
- sbt 1.0's logging supports event logging. See below.
- Scala Center contributed static validation of `build.sbt`. See below
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.

### Fixes

- Fixes test content log not showing up. [#3198][3198]/[util#80][util80] by [@eed3si9n][@eed3si9n]
- Fixes confusing log about ""Unable to parse"". [lm#98][lm98] by [@jvican][@jvican]
- Fixes `console` task. [zinc#295][zinc295] by [@dwijnand][@dwijnand]
- Fixes spurious recompilations when unrelated constructor changes. [zinc#288][zinc288] by [@smarter][@smarter]
- Fixes restligeist macro for old operators. [#3218][3218] by [@eed3si9n][@eed3si9n]
- Fixes task caching of `update` task. [#3233][3233] by [@eed3si9n][@eed3si9n]
- Fixes ncurses-JLine issue by updating to JLine 2.14.4. [util#81][util81] by [@Rogach][@Rogach]

### Improvements

- Scala Center contributed a Java-friendly Zinc API. This was a overhaul of the Zinc internal API for a good Scala integration with other build tools. [zinc#304][zinc304] by [@jvican][@jvican]
- Scala Center contributed a binary format for Zinc's internal storage. See below
- The startup log level is dropped to `-error` in script mode using `scalas`. [#840][840] by [@eed3si9n][@eed3si9n]
- Replace cross building support with sbt-doge. This allows builds with projects that have multiple different combinations of cross scala versions to be cross built correctly.  The behaviour of ++ is changed so that it only updates the Scala version of projects that support that Scala version, but the Scala version can be post fixed with ! to force it to change for all projects. A -v argument has been added that prints verbose information about which projects are having their settings changed along with their cross scala versions. [#2613][2613] by [@jroper][@jroper]
- `ivyLoggingLevel` is dropped to `UpdateLogging.Quiet` when CI environment is detected. [@eed3si9n][@eed3si9n]
- Add logging of the name of the different `build.sbt` (matching `*.sbt`) files used. [#1911][1911] by [@valydia][@valydia]
- Add the ability to call `aggregate` for the current project inside a build sbt file. By [@xuwei-k][@xuwei-k]
- Add new global setting `asciiGraphWidth` that controls the maximum width of the ASCII graphs printed by commands like `inspect tree`. Default value corresponds to the previously hardcoded value of 40 characters. By [@RomanIakovlev][@RomanIakovlev].
- Revamped documentation for [Scopes](www.scala-sbt.org/0.13/docs/Scopes.html), and added [Scope Delegation](www.scala-sbt.org/0.13/docs/Scope-Delegation.html). [@eed3si9n][@eed3si9n]
- Adds support for cross-versioned exclusions. [#1518][1518]/[lm#88][lm88] by [@jvican][@jvican]
- Adds new offline mode to the Ivy-based library management. [lm#92][lm92] by [@jvican][@jvican]
- A number of features related to dependency locking. See below.
- Improved eviction warning presentation. See below.
- A better main class detection. [zinc#287][zinc287] by [@smarter][@smarter]
- For faster startup, sbt will use Java refection to discover `autoImport` . [#3115][3115] by [@jvican][@jvican]
- For faster startup, reuse the same global instance for parsing. [#3115][3115] by [@jvican][@jvican]
- Adds `InteractionService` from sbt-core-next to keep compatibility with sbt 0.13. [#3182][3182] by [@eed3si9n][@eed3si9n]
- Adds new `WatchService` that abstracts `PollingWatchService` and Java NIO. [io#47][io47] by [@Duhemm][@Duhemm] on behalf of The Scala Center.
- Adds variants of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`. See below for details.
- `Path.directory` and `Path.contentOf` are donated from sbt-native-packager [io#38][io38] by [@muuki88][@muuki88]
- ApiDiff feature used to debug Zinc uses Scala implementation borrowed from Dotty. [zinc#346][zinc346] by [@Krever][@Krever]
- In Zinc internal, make ExtractAPI use perRunCaches. [zinc#347][zinc347] by [@gheine][@gheine]

#### Internals

- Adopted Scalafmt for formatting the source code using neo-scalafmt.
- Scala Center contributed a redesign of the scripted test framework that has batch mode execution. Scripted now reuses the same sbt instance to run sbt tests, which reduces the CI build times by 50% [#3151][3151] by [@jvican][@jvican]
- sbt 1.0.0-M6 is built using sbt 1.0.0-M5. [#3184][3184] by [@dwijnand][@dwijnand]

### Details of major changes

### Zinc 1: Class-based name hashing

A major improvement brought into Zinc 1.0 by Grzegorz Kossakowski (commissioned by Lightbend) is class-based name hashing, which will speed up the incremental compilation of Scala in large projects.

Zinc 1.0's name hashing tracks your code dependendencies at the class level, instead of at the source file level. The GitHub issue [sbt/sbt#1104](https://github.com/sbt/sbt/issues/1104) lists some comparisons of adding a method to an existing class in some projects:

```
ScalaTest   AndHaveWord class:          Before 49s, After 4s (12x)
Specs2      OptionResultMatcher class:  Before 48s, After 1s (48x)
scala/scala Platform class:             Before 59s, After 15s (3.9x)
scala/scala MatchCodeGen class:         Before 48s, After 17s (2.8x)
```

This depends on some factors such as how your classes are organized, but you can see 3x ~ 40x improvements. The reason for the speedup is because it compiles fewer source files than before by untangling the classes from source files. In the example adding a method to scala/scala's Platform class, sbt 0.13's name hashing used to compile 72 sources, but the new Zinc compiles 6 sources.

#### Zinc API changes

- Java classes under the `xsbti.compile` package such as `IncOptions` hides the constructor. Use the factory method `xsbti.compile.Foo.of(...)`.
- Renames `ivyScala: IvyScala` key to `scalaModuleInfo: ScalaModuleInfo`.
- `xsbti.Reporter#log(...)` takes `xsbti.Problem` as the parameter. Call `log(problem.position, problem.message, problem.severity)` to delegate to the older `log(...)`.
- `xsbi.Maybe`, `xsbti.F0`, and `sxbti.F1` are changed to corresponding Java 8 classes `java.util.Optional`, `java.util.Supplier` and `java.util.Function`.
- Removes unused ""resident"" option. [zinc#345][zinc345] by [@lukeindykiewicz][@lukeindykiewicz]

#### sbt server: JSON API for tooling integration

sbt 1.0 includes server feature, which allows IDEs and other tools to query the build for settings, and invoke commands via a JSON API. Similar to the way that the interactive shell in sbt 0.13 is implemented with `shell` command, ""server"" is also just `shell` command that listens to both human input and network input. As a user, there should be minimal impact because of the server.

In March 2016, we [rebooted](http://eed3si9n.com/sbt-server-reboot) the ""server"" feature to make it as small as possible. We worked in collaboration with JetBrains' @jastice who works on IntelliJ's sbt interface to narrow down the feature list. sbt 1.0 will not have all the things we originally wanted, but in the long term, we hope to see better integration between IDE and sbt ecosystem using this system. For example, IDEs will be able to issue the compile task and retrieve compiler warning as JSON events:

```
{""type"":""xsbti.Problem"",""message"":{""category"":"""",""severity"":""Warn"",""message"":""a pure expression does nothing in statement position; you may be omitting necessary parentheses"",""position"":{""line"":2,""lineContent"":""  1"",""offset"":29,""pointer"":2,""pointerSpace"":""  "",""sourcePath"":""/tmp/hello/Hello.scala"",""sourceFile"":""file:/tmp/hello/Hello.scala""}},""level"":""warn""}
```

Another related feature that was added is the `bgRun` task which, for example, enables a server process to be run in the background while you run tests against it.

#### Event logging

sbt 1.0 introduces event logging implemented using Log4J 2 and sjson-new.
In addition to the regular String-based logging, you can now send case classes and Contraband-generated pseudo case classes to the logger:

    def registerStringCodec[A: ShowLines: TypeTag]: Unit = ...
    final def debugEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Debug, event)
    final def infoEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Info, event)
    final def warnEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Warn, event)
    final def errorEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Error, event)

Various events such as `[success]` message are sent internally via event logging.
We are hoping that this mechanism can be used in conjunction with server so plugins and compilers can publish JSON events.

Since the logger uses Log4J 2 internally, we now provide SLF4J binding.

#### Static validation of build.sbt

sbt 1.0 prohibits `.value` calls inside the bodies of if expressions and anonymous functions in a task, `@sbtUnchecked` annotation can be used to override the check.

The static validation also catches if you forget to call `.value` in a body of a task.

[#3216][3216] and [#3225][3225] by [@jvican][@jvican]

#### Eviction warning presentation

sbt 1.0 improves the eviction warning presetation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

#### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-M5
```

Your plugin will now build with sbt 1.0.0-M5 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0.0-M5`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-M5"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n] (forward ported from 0.13.16-M1)

#### CopyOptions

sbt IO 1.0 add variant of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`.
`CopyOptions()` is an example of pseudo case class similar to the builder pattern.

```scala
import sbt.io.{ IO, CopyOptions }

IO.copyDirectory(source, target)

// The above is same as the following
IO.copyDirectory(source, target, CopyOptions()
  .withOverwrite(false)
  .withPreserveLastModified(true)
  .withPreserveExecutable(true))
```

[io#53][io53] by [@dwijnand][@dwijnand]

#### Library management API and parallel artifact download

sbt 1.0 adds Library management API co-authored by Eugene Yokota ([@eed3si9n][@eed3si9n]) from Lightbend and Martin Duhem ([@Duhemm][@Duhemm]) from Scala Center.
This API aims to abstract Apache Ivy as well as alternative dependency resolution engines Ivy, cached resolution, and Coursier.

Parallel artifact download for Ivy engine was contributed by Jorge ([@jvican][@jvican]) from Scala Center.
It also introduces Gigahorse OkHttp as the Network API, and it uses Square OkHttp for artifact download as well.

[lm#124][lm124] by [@eed3si9n][@eed3si9n]/[@Duhemm][@Duhemm],
[lm#90][lm90] by [@jvican][@jvican]/[@jsuereth][@jsuereth]
and [lm#104][lm104] by [@eed3si9n][@eed3si9n].

#### Binary format for Zinc's internal storage

Jorge ([@jvican][@jvican]) from Scala Center contributed a binary format for Zinc's internal storage using Google Procol Buffer.
The new format provides us with three main advantages:

1. Backwards and forwards binary compatibility at the analysis format level.
2. Faster (1.5 ~ 2x) serialization/deserialization of the analysis file.
3. Provides a better way to make the analysis file machine-independent.

[zinc#351][zinc351] by [@jvican][@jvican]

#### Dependency locking

Dependency locking feature is still in progress, but Jorge ([@jvican][@jvican]) from Scala Center has added a number of related features
that would should work together to allow dependency locking.

- Frozen mode to the Ivy-based library management, which makes sure that the resolution is always intransitive. [lm#100][lm100]
- Adds support to specify a resolver for dependencies. [lm#97][lm97]
- Adds ""managed checksums"", which tells Ivy to skip the checksum process. [lm#111][lm111]

#### Contributors

Too many people to thank here. See [Credits][Credits]

  [Credits]: http://www.scala-sbt.org/1.x/docs/Credits.html
  [Migrating-from-sbt-013x]: http://www.scala-sbt.org/1.x/docs/Migrating-from-sbt-013x.html
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: http://github.com/dwijnand
  [@jvican]: https://github.com/jvican
  [@Duhemm]: https://github.com/Duhemm
  [@jsuereth]: https://github.com/jsuereth
  [@gkossakowski]: https://github.com/gkossakowski
  [sbt-1-0-roadmap]: http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/
  [@eed3si9n]: https://github.com/eed3si9n
  [@jroper]: https://github.com/jroper
  [@valydia]: https://github.com/valydia
  [@RomanIakovlev]: https://github.com/RomanIakovlev
  [@smarter]: https://github.com/smarter
  [@jrudolph]: https://github.com/jrudolph
  [@muuki88]: https://github.com/muuki88
  [@Rogach]: https://github.com/Rogach
  [@Krever]: https://github.com/Krever
  [@lukeindykiewicz]: https://github.com/lukeindykiewicz
  [@gheine]: https://github.com/gheine
  [840]: https://github.com/sbt/sbt/issues/840
  [2613]: https://github.com/sbt/sbt/pull/2613
  [1911]: https://github.com/sbt/sbt/issues/1911
  [2059]: https://github.com/sbt/sbt/issues/2059
  [2662]: https://github.com/sbt/sbt/pull/2662
  [3133]: https://github.com/sbt/sbt/pull/3133
  [util80]: https://github.com/sbt/util/pull/80
  [3198]: https://github.com/sbt/sbt/issues/3198
  [lm88]: https://github.com/sbt/librarymanagement/pull/88
  [1518]: https://github.com/sbt/sbt/issues/1518
  [lm90]: https://github.com/sbt/librarymanagement/pull/90
  [lm92]: https://github.com/sbt/librarymanagement/pull/92
  [lm98]: https://github.com/sbt/librarymanagement/pull/98
  [lm100]: https://github.com/sbt/librarymanagement/pull/100
  [lm111]: https://github.com/sbt/librarymanagement/pull/111
  [lm104]: https://github.com/sbt/librarymanagement/pull/104
  [lm97]: https://github.com/sbt/librarymanagement/pull/97
  [lm124]: https://github.com/sbt/librarymanagement/pull/124
  [3202]: https://github.com/sbt/sbt/pull/3202
  [zinc295]: https://github.com/sbt/zinc/pull/295
  [zinc287]: https://github.com/sbt/zinc/pull/287
  [zinc288]: https://github.com/sbt/zinc/pull/288
  [zinc304]: https://github.com/sbt/zinc/pull/304
  [zinc346]: https://github.com/sbt/zinc/pull/346
  [zinc345]: https://github.com/sbt/zinc/pull/345
  [zinc347]: https://github.com/sbt/zinc/pull/347
  [zinc351]: https://github.com/sbt/zinc/pull/351
  [3115]: https://github.com/sbt/sbt/pull/3115
  [3182]: https://github.com/sbt/sbt/pull/3182
  [3151]: https://github.com/sbt/sbt/pull/3151
  [3184]: https://github.com/sbt/sbt/pull/3184
  [3216]: https://github.com/sbt/sbt/pull/3216
  [3218]: https://github.com/sbt/sbt/pull/3218
  [3225]: https://github.com/sbt/sbt/pull/3225
  [3233]: https://github.com/sbt/sbt/pull/3233
  [io47]: https://github.com/sbt/io/pull/47
  [io53]: https://github.com/sbt/io/pull/53
  [io38]: https://github.com/sbt/io/pull/38
  [util81]: https://github.com/sbt/util/pull/81
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7342785/assets,https://api.github.com/repos/sbt/sbt/releases/7342785,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.0,https://github.com/sbt/sbt/releases/tag/v1.0.0,https://api.github.com/repos/sbt/sbt/zipball/v1.0.0,v1.0.0,False,False
7213911,2017-07-28T22:48:46Z,2017-07-28T23:32:21Z,1.0.0-RC3,"See [sbt 1.0 roadmap and beta-1][sbt-1-0-roadmap] for scheduled timeline.

### sbt 1.0.0-RC3

This is the RC-3 release of sbt 1.0.

#### Features, fixes, changes with compatibility implications

- Many of the case classes are replaced with pseudo case classes generated using Contraband. Migrate `.copy(foo = xxx)` to `withFoo(xxx)`.
- sbt 1.0 uses Scala 2.12 for build definitions and plugins. This also requires JDK 8.
- Non-auto `sbt.Plugin` trait is dropped. Please migrate to AutoPlugin. Auto plugins are easier to configure, and work better with each other.
- sbt 0.12 style `Build` trait that was deprecated in sbt 0.13.12, is removed. Please [migrate to build.sbt](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+from+the+Build+trait). Auto plugins and `Build` trait do not work well together, and its feature is now largely subsumed by multi-project build.sbt.
- sbt 0.12 style `Project(...)` constructor is restricted down to two parameters. This is because `settings` parameter does not work well with Auto Plugins. Use `project` instead.
- sbt 0.12 style key dependency operators `<<=`, `<+=`, `<++=` are removed. Please [migrate to :=, +=, and ++=](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+simple+expressions). These operators have been sources of confusion for many users, and have long been removed from 0.13 docs, and have been formally deprecated since sbt 0.13.13.
- sbt 0.12 style tuple enrichement DSL, which was deprecated in sbt 0.13.13, is opt-in under `sbt.TupleSyntax`. [#2762][2762]/[#3291][3291] by [@dwijnand][@dwijnand]
- Zinc 1 drops support for Scala 2.9 and earlier. Scala 2.10 must use 2.10.2 and above. Scala 2.11 must use 2.11.2 and above. (latest patch releases are recommended)
- `config(""tooling"")` must be directly assigned to a *capitalized* `val`, like `val Tooling = config(""tooling"")`. This captures the lhs identifier into the configuration so we can use it from the shell later.
- Changes `publishTo` and `otherResolvers` from SettingKeys to TaskKeys. [#2059][2059]/[#2662][2662] by [@dwijnand][@dwijnand]
- `Path.relativizeFile(baseFile, file)` is renamed to `IO.relativizeFile(baseFile, file)`.
- `PathFinder`'s `.***` method is renamed to `.allPaths` method.
- `PathFinder.x_!(mapper)` is moved to `def pair` on `PathFinder`.
- Drops sbt 0.12 style hyphen-separated key names (use `publishLocal` instead of `publish-local`).
- Renames early command feature from `--<command>` to `early(<command>)`.
- Log options `-error`, `-warn`, `-info`, `-debug` are added as shorthand for `""early(error)""` etc.
- `sbt.Process` and `sbt.ProcessExtra` are dropped. Use `scala.sys.process` instead.
- `incOptions.value.withNameHashing(...)` option is removed because name hashing is always on.
- `TestResult.Value` is now called `TestResult`.
- The scripted plugin is cross-versioned now, so you must use `%%` when depending on it
- Removes the `settingsSets` method from `Project` (along with `add/setSbtFiles`).
- Drops deprecated `InputTask` `apply` method and `inputTask` DSL method. Use `Def.inputTask` and `Def.spaceDelimited().parsed`.
- Drops deprecated `ProjectReference` implicit lifts. Use `RootProject(<uri>)`, `RootProject(<file>)` or `LocalProject(<string>)`.
- Drops deprecated `seq(..)` DSL method. Use `Seq` or pass in the settings without wrapping.
- Drops deprecated `File`/`Seq[File]` setting enrichments. Use `.value` and `Def.setting`.
- Drops deprecated `SubProcess` `apply` overload. Use `SubProcess(ForkOptions(runJVMOptions = ..))`.
- Drops `toError(opt: Option[String]): Unit` (equivalent to `opt foreach sys.error`); if used to wrap
    `ScalaRun#run` then the replacement is `scalaRun.run(...).failed foreach (sys error _.getMessage)`
- A number of the methods on `sbt.Path` (such as `relativeTo` and `rebase` and `flat`) are now no longer in the
    default namespace by virtue of being mixed into the sbt package object. Use `sbt.io.Path` to access them
    again.
- sbt 1.0 renames `Global` as scope component to `Zero` to disambiguate from `GlobalScope`. [@eed3si9n][@eed3si9n]
- sbt 1.0 uses `ConfigRef` in places where `String` was used to reference configuration, such as `update.value.configuration(...)`. Pass in `Configuration`, which implicitly converts to `ConfigRef`.
- Changes `sourceArtifactTypes` and `docArtifactTypes` from `Set[String]` to `Seq[String]` settings.
- `Command.process(..)` is removed. Use `""cmd"" :: state`.

The Scala Center is working with Lightbend to provide [an automatic migration tool][sbt-migration-rewrites].

#### Features

- New incremental compiler called Zinc 1. Details below.
- The interactive shell is adds network API. Details below.
- Library management API and parallel artifact download. See below.
- sbt 1.0's logging supports event logging. See below.
- Scala Center contributed static validation of `build.sbt`. See below
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.

#### Fixes

- Fixes test content log not showing up. [#3198][3198]/[util#80][util80] by [@eed3si9n][@eed3si9n]
- Fixes confusing log about ""Unable to parse"". [lm#98][lm98] by [@jvican][@jvican]
- Fixes `console` task. [zinc#295][zinc295] by [@dwijnand][@dwijnand]
- Fixes spurious recompilations when unrelated constructor changes. [zinc#288][zinc288] by [@smarter][@smarter]
- Fixes restligeist macro for old operators. [#3218][3218] by [@eed3si9n][@eed3si9n]
- Fixes task caching of `update` task. [#3233][3233] by [@eed3si9n][@eed3si9n]
- Fixes ncurses-JLine issue by updating to JLine 2.14.4. [util#81][util81] by [@Rogach][@Rogach]

#### Improvements

- Scala Center contributed a Java-friendly Zinc API. This was a overhaul of the Zinc internal API for a good Scala integration with other build tools. [zinc#304][zinc304] by [@jvican][@jvican]
- Scala Center contributed a binary format for Zinc's internal storage. See below
- The startup log level is dropped to `-error` in script mode using `scalas`. [#840][840] by [@eed3si9n][@eed3si9n]
- Replace cross building support with sbt-doge. This allows builds with projects that have multiple different combinations of cross scala versions to be cross built correctly.  The behaviour of ++ is changed so that it only updates the Scala version of projects that support that Scala version, but the Scala version can be post fixed with ! to force it to change for all projects. A -v argument has been added that prints verbose information about which projects are having their settings changed along with their cross scala versions. [#2613][2613] by [@jroper][@jroper]
- `ivyLoggingLevel` is dropped to `UpdateLogging.Quiet` when CI environment is detected. [@eed3si9n][@eed3si9n]
- Add logging of the name of the different `build.sbt` (matching `*.sbt`) files used. [#1911][1911] by [@valydia][@valydia]
- Add the ability to call `aggregate` for the current project inside a build sbt file. By [@xuwei-k][@xuwei-k]
- Add new global setting `asciiGraphWidth` that controls the maximum width of the ASCII graphs printed by commands like `inspect tree`. Default value corresponds to the previously hardcoded value of 40 characters. By [@RomanIakovlev][@RomanIakovlev].
- Revamped documentation for [Scopes](www.scala-sbt.org/0.13/docs/Scopes.html), and added [Scope Delegation](www.scala-sbt.org/0.13/docs/Scope-Delegation.html). [@eed3si9n][@eed3si9n]
- Adds support for cross-versioned exclusions. [#1518][1518]/[lm#88][lm88] by [@jvican][@jvican]
- Adds new offline mode to the Ivy-based library management. [lm#92][lm92] by [@jvican][@jvican]
- A number of features related to dependency locking. See below.
- Improved eviction warning presentation. See below.
- A better main class detection. [zinc#287][zinc287] by [@smarter][@smarter]
- For faster startup, sbt will use Java refection to discover `autoImport` . [#3115][3115] by [@jvican][@jvican]
- For faster startup, reuse the same global instance for parsing. [#3115][3115] by [@jvican][@jvican]
- Adds `InteractionService` from sbt-core-next to keep compatibility with sbt 0.13. [#3182][3182] by [@eed3si9n][@eed3si9n]
- Adds new `WatchService` that abstracts `PollingWatchService` and Java NIO. [io#47][io47] by [@Duhemm][@Duhemm] on behalf of The Scala Center.
- Adds variants of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`. See below for details.
- `Path.directory` and `Path.contentOf` are donated from sbt-native-packager [io#38][io38] by [@muuki88][@muuki88]
- ApiDiff feature used to debug Zinc uses Scala implementation borrowed from Dotty. [zinc#346][zinc346] by [@Krever][@Krever]
- In Zinc internal, make ExtractAPI use perRunCaches. [zinc#347][zinc347] by [@gheine][@gheine]

#### Internals

- Adopted Scalafmt for formatting the source code using neo-scalafmt.
- Scala Center contributed a redesign of the scripted test framework that has batch mode execution. Scripted now reuses the same sbt instance to run sbt tests, which reduces the CI build times by 50% [#3151][3151] by [@jvican][@jvican]
- sbt 1.0.0-M6 is built using sbt 1.0.0-M5. [#3184][3184] by [@dwijnand][@dwijnand]

### Details of major changes

### Zinc 1: Class-based name hashing

A major improvement brought into Zinc 1.0 by Grzegorz Kossakowski (commissioned by Lightbend) is class-based name hashing, which will speed up the incremental compilation of Scala in large projects.

Zinc 1.0's name hashing tracks your code dependendencies at the class level, instead of at the source file level. The GitHub issue [sbt/sbt#1104](https://github.com/sbt/sbt/issues/1104) lists some comparisons of adding a method to an existing class in some projects:

```
ScalaTest   AndHaveWord class:          Before 49s, After 4s (12x)
Specs2      OptionResultMatcher class:  Before 48s, After 1s (48x)
scala/scala Platform class:             Before 59s, After 15s (3.9x)
scala/scala MatchCodeGen class:         Before 48s, After 17s (2.8x)
```

This depends on some factors such as how your classes are organized, but you can see 3x ~ 40x improvements. The reason for the speedup is because it compiles fewer source files than before by untangling the classes from source files. In the example adding a method to scala/scala's Platform class, sbt 0.13's name hashing used to compile 72 sources, but the new Zinc compiles 6 sources.

#### Zinc API changes

- Java classes under the `xsbti.compile` package such as `IncOptions` hides the constructor. Use the factory method `xsbti.compile.Foo.of(...)`.
- Renames `ivyScala: IvyScala` key to `scalaModuleInfo: ScalaModuleInfo`.
- `xsbti.Reporter#log(...)` takes `xsbti.Problem` as the parameter. Call `log(problem.position, problem.message, problem.severity)` to delegate to the older `log(...)`.
- `xsbi.Maybe`, `xsbti.F0`, and `sxbti.F1` are changed to corresponding Java 8 classes `java.util.Optional`, `java.util.Supplier` and `java.util.Function`.
- Removes unused ""resident"" option. [zinc#345][zinc345] by [@lukeindykiewicz][@lukeindykiewicz]

### sbt server: JSON API for tooling integration

sbt 1.0 includes server feature, which allows IDEs and other tools to query the build for settings, and invoke commands via a JSON API. Similar to the way that the interactive shell in sbt 0.13 is implemented with `shell` command, ""server"" is also just `shell` command that listens to both human input and network input. As a user, there should be minimal impact because of the server.

In March 2016, we [rebooted](http://eed3si9n.com/sbt-server-reboot) the ""server"" feature to make it as small as possible. We worked in collaboration with JetBrains' @jastice who works on IntelliJ's sbt interface to narrow down the feature list. sbt 1.0 will not have all the things we originally wanted, but in the long term, we hope to see better integration between IDE and sbt ecosystem using this system. For example, IDEs will be able to issue the compile task and retrieve compiler warning as JSON events:

```
{""type"":""xsbti.Problem"",""message"":{""category"":"""",""severity"":""Warn"",""message"":""a pure expression does nothing in statement position; you may be omitting necessary parentheses"",""position"":{""line"":2,""lineContent"":""  1"",""offset"":29,""pointer"":2,""pointerSpace"":""  "",""sourcePath"":""/tmp/hello/Hello.scala"",""sourceFile"":""file:/tmp/hello/Hello.scala""}},""level"":""warn""}
```

Another related feature that was added is the `bgRun` task which, for example, enables a server process to be run in the background while you run tests against it.

### Event logging

sbt 1.0 introduces event logging implemented using Log4J 2 and sjson-new.
In addition to the regular String-based logging, you can now send case classes and Contraband-generated pseudo case classes to the logger:

    def registerStringCodec[A: ShowLines: TypeTag]: Unit = ...
    final def debugEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Debug, event)
    final def infoEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Info, event)
    final def warnEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Warn, event)
    final def errorEvent[A: JsonFormat: TypeTag](event: => A): Unit = logEvent(Level.Error, event)

Various events such as `[success]` message are sent internally via event logging.
We are hoping that this mechanism can be used in conjunction with server so plugins and compilers can publish JSON events.

Since the logger uses Log4J 2 internally, we now provide SLF4J binding.

#### Static validation of build.sbt

sbt 1.0 prohibits `.value` calls inside the bodies of if expressions and anonymous functions in a task, `@sbtUnchecked` annotation can be used to override the check.

The static validation also catches if you forget to call `.value` in a body of a task.

[#3216][3216] and [#3225][3225] by [@jvican][@jvican]

#### Eviction warning presentation

sbt 1.0 improves the eviction warning presetation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

#### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-M5
```

Your plugin will now build with sbt 1.0.0-M5 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0.0-M5`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-M5"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n] (forward ported from 0.13.16-M1)

### CopyOptions

sbt IO 1.0 add variant of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`.
`CopyOptions()` is an example of pseudo case class similar to the builder pattern.

```scala
import sbt.io.{ IO, CopyOptions }

IO.copyDirectory(source, target)

// The above is same as the following
IO.copyDirectory(source, target, CopyOptions()
  .withOverwrite(false)
  .withPreserveLastModified(true)
  .withPreserveExecutable(true))
```

[io#53][io53] by [@dwijnand][@dwijnand]

#### Library management API and parallel artifact download

sbt 1.0 adds Library management API co-authored by Eugene Yokota ([@eed3si9n][@eed3si9n]) from Lightbend and Martin Duhem ([@Duhemm][@Duhemm]) from Scala Center.
This API aims to abstract Apache Ivy as well as alternative dependency resolution engines Ivy, cached resolution, and Coursier.

Parallel artifact download for Ivy engine was contributed by Jorge ([@jvican][@jvican]) from Scala Center.
It also introduces Gigahorse OkHttp as the Network API, and it uses Square OkHttp for artifact download as well.

[lm#124][lm124] by [@eed3si9n][@eed3si9n]/[@Duhemm][@Duhemm],
[lm#90][lm90] by [@jvican][@jvican]/[@jsuereth][@jsuereth]
and [lm#104][lm104] by [@eed3si9n][@eed3si9n].

#### Binary format for Zinc's internal storage

Jorge ([@jvican][@jvican]) from Scala Center contributed a binary format for Zinc's internal storage using Google Procol Buffer.
The new format provides us with three main advantages:

1. Backwards and forwards binary compatibility at the analysis format level.
2. Faster (1.5 ~ 2x) serialization/deserialization of the analysis file.
3. Provides a better way to make the analysis file machine-independent.

[zinc#351][zinc351] by [@jvican][@jvican]

#### Dependency locking

Dependency locking feature is still in progress, but Jorge ([@jvican][@jvican]) from Scala Center has added a number of related features
that would should work together to allow dependency locking.

- Frozen mode to the Ivy-based library management, which makes sure that the resolution is always intransitive. [lm#100][lm100]
- Adds support to specify a resolver for dependencies. [lm#97][lm97]
- Adds ""managed checksums"", which tells Ivy to skip the checksum process. [lm#111][lm111]

#### notes

- https://github.com/sbt/sbt/compare/v1.0.0-RC2...v1.0.0-RC3
- https://github.com/sbt/zinc/compare/v1.0.0-X20...v1.0.0-RC3
- https://github.com/sbt/librarymanagement/compare/v1.0.0-X18...v1.0.0-RC3
- https://github.com/sbt/util/compare/v1.0.0-M28...v1.0.0-RC3
- https://github.com/sbt/io/compare/v1.0.0-M13...v1.0.0-RC3

  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: http://github.com/dwijnand
  [@jvican]: https://github.com/jvican
  [@Duhemm]: https://github.com/Duhemm
  [@jsuereth]: https://github.com/jsuereth
  [@gkossakowski]: https://github.com/gkossakowski
  [sbt-1-0-roadmap]: http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/
  [@eed3si9n]: https://github.com/eed3si9n
  [@jroper]: https://github.com/jroper
  [@valydia]: https://github.com/valydia
  [@RomanIakovlev]: https://github.com/RomanIakovlev
  [@smarter]: https://github.com/smarter
  [@jrudolph]: https://github.com/jrudolph
  [@muuki88]: https://github.com/muuki88
  [@Rogach]: https://github.com/Rogach
  [@Krever]: https://github.com/Krever
  [@lukeindykiewicz]: https://github.com/lukeindykiewicz
  [@gheine]: https://github.com/gheine
  [@xuwei-k]: https://github.com/xuwei-k
  [840]: https://github.com/sbt/sbt/issues/840
  [2613]: https://github.com/sbt/sbt/pull/2613
  [1911]: https://github.com/sbt/sbt/issues/1911
  [2059]: https://github.com/sbt/sbt/issues/2059
  [2662]: https://github.com/sbt/sbt/pull/2662
  [2762]: https://github.com/sbt/sbt/issues/2762
  [3291]: https://github.com/sbt/sbt/pull/3291
  [util80]: https://github.com/sbt/util/pull/80
  [3198]: https://github.com/sbt/sbt/issues/3198
  [lm88]: https://github.com/sbt/librarymanagement/pull/88
  [1518]: https://github.com/sbt/sbt/issues/1518
  [lm90]: https://github.com/sbt/librarymanagement/pull/90
  [lm92]: https://github.com/sbt/librarymanagement/pull/92
  [lm98]: https://github.com/sbt/librarymanagement/pull/98
  [lm100]: https://github.com/sbt/librarymanagement/pull/100
  [lm111]: https://github.com/sbt/librarymanagement/pull/111
  [lm104]: https://github.com/sbt/librarymanagement/pull/104
  [lm97]: https://github.com/sbt/librarymanagement/pull/97
  [lm124]: https://github.com/sbt/librarymanagement/pull/124
  [3202]: https://github.com/sbt/sbt/pull/3202
  [zinc295]: https://github.com/sbt/zinc/pull/295
  [zinc287]: https://github.com/sbt/zinc/pull/287
  [zinc288]: https://github.com/sbt/zinc/pull/288
  [zinc304]: https://github.com/sbt/zinc/pull/304
  [zinc346]: https://github.com/sbt/zinc/pull/346
  [zinc345]: https://github.com/sbt/zinc/pull/345
  [zinc347]: https://github.com/sbt/zinc/pull/347
  [zinc351]: https://github.com/sbt/zinc/pull/351
  [3115]: https://github.com/sbt/sbt/pull/3115
  [3182]: https://github.com/sbt/sbt/pull/3182
  [3151]: https://github.com/sbt/sbt/pull/3151
  [3184]: https://github.com/sbt/sbt/pull/3184
  [3216]: https://github.com/sbt/sbt/pull/3216
  [3218]: https://github.com/sbt/sbt/pull/3218
  [3225]: https://github.com/sbt/sbt/pull/3225
  [3233]: https://github.com/sbt/sbt/pull/3233
  [io47]: https://github.com/sbt/io/pull/47
  [io53]: https://github.com/sbt/io/pull/53
  [io38]: https://github.com/sbt/io/pull/38
  [util81]: https://github.com/sbt/util/pull/81
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7213911/assets,https://api.github.com/repos/sbt/sbt/releases/7213911,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.0-RC3,https://github.com/sbt/sbt/releases/tag/v1.0.0-RC3,https://api.github.com/repos/sbt/sbt/zipball/v1.0.0-RC3,v1.0.0-RC3,False,True
7180660,2017-07-26T20:01:42Z,2017-07-26T20:04:41Z,0.13.16,"### Fixes with compatibility implications

- Removes the ""hit \[ENTER\] to switch to interactive mode"" feature. Run `sbt xxx shell` to stay in shell after `xxx`. [#3091][3091]/[#3153][3153] by [@dwijnand][@dwijnand]

### Improvements

- Improves the new startup messages. See below.
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.
- Adds `Zero` scope component for sbt 1.0 compatibility. [#3179][3179] by [@eed3si9n][@eed3si9n]
- Backports `withXXX` methods for `ModuleID` and `Artifact` for sbt 1.0 compatibility. [#3215][3215] by [@eed3si9n][@eed3si9n]

### Bug fixes

- Fixes the new startup messages. See below.
- Fixes forward compatibility of Scripted plugin with sbt 1.0.0-RC2. [#3329][3329] by [@dwijnand][@dwijnand]
- Fixes ScalaTest nested suite test names being reported as ""(It is not a test)"". [#3154][3154] by [@jameskoch][@jameskoch]
- Fixes default `scalaBinaryVersion` for Dotty. [#3152][3152] by [@smarter][@smarter]
- Updates JLine dependency to 2.14.4 to work around ncurses change causing `NumberFormatException`. [#3265][3265] by [@Rogach][@Rogach]

### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-RC2
```

Your plugin will now build with sbt 1.0.0-RC2 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-RC2"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n]

### Eviction warning presentation

sbt 0.13.16 improves the eviction warning presentation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

### Improvements and bug fixes to the startup messages

sbt writes out the `sbt.version` in `project/build.properties` if it is missing.
sbt 0.13.16 fixes the logging when it happens by using the logger.

We encourage the use of the sbt shell by running `sbt`, instead of running `sbt compile` from the terminal repeatedly.
The sbt shell keeps the JVM warm, and there is a significant performance improvement gained for your compilation.
The startup message that we added in sbt 0.13.15 was a bit too aggressive, so we are toning it down in 0.13.16.
It will only be triggered for `sbt compile`, and it can also be suppressed with `suppressSbtShellNotification := true`.

[#3091][3091]/[#3097][3097]/[#3147][3147] by [@dwijnand][@dwijnand]

  [3091]: https://github.com/sbt/sbt/issues/3091
  [3097]: https://github.com/sbt/sbt/issues/3097
  [3147]: https://github.com/sbt/sbt/pull/3147
  [3133]: https://github.com/sbt/sbt/pull/3133
  [3152]: https://github.com/sbt/sbt/pull/3152
  [3153]: https://github.com/sbt/sbt/pull/3153
  [3154]: https://github.com/sbt/sbt/issues/3154
  [3179]: https://github.com/sbt/sbt/pull/3179
  [3202]: https://github.com/sbt/sbt/pull/3202
  [3215]: https://github.com/sbt/sbt/pull/3215
  [3265]: https://github.com/sbt/sbt/pull/3265
  [3329]: https://github.com/sbt/sbt/pull/3329
  [@jrudolph]: https://github.com/jrudolph
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: https://github.com/dwijnand
  [@jameskoch]: https://github.com/jameskoch
  [@smarter]: https://github.com/smarter
  [@Rogach]: https://github.com/Rogach
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7180660/assets,https://api.github.com/repos/sbt/sbt/releases/7180660,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.16,https://github.com/sbt/sbt/releases/tag/v0.13.16,https://api.github.com/repos/sbt/sbt/zipball/v0.13.16,v0.13.16,False,False
7138238,2017-07-23T21:37:13Z,2017-07-23T21:38:29Z,0.13.16-RC1,"### Fixes with compatibility implications

- Removes the ""hit \[ENTER\] to switch to interactive mode"" feature. Run `sbt xxx shell` to stay in shell after `xxx`. [#3091][3091]/[#3153][3153] by [@dwijnand][@dwijnand]

### Improvements

- Improves the new startup messages. See below.
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.
- Adds `Zero` scope component for sbt 1.0 compatibility. [#3179][3179] by [@eed3si9n][@eed3si9n]
- Backports `withXXX` methods for `ModuleID` and `Artifact` for sbt 1.0 compatibility. [#3215][3215] by [@eed3si9n][@eed3si9n]

### Bug fixes

- Fixes the new startup messages. See below.
- Fixes forward compatibility of Scripted plugin with sbt 1.0.0-RC2. [#3329][3329] by [@dwijnand][@dwijnand]
- Fixes ScalaTest nested suite test names being reported as ""(It is not a test)"". [#3154][3154] by [@jameskoch][@jameskoch]
- Fixes default `scalaBinaryVersion` for Dotty. [#3152][3152] by [@smarter][@smarter]
- Updates JLine dependency to 2.14.4 to work around ncurses change causing `NumberFormatException`. [#3265][3265] by [@Rogach][@Rogach]

### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-RC2
```

Your plugin will now build with sbt 1.0.0-RC2 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-RC2"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n]

#### Eviction warning presentation

sbt 0.13.16 improves the eviction warning presentation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

### Improvements and bug fixes to the startup messages

sbt writes out the `sbt.version` in `project/build.properties` if it is missing.
sbt 0.13.16 fixes the logging when it happens by using the logger.

We encourage the use of the sbt shell by running `sbt`, instead of running `sbt compile` from the terminal repeatedly.
The sbt shell keeps the JVM warm, and there is a significant performance improvement gained for your compilation.
The startup message that we added in sbt 0.13.15 was a bit too aggressive, so we are toning it down in 0.13.16.
It will only be triggered for `sbt compile`, and it can also be suppressed with `suppressSbtShellNotification := true`.

[#3091][3091]/[#3097][3097]/[#3147][3147] by [@dwijnand][@dwijnand]

  [3091]: https://github.com/sbt/sbt/issues/3091
  [3097]: https://github.com/sbt/sbt/issues/3097
  [3147]: https://github.com/sbt/sbt/pull/3147
  [3133]: https://github.com/sbt/sbt/pull/3133
  [3153]: https://github.com/sbt/sbt/pull/3153
  [3154]: https://github.com/sbt/sbt/issues/3154
  [3152]: https://github.com/sbt/sbt/pull/3152
  [3179]: https://github.com/sbt/sbt/pull/3179
  [3202]: https://github.com/sbt/sbt/pull/3202
  [3215]: https://github.com/sbt/sbt/pull/3215
  [3265]: https://github.com/sbt/sbt/pull/3265
  [3329]: https://github.com/sbt/sbt/pull/3329
  [@jrudolph]: https://github.com/jrudolph
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: https://github.com/dwijnand
  [@jameskoch]: https://github.com/jameskoch
  [@smarter]: https://github.com/smarter
  [@Rogach]: https://github.com/Rogach
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7138238/assets,https://api.github.com/repos/sbt/sbt/releases/7138238,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.16-RC1,https://github.com/sbt/sbt/releases/tag/v0.13.16-RC1,https://api.github.com/repos/sbt/sbt/zipball/v0.13.16-RC1,v0.13.16-RC1,False,True
7059285,2017-07-17T05:06:49Z,2017-07-17T05:30:10Z,1.0.0-RC2,"See [sbt 1.0 roadmap and beta-1][sbt-1-0-roadmap] for scheduled timeline.

### sbt 1.0.0-RC2

This is the RC-2 release of sbt 1.0.

#### Features, fixes, changes with compatibility implications

- Many of the case classes are replaced with pseudo case classes generated using Contraband. Migrate `.copy(foo = xxx)` to `withFoo(xxx)`.
- sbt 1.0 uses Scala 2.12 for build definitions and plugins. This also requires JDK 8.
- Non-auto `sbt.Plugin` trait is dropped. Please migrate to AutoPlugin. Auto plugins are easier to configure, and work better with each other.
- sbt 0.12 style `Build` trait that was deprecated in sbt 0.13.12, is removed. Please [migrate to build.sbt](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+from+the+Build+trait). Auto plugins and `Build` trait do not work well together, and its feature is now largely subsumed by multi-project build.sbt.
- sbt 0.12 style `Project(...)` constructor is restricted down to two parameters. This is because `settings` parameter does not work well with Auto Plugins. Use `project` instead.
- sbt 0.12 style key dependency operators `<<=`, `<+=`, `<++=` are removed. Please [migrate to :=, +=, and ++=](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+simple+expressions). These operators have been sources of confusion for many users, and have long been removed from 0.13 docs, and have been formally deprecated since sbt 0.13.13.
- Zinc 1 drops support for Scala 2.9 and earlier. Scala 2.10 must use 2.10.2 and above. Scala 2.11 must use 2.11.2 and above. (latest patch releases are recommended)
- `config(""tooling"")` must be directly assigned to a *capitalized* `val`, like `val Tooling = config(""tooling"")`. This captures the lhs identifier into the configuration so we can use it from the shell later.
- Changes `publishTo` and `otherResolvers` from SettingKeys to TaskKeys. [#2059][2059]/[#2662][2662] by [@dwijnand][@dwijnand]
- `Path.relativizeFile(baseFile, file)` is renamed to `IO.relativizeFile(baseFile, file)`.
- `PathFinder`'s `.***` method is renamed to `.allPaths` method.
- `PathFinder.x_!(mapper)` is moved to `def pair` on `PathFinder`.
- Drops sbt 0.12 style hyphen-separated key names (use `publishLocal` instead of `publish-local`).
- Renames early command feature from `--<command>` to `early(<command>)`.
- Log options `-error`, `-warn`, `-info`, `-debug` are added as shorthand for `""early(error)""` etc.
- `sbt.Process` and `sbt.ProcessExtra` are dropped. Use `scala.sys.process` instead.
- `incOptions.value.withNameHashing(...)` option is removed because name hashing is always on.
- `TestResult.Value` is now called `TestResult`.
- The scripted plugin is cross-versioned now, so you must use `%%` when depending on it
- Removes the `settingsSets` method from `Project` (along with `add/setSbtFiles`).
- Drops deprecated `InputTask` `apply` method and `inputTask` DSL method. Use `Def.inputTask` and `Def.spaceDelimited().parsed`.
- Drops deprecated `ProjectReference` implicit lifts. Use `RootProject(<uri>)`, `RootProject(<file>)` or `LocalProject(<string>)`.
- Drops deprecated `seq(..)` DSL method. Use `Seq` or pass in the settings without wrapping.
- Drops deprecated `File`/`Seq[File]` setting enrichments. Use `.value` and `Def.setting`.
- Drops deprecated `SubProcess` `apply` overload. Use `SubProcess(ForkOptions(runJVMOptions = ..))`.
- Drops `toError(opt: Option[String]): Unit` (equivalent to `opt foreach sys.error`); if used to wrap
    `ScalaRun#run` then the replacement is `scalaRun.run(...).failed foreach (sys error _.getMessage)`
- A number of the methods on `sbt.Path` (such as `relativeTo` and `rebase` and `flat`) are now no longer in the
    default namespace by virtue of being mixed into the sbt package object. Use `sbt.io.Path` to access them
    again.
- sbt 1.0 renames `Global` as scope component to `Zero` to disambiguate from `GlobalScope`. [@eed3si9n][@eed3si9n]
- sbt 1.0 uses `ConfigRef` in places where `String` was used to reference configuration, such as `update.value.configuration(...)`. Pass in `Configuration`, which implicitly converts to `ConfigRef`.
- Changes `sourceArtifactTypes` and `docArtifactTypes` from `Set[String]` to `Seq[String]` settings.

The Scala Center is working with Lightbend to provide [an automatic migration tool][sbt-migration-rewrites].

#### Features

- New incremental compiler called Zinc 1. Details below.
- The interactive shell is adds network API. Details below.

#### Fixes

- Fixes test content log not showing up. [#3198][3198]/[util#80][util80] by [@eed3si9n][@eed3si9n]
- Fixes confusing log about ""Unable to parse"". [lm#98][lm98] by [@jvican][@jvican]
- Fixes `console` task. [zinc#295][zinc295] by [@dwijnand][@dwijnand]
- Fixes spurious recompilations when unrelated constructor changes. [zinc#288][zinc288] by [@smarter][@smarter]
- Fixes restligeist macro for old operators. [#3218][3218] by [@eed3si9n][@eed3si9n]
- Fixes task caching of `update` task. [#3233][3233] by [@eed3si9n][@eed3si9n]
- Fixes ncurses-JLine issue by updating to JLine 2.14.4. [util#81][util81] by [@Rogach][@Rogach]

#### Improvements

- Scala Center contributed a Java-friendly Zinc API. This was a overhaul of the Zinc internal API for a good Scala integration with other build tools. [zinc#304][zinc304] by [@jvican][@jvican]
- Scala Center contributed a binary format for Zinc's internal storage. See below
- Scala Center contributed static validation of `build.sbt`. See below
- Library management API and parallel artifact download. See below.
- The startup log level is dropped to `-error` in script mode using `scalas`. [#840][840] by [@eed3si9n][@eed3si9n]
- Replace cross building support with sbt-doge. This allows builds with projects that have multiple different combinations of cross scala versions to be cross built correctly.  The behaviour of ++ is changed so that it only updates the Scala version of projects that support that Scala version, but the Scala version can be post fixed with ! to force it to change for all projects. A -v argument has been added that prints verbose information about which projects are having their settings changed along with their cross scala versions. [#2613][2613] by [@jroper][@jroper]
- `ivyLoggingLevel` is dropped to `UpdateLogging.Quiet` when CI environment is detected. [@eed3si9n][@eed3si9n]
- Add logging of the name of the different `build.sbt` (matching `*.sbt`) files used. [#1911][1911] by [@valydia][@valydia]
- Add the ability to call `aggregate` for the current project inside a build sbt file. By [@xuwei-k][@xuwei-k]
- Add new global setting `asciiGraphWidth` that controls the maximum width of the ASCII graphs printed by commands like `inspect tree`. Default value corresponds to the previously hardcoded value of 40 characters. By [@RomanIakovlev][@RomanIakovlev].
- Revamped documentation for [Scopes](www.scala-sbt.org/0.13/docs/Scopes.html), and added [Scope Delegation](www.scala-sbt.org/0.13/docs/Scope-Delegation.html). [@eed3si9n][@eed3si9n]
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.
- Adds support for cross-versioned exclusions. [#1518][1518]/[lm#88][lm88] by [@jvican][@jvican]
- Adds new offline mode to the Ivy-based library management. [lm#92][lm92] by [@jvican][@jvican]
- A number of features related to dependency locking. See below.
- Improved eviction warning presentation. See below.
- A better main class detection. [zinc#287][zinc287] by [@smarter][@smarter]
- For faster startup, sbt will use Java refection to discover `autoImport` . [#3115][3115] by [@jvican][@jvican]
- For faster startup, reuse the same global instance for parsing. [#3115][3115] by [@jvican][@jvican]
- Adds `InteractionService` from sbt-core-next to keep compatibility with sbt 0.13. [#3182][3182] by [@eed3si9n][@eed3si9n]
- Adds new `WatchService` that abstracts `PollingWatchService` and Java NIO. [io#47][io47] by [@Duhemm][@Duhemm] on behalf of The Scala Center.
- Adds variants of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`. See below for details.
- `Path.directory` and `Path.contentOf` are donated from sbt-native-packager [io#38][io38] by [@muuki88][@muuki88]
- ApiDiff feature used to debug Zinc uses Scala implementation borrowed from Dotty. [zinc#346][zinc346] by [@Krever][@Krever]
- In Zinc internal, make ExtractAPI use perRunCaches. [zinc#347][zinc347] by [@gheine][@gheine]

#### Internals

- Adopted Scalafmt for formatting the source code using neo-scalafmt.
- Scala Center contributed a redesign of the scripted test framework that has batch mode execution. Scripted now reuses the same sbt instance to run sbt tests, which reduces the CI build times by 50% [#3151][3151] by [@jvican][@jvican]
- sbt 1.0.0-M6 is built using sbt 1.0.0-M5. [#3184][3184] by [@dwijnand][@dwijnand]

### Details of major changes

### Zinc 1: Class-based name hashing

A major improvement brought into Zinc 1.0 by Grzegorz Kossakowski (commissioned by Lightbend) is class-based name hashing, which will speed up the incremental compilation of Scala in large projects.

Zinc 1.0's name hashing tracks your code dependendencies at the class level, instead of at the source file level. The GitHub issue [sbt/sbt#1104](https://github.com/sbt/sbt/issues/1104) lists some comparisons of adding a method to an existing class in some projects:

```
ScalaTest   AndHaveWord class:          Before 49s, After 4s (12x)
Specs2      OptionResultMatcher class:  Before 48s, After 1s (48x)
scala/scala Platform class:             Before 59s, After 15s (3.9x)
scala/scala MatchCodeGen class:         Before 48s, After 17s (2.8x)
```

This depends on some factors such as how your classes are organized, but you can see 3x ~ 40x improvements. The reason for the speedup is because it compiles fewer source files than before by untangling the classes from source files. In the example adding a method to scala/scala's Platform class, sbt 0.13's name hashing used to compile 72 sources, but the new Zinc compiles 6 sources.

#### Zinc API changes

- Java classes under the `xsbti.compile` package such as `IncOptions` hides the constructor. Use the factory method `xsbti.compile.Foo.of(...)`.
- Renames `ivyScala: IvyScala` key to `scalaModuleInfo: ScalaModuleInfo`.
- `xsbti.Reporter#log(...)` takes `xsbti.Problem` as the parameter. Call `log(problem.position, problem.message, problem.severity)` to delegate to the older `log(...)`.
- `xsbi.Maybe`, `xsbti.F0`, and `sxbti.F1` are changed to corresponding Java 8 classes `java.util.Optional`, `java.util.Supplier` and `java.util.Function`.
- Removes unused ""resident"" option. [zinc#345][zinc345] by [@lukeindykiewicz][@lukeindykiewicz]

### sbt server: JSON API for tooling integration

sbt 1.0 includes server feature, which allows IDEs and other tools to query the build for settings, and invoke commands via a JSON API. Similar to the way that the interactive shell in sbt 0.13 is implemented with `shell` command, ""server"" is also just `shell` command that listens to both human input and network input. As a user, there should be minimal impact because of the server.

In March 2016, we [rebooted](http://eed3si9n.com/sbt-server-reboot) the ""server"" feature to make it as small as possible. We worked in collaboration with JetBrains' @jastice who works on IntelliJ's sbt interface to narrow down the feature list. sbt 1.0 will not have all the things we originally wanted, but in the long term, we hope to see better integration between IDE and sbt ecosystem using this system. For example, IDEs will be able to issue the compile task and retrieve compiler warning as JSON events:

```
{""type"":""xsbti.Problem"",""message"":{""category"":"""",""severity"":""Warn"",""message"":""a pure expression does nothing in statement position; you may be omitting necessary parentheses"",""position"":{""line"":2,""lineContent"":""  1"",""offset"":29,""pointer"":2,""pointerSpace"":""  "",""sourcePath"":""/tmp/hello/Hello.scala"",""sourceFile"":""file:/tmp/hello/Hello.scala""}},""level"":""warn""}
```

Another related feature that was added is the `bgRun` task which, for example, enables a server process to be run in the background while you run tests against it.

#### Static validation of build.sbt

sbt 1.0 prohibits `.value` calls inside the bodies of if expressions and anonymous functions in a task, `@sbtUnchecked` annotation can be used to override the check.

The static validation also catches if you forget to call `.value` in a body of a task.

[#3216][3216] and [#3225][3225] by [@jvican][@jvican]

#### Eviction warning presentation

sbt 1.0 improves the eviction warning presetation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

#### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-M5
```

Your plugin will now build with sbt 1.0.0-M5 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0.0-M5`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-M5"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n] (forward ported from 0.13.16-M1)

### CopyOptions

sbt IO 1.0 add variant of `IO.copyFile` and `IO.copyDirectory` that accept `sbt.io.CopyOptions()`.
`CopyOptions()` is an example of pseudo case class similar to the builder pattern.

```scala
import sbt.io.{ IO, CopyOptions }

IO.copyDirectory(source, target)

// The above is same as the following
IO.copyDirectory(source, target, CopyOptions()
  .withOverwrite(false)
  .withPreserveLastModified(true)
  .withPreserveExecutable(true))
```

[io#53][io53] by [@dwijnand][@dwijnand]

#### Library management API and parallel artifact download

sbt 1.0 adds Library management API co-authored by Eugene Yokota ([@eed3si9n][@eed3si9n]) from Lightbend and Martin Duhem ([@Duhemm][@Duhemm]) from Scala Center.
This API aims to abstract Apache Ivy as well as alternative dependency resolution engines Ivy, cached resolution, and Coursier.

Parallel artifact download for Ivy engine was contributed by Jorge ([@jvican][@jvican]) from Scala Center.
It also introduces Gigahorse OkHttp as the Network API, and it uses Square OkHttp for artifact download as well.

[lm#124][lm124] by [@eed3si9n][@eed3si9n]/[@Duhemm][@Duhemm],
[lm#90][lm90] by [@jvican][@jvican]/[@jsuereth][@jsuereth]
and [lm#104][lm104] by [@eed3si9n][@eed3si9n].

#### Binary format for Zinc's internal storage

Jorge ([@jvican][@jvican]) from Scala Center contributed a binary format for Zinc's internal storage using Google Procol Buffer.
The new format provides us with three main advantages:

1. Backwards and forwards binary compatibility at the analysis format level.
2. Faster (1.5 ~ 2x) serialization/deserialization of the analysis file.
3. Provides a better way to make the analysis file machine-independent.

[zinc#351][zinc351] by [@jvican][@jvican]

#### Dependency locking

Dependency locking feature is still in progress, but Jorge ([@jvican][@jvican]) from Scala Center has added a number of related features
that would should work together to allow dependency locking.

- Frozen mode to the Ivy-based library management, which makes sure that the resolution is always intransitive. [lm#100][lm100]
- Adds support to specify a resolver for dependencies. [lm#97][lm97]
- Adds ""managed checksums"", which tells Ivy to skip the checksum process. [lm#111][lm111]

#### notes

- https://github.com/sbt/sbt/compare/v1.0.0-M6...v1.0.0-RC2
- https://github.com/sbt/zinc/compare/v1.0.0-X16...v1.0.0-X20
- https://github.com/sbt/librarymanagement/compare/v1.0.0-X15...v1.0.0-X18
- https://github.com/sbt/util/compare/v1.0.0-M24...v1.0.0-M28
- https://github.com/sbt/io/compare/v1.0.0-M11...v1.0.0-M13

  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: http://github.com/dwijnand
  [@jvican]: https://github.com/jvican
  [@Duhemm]: https://github.com/Duhemm
  [@jsuereth]: https://github.com/jsuereth
  [@gkossakowski]: https://github.com/gkossakowski
  [sbt-1-0-roadmap]: http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/
  [@eed3si9n]: https://github.com/eed3si9n
  [@jroper]: https://github.com/jroper
  [@valydia]: https://github.com/valydia
  [@RomanIakovlev]: https://github.com/RomanIakovlev
  [@smarter]: https://github.com/smarter
  [@jrudolph]: https://github.com/jrudolph
  [@muuki88]: https://github.com/muuki88
  [@Rogach]: https://github.com/Rogach
  [@Krever]: https://github.com/Krever
  [@lukeindykiewicz]: https://github.com/lukeindykiewicz
  [@gheine]: https://github.com/gheine
  [840]: https://github.com/sbt/sbt/issues/840
  [2613]: https://github.com/sbt/sbt/pull/2613
  [1911]: https://github.com/sbt/sbt/issues/1911
  [2059]: https://github.com/sbt/sbt/issues/2059
  [2662]: https://github.com/sbt/sbt/pull/2662
  [util80]: https://github.com/sbt/util/pull/80
  [3198]: https://github.com/sbt/sbt/issues/3198
  [lm88]: https://github.com/sbt/librarymanagement/pull/88
  [1518]: https://github.com/sbt/sbt/issues/1518
  [lm90]: https://github.com/sbt/librarymanagement/pull/90
  [lm92]: https://github.com/sbt/librarymanagement/pull/92
  [lm98]: https://github.com/sbt/librarymanagement/pull/98
  [lm100]: https://github.com/sbt/librarymanagement/pull/100
  [lm111]: https://github.com/sbt/librarymanagement/pull/111
  [lm104]: https://github.com/sbt/librarymanagement/pull/104
  [lm97]: https://github.com/sbt/librarymanagement/pull/97
  [lm124]: https://github.com/sbt/librarymanagement/pull/124
  [3202]: https://github.com/sbt/sbt/pull/3202
  [zinc295]: https://github.com/sbt/zinc/pull/295
  [zinc287]: https://github.com/sbt/zinc/pull/287
  [zinc288]: https://github.com/sbt/zinc/pull/288
  [zinc304]: https://github.com/sbt/zinc/pull/304
  [zinc346]: https://github.com/sbt/zinc/pull/346
  [zinc345]: https://github.com/sbt/zinc/pull/345
  [zinc347]: https://github.com/sbt/zinc/pull/347
  [zinc351]: https://github.com/sbt/zinc/pull/351
  [3115]: https://github.com/sbt/sbt/pull/3115
  [3182]: https://github.com/sbt/sbt/pull/3182
  [3151]: https://github.com/sbt/sbt/pull/3151
  [3184]: https://github.com/sbt/sbt/pull/3184
  [3216]: https://github.com/sbt/sbt/pull/3216
  [3218]: https://github.com/sbt/sbt/pull/3218
  [3225]: https://github.com/sbt/sbt/pull/3225
  [3233]: https://github.com/sbt/sbt/pull/3233
  [io47]: https://github.com/sbt/io/pull/47
  [io53]: https://github.com/sbt/io/pull/53
  [io38]: https://github.com/sbt/io/pull/38
  [util81]: https://github.com/sbt/util/pull/81
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/7059285/assets,https://api.github.com/repos/sbt/sbt/releases/7059285,1.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.0-RC2,https://github.com/sbt/sbt/releases/tag/v1.0.0-RC2,https://api.github.com/repos/sbt/sbt/zipball/v1.0.0-RC2,v1.0.0-RC2,False,True
6548845,2017-05-30T06:44:30Z,2017-05-30T19:07:14Z,1.0.0-M6,"See [sbt 1.0 roadmap and beta-1][sbt-1-0-roadmap] for scheduled timeline.

### sbt 1.0.0-M6

This is the beta-2 release of sbt 1.0.

### Changes since sbt 1.0.0-M5

#### Features, fixes, changes with compatibility implications

The Scala Center is working with Lightbend to provide [an automatic migration tool](https://github.com/scalacenter/sbt-migration-rewrites).

- sbt 1.0 renames `Global` as scope component to `Zero` to disambiguate from `GlobalScope`. [@eed3si9n][@eed3si9n]

#### Fixes

- Fixes test content log not showing up. [#3198][3198]/[util#80][util80] by [@eed3si9n][@eed3si9n]
- Fixes confusing log about ""Unable to parse"". [lm#98][lm98] by [@jvican][@jvican]
- Fixes `console` task. [zinc#295][zinc295] by [@dwijnand][@dwijnand]
- Fixes spurious recompilations when unrelated constructor changes. [zinc#288][zinc288] by [@smarter][@smarter]
- Fixes restligeist macro for old operators. [#3218][3218] by [@eed3si9n][@eed3si9n]
- Fixes task caching of `update` task. [#3233][3233] by [@eed3si9n][@eed3si9n]

#### Improvements

- Scala Center contributed a Java-friendly Zinc API. This was a overhaul of the Zinc internal API for a good Scala integration with other build tools. [zinc#304][zinc304] by [@jvican][@jvican]
- Ivy engine with parallel artifact download. See below.
- Scala Center contributed static validation of `build.sbt`. See below
- Revamped documentation for [Scopes](www.scala-sbt.org/0.13/docs/Scopes.html), and added [Scope Delegation](www.scala-sbt.org/0.13/docs/Scope-Delegation.html). [@eed3si9n][@eed3si9n]
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.
- Adds support for cross-versioned exclusions. [#1518][1518]/[lm#88][lm88] by [@jvican][@jvican]
- Adds new offline mode to the Ivy-based library management. [lm#92][lm92] by [@jvican][@jvican]
- A number of features related to dependency locking. See below.
- Improved eviction warning presentation. See below.
- A better main class detection. [zinc#287][zinc287] by [@smarter][@smarter]
- For faster startup, sbt will use Java refection to discover `autoImport` . [#3115][3115] by [@jvican][@jvican]
- For faster startup, reuse the same global instance for parsing. [#3115][3115] by [@jvican][@jvican]
- Adds `InteractionService` from sbt-core-next to keep compatibility with sbt 0.13. [#3182][3182] by [@eed3si9n][@eed3si9n]

#### Static validation of build.sbt

sbt 1.0 prohibits `.value` calls inside the bodies of if expressions and anonymous functions in a task, `@sbtUnchecked` annotation can be used to override the check.

The static validation also catches if you forget to call `.value` in a body of a task.

[#3216][3216] and [#3225][3225] by [@jvican][@jvican]

#### Internals

- Adopted Scalafmt for formatting the source code using neo-scalafmt.
- Scala Center contributed a redesign of the scripted test framework that has batch mode execution. Scripted now reuses the same sbt instance to run sbt tests, which reduces the CI build times by 50% [#3151][3151] by [@jvican][@jvican]
- sbt 1.0.0-M6 is built using sbt 1.0.0-M5. [#3184][3184] by [@dwijnand][@dwijnand]

#### Ivy engine with parallel artifact download

sbt 1.0 adds parallel artifact download while still using Ivy for resolution, contributed by Scala Center.
It also introduces Gigahorse OkHttp as the Network API, and it uses Square OkHttp for artifact download as well.

[lm#90][lm90] by [@jvican][@jvican]/[@jsuereth][@jsuereth]
and [lm#104][lm104] by [@eed3si9n][@eed3si9n].

#### Dependency locking

Dependency locking feature is still in progress, but Jorge ([@jvican][@jvican]) from Scala Center has added a number of related features
that would should work together to allow dependency locking.

- Frozen mode to the Ivy-based library management, which makes sure that the resolution is always intransitive. [lm#100][lm100]
- Adds support to specify a resolver for dependencies. [lm#97][lm97]
- Adds ""managed checksums"", which tells Ivy to skip the checksum process. [lm#111][lm111]

#### Eviction warning presentation

sbt 1.0 improves the eviction warning presetation.

Before:

    [warn] There may be incompatibilities among your library dependencies.
    [warn] Here are some of the libraries that were evicted:
    [warn]  * com.google.code.findbugs:jsr305:2.0.1 -> 3.0.0
    [warn] Run 'evicted' to see detailed eviction warnings

After:

    [warn] Found version conflict(s) in library dependencies; some are suspected to be binary incompatible:
    [warn]
    [warn]      * com.typesafe.akka:akka-actor_2.12:2.5.0 is selected over 2.4.17
    [warn]          +- de.heikoseeberger:akka-log4j_2.12:1.4.0            (depends on 2.5.0)
    [warn]          +- com.typesafe.akka:akka-parsing_2.12:10.0.6         (depends on 2.4.17)
    [warn]          +- com.typesafe.akka:akka-stream_2.12:2.4.17 ()       (depends on 2.4.17)
    [warn]
    [warn] Run 'evicted' to see detailed eviction warnings

[#3202][3202] by [@eed3si9n][@eed3si9n]

#### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-M5
```

Your plugin will now build with sbt 1.0.0-M5 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0.0-M5`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-M5"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n] (forward ported from 0.13.16-M1)


#### notes

- https://github.com/sbt/sbt/compare/v1.0.0-M5...v1.0.0-M6
- https://github.com/sbt/zinc/compare/v1.0.0-X14...v1.0.0-X16
- https://github.com/sbt/librarymanagement/compare/v1.0.0-X10...v1.0.0-X15
- https://github.com/sbt/util/compare/v1.0.0-M23...v1.0.0-M24

### sbt 1.0.0-M5

This is the beta-1 release of sbt 1.0.
There's no binary compatibility with sbt 0.13 or other future 1.0.0-Mx versions.

#### Features, fixes, changes with compatibility implications

We are working with Scala Center to provide [an automatic migration tool][sbt-migration-rewrites].

- sbt 1.0 uses Scala 2.12 for build definitions and plugins. This also requires JDK 8.
- Non-auto `sbt.Plugin` trait is dropped. Please migrate to AutoPlugin. Auto plugins are easier to configure, and work better with each other.
- sbt 0.12 style `Build` trait that was deprecated in sbt 0.13.12, is removed. Please [migrate to build.sbt](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+from+the+Build+trait). Auto plugins and `Build` trait do not work well together, and its feature is now largely subsumed by multi-project build.sbt.
- sbt 0.12 style `Project(...)` constructor is restricted down to two parameters. This is because `settings` parameter does not work well with Auto Plugins. Use `project` instead.
- sbt 0.12 style key dependency operators `<<=`, `<+=`, `<++=` are removed. Please [migrate to :=, +=, and ++=](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+simple+expressions). These operators have been sources of confusion for many users, and have long been removed from 0.13 docs, and have been formally deprecated since sbt 0.13.13.
- Zinc 1 drops support for Scala 2.9 and earlier. Scala 2.10 must use 2.10.2 and above. Scala 2.11 must use 2.11.2 and above. (latest patch releases are recommended)
- Many of the case classes are replaced with pseudo case classes generated using Contraband. Migrate `.copy(foo = xxx)` to `withFoo(xxx)`.
- Changes `publishTo` and `otherResolvers` from SettingKeys to TaskKeys. [#2059][2059]/[#2662][2662] by [@dwijnand][@dwijnand]
- `PathFinder`'s `.***` method is renamed to `.allPaths` method.
- Drops sbt 0.12 style hyphen-separated key names (use `publishLocal` instead of `publish-local`).
- Renames early command feature from `--<command>` to `early(<command>)`.
- Log options `-error`, `-warn`, `-info`, `-debug` are added as shorthand for `""early(error)""` etc.
- `sbt.Process` and `sbt.ProcessExtra` are dropped. Use `scala.sys.process` instead.
- `incOptions.value.withNameHashing(...)` option is removed because name hashing is always on.
- `TestResult.Value` is now called `TestResult`.
- The scripted plugin is cross-versioned now, so you must use `%%` when depending on it
- Removes the `settingsSets` method from `Project` (along with `add/setSbtFiles`).
- Drops deprecated `InputTask` `apply` method and `inputTask` DSL method. Use `Def.inputTask` and `Def.spaceDelimited().parsed`.
- Drops deprecated `ProjectReference` implicit lifts. Use `RootProject(<uri>)`, `RootProject(<file>)` or `LocalProject(<string>)`.
- Drops deprecated `seq(..)` DSL method. Use `Seq` or pass in the settings without wrapping.
- Drops deprecated `File`/`Seq[File]` setting enrichments. Use `.value` and `Def.setting`.
- Drops deprecated `SubProcess` `apply` overload. Use `SubProcess(ForkOptions(runJVMOptions = ..))`.
- Drops `toError(opt: Option[String]): Unit` (equivalent to `opt foreach sys.error`); if used to wrap
    `ScalaRun#run` then the replacement is `scalaRun.run(...).failed foreach (sys error _.getMessage)`
- A number of the methods on `sbt.Path` (such as `relativeTo` and `rebase` and `flat`) are now no longer in the
    default namespace by virtue of being mixed into the sbt package object. Use `sbt.io.Path` to access them
    again.

#### Features

- New incremental compiler called Zinc 1. Details below.
- The interactive shell is adds network API. Details below.

#### Fixes



#### Improvements

- The startup log level is dropped to `-error` in script mode using `scalas`. [#840][840] by [@eed3si9n][@eed3si9n]
- Replace cross building support with sbt-doge. This allows builds with projects that have multiple different combinations of cross scala versions to be cross built correctly.  The behaviour of ++ is changed so that it only updates the Scala version of projects that support that Scala version, but the Scala version can be post fixed with ! to force it to change for all projects. A -v argument has been added that prints verbose information about which projects are having their settings changed along with their cross scala versions. [#2613][2613] by [@jroper][@jroper]
- `ivyLoggingLevel` is dropped to `UpdateLogging.Quiet` when CI environment is detected. [@eed3si9n][@eed3si9n]
- Add logging of the name of the different `build.sbt` (matching `*.sbt`) files used. [#1911][1911] by [@valydia][@valydia]
- Add the ability to call `aggregate` for the current project inside a build sbt file. By [@xuwei-k][@xuwei-k]
- Add new global setting `asciiGraphWidth` that controls the maximum width of the ASCII graphs printed by commands like `inspect tree`. Default value corresponds to the previously hardcoded value of 40 characters. By [@RomanIakovlev][@RomanIakovlev].

### Details of major changes

### Zinc 1: Class-based name hashing

A major improvement brought into Zinc 1.0 by Grzegorz Kossakowski (commissioned by Lightbend) is class-based name hashing, which will speed up the incremental compilation of Scala in large projects.

Zinc 1.0's name hashing tracks your code dependendencies at the class level, instead of at the source file level. The GitHub issue [sbt/sbt#1104](https://github.com/sbt/sbt/issues/1104) lists some comparisons of adding a method to an existing class in some projects:

```
ScalaTest   AndHaveWord class:          Before 49s, After 4s (12x)
Specs2      OptionResultMatcher class:  Before 48s, After 1s (48x)
scala/scala Platform class:             Before 59s, After 15s (3.9x)
scala/scala MatchCodeGen class:         Before 48s, After 17s (2.8x)
```

This depends on some factors such as how your classes are organized, but you can see 3x ~ 40x improvements. The reason for the speedup is because it compiles fewer source files than before by untangling the classes from source files. In the example adding a method to scala/scala's Platform class, sbt 0.13's name hashing used to compile 72 sources, but the new Zinc compiles 6 sources.

### sbt server: JSON API for tooling integration

sbt 1.0 includes server feature, which allows IDEs and other tools to query the build for settings, and invoke commands via a JSON API. Similar to the way that the interactive shell in sbt 0.13 is implemented with `shell` command, ""server"" is also just `shell` command that listens to both human input and network input. As a user, there should be minimal impact because of the server.

In March 2016, we [rebooted](http://eed3si9n.com/sbt-server-reboot) the ""server"" feature to make it as small as possible. We worked in collaboration with JetBrains' @jastice who works on IntelliJ's sbt interface to narrow down the feature list. sbt 1.0 will not have all the things we originally wanted, but in the long term, we hope to see better integration between IDE and sbt ecosystem using this system. For example, IDEs will be able to issue the compile task and retrieve compiler warning as JSON events:

```
{""type"":""xsbti.Problem"",""message"":{""category"":"""",""severity"":""Warn"",""message"":""a pure expression does nothing in statement position; you may be omitting necessary parentheses"",""position"":{""line"":2,""lineContent"":""  1"",""offset"":29,""pointer"":2,""pointerSpace"":""  "",""sourcePath"":""/tmp/hello/Hello.scala"",""sourceFile"":""file:/tmp/hello/Hello.scala""}},""level"":""warn""}
```

Another related feature that was added is the `bgRun` task which, for example, enables a server process to be run in the background while you run tests against it.

  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: http://github.com/dwijnand
  [@jvican]: https://github.com/jvican
  [@Duhemm]: https://github.com/Duhemm
  [@jsuereth]: https://github.com/jsuereth
  [@gkossakowski]: https://github.com/gkossakowski
  [sbt-1-0-roadmap]: http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/
  [@eed3si9n]: https://github.com/eed3si9n
  [@jroper]: https://github.com/jroper
  [@valydia]: https://github.com/valydia
  [@RomanIakovlev]: https://github.com/RomanIakovlev
  [@smarter]: https://github.com/smarter
  [@jrudolph]: https://github.com/jrudolph
  [840]: https://github.com/sbt/sbt/issues/840
  [2613]: https://github.com/sbt/sbt/pull/2613
  [1911]: https://github.com/sbt/sbt/issues/1911
  [2059]: https://github.com/sbt/sbt/issues/2059
  [2662]: https://github.com/sbt/sbt/pull/2662
  [util80]: https://github.com/sbt/util/pull/80
  [3198]: https://github.com/sbt/sbt/issues/3198
  [lm88]: https://github.com/sbt/librarymanagement/pull/88
  [1518]: https://github.com/sbt/sbt/issues/1518
  [lm90]: https://github.com/sbt/librarymanagement/pull/90
  [lm92]: https://github.com/sbt/librarymanagement/pull/92
  [lm98]: https://github.com/sbt/librarymanagement/pull/98
  [lm100]: https://github.com/sbt/librarymanagement/pull/100
  [lm111]: https://github.com/sbt/librarymanagement/pull/111
  [lm104]: https://github.com/sbt/librarymanagement/pull/104
  [lm97]: https://github.com/sbt/librarymanagement/pull/97
  [3202]: https://github.com/sbt/sbt/pull/3202
  [zinc295]: https://github.com/sbt/zinc/pull/295
  [zinc287]: https://github.com/sbt/zinc/pull/287
  [zinc288]: https://github.com/sbt/zinc/pull/288
  [zinc304]: https://github.com/sbt/zinc/pull/304
  [3115]: https://github.com/sbt/sbt/pull/3115
  [3182]: https://github.com/sbt/sbt/pull/3182
  [3151]: https://github.com/sbt/sbt/pull/3151
  [3184]: https://github.com/sbt/sbt/pull/3184
  [3216]: https://github.com/sbt/sbt/pull/3216
  [3218]: https://github.com/sbt/sbt/pull/3218
  [3225]: https://github.com/sbt/sbt/pull/3225
  [3233]: https://github.com/sbt/sbt/pull/3233
  [3133]: https://github.com/sbt/sbt/pull/3133
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/6548845/assets,https://api.github.com/repos/sbt/sbt/releases/6548845,1.0.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.0-M6,https://github.com/sbt/sbt/releases/tag/v1.0.0-M6,https://api.github.com/repos/sbt/sbt/zipball/v1.0.0-M6,v1.0.0-M6,False,True
6217610,2017-04-27T22:43:10Z,2017-04-28T03:36:42Z,0.13.16-M1,"
### Improvements

- Improves the new startup messages. See below.
- Ports sbt-cross-building's `^` and `^^` commands for plugin cross building. See below.

### Bug fixes

- Fixes the new startup messages. See below.

### Improvements and bug fixes to the new startup messages

The two new startup messages introduced in sbt 0.13.15 are:

- when writing out `sbt.version`, for build reproducability, and
- when informing the user about sbt's shell, for the performance improvement

When writing out `sbt.version` the messaging now:

- correctly uses a logger rather than println
- honours the log level set, for instance by `--error`
- never executes when sbt ""new"" is being run

When informing the user about sbt's shell the messaging now:

- is a 1 line message, rather than 3
- is at info level, rather than warn level
- can be suppressed with `suppressSbtShellNotification := true`
- only triggers when `compile` is being run
- never shows when sbt `new` is being run

[#3091][3091]/[#3097][3097]/[#3147][3147] by [@dwijnand][@dwijnand]

### sbt-cross-building

[@jrudolph][@jrudolph]'s sbt-cross-building is a plugin author's plugin.
It adds cross command `^` and sbtVersion switch command `^^`, similar to `+` and `++`,
but for switching between multiple sbt versions across major versions.
sbt 0.13.16 merges these commands into sbt because the feature it provides is useful as we migrate plugins to sbt 1.0.

To switch the `sbtVersion in pluginCrossBuild` from the shell use:

```
^^ 1.0.0-M5
```

Your plugin will now build with sbt 1.0.0-M5 (and its Scala version 2.12.2).

If you need to make changes specific to a sbt version, you can now include them into `src/main/scala-sbt-0.13`,
and `src/main/scala-sbt-1.0.0-M5`, where the binary sbt version number is used as postfix.

To run a command across multiple sbt versions, set:

```scala
crossSbtVersions := Vector(""0.13.15"", ""1.0.0-M5"")
```

Then, run:

```
^ compile
```

[#3133][3133] by [@eed3si9n][@eed3si9n]

  [3091]: https://github.com/sbt/sbt/issues/3091
  [3097]: https://github.com/sbt/sbt/issues/3097
  [3147]: https://github.com/sbt/sbt/pull/3147
  [3133]: https://github.com/sbt/sbt/pull/3133
  [@jrudolph]: https://github.com/jrudolph
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: https://github.com/dwijnand
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/6217610/assets,https://api.github.com/repos/sbt/sbt/releases/6217610,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.16-M1,https://github.com/sbt/sbt/releases/tag/v0.13.16-M1,https://api.github.com/repos/sbt/sbt/zipball/v0.13.16-M1,v0.13.16-M1,False,True
6112331,2017-04-18T16:45:17Z,2017-04-18T17:52:31Z,1.0.0-M5,"Please see http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/#cross-building-sbt-1-0-plugin-from-sbt-0-13 for roadmap.

### sbt 1.0.0-M5

This is the beta-1 release of sbt 1.0.
There's no binary compatibility with sbt 0.13 or other future 1.0.0-Mx versions.

#### Features, fixes, changes with compatibility implications

We are working with Scala Center to provide [an automatic migration tool][sbt-migration-rewrites].

- sbt 1.0 uses Scala 2.12 for build definitions and plugins. This also requires JDK 8.
- Non-auto `sbt.Plugin` trait is dropped. Please migrate to AutoPlugin. Auto plugins are easier to configure, and work better with each other.
- sbt 0.12 style `Build` trait that was deprecated in sbt 0.13.12, is removed. Please [migrate to build.sbt](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+from+the+Build+trait). Auto plugins and `Build` trait do not work well together, and its feature is now largely subsumed by multi-project build.sbt.
- sbt 0.12 style `Project(...)` constructor is restricted down to two parameters. This is because `settings` parameter does not work well with Auto Plugins. Use `project` instead.
- sbt 0.12 style key dependency operators `<<=`, `<+=`, `<++=` are removed. Please [migrate to :=, +=, and ++=](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html#Migrating+simple+expressions). These operators have been sources of confusion for many users, and have long been removed from 0.13 docs, and have been formally deprecated since sbt 0.13.13.
- Zinc 1 drops support for Scala 2.9 and earlier. Scala 2.10 must use 2.10.2 and above. Scala 2.11 must use 2.11.2 and above. (latest patch releases are recommended)
- Many of the case classes are replaced with pseudo case classes generated using Contraband. Migrate `.copy(foo = xxx)` to `withFoo(xxx)`.
- Changes `publishTo` and `otherResolvers` from SettingKeys to TaskKeys. [#2059][2059]/[#2662][2662] by [@dwijnand][@dwijnand]
- Drops sbt 0.12 style hyphen-separated key names (use `publishLocal` instead of `publish-local`).
- Renames early command feature from `--<command>` to `early(<command>)`.
- Log options `-error`, `-warn`, `-info`, `-debug` are added as shorthand for `""early(error)""` etc.
- `sbt.Process` and `sbt.ProcessExtra` are dropped. Use `scala.sys.process` instead.
- `incOptions.value.withNameHashing(...)` option is removed because name hashing is always on.
- `TestResult.Value` is now called `TestResult`.
- The scripted plugin is cross-versioned now, so you must use `%%` when depending on it
- Removes the `settingsSets` method from `Project` (along with `add/setSbtFiles`).
- Drops deprecated `InputTask` `apply` method and `inputTask` DSL method. Use `Def.inputTask` and `Def.spaceDelimited().parsed`.
- Drops deprecated `ProjectReference` implicit lifts. Use `RootProject(<uri>)`, `RootProject(<file>)` or `LocalProject(<string>)`.
- Drops deprecated `seq(..)` DSL method. Use `Seq` or pass in the settings without wrapping.
- Drops deprecated `File`/`Seq[File]` setting enrichments. Use `.value` and `Def.setting`.
- Drops deprecated `SubProcess` `apply` overload. Use `SubProcess(ForkOptions(runJVMOptions = ..))`.

#### Features

- New incremental compiler called Zinc 1. Details below.
- The interactive shell is adds network API. Details below.

#### Fixes



#### Improvements

- The startup log level is dropped to `-error` in script mode using `scalas`. [#840][840] by [@eed3si9n][@eed3si9n]
- Replace cross building support with sbt-doge. This allows builds with projects that have multiple different combinations of cross scala versions to be cross built correctly.  The behaviour of ++ is changed so that it only updates the Scala version of projects that support that Scala version, but the Scala version can be post fixed with ! to force it to change for all projects. A -v argument has been added that prints verbose information about which projects are having their settings changed along with their cross scala versions. [#2613][2613] by [@jroper][@jroper]
- `ivyLoggingLevel` is dropped to `UpdateLogging.Quiet` when CI environment is detected. [@eed3si9n][@eed3si9n]
- Add logging of the name of the different `build.sbt` (matching `*.sbt`) files used. [#1911][1911] by [@valydia][@valydia]
- Add the ability to call `aggregate` for the current project inside a build sbt file. By [@xuwei-k][@xuwei-k]
- Add new global setting `asciiGraphWidth` that controls the maximum width of the ASCII graphs printed by commands like `inspect tree`. Default value corresponds to the previously hardcoded value of 40 characters. By [@RomanIakovlev][@RomanIakovlev].

### Details of major changes

### Zinc 1: Class-based name hashing

A major improvement brought into Zinc 1.0 by Grzegorz Kossakowski (commissioned by Lightbend) is class-based name hashing, which will speed up the incremental compilation of Scala in large projects.

Zinc 1.0's name hashing tracks your code dependendencies at the class level, instead of at the source file level. The GitHub issue [sbt/sbt#1104](https://github.com/sbt/sbt/issues/1104) lists some comparisons of adding a method to an existing class in some projects:

```
ScalaTest   AndHaveWord class:          Before 49s, After 4s (12x)
Specs2      OptionResultMatcher class:  Before 48s, After 1s (48x)
scala/scala Platform class:             Before 59s, After 15s (3.9x)
scala/scala MatchCodeGen class:         Before 48s, After 17s (2.8x)
```

This depends on some factors such as how your classes are organized, but you can see 3x ~ 40x improvements. The reason for the speedup is because it compiles fewer source files than before by untangling the classes from source files. In the example adding a method to scala/scala's Platform class, sbt 0.13's name hashing used to compile 72 sources, but the new Zinc compiles 6 sources.

### sbt server: JSON API for tooling integration

sbt 1.0 includes server feature, which allows IDEs and other tools to query the build for settings, and invoke commands via a JSON API. Similar to the way that the interactive shell in sbt 0.13 is implemented with `shell` command, ""server"" is also just `shell` command that listens to both human input and network input. As a user, there should be minimal impact because of the server.

In March 2016, we [rebooted](http://eed3si9n.com/sbt-server-reboot) the ""server"" feature to make it as small as possible. We worked in collaboration with JetBrains' @jastice who works on IntelliJ's sbt interface to narrow down the feature list. sbt 1.0 will not have all the things we originally wanted, but in the long term, we hope to see better integration between IDE and sbt ecosystem using this system. For example, IDEs will be able to issue the compile task and retrieve compiler warning as JSON events:

```
{""type"":""xsbti.Problem"",""message"":{""category"":"""",""severity"":""Warn"",""message"":""a pure expression does nothing in statement position; you may be omitting necessary parentheses"",""position"":{""line"":2,""lineContent"":""  1"",""offset"":29,""pointer"":2,""pointerSpace"":""  "",""sourcePath"":""/tmp/hello/Hello.scala"",""sourceFile"":""file:/tmp/hello/Hello.scala""}},""level"":""warn""}
```

Another related feature that was added is the `bgRun` task which, for example, enables a server process to be run in the background while you run tests against it.

  [@eed3si9n]: https://github.com/eed3si9n
  [@gkossakowski]: https://github.com/gkossakowski
  [@dwijnand]: http://github.com/dwijnand
  [@Duhemm]: https://github.com/Duhemm
  [@jsuereth]: https://github.com/jsuereth
  [sbt-1-0-roadmap]: http://developer.lightbend.com/blog/2017-04-18-sbt-1-0-roadmap-and-beta1/
  [@eed3si9n]: https://github.com/eed3si9n
  [@jroper]: https://github.com/jroper
  [@valydia]: https://github.com/valydia
  [@RomanIakovlev]: https://github.com/RomanIakovlev
  [840]: https://github.com/sbt/sbt/issues/840
  [2613]: https://github.com/sbt/sbt/pull/2613
  [1911]: https://github.com/sbt/sbt/issues/1911
  [2059]: https://github.com/sbt/sbt/issues/2059
  [2662]: https://github.com/sbt/sbt/pull/2662
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/6112331/assets,https://api.github.com/repos/sbt/sbt/releases/6112331,1.0.x,https://api.github.com/repos/sbt/sbt/tarball/v1.0.0-M5,https://github.com/sbt/sbt/releases/tag/v1.0.0-M5,https://api.github.com/repos/sbt/sbt/zipball/v1.0.0-M5,v1.0.0-M5,False,True
6056870,2017-04-09T19:59:28Z,2017-04-12T09:27:38Z,0.13.15,"### Fixes with compatibility implications

- sbt 0.13.15 removes the Maven version range when possible. See below.

### Improvements

- Adds preliminary compatibility with JDK 9. Using this requires 0.13.15+ launcher. [#2951][2951]/[143][143] by [@retronym][@retronym]
- Adds ""local-preloaded"" repository for offline installation. See below.
- Notifies and enables users to stay in sbt's shell on the warm JVM by hitting `[ENTER]` while sbt is running. [#2987][2987]/[#2996][2996] by [@dwijnand][@dwijnand]
- Adds an `Append` instance to support `sourceGenerators += Def.task { ... }`, instead of needing `.taskValue`. [#2943][2943] by [@eed3si9n][@eed3si9n]
- Writes out the sbt.version in `project/build.properties` if it is missing. [#754][754]/[#3025][3025] by [@dwijnand][@dwijnand]
- XML generated by JUnitXmlTestsListener now correctly flags ignored, skipped and pending tests. [#2198][2198]/[#2854][2854] by [@ashleymercer][@ashleymercer]
- When sbt detects that the project is compiled with dotty, it now automatically
  sets `scalaCompilerBridgeSource` correctly, this reduces the boilerplate needed
  to make a dotty project. Note that dotty support in sbt is still considered
  experimental and not officially supported, see [dotty.epfl.ch][dotty] for
  more information. [#2902][2902] by [@smarter][@smarter]
- Updates sbt new's reference implementation to Giter8 0.7.2.
- ScriptedPlugin: Add the ability to paginate scripted tests.
  It is now possible to run a subset of scripted tests in a directory at once,
  for example:
  ```
  scripted source-dependencies/*1of3
  ```
  Will create three pages and run page 1. This is especially useful when running
  scripted tests on a CI, to benefit from the available parallelism. [3013][3013] by [@smarter][@smarter]

### Bug fixes

- Fixes .triggeredBy/.storeAs/etc not working when using `:=` and `.value` macros. [#1444][1444]/[#2908][2908] by [@dwijnand][@dwijnand]
- Fixes Ctrl-C not working on Windows by bumping up JLine. [#1855][1855] by [@eed3si9n][@eed3si9n]
- Fixes regressions in sbt 0.13.11 - 0.13.13 that processed build-level keys incorrectly. [#2851][2851]/[#2460][2460] by [@eed3si9n][@eed3si9n]
- Fixes a regression in sbt 0.13.12 that was misfiring Scala version enforcement when configuration does not extend `Compile`. [#2827][2827]/[#2786][2786] by [@eed3si9n][@eed3si9n]
- Fixes Scala binary version checking misfiring on configurations that do not extend `Compile`. [#2828][2828]/[#1466][1466] by [@eed3si9n][@eed3si9n]
- Fixes script mode ignoring quotation. [#2551][2551] by [@ekrich][@ekrich]
- Fixes IllegalStateException that Ivy gets into sometimes. [#2827][2827]/[#2015][2015] by [@eed3si9n][@eed3si9n]
- Fixes null sourceFile causing NPE. [#2766][2766] by [@avdv][@avdv]
- Fixes version parsing in validation. [#3011][3011] by [@eed3si9n][@eed3si9n]
- Fixes `Package.makeJar` deleting directory recursively. [#3014][3014] by [@larsrh][@larsrh]

### Maven version range improvement

Previously, when the dependency resolver (Ivy) encountered a Maven version range such as `[1.3.0,)`
it would go out to the Internet to find the latest version.
This would result to a surprising behavior where the eventual version keeps changing over time
*even when there's a version of the library that satisfies the range condition*.

Starting sbt 0.13.15, some Maven version ranges would be replaced with its lower bound
so that when a satisfactory version is found in the dependency graph it will be used.
You can disable this behavior using the JVM flag `-Dsbt.modversionrange=false`.

[#2954][2954] by [@eed3si9n][@eed3si9n]

### Offline installation

sbt 0.13.15 adds two new repositories called ""local-preloaded-ivy""
and ""local-preloaded"" that point to `~/.sbt/preloaded/`.
The purpose for the repositories is to preload them with
sbt artifacts so the installation of sbt will not require access to the Internet.

This also improves the startup time of sbt when you first run it
since the resolution happens off of a local-preloaded repository.

[#2993][2993]/[#145][145] by [@eed3si9n][@eed3si9n]

### Notes

No changes should be necessary to your project definition and all plugins published for sbt 0.13.{x|x<14} should still work.

See [Migrating from sbt 0.12.x](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html) for details on the old operator deprecation.

Special thanks to the contributors for making this release a success. According to `git shortlog -sn --no-merges v0.13.13..0.13.15`, compared to 0.13.13, there were 64 (non-merge) commits, by eleven contributors: Eugene Yokota, Dale Wijnand, Guillaume Martres, Jason Zaugg, Lars Hupel, Petro Verkhogliad, Eric Richardson, Claudio Bley, Haochi Chen, Paul Draper, Ashley Mercer. Thank you!

  [143]: https://github.com/sbt/sbt-launcher-package/pull/143
  [145]: https://github.com/sbt/sbt-launcher-package/pull/145
  [754]: https://github.com/sbt/sbt/issues/754
  [2766]: https://github.com/sbt/sbt/issues/2766
  [1855]: https://github.com/sbt/sbt/issues/1855
  [1466]: https://github.com/sbt/sbt/issues/1466
  [2786]: https://github.com/sbt/sbt/issues/2786
  [2827]: https://github.com/sbt/sbt/pull/2827
  [2828]: https://github.com/sbt/sbt/pull/2828
  [2551]: https://github.com/sbt/sbt/issues/2551
  [2987]: https://github.com/sbt/sbt/issues/2987
  [2996]: https://github.com/sbt/sbt/pull/2996
  [2851]: https://github.com/sbt/sbt/issues/2851
  [2460]: https://github.com/sbt/sbt/issues/2460
  [2951]: https://github.com/sbt/sbt/pull/2951
  [2954]: https://github.com/sbt/sbt/issues/2954
  [2015]: https://github.com/sbt/sbt/issues/2015
  [2827]: https://github.com/sbt/sbt/pull/2827
  [2198]: https://github.com/sbt/sbt/issues/2198
  [2854]: https://github.com/sbt/sbt/pull/2854
  [1444]: https://github.com/sbt/sbt/issues/1444
  [2908]: https://github.com/sbt/sbt/pull/2908
  [2902]: https://github.com/sbt/sbt/pull/2902
  [2993]: https://github.com/sbt/sbt/pull/2993
  [2943]: https://github.com/sbt/sbt/pull/2943
  [3011]: https://github.com/sbt/sbt/issues/3011
  [3025]: https://github.com/sbt/sbt/issues/3025
  [3013]: https://github.com/sbt/sbt/pull/3013
  [3014]: https://github.com/sbt/sbt/pull/3014
  [@eed3si9n]: https://github.com/eed3si9n
  [@dwijnand]: https://github.com/dwijnand
  [@Duhemm]: https://github.com/Duhemm
  [@avdv]: https://github.com/avdv
  [@ekrich]: https://github.com/ekrich
  [@retronym]: https://github.com/retronym
  [@ashleymercer]: https://github.com/ashleymercer
  [dotty]: http://dotty.epfl.ch/
  [@smarter]: https://github.com/smarter
  [@larsrh]: https://github.com/larsrh
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/6056870/assets,https://api.github.com/repos/sbt/sbt/releases/6056870,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.15,https://github.com/sbt/sbt/releases/tag/v0.13.15,https://api.github.com/repos/sbt/sbt/zipball/v0.13.15,v0.13.15,False,False
6022087,2017-04-07T06:47:10Z,2017-04-08T19:16:05Z,,0.13.14 is dead on arrival. https://github.com/sbt/sbt/issues/3086,https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/6022087/assets,https://api.github.com/repos/sbt/sbt/releases/6022087,1.0.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.14,https://github.com/sbt/sbt/releases/tag/v0.13.14,https://api.github.com/repos/sbt/sbt/zipball/v0.13.14,v0.13.14,False,True
4509779,2016-10-28T12:15:56Z,2016-10-28T12:27:08Z,0.13.13,"### Fixes with compatibility implications
- Deprecates the old sbt 0.12 DSL, to be removed in sbt 1.0. See below for more details.
- The `.value` method is deprecated for input tasks. Calling `.value` on an input key returns an `InputTask[A]`,
  which is completely unintuitive and often results in a bug. In most cases `.evaluated` should be called,
  which returns `A` by evaluating the task.
  Just in case `InputTask[A]` is needed, `.inputTaskValue` method is now provided. [#2709](https://github.com/sbt/sbt/pull/2709) by [@eed3si9n](https://github.com/eed3si9n)
- sbt 0.13.13 renames the early command `--<command>` that was added in 0.13.1 to `early(<command>)`. This fixes the regression [#1041](https://github.com/sbt/sbt/issues/1041). For backward compatibility `--error`, `--warn`, `--info`, and `--debug` will continue to function during the 0.13 series, but it is strongly encouraged to migrate to the single hyphen options: `-error`, `-warn`, `-info`, and `-debug`. [#2742](https://github.com/sbt/sbt/pull/2742) by [@eed3si9n](https://github.com/eed3si9n)
- Improve `show` when key returns a `Seq` by showing the elements one per line. Disable with `-Dsbt.disable.show.seq=true`. [#2755](https://github.com/sbt/sbt/pull/2755) by [@eed3si9n](https://github.com/eed3si9n)
- Recycles classloaders to be anti-hostile to JIT. Disable with `-Dsbt.disable.interface.classloader.cache=true`. [#2754](https://github.com/sbt/sbt/pull/2754) by [@retronym](https://github.com/retronym)

### Improvements
- Adds `new` command and `templateResolverInfos`. See below for more details.
- Auto plugins can add synthetic subprojects. See below for more details.
- Supports wildcard exclusions in POMs [#1431](https://github.com/sbt/sbt/issues/1431)/[sbt/ivy#22](https://github.com/sbt/ivy/pull/22)/[#2731](https://github.com/sbt/sbt/pull/2731) by [@jtgrabowski](https://github.com/jtgrabowski)
- Adds the ability to call `aggregateProjects(..)` for the current project inside a build sbt file. [#2682](https://github.com/sbt/sbt/pull/2682) by [@xuwei-k](https://github.com/xuwei-k)
- Adds `.jvmopts` support to the launcher script. [sbt/sbt-launcher-package#111](https://github.com/sbt/sbt-launcher-package/pull/111) by [@fommil](https://github.com/fommil)
- Adds `.java-version` support to the Windows launcher script. [sbt/sbt-launcher-package#111](https://github.com/sbt/sbt-launcher-package/pull/111) by [@fommil](https://github.com/fommil)
- The startup log level is dropped to `-error` in script mode using `scalas`. [#840](https://github.com/sbt/sbt/issues/840)/[#2746](https://github.com/sbt/sbt/pull/2746) by [@eed3si9n](https://github.com/eed3si9n)
- Adds `CrossVersion.patch` which sits in between `CrossVersion.binary` and `CrossVersion.full` in that it strips off any
  trailing `-bin-...` suffix which is used to distinguish variant but binary compatible Scala toolchain builds. Most things
  which are currently `CrossVersion.full` (eg. Scala compiler plugins, esp. macro-paradise) would be more appropriately
  depended on as `CrossVersion.patch` from this release on.

### Bug fixes
- Fixes a regression in sbt 0.13.12 that wrongly reports build-level keys to be ambiguous. [#2707](https://github.com/sbt/sbt/issues/2707)/[#2708](https://github.com/sbt/sbt/issues/2708) by [@Duhemm](https://github.com/Duhemm)
- Fixes a regression in sbt 0.13.12 that was misfiring Scala version enforcement when an alternative `scalaOrganization` is set. [#2703](https://github.com/sbt/sbt/pull/2703) by [@milessabin](https://github.com/milessabin)
- Fixes `Tags.ForkedTestGroup`. [#2677](https://github.com/sbt/sbt/issues/2677)/[#2681](https://github.com/sbt/sbt/pull/2681) by [@pauldraper](https://github.com/pauldraper)
- Fixes forked tests being reported as successful when the test harness fails. [#2442](https://github.com/sbt/sbt/issues/2442)/[#2722](https://github.com/sbt/sbt/issues/2722)/[#2730](https://github.com/sbt/sbt/pull/2730) by [@eed3si9n](https://github.com/eed3si9n)/[@dwijnand](https://github.com/dwijnand)
- Fixes incorrect installation path on Windows. [sbt/sbt-launcher-package#110](https://github.com/sbt/sbt-launcher-package/pull/110) by [@dwijnand](https://github.com/dwijnand)

### new command and templateResolverInfos

sbt 0.13.13 adds a `new` command, which helps create new build definitions.
The `new` command is extensible via a mechanism called the template resolver.
A template resolver pattern matches on the passed in arguments after `new`,
and if it's a match it will apply the template.

As a reference implementation, template resolver for [Giter8](http://www.foundweekends.org/giter8/) is provided. For instance:

```
sbt new eed3si9n/hello.g8
```

will run [eed3si9n/hello.g8](https://github.com/eed3si9n/hello.g8) using Giter8.

[#2705](https://github.com/sbt/sbt/pull/2705) by [@eed3si9n](https://github.com/eed3si9n)

### Synthetic subprojects

sbt 0.13.13 adds support for `AutoPlugin`s to define subprojects programmatically,
by overriding the `extraProjects` method:

```
import sbt._, Keys._

object ExtraProjectsPlugin extends AutoPlugin {
  override def extraProjects: Seq[Project] =
    List(""foo"", ""bar"", ""baz"") map generateProject

  def generateProject(id: String): Project =
    Project(id, file(id)).
      settings(
        name := id
      )
}
```

In addition, subprojects may be derived from an existing subproject
by overriding `derivedProjects`:

```
import sbt._, Keys._

object DerivedProjectsPlugin extends AutoPlugin {
  // Enable this plugin by default
  override def requires: Plugins = sbt.plugins.CorePlugin
  override def trigger = allRequirements

  override def derivedProjects(proj: ProjectDefinition[_]): Seq[Project] =
    // Make sure to exclude project extras to avoid recursive generation
    if (proj.projectOrigin != ProjectOrigin.DerivedProject) {
      val id = proj.id + ""1""
      Seq(
        Project(id, file(id)).
          enablePlugins(DatabasePlugin)
      )
    }
    else Nil
}
```

[#2532](https://github.com/sbt/sbt/issues/2532)/[#2717](https://github.com/sbt/sbt/pull/2717)/[#2738](https://github.com/sbt/sbt/issues/2738) by [@eed3si9n](https://github.com/eed3si9n)

### Deprecate old sbt 0.12 DSL

The no-longer-documented operators `<<=`, `<+=`, and `<++=` and tuple enrichments are deprecated,
and will be removed in sbt 1.0.

Generally,

```
task3 <<= (task1, task2) map { (t1, t2) => println(t1 + t2); t1 + t2 }
```

should migrate to

```
task3 := {
  println(task1.value + task2.value)
  task1.value + task2.value
}
```

Except for source generators, which requires task values:

```
sourceGenerators in Compile <+= buildInfo
```

This becomes:

```
sourceGenerators in Compile += buildInfo.taskValue
```

Another exception is input task:

```
run <<= docsRunSetting
```

This becomes:

```
run := docsRunSetting.evaluated
```

See [Migrating from sbt 0.12.x](http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html) for more details.

[#2716](https://github.com/sbt/sbt/pull/2716)/[#2763](https://github.com/sbt/sbt/issues/2763)/[#2764](https://github.com/sbt/sbt/pull/2764) by [@eed3si9n](https://github.com/eed3si9n) and [@dwijnand](https://github.com/dwijnand)

### Notes

No changes should be necessary to your project definition and all plugins published for sbt 0.13.{x|x<12} should still work.

Special thanks to the contributors for making this release a success. According to git shortlog -sn --no-merges v0.13.12..v0.13.13, [compared to 0.13.12](https://github.com/sbt/sbt/compare/v0.13.12...v0.13.13), there were 63 (non-merge) commits, by 9 contributors: Eugene Yokota, Dale Wijnand, Martin Duhem, Miles Sabin, Jaroslaw Grabowski, Kenji Yoshida, Jason Zaugg, Paul Draper, Björn Antonsson. Thank you!
",https://api.github.com/users/dwijnand,344610,dwijnand,https://api.github.com/repos/sbt/sbt/releases/4509779/assets,https://api.github.com/repos/sbt/sbt/releases/4509779,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.13,https://github.com/sbt/sbt/releases/tag/v0.13.13,https://api.github.com/repos/sbt/sbt/zipball/v0.13.13,v0.13.13,False,False
3674822,2016-07-16T03:37:56Z,2016-07-17T04:54:10Z,0.13.12,"### Fixes with compatibility implications
- By default the Scala toolchain artifacts are now transitively resolved using the provided `scalaVersion` and
  `scalaOrganization`. Previously a user specified `scalaOrganization` would not have affected transitive
  dependencies on, eg. `scala-reflect`. An Ivy-level mechanism is used for this purpose, and as a consequence
  the overriding happens early in the resolution process which might improve resolution times, and as a side
  benefit fixes [#2286](https://github.com/sbt/sbt/issues/2286). The old behavior can be restored by adding
  `ivyScala := { ivyScala.value map {_.copy(overrideScalaVersion = sbtPlugin.value)} }`
  to your build. [#2286](https://github.com/sbt/sbt/issues/2286)/[#2634](https://github.com/sbt/sbt/pull/2634) by [@milessabin](https://github.com/milessabin)
- The Build trait is deprecated in favor of the `.sbt` format [#2530](https://github.com/sbt/sbt/pull/2530) by [@dwijnand](http://github.com/dwijnand)

### Improvements
- When `RecompileOnMacroDef` is enabled, sbt will now print out a info level log indicating that some sources are being recompiled because it's used from a source that contains a macro definition. Can be disabled with `incOptions := incOptions.value.withLogRecompileOnMacro(false)` [#2637](https://github.com/sbt/sbt/pull/2637)/[#2659](https://github.com/sbt/sbt/pull/2659) by [@eed3si9n](https://github.com/eed3si9n)/[@dwijnand](http://github.com/dwijnand)
- Adds Windows script support and native file extensions on Unix platforms. [#2603](https://github.com/sbt/sbt/pull/2603) by [@ekrich](https://github.com/ekrich)
- Improves loading time of large builds. [#2630](https://github.com/sbt/sbt/pull/2630) by [@eed3si9n](https://github.com/eed3si9n)
- Adds the ability to call `dependsOn` for the current project inside a `.sbt` file. [#2653](https://github.com/sbt/sbt/pull/2653) by [@anatolydwnld](https://github.com/anatolydwnld)

### Bug fixes
- Fixes a 0.13.11 regression: dependency resolution hitting Maven Central even with repository overrides. [#2519](https://github.com/sbt/sbt/issues/2519)/[#2569](https://github.com/sbt/sbt/pull/2569) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes a 0.13.11 regression in incremental compiler: `IndexOutOfBoundsException` in ExtractAPI [#2497](https://github.com/sbt/sbt/issues/2497)/[#2557](https://github.com/sbt/sbt/pull/2557) by [@smarter](https://github.com/smarter)
- Fixes merged dependency descriptors dropping configuration specification. [#2002](https://github.com/sbt/sbt/issues/2002)/[#1500](https://github.com/sbt/sbt/issues/1500) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes merged dependency descriptors creating non-existing artifacts. [#2431](https://github.com/sbt/sbt/issues/2431)/[#2500](https://github.com/sbt/sbt/pull/2500) by [@Duhemm](http://github.com/Duhemm)
- Fixes incremental compilation misses when macro expansion references another source. [#2560](https://github.com/sbt/sbt/issues/2560)/[#2563](https://github.com/sbt/sbt/pull/2563) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes incremental compilation of package objects transitively in name hashing. [#2432](https://github.com/sbt/sbt/pull/2432)/[#2326](https://github.com/sbt/sbt/issues/2326) by [@gkossakowski](https://github.com/gkossakowski)
- Fixes incremental compilation relying on filename of package objects. [#2438](https://github.com/sbt/sbt/pull/2438) by [@Duhemm](http://github.com/Duhemm)
- Provides a workaround flag `incOptions := incOptions.value.withIncludeSynthToNameHashing(true)` for name hashing not including synthetic methods. This will not be enabled by default in sbt 0.13. It can also enabled by passing `sbt.inc.include_synth=true` to JVM. [#2537](https://github.com/sbt/sbt/issues/2537) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes tab completion for tasks defined in AutoPlugin's buildSettings [#2460](https://github.com/sbt/sbt/issues/2460)/[#2469](https://github.com/sbt/sbt/pull/2469) by [@Duhemm](http://github.com/Duhemm)
- Fixes configuration merging during cached resolution. [#2435](https://github.com/sbt/sbt/issues/2435)/[#2513](https://github.com/sbt/sbt/pull/2513) by [@Duhemm](http://github.com/Duhemm)

### Notes

No changes should be necessary to your project definition and all plugins published for sbt 0.13.{x|x<12} should still work. Please report any issues you encounter if this is not the case.

Special thanks to the contributors for making this release a success. According to `git shortlog -sn --no-merges v0.13.11..0.13.12`, [compared to 0.13.11](https://github.com/sbt/sbt/compare/v0.13.11...v0.13.12), there were 83 (non-merge) commits, by 11 contributors: Eugene Yokota, Martin Duhem, Grzegorz Kossakowski, Dale Wijnand, Guillaume Martres, Jason Zaugg, Miles Sabin, Tim Harper, ddworak, ekrich, Anatoly Fayngelerin. Thank you!
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/3674822/assets,https://api.github.com/repos/sbt/sbt/releases/3674822,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.12,https://github.com/sbt/sbt/releases/tag/v0.13.12,https://api.github.com/repos/sbt/sbt/zipball/v0.13.12,v0.13.12,False,False
2663274,2016-02-21T23:50:50Z,2016-02-22T15:56:26Z,0.13.11,"### Fixes with compatibility implications
- JCenter is now opt-in. A new setting `useJCenter` can be set to `true` to re-include it, as the first external resolver to find library dependencies. [#2217](https://github.com/sbt/sbt/issues/2217)/[#2467](https://github.com/sbt/sbt/pull/2467) by [@eed3si9n](https://github.com/eed3si9n)
- Adds `withInterProjectFirst` to the update option, which is enabled by default. When set to `true`, `inter-project` resolver will be prioritized above all resolvers and Ivy cache. [#1827](https://github.com/sbt/sbt/issues/1827) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes update option's `withLatestSnapshots` so it handles modules without an artifact. This flag will be enabled by default.
  [#1514](https://github.com/sbt/sbt/issues/1514)/[#1616](https://github.com/sbt/sbt/issues/1616)/[#2313](https://github.com/sbt/sbt/pull/2313) by [@eed3si9n](https://github.com/eed3si9n)
- No longer passes `-J<flag>` options to the local Java compiler. [#1968](https://github.com/sbt/sbt/issues/1968)/[#2272](https://github.com/sbt/sbt/pull/2272) by [@Duhemm](http://github.com/Duhemm)
- Fixes auto imports for auto plugins in global configuration files. Because this is _not_ source compatible with 0.13.x, the fix is enabled only when `sbt.global.autoimport` flag is `true`. [#2120](https://github.com/sbt/sbt/issues/2120)/[#2399](https://github.com/sbt/sbt/pull/2399) by [@timcharper](https://github.com/timcharper)

### Improvements
- Adds configurable compiler bridge. See below.
- Adds initial support for [Dotty](https://github.com/lampepfl/dotty). See below
- Adds settings for granular inter-project dependency tracking. See below.
- Scala version used by the build is updated to 2.10.6. [#2311](https://github.com/sbt/sbt/pull/2311) by [@eed3si9n](https://github.com/eed3si9n)
- If `publishMavenStyle` is `true`, `update` task warns when it sees intransitive dependencies, which do not translate to Maven. [#2127](https://github.com/sbt/sbt/pull/2127) by [@jsuereth](https://github.com/jsuereth)
- Adds `Def.settings`, which facilitates mixing settings with seq of settings. See below.
- sbt Serialization is updated to 0.1.2. [#2117](https://github.com/sbt/sbt/pull/2117) by [@dwijnand](http://github.com/dwijnand)
- Hides the stack trace on compilation error in build definition. [#2071](https://github.com/sbt/sbt/issues/2071)/[#2091](https://github.com/sbt/sbt/pull/2091) by [@Duhemm](http://github.com/Duhemm)
- Makes the dummy `Logger.Null` public. [#2094](https://github.com/sbt/sbt/pull/2094) by [@pdalpra](https://github.com/pdalpra)
- Uses diagnostic classes to get lines contents in local Java compiler. [#2108](https://github.com/sbt/sbt/pull/2108)/[#2201](https://github.com/sbt/sbt/pull/2201) by [@fkorotkov](http://github.com/fkorotkov)
- Adds logging of javaOptions. [#2087](https://github.com/sbt/sbt/issues/2087)/[#2103](https://github.com/sbt/sbt/pull/2103) by [@pdalpra](https://github.com/pdalpra)
- Warns when javaOptions are defined but fork is set to false. [#2041](https://github.com/sbt/sbt/issues/2041)/[#2103](https://github.com/sbt/sbt/pull/2103) by [@pdalpra](https://github.com/pdalpra)
- Adds an `Append.Sequence` instance for `List` to allow `+=`/`++=` on `developers` setting. [#2107](https://github.com/sbt/sbt/issues/2107)/[#2114](https://github.com/sbt/sbt/pull/2114) by [@pdalpra](https://github.com/pdalpra)
- Drops `sealed` from the typeclasses in `Append`. [#2322](https://github.com/sbt/sbt/pull/2322) by [@dwijnand](http://github.com/dwijnand)
- Fixes compilation warnings in sbt's codebase, and other clean ups. [#2112](https://github.com/sbt/sbt/pull/2112)/[#2137](https://github.com/sbt/sbt/pull/2137)/[#2139](https://github.com/sbt/sbt/pull/2139)/[#2142](https://github.com/sbt/sbt/pull/2142) by [@pdalpra](https://github.com/pdalpra)
- Adds `localIfFile` to `MavenRepository`, to force artifacts to be copied to the cache. [#2172](https://github.com/sbt/sbt/pull/2172) by [@dwijnand](http://github.com/dwijnand)
- Adds `Resolver.bintrayIvyRepo(owner, repo)`. [#2285](https://github.com/sbt/sbt/pull/2285) by [@dwijnand](http://github.com/dwijnand)
- Non-static annotation changes are no longer tracked by the incremental compiler. [#2343](https://github.com/sbt/sbt/pull/2343) by [@romanowski](https://github.com/romanowski)
- Reduces the memory usage of API info extraction in the incremental compiler. [#2343](https://github.com/sbt/sbt/pull/2343) by [@adriaanm](https://github.com/adriaanm)
- Memory-related options can now be overridden individually via the `-J` options. [sbt/sbt-launcher-package#105](https://github.com/sbt/sbt-launcher-package/pull/105)

### Bug fixes
- Fixes the false positive of inconsistent duplicate warnings. [#1933](https://github.com/sbt/sbt/issues/1933)/[#2258](https://github.com/sbt/sbt/pull/2258) by
  [@Duhemm](http://github.com/Duhemm)
- Fixes task scheduling performance on large builds by skipping checks in `sbt.Execute`. [#2302](https://github.com/sbt/sbt/issues/2302)/[#2303](https://github.com/sbt/sbt/pull/2303) by [@jrudolph](https://github.com/jrudolph)
- Fixes changes in value classes by registering signatures of method before and after erasure. [#1171](https://github.com/sbt/sbt/issues/1171)/[#2261](https://github.com/sbt/sbt/pull/2261) by [@Duhemm](http://github.com/Duhemm)
- Updated Ivy to merge IVY-1526 fix. [sbt/ivy#14](https://github.com/sbt/ivy/pull/14)/[#2118](https://github.com/sbt/sbt/issues/2118) by [@jsuereth](https://github.com/jsuereth)
- Fixes `updateClassifiers` downloading updated snapshot sources and docs.
  [#1750](https://github.com/sbt/sbt/issues/1750)/[sbt/ivy#17](https://github.com/sbt/ivy/pull/17)/[#2163](https://github.com/sbt/sbt/pull/2163)/[sbt/ivy#18](https://github.com/sbt/ivy/pull/18)/[#2186](https://github.com/sbt/sbt/pull/2186) by [@dwijnand](http://github.com/dwijnand)
- Fixes `updateClassifiers` on Ivy modules without `default` configuration.
  [#2264](https://github.com/sbt/sbt/issues/2264) by [@eed3si9n](https://github.com/eed3si9n)/[@Duhemm](http://github.com/Duhemm)
- Updated [JLine](https://github.com/jline/jline2) to version 2.13. [#1681](https://github.com/sbt/sbt/issues/1681)/[#2173](https://github.com/sbt/sbt/pull/2173)
- Changing the value of a constant (final-static-primitive) field will now
  correctly trigger incremental compilation for downstream classes. This is to
  account for the fact that Java compilers may inline constant fields in
  downstream classes. [#1967](https://github.com/sbt/sbt/issues/1967)/[#2085](https://github.com/sbt/sbt/pull/2085) by [@stuhood](https://github.com/stuhood)
- Fixes classfile location detection. [#2214](https://github.com/sbt/sbt/pull/2214) by [@stuhood](https://github.com/stuhood)
- Fixes a few typos in keys descriptions. [#2092](https://github.com/sbt/sbt/pull/2092) by [@pdalpra](https://github.com/pdalpra)
- Avoids the use of `ListBuffer#readOnly`. [#2095](https://github.com/sbt/sbt/pull/2095) by [@adriaanm](https://github.com/adriaanm)
- Expands transitive dependency exclusions when using sbt-maven-resolver-plugin [#2109](https://github.com/sbt/sbt/issues/2109) by [@jsuereth](https://github.com/jsuereth)
- Fixes incremental compilation of traits by including private members into the API hash. [#2155](https://github.com/sbt/sbt/issues/2155)/[#2160](https://github.com/sbt/sbt/pull/2160) by
  [@Duhemm](http://github.com/Duhemm)
- Fixes name hashing by removing class private members from the hash. [#2324](https://github.com/sbt/sbt/issues/2324)/[#2325](https://github.com/sbt/sbt/pull/2325) by [@gkossakowski](https://github.com/gkossakowski)
- Fixes name hashing error messages. [#2158](https://github.com/sbt/sbt/pull/2158) by [@stuhood](https://github.com/stuhood)
- Adds more robustness to `tasks` and `settings` command. [#2192](https://github.com/sbt/sbt/pull/2192) by [@DavidPerezIngeniero](https://github.com/DavidPerezIngeniero)
- Fixes Java compilation inconsistencies between sbt and `javac` by always failing if the local Java compiler reported errors. [#2228](https://github.com/sbt/sbt/issues/2228)/[#2271](https://github.com/sbt/sbt/pull/2271) by [@Duhemm](http://github.com/Duhemm)
- Fixes `JavaErrorParser` to parse non-compile-errors [#2256](https://github.com/sbt/sbt/issues/2256)/[#2272](https://github.com/sbt/sbt/pull/2272) by [@Duhemm](http://github.com/Duhemm)
- Fixes launcher configuration to add `sbt-ivy-snapshots` repository to resolve nightly builds. [@eed3si9n](https://github.com/eed3si9n)
- Fixes performance issues during tree traversal in the incremental compiler. [#2343](https://github.com/sbt/sbt/pull/2343) by [@adriaanm](https://github.com/adriaanm)
- Fixes the tracking of self types and F-bounded existential types in the incremental compiler. [#2343](https://github.com/sbt/sbt/pull/2343) by [@adriaanm](https://github.com/adriaanm)
- Avoid CCE when scalac internally uses `compileLate`. [#2453](https://github.com/sbt/sbt/pull/2453) by [@retronym](https://github.com/retronym)
- Fixes the memory-related options overriding `SBT_OPTS`. [sbt/sbt-launcher-package#101](https://github.com/sbt/sbt-launcher-package/pull/101) by [@eed3si9n](https://github.com/eed3si9n)

### Configurable Scala compiler bridge

sbt 0.13.11 adds `scalaCompilerBridgeSource` setting to specify the compiler brigde source. This allows different implementation of the bridge for Scala versions, and also allows future versions of Scala compiler implementation to diverge. The source module will be retrieved using library management configured by `bootIvyConfiguration` task.

[#2106](https://github.com/sbt/sbt/pull/2106)/[#2197](https://github.com/sbt/sbt/pull/2197)/[#2336](https://github.com/sbt/sbt/issues/2336) by [@Duhemm](http://github.com/Duhemm)

### Dotty awareness

sbt 0.13.11 will assume that Dotty is used when `scalaVersion` starts with `0.`.
The built-in compiler bridge in sbt does not support Dotty,
but a separate compiler bridge is being developed at [smarter/dotty-bridge](https://github.com/smarter/dotty-bridge) and
an example project that uses it is available at [smarter/dotty-example-project](https://github.com/smarter/dotty-example-project).

[#2344](https://github.com/sbt/sbt/pull/2344) by [@smarter](https://github.com/smarter)

### Inter-project dependency tracking

sbt 0.13.11 adds `trackInternalDependencies` and `exportToInternal` settings. These can be used to control whether to trigger compilation of a dependent subprojects when you call `compile`. Both keys will take one of three values: `TrackLevel.NoTracking`, `TrackLevel.TrackIfMissing`, and `TrackLevel.TrackAlways`. By default they are both set to `TrackLevel.TrackAlways`.

When `trackInternalDependencies` is set to `TrackLevel.TrackIfMissing`, sbt will no longer try to compile internal (inter-project) dependencies automatically, unless there are no `*.class` files (or JAR file when `exportJars` is `true`) in the output directory. When the setting is set to `TrackLevel.NoTracking`, the compilation of internal dependencies will be skipped. Note that the classpath will still be appended, and dependency graph will still show them as dependencies. The motivation is to save the I/O overhead of checking for the changes on a build with many subprojects during development. Here's how to set all subprojects to `TrackIfMissing`.

```
lazy val root = (project in file(""."")).
  aggregate(....).
  settings(
    inThisBuild(Seq(
      trackInternalDependencies := TrackLevel.TrackIfMissing,
      exportJars := true
    ))
  )
```

The `exportToInternal` setting allows the dependee subprojects to opt out of the internal tracking, which might be useful if you want to track most subprojects except for a few. The intersection of the `trackInternalDependencies` and `exportToInternal` settings will be used to determine the actual track level. Here's an example to opt-out one project:

```
lazy val dontTrackMe = (project in file(""dontTrackMe"")).
  settings(
    exportToInternal := TrackLevel.NoTracking
  )
```

[#2266](https://github.com/sbt/sbt/issues/2266)/[#2354](https://github.com/sbt/sbt/pull/2354) by [@eed3si9n](https://github.com/eed3si9n)

### Def.settings

Using `Def.settings` it is now possible to nicely define settings as such:

```
val modelSettings = Def.settings(
  sharedSettings,
  libraryDependencies += foo
)
```

[#2151](https://github.com/sbt/sbt/pull/2151) by [@dwijnand](http://github.com/dwijnand)

### Notes

No changes should be necessary to your project definition and all plugins published for sbt 0.13.{x|x<11} should still work.  Please report any issues you encounter if this is not the case.

Special thanks to the contributors for making this release a success. According to git shortlog -sn --no-merges v0.13.9..v0.13.11, [compared to 0.13.9][3], there were 201 (non-merge) commits, by 19 contributors: Martin Duhem, Eugene Yokota, Dale Wijnand, Stu Hood, Adriaan Moors, Pierre DAL-PRA, Grzegorz Kossakowski, fkorotkov, Josh Suereth, Huw Giddens, Tim Harper, Guillaume Martres, Antonio Cunei, Krzysztof Romanowski, David Perez, Jason Zaugg, Jacek Laskowski, Johannes Rudolph, Jonas Fonseca. Thank you!
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/2663274/assets,https://api.github.com/repos/sbt/sbt/releases/2663274,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.11,https://github.com/sbt/sbt/releases/tag/v0.13.11,https://api.github.com/repos/sbt/sbt/zipball/v0.13.11,v0.13.11,False,False
1658598,2015-08-11T00:32:57Z,2015-08-11T21:30:03Z,0.13.9,"### Fixes with compatibility implications
- Starting 0.13.9, `crossScalaVersions` default value is fixed back to the older 0.12.x behavior. See below for details.
- Starting 0.13.9, the generated POM files no longer include dependencies on source or javadoc jars obtained via `withSources()` or `withJavadoc()`. See below for details.
- Scala version is bumped to 2.10.5. This brings in the fix for [SI-9027](https://issues.scala-lang.org/browse/SI-9027): XML node sequence literal bug. [#1666](https://github.com/sbt/sbt/issues/1666)/[#2068](https://github.com/sbt/sbt/pull/2068) by [@eed3si9n](https://github.com/eed3si9n)

### Improvements
- Adds `retrieveManaged` related improvements. See below for details.
- Adds `-=` and `--=` for settings and tasks, which are the opposites of `+=` and `++=`. [#1922](https://github.com/sbt/sbt/pull/1922) by [@dwijnand](http://github.com/dwijnand)
- Adds `inThisBuild`, similar to `inConfig`, to allow specifying multiple settings in `ThisBuild` scope. [#1847](https://github.com/sbt/sbt/issues/1847)/[#1989](https://github.com/sbt/sbt/pull/1989) by [@dwijnand](http://github.com/dwijnand)
- Adds a nicer toString to SimpleCommand to make it more human-friendly. [#1998](https://github.com/sbt/sbt/issues/1998)/[#2000](https://github.com/sbt/sbt/pull/2000) by [@dwijnand](http://github.com/dwijnand)
- Adds `forceUpdatePeriod` key, that takes values of `Option[FiniteDuration]`.  If set, a full `update` will occur after that amount of time without needing to explicitly run the `update` task. By [@ajsquared](https://github.com/ajsquared)
- Updates `ForkError.getMessage()` to include exception's original name. [#2028](https://github.com/sbt/sbt/issues/2028) by [@kamilkloch](https://github.com/kamilkloch)
- Adds help message for `inspect actual`. [#1651](https://github.com/sbt/sbt/issues/1651)/[#1990](https://github.com/sbt/sbt/pull/1990) by [@dwijnand](http://github.com/dwijnand)
- Supports excluding tests in `testOnly`/`testQuick` with `-`, for example `-MySpec`.
  [#1970](https://github.com/sbt/sbt/pull/1970) by [@matthewfarwell](http://github.com/matthewfarwell)
- Adds more diagnostic info for underfined settings.
  [#2008](https://github.com/sbt/sbt/issues/2008)/[#2009](https://github.com/sbt/sbt/pull/2009) by [@DavidPerezIngeniero](https://github.com/DavidPerezIngeniero)
- Adds an `Extracted.runInputTask` helper to assist with imperatively executing input tasks. [#2006](https://github.com/sbt/sbt/pull/2006) by [@jroper](https://github.com/jroper)
- Renames `distinct` method on `PathFinder` to `distinctName`. [#1973](https://github.com/sbt/sbt/issues/1973) by [@eed3si9n](https://github.com/eed3si9n)
- Adds `distinctPath` method on `PathFinder`. [#1973](https://github.com/sbt/sbt/issues/1973) by [@eed3si9n](https://github.com/eed3si9n)

### Bug fixes
- Fixes memory/performance/correctness issue with cached resolution. See below.
- Correct incremental compile debug message for invalidated products [#1961](https://github.com/sbt/sbt/issues/1961) by [@jroper](https://github.com/jroper)
- Enables forced GC by default. See below.
- Fixes Maven compatibility to read `maven-metadata.xml`. See below.
- Captures errors on `help` command. [#1900](https://github.com/sbt/sbt/issues/1900)/[#1940](https://github.com/sbt/sbt/pull/1940) by [@DavidPerezIngeniero](https://github.com/DavidPerezIngeniero)
- Prevents history command(s) from going into an infinite loop [#1562](https://github.com/sbt/sbt/issues/1562) by [@PanAeon](https://github.com/PanAeon)
- Honors overwrite flag when publishing locally. [#1960](https://github.com/sbt/sbt/pull/1960) by [@asflierl](http://github.com/asflierl)
- Fixes a certain class of pom corruption that can occur in the presence of parent-poms. [#1856](https://github.com/sbt/sbt/issues/1856) by [@jsuereth](https://github.com/jsuereth)
- Adds dependency-level exclusions in the POM for project-level exclusions. [#1877](https://github.com/sbt/sbt/issues/1877)/[#2035](https://github.com/sbt/sbt/pull/2035) by [@dwijnand](http://github.com/dwijnand)

### `crossScalaVersions` default value

As of this fix `crossScalaVersions` returns to the behaviour present in `0.12.4` whereby it defaults to what
`scalaVersion` is set to, for example if `scalaVersion` is set to `""2.11.6""`, `crossScalaVersions` now defaults
to `Seq(""2.11.6"")`.

Therefore when upgrading from any version between `0.13.0` and `0.13.8` be aware of this new default if
your build setup depended on it.

[#1828](https://github.com/sbt/sbt/issues/1828)/[#1992](https://github.com/sbt/sbt/pull/1992) by [@dwijnand](http://github.com/dwijnand)

### POM files no longer include certain source and javadoc jars

When declaring library dependencies using the withSources() or withJavadoc() options, sbt was also including
in the pom file, as dependencies, the source or javadoc jars using the default Maven scope. Such dependencies
might be erroneously processed as they were regular jars by automated tools

[#2001](https://github.com/sbt/sbt/issues/2001)/[#2027](https://github.com/sbt/sbt/pull/2027) by [@cunei](https://github.com/cunei)

### `retrieveManaged` related improvements

sbt 0.13.9 adds `retrieveManagedSync` key that, when set to `true`, enables synchronizing retrieved to the current build by removed unneeded files.

It also adds `configurationsToRetrieve` key, that takes values of `Option[Set[Configuration]]`. If set, when `retrieveManaged` is true only artifacts in the specified configurations will be retrieved to the current build. 

[#1950](https://github.com/sbt/sbt/pull/1950)/[#1987](https://github.com/sbt/sbt/pull/1987) by [@ajsquared](https://github.com/ajsquared)

### Cached resolution fixes

On a larger dependency graph, the JSON file growing to be 100MB+
with 97% of taken up by _caller_ information.
To make the matter worse, these large JSON files were never cleaned up.

sbt 0.13.9 filters out artificial or duplicate callers,
which fixes `OutOfMemoryException` seen on some builds.
This generally shrinks the size of JSON, so it should make the IO operations faster.
Dynamic graphs will be rotated with directories named after `yyyy-mm-dd`,
and stale JSON files will be cleaned up after few days.

sbt 0.13.9 also fixes a correctness issue that was found in the earlier releases.
Under some circumstances, libraries that shouldn't have been evicted was being evicted.
This occured when library `A1` depended on `B2`, but a newer `A2` dropped the dependency,
and `A2` and `B1` are also is in the graph. This is fixed by sorting the graph prior to eviction.

[#2030](https://github.com/sbt/sbt/pull/2030)/[#1721](https://github.com/sbt/sbt/issues/1721)/[#2014](https://github.com/sbt/sbt/issues/2014)/[#2046](https://github.com/sbt/sbt/issues/2046)/[#2097](https://github.com/sbt/sbt/pull/2097)/[#2129](https://github.com/sbt/sbt/pull/2129) by [@eed3si9n](https://github.com/eed3si9n)

### Force GC

[@cunei](https://github.com/cunei) in [#1223](https://github.com/sbt/sbt/issues/1223) discovered that sbt leaks PermGen
when it creates classloaders to call Scala Compilers.
sbt 0.13.9 will call GC on a set interval (default: 60s).
It will also call GC right before cross building.
This behavior can diabled using by setting false to `forcegc`
setting or `sbt.task.forcegc` flag.

[#1773](https://github.com/sbt/sbt/pull/1773) by [@eed3si9n](https://github.com/eed3si9n)

### Maven compatibility fix

To resolve dynamic versions such as `SNAPSHOT` and version ranges, the dependency resolution engine
queries for the list of available versions.
For Maven repositories, it was supposed read `maven-metadata.xml` first, but
because sbt customizes the repository layout for cross building, it has been falling back
to screen scraping of the Apache directory listing.
This problem surfaced as:
- Version range not working for artifacts hosted on Bintray. [#2005](https://github.com/sbt/sbt/issues/2005)
- Potentially other `SNAPSHOT` related issues.

sbt 0.13.9 fixes this by relaxing the Maven compatiblity check, so it will read `maven-metadata.xml`. [#2075](https://github.com/sbt/sbt/pull/2075) by [@eed3si9n](https://github.com/eed3si9n)

### Contributors

Special thanks to the contributors for making this release a success. Compared to 0.13.8, there were 127 (non-merge) commits, by 14 contributors: Eugene Yokota, Dale Wijnand, Josh Suereth, Andrew Johnson, David Perez, Matthew Farwell, Antonio Cunei, Andrzej Jozwik, James Roper, Vitalii Voloshyn, Benjy, Kamil Kloch, Max Worgan, Andreas Flierl. Thank you!
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/1658598/assets,https://api.github.com/repos/sbt/sbt/releases/1658598,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.9,https://github.com/sbt/sbt/releases/tag/v0.13.9,https://api.github.com/repos/sbt/sbt/zipball/v0.13.9,v0.13.9,False,False
1073637,2015-03-20T16:57:36Z,2015-03-20T17:04:34Z,0.13.8,"### Changes with compatibility implications
- Disable publishing on implicitly created root project by not enabling `IvyPlugin` by default (`-Dsbt.root.ivyplugin=true` will revert this behavior). [#1871](https://github.com/sbt/sbt/pull/1871)/[#1869](https://github.com/sbt/sbt/issues/1869) by [@dwijnand](http://github.com/dwijnand)
- Rolls back XML parsing workaround. See below.
- Enables cross-version support for Scala sources. See below.

### Improvements
- Adds Maven resolver plugin. See below.
- Adds project-level dependency exclusions. See below.
- Adds sequential tasks. See below.
- Discovered main classes will be sorted. [#1180](https://github.com/sbt/sbt/issues/1180) by [@kretes](https://github.com/kretes)
- Implemented a new mechanism of forking javac, whereby errors are captured.  Also more likely to run in-process. [#1702](https://github.com/sbt/sbt/pull/1702) by [@jsuereth](https://github.com/jsuereth)
- `evicted` will display all evictions (including the ones not suspected of binary incompatibility). [#1615](https://github.com/sbt/sbt/issues/1615) by [@eed3si9n](https://github.com/eed3si9n)
- Better abstration to track new kinds of dependencies for incremental compiler. [#1340](https://github.com/sbt/sbt/pull/1340) by [@Duhemm](https://github.com/Duhemm)
- Source dependency uses `--depth 1` for git clone. [#1787](https://github.com/sbt/sbt/pull/1787) by [@xuwei-k](https://github.com/xuwei-k)
- Facilitate nicer ways of declaring project settings. See below. [#1902](https://github.com/sbt/sbt/pull/1902) by [@dwijnand](http://github.com/dwijnand)

### Fixes
- Javac warnings are treated as warnings.  [#1702](https://github.com/sbt/sbt/pull/1702)/[#875](https://github.com/sbt/sbt/issues/875) by [@jsuereth](https://github.com/jsuereth)
- `compilerReporter` is fed to javac during incremental compilation. [#1542](https://github.com/sbt/sbt/issues/1542) by [@jsuereth](https://github.com/jsuereth)
- Ignores hidden build files from the build. [#1746](https://github.com/sbt/sbt/pull/1746) by [@j-keck](https://github.com/j-keck)
- Fixes build.sbt parsing of multiple import. [#1741](https://github.com/sbt/sbt/pull/1741) by [@ajozwik](https://github.com/ajozwik)
- Fixes ANSI escape code for overwriting lines on Windows. [#1771](https://github.com/sbt/sbt/pull/1771) by [@dwickern](https://github.com/dwickern)
- Adds null check in incremental compiler's type tree extraction. [#1754](https://github.com/sbt/sbt/pull/1754)/[#1655](https://github.com/sbt/sbt/issues/1655) by [@Duhemm](https://github.com/Duhemm)
- sbt doesn't honor Maven's uniqueVersions (use sbt-maven-resolver to fix). [#1322](https://github.com/sbt/sbt/issues/1322)  by [@jsuereth](https://github.com/jsuereth)
- sbt doesn't see new SNAPSHOT dependency versions in local maven repos (use withLatestSnapshots + sbt-maven-resolver to fix) [#321](https://github.com/sbt/sbt/issues/321) by [@jsuereth](https://github.com/jsuereth)
- Property in pom's version field results to wrong dependency resolution (use sbt-maven-resolver to fix). [#647](https://github.com/sbt/sbt/issues/647) by [@jsuereth](https://github.com/jsuereth)
- Maven local resolver with parent POM (use sbt-maven-resolver). [#1616](https://github.com/sbt/sbt/issues/1616) by [@jsuereth](https://github.com/jsuereth)
- Fixes eviction warning being too noisy. [#1615](https://github.com/sbt/sbt/issues/1615) by [@eed3si9n](https://github.com/eed3si9n)
- Issues warning if multiple dependencies to a same library is found with different version. [#1634](https://github.com/sbt/sbt/pull/1634) by [@eed3si9n](https://github.com/eed3si9n)
- Removes ""No main class detected"" warning. [#1766](https://github.com/sbt/sbt/pull/1766) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes sporadic ConcurrentModificationException from JUnitXmlTestsListener. [#1881](https://github.com/sbt/sbt/issues/1881) by [@aerskine](https://github.com/aerskine)
- Fixes handling of ANSI CSI codes. [#1885](https://github.com/sbt/sbt/issues/1885) by [@jsuereth](https://github.com/jsuereth)
- Exempt org.scala-lang:scala-actors-migration and org.scala-lang:scala-pickling from scala binary version checks. [#1818](https://github.com/sbt/sbt/pull/1818)/[#1899](https://github.com/sbt/sbt/pull/1899) by [@dwijnand](http://github.com/dwijnand)
- Fixes cached resolution handling of internal depdendencies. [#1711](https://github.com/sbt/sbt/issues/1711) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes cached resolution being too verbose. [#1752](https://github.com/sbt/sbt/pull/1752) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes cached resolution not evicting modules transitively. [#1760](https://github.com/sbt/sbt/pull/1760) by [@eed3si9n](https://github.com/eed3si9n)

### Rolling back XML parsing workaround

sbt 0.13.7 implemented natural whitespace handling by switching `build.sbt` parsing to use Scala compiler, instead of blank line delimiting. We realized that some build definitions no longer parsed due to the difference in XML handling.

```
val a = <x/><y/>
val b = 0
```

At the time, we thought adding parentheses around XML nodes could work around this behavior. However, the workaround has caused [more issues](https://github.com/sbt/sbt/issues/1738), and since then we have realized that this is a compiler issue [SI-9027](https://issues.scala-lang.org/browse/SI-9027), so we have decided to roll back our workaround. In the meantime, if you have consecutive XML elements in your build.sbt, enclose them in `<xml:group>` tag, or parentheses.

```
val a = <xml:group><x/><y/></xml:group>
val b = 0
```

[#1765](https://github.com/sbt/sbt/pull/1765) by [@ajozwik](https://github.com/ajozwik)

### Cross-version support for Scala sources

When `crossPaths` setting is set to `true` (it is `true` by default), sbt 0.13.8 will include
`src/main/scala-<scalaBinaryVersion>/` to the `Compile` compilation in addition to
`src/main/scala`. For example, it will include `src/main/scala-2.11/` for Scala 2.11.5, and
`src/main/scala-2.9.3` for Scala 2.9.3. [#1799](https://github.com/sbt/sbt/pull/1799) by [@indrajitr](https://github.com/indrajitr)

### Maven resolver plugin

sbt 0.13.8 adds an extension point in the dependency resolution to customize Maven resolvers.
This allows us to write sbt-maven-resolver auto plugin, which internally uses Eclipse Aether
to resolve Maven dependencies instead of Apache Ivy.

To enable this plugin, add the following to `project/maven.sbt` (or `project/plugin.sbt` the file name doesn't matter):

```
addMavenResolverPlugin
```

This will create a new `~/.ivy2/maven-cache` directory, which contains the Aether cache of files.
You may notice some file will be re-downloaded for the new cache layout.
Additionally, sbt will now be able to fully construct
`maven-metadata.xml` files when publishing to remote repositories or when publishing to the local `~/.m2/repository`.
This should help erase many of the deficiencies encountered when using Maven and sbt together.

**Notes and known limitations**:
- sbt-maven-resolver requires sbt 0.13.8 and above.
- The current implementation does not support Ivy-style dynamic revisions, such as ""2.10.+"" or ""latest.snapshot"".  This
  is a fixable situation, but the version range query and Ivy -> Maven version range translation code has not been migrated.
- The current implementation does not support Maven-style range revisions if found on transitive dependencies. [#1921](https://github.com/sbt/sbt/issues/1921)

[#1793](https://github.com/sbt/sbt/pull/1793) by [@jsuereth](https://github.com/jsuereth)

### Project-level dependency exclusions

sbt 0.13.8 adds **experimental** project-level dependency exclusions:

```
excludeDependencies += ""org.apache.logging.log4j""
excludeDependencies += ""com.example"" %% ""foo""
```

In the first example, all artifacts from the organization `""org.apache.logging.log4j""` are excluded from the managed dependency.
In the second example, artifacts with the organization `""com.example""` and the name `""foo""` cross versioned to the current `scalaVersion` are excluded.

**Note**: This feature currently does not translate to `pom.xml`!

[#1748](https://github.com/sbt/sbt/issues/1748) by [@eed3si9n](https://github.com/eed3si9n)

### Sequential tasks

sbt 0.13.8 adds a new `Def.sequential` function to run tasks under semi-sequential semantics.
Here's an example usage:

```
lazy val root = project.
  settings(
    testFile := target.value / ""test.txt"",
    sideEffect0 := {
      val t = testFile.value
      IO.append(t, ""0"")
      t
    },
    sideEffect1 := {
      val t = testFile.value
      IO.append(t, ""1"")
      t
    },
    foo := Def.sequential(compile in Compile, sideEffect0, sideEffect1, test in Test).value
  )
```

Normally sbt's task engine will reorder tasks based on the dependencies among the tasks,
and run as many tasks in parallel (See [Custom settings and tasks](http://www.scala-sbt.org/0.13/tutorial/Custom-Settings.html) for more details on this).
`Def.sequential` instead tries to run the tasks in the specified order.
However, the task engine will still deduplicate tasks. For instance, when `foo` is executed, it will only compile once,
even though `test in Test` depends on compile. [#1817](https://github.com/sbt/sbt/pull/1817)/[#1001](https://github.com/sbt/sbt/issues/1001) by [@eed3si9n](https://github.com/eed3si9n)

### Nicer ways of declaring project settings

Now a `Seq[Setting[_]]` can be passed to `Project.settings` without the needs for ""varargs expansion"", ie. `: _*`

Instead of:

```
lazy val foo = project settings (sharedSettings: _*)
```

It is now possible to do:

```
lazy val foo = project settings sharedSettings
```

Also, `Seq[Setting[_]]` can be declared at the same level as individual settings in `Project.settings`, for instance:

```
lazy val foo = project settings (
  sharedSettings,
  version := ""1.0"",
  someMoreSettings
)
```

[#1902](https://github.com/sbt/sbt/pull/1902) by [@dwijnand](http://github.com/dwijnand)

### Bytecode Enhancers

sbt 0.13.8 adds an extension point whereby users can effectively manipulate java bytecode (.class files) _before_ the
incremental compiler attempts to cache the classfile hashes.  This allows libraries like ebean to function with sbt
without corrupting the compiler cache and rerunning compile every few seconds.

This splits the compile task into several subTasks:
1. `previousCompile`:  This task returns the previously persisted `Analysis` object for this project.
2. `compileIncremental`: This is the core logic of compiling Scala/Java files together.   This task actually does the
   work of compiling a project incrementally, including ensuring a minimum number of source files are compiled.
   After this method, all .class files that would be generated by scalac + javac will be available.
3. `manipulateByteCode`: This is a stub task which takes the `compileIncremental` result and returns it.
   Plugins which need to manipulate bytecode are expected to override this task with their own implementation, ensuring
   to call the previous behavior.
4. `compile`:  This task depends on `manipulateBytecode` and then persists the `Analysis` object containing all
   incremental compiler information.

Here's an example of how to hook the new `manipulateBytecode` key in your own plugin:

```
manipulateBytecode in Compile := {
  val previous = (manipulateBytecode in Compile).value
  doManipulateBytecode(previous)  // Note: This must return a new Compiler.CompileResult with our changes.
}
```

See [#1714](https://github.com/sbt/sbt/issues/1714) for the full details of the implementation.
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/1073637/assets,https://api.github.com/repos/sbt/sbt/releases/1073637,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.8,https://github.com/sbt/sbt/releases/tag/v0.13.8,https://api.github.com/repos/sbt/sbt/zipball/v0.13.8,v0.13.8,False,False
809123,2014-11-19T06:46:20Z,2014-12-25T21:14:48Z,v0.13.7,"### Fixes with compatibility implications
- Maven artifact dependencies will limit their transitive dependencies to `Compile` rather than _every configuration_ if no `master` configuration is found. [#1586](https://github.com/sbt/sbt/pull/1586) by [@jsuereth](https://github.com/jsuereth)
- The new natural whitspace handling parser is unable to cope with certain classes of Scala syntax. In particular, top-level pattern matches, or multi-value defintions are no longer supported.

Here are examples:

```
val x, y = project // BAD
val x = project    // 
val y = project    //  GOOD
```

### Improvements
- Natural whitespace handling. See below. [#1606](https://github.com/sbt/sbt/issues/1606) by [@rkrzewski](https://github.com/rkrzewski), [@ajozwik](https://github.com/ajozwik), and others at [@WarsawScala](https://github.com/WarsawScala)
- Adds support for publishing to a custom Maven local repository. See below. [#1589](https://github.com/sbt/sbt/issues/1589)/[#1600](https://github.com/sbt/sbt/pull/1600) by [@topping](https://github.com/topping)
- Adds circular dependency check. See below. [#1601](https://github.com/sbt/sbt/pull/1601) by [@eed3si9n](https://github.com/eed3si9n)
- Adds cached resolution (minigraph caching). See below. [#1631](https://github.com/sbt/sbt/pull/1631) by [@eed3si9n](https://github.com/eed3si9n)
- Allows the ""-bin"" Scala version suffix to specify a bincompat version. [#1573](https://github.com/sbt/sbt/pull/1573) by [@cunei](https://github.com/cunei)
- Adds support for publishing to file repositories specified in `~/.sbt/repositories`. [#1579](https://github.com/sbt/sbt/pull/1579) by [@copumpkin](https://github.com/copumpkin)
- Adds support for publishing to a Maven repository with `file` URLs. [#1618](https://github.com/sbt/sbt/pull/1618) by [@jsuereth](https://github.com/jsuereth)
- Don't hardcode existing relations in `TextAnalysisFormat`. [#1572](https://github.com/sbt/sbt/pull/1572) by [@Duhemm](https://github.com/Duhemm)
- Adds `developers` key. [#1590](https://github.com/sbt/sbt/pull/1590) by [@jedesah](https://github.com/jedesah)
- Will warn when none or multiple main classes detected. [#1648](https://github.com/sbt/sbt/pull/1648) by [@kretes](https://github.com/kretes)

### Bug fixes
- Fixes issues with specifying `scalaHome`/`scalaInstance` and running tests. [#1584](https://github.com/sbt/sbt/pull/1584) by [@jsuereth](https://github.com/jsuereth)
- Fixes StackOverflow error in dependencies extraction with macro and name hashing. [#1563](https://github.com/sbt/sbt/pull/1563)/[#1642](https://github.com/sbt/sbt/pull/1642)/[#1237](https://github.com/sbt/sbt/issues/1237)/[#1544](https://github.com/sbt/sbt/issues/1544) by [@Duhemm](https://github.com/Duhemm)
- Fixes `set every`. [#1591](https://github.com/sbt/sbt/pull/1591)/[#1430](https://github.com/sbt/sbt/issues/1430) by [@cunei](https://github.com/cunei)
- Ivy no longer silently flops to `HttpClient` resolver when httpclient is on the classpath. [#1602](https://github.com/sbt/sbt/pull/1602) by [@jsuereth](https://github.com/jsuereth)
- Backports Ivy fix to not throw exceptions when modules are evicted.  [#1607](https://github.com/sbt/sbt/pull/1607)/[#1598](https://github.com/sbt/sbt/issues/1598) by [@jsuereth](https://github.com/jsuereth)
- When resolving from a Maven repository, and unable to read `maven-metadata.xml` file (common given the divergence in
  Maven 3 and Ivy 2), we attempt to use `LastModified` timestamp in lieu of ""published"" timestamp.  
  [#1611](Https://github.com/sbt/sbt/issues/1611)/[#1618](https://github.com/sbt/sbt/pull/1618) by [@jsuereth](https://github.com/jsuereth)
- Fixes NullPointerException when using `ChainResolver` and Maven repositories. [#1611](Https://github.com/sbt/sbt/issues/1611)/[#1618](https://github.com/sbt/sbt/pull/1618) by [@jsuereth](https://github.com/jsuereth)
- Fixes `Resolver`'s `url` method dropping `descriptorOptional` and `skipConsistencyCheck`. [#1621](https://github.com/sbt/sbt/pull/1621) by [@tmandke](https://github.com/tmandke)
- Revert `useLatestSnapshot` on `updateOptions` to default to `false`.  Reverts chain resolver to previous behavior.  [#1683](https://github.com/sbt/sbt/pull/1683) by [@jsuereth](https://github.com/jsuereth)

### Natural whitespace handling

Starting sbt 0.13.7, build.sbt will be parsed using a customized Scala parser. This eliminates the requirement to use blank line as the delimiter between each settings, and also allows blank lines to be inserted at arbitrary position within a block.

This feature can be disabled, if necessary, via the -Dsbt.parser.simple=true flag.

This feature was contributed by [Andrzej Jozwik (@ajozwik)](https://github.com/ajozwik), [Rafał Krzewski (@rkrzewski)](https://github.com/rkrzewski) and others at [@WarsawScala](https://github.com/WarsawScala) inspired by Typesafe's [@gkossakowski](https://github.com/gkossakowski) organizing multiple [meetups](http://blog.japila.pl/2014/07/gkossakowski-on-warszawscala-about-how-to-patch-scalasbt/) and [hackathons](http://blog.japila.pl/2014/07/hacking-scalasbt-with-gkossakowski-on-warszawscala-meetup-in-javeo_eu/) on how to patch sbt with the focus on this blank line issue. Dziękujemy! [#1606](https://github.com/sbt/sbt/issues/1606)

### Custom Maven local repository location

Maven local repository is now resolved from the first of:
- `<localRepository/>` element in `~/.m2/settings.xml`
- `<localRepository/>` element in `$M2_HOME/conf/settings.xml`, or
- the default of `~/.m2/repository` if neither of those configuration elements exist

If more Maven settings are required to be recovered, the proper thing to do is merge the two possible `settings.xml` files, then query against the element path of the merge. This code avoids the merge by checking sequentially.

[#1589](https://github.com/sbt/sbt/issues/1589)/[#1600](https://github.com/sbt/sbt/pull/1600) by [@topping](https://github.com/topping)

### Circular dependency

By default circular dependencies are warned, but they do not halt the dependency resolution. Using the following setting, circular dependencies can be treated as an error.

```
updateOptions := updateOptions.value.withCircularDependencyLevel(CircularDependencyLevel.Error)
```

[#1601](https://github.com/sbt/sbt/pull/1601) by [@eed3si9n](https://github.com/eed3si9n)

### Cached resolution (minigraph caching)

sbt 0.13.7 adds a new **experimental** update option called _cached resolution_, which replaces consolidated resolution:

```
updateOptions := updateOptions.value.withCachedResolution(true)
```

Unlike consolidated resolution, which only consolidated subprojects with identical dependency graph, cached resolution create an artificial graph for each direct dependency (minigraph) for all subprojects, resolves them independently, saves them into json file, and stiches the minigraphs together.

Once the minigraphs are resolved and saved as files, dependency resolution turns into a matter of loading json file from the second run onwards, which should complete in a matter of seconds even for large projects. Also, because the files are saved under a global `~/.sbt/0.13/dependency` (or what's specified by `sbt.dependency.base` flag), the resolution result is shared across all builds.

Breaking graphs into minigraphs allows partial resolution results to be shared, which scales better for subprojects with similar but slightly different dependencies, and also for making small changes to the dependencies graph over time. See [documentation on cached resolution](http://www.scala-sbt.org/0.13/docs/Cached-Resolution.html) for more details.

[#1631](https://github.com/sbt/sbt/pull/1631) by [@eed3si9n](https://github.com/eed3si9n)
",https://api.github.com/users/eed3si9n,184683,eed3si9n,https://api.github.com/repos/sbt/sbt/releases/809123/assets,https://api.github.com/repos/sbt/sbt/releases/809123,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.7,https://github.com/sbt/sbt/releases/tag/v0.13.7,https://api.github.com/repos/sbt/sbt/zipball/v0.13.7,v0.13.7,False,False
554498,2014-09-12T15:00:09Z,2014-09-12T21:12:27Z,,"### Changes since 0.13.6-M1
- Fixes `NullPointerException` during `update`. [#1484](https://github.com/sbt/sbt/issues/1484) by [@eed3si9n](https://github.com/eed3si9n)

### Fixes with compatibility implications
- Maven Central Repository, Java.net Maven 2 Repository, Typesafe Repository, and sbt Plugin repository now defaults to HTTPS. (See below)
- `ThisProject` used to resolve to the root project in a build even when it's place in `subproj/build.sbt`. sbt 0.13.6 fixes it to resolve to the sub project. [#1194](https://github.com/sbt/sbt/issues/1194)/[#1358](https://github.com/sbt/sbt/pull/1358) by [@dansanduleac](https://github.com/dansanduleac)
- Global plugins classpath used to be injected into every build. This will no longer be the case. [#1347](https://github.com/sbt/sbt/issues/1347)/[#1352](https://github.com/sbt/sbt/pull/1352) by [@dansanduleac](https://github.com/dansanduleac)
- Fixes `newer` command in scripted. [#1419](https://github.com/sbt/sbt/pull/1419) by [@jroper](https://github.com/jroper)
- Name hashing is enabled by default. `inc.Analysis.empty` also defaults to the one compatible with name hashing. [#1546](https://github.com/sbt/sbt/pull/1546) by [@gkossakowski](https://github.com/gkossakowski)

### Improvements
- Derived settings can replace previously-defined but non-default settings. [#1036](https://github.com/sbt/sbt/pull/1036) by [@dansanduleac](https://github.com/dansanduleac)
- Sorts setting key names in the inspect tree view. [#1313](https://github.com/sbt/sbt/pull/1313) by [@2m](https://github.com/2m)
- Uses separate update caches when cross compiling scala. [#1330](https://github.com/sbt/sbt/pull/1330) by [@pvlugter](https://github.com/pvlugter)
- Ensures sequences in analysis files are read in order. [#1346](https://github.com/sbt/sbt/pull/1346) by [@benjyw](https://github.com/benjyw)
- Enables tab completion for scripted task. [#1383](https://github.com/sbt/sbt/pull/1383) by [@xuwei-k](https://github.com/xuwei-k)
- Allows project reference to to a branch of a local git repository. [#1409](https://github.com/sbt/sbt/pull/1409) by [@vn971](https://github.com/vn971)
- Triggered Execution is now aware of rename or move of files. [#1401](https://github.com/sbt/sbt/pull/1401) by [@xuwei-k](https://github.com/xuwei-k)
- No longer updates classifiers of `projectDependencies`. [#1366](https://github.com/sbt/sbt/issues/1366)/[#1367](https://github.com/sbt/sbt/pull/1367) by [@dansanduleac](https://github.com/dansanduleac)
- Selects the first test fingerprint for a test name for forked tests. [#1450](https://github.com/sbt/sbt/pull/1450) by [@pvlugter](https://github.com/pvlugter)
- Allows default auto plugins to be disabled. [#1451](https://github.com/sbt/sbt/pull/1451) by [@jsuereth](https://github.com/jsuereth)
- Allows keys defined inside `build.sbt` to be used from sbt shell. [#1059](https://github.com/sbt/sbt/issues/1059)/[#1456](https://github.com/sbt/sbt/pull/1456)
- Updates internal Ivy instance to cache the results of dependency exclusion rules. [#1476](https://github.com/sbt/sbt/pull/1476) by [@eed3si9n](https://github.com/eed3si9n)
- Adds `Resolver.jcenterRepo` and `Resolver.bintrayRepo(owner, repo)` to add Bintray easier. [#1405](https://github.com/sbt/sbt/pull/1405) by [@evgeny-goldin](https://github.com/evgeny-goldin)
- AutoPlugins with no requirements enabled by allRequirements can now be disable dby the user. [#1516](https://github.com/sbt/sbt/pull/1516) by [@jsuereth](https://github.com/jsuereth)

### Bug fixes
- Allows auto-generated projects to have overridden organization. [#1315](https://github.com/sbt/sbt/issues/1315)/[#1378](https://github.com/sbt/sbt/pull/1378) by [@jsuereth](https://github.com/jsuereth)
- Fixes auto plugins declared without package object. [#1423](https://github.com/sbt/sbt/pull/1423) by [@lpiepiora](https://github.com/lpiepiora)
- Fixes `plugin` command. [#1416](https://github.com/sbt/sbt/issues/1416)/[#1426](https://github.com/sbt/sbt/pull/1426) by [@lpiepiora](https://github.com/lpiepiora)
- Adds `scala-jar` to the list of jar artifacts recognized by CustomPomParser. [#1400](https://github.com/sbt/sbt/pull/1400) by [@dpratt](https://github.com/dpratt)
- Fixes cross versioning to recognize version number with mutiple -tags. [#1433](https://github.com/sbt/sbt/pull/1433) by [@henrikengstrom](https://github.com/henrikengstrom)
- Works around ""Not a simple type"" breaking `-Xfatal-warnings`. [#1477](https://github.com/sbt/sbt/pull/1477) by [@puffnfresh](https://github.com/puffnfresh)
- Fixes sLog usage in tandem with the `set` comamnd [#1486](https://github.com/sbt/sbt/pull/1486) [@jsuereth](https://github.com/jsuereth)
- Test suites with whitespace will have prettier filenames [#1487](https://github.com/sbt/sbt/pull/1487) [@jsuereth](https://github.com/jsuereth)
- sbt no longer crashes when run in root directory [#1488](https://github.com/sbt/sbt/pull/1488) by [@jsuereth](https://github.com/jsuereth)
- set no longer removes any `++` scala version setting.  [#856](https://github.com/sbt/sbt/issues/856)/[#1489](https://github.com/sbt/sbt/pull/1489) by [@jsuereth](https://github.com/jsuereth)
- Fixes `Scope.parseScopedKey`. [#1384](https://github.com/sbt/sbt/issues/1384) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes `build.sbt` errors causing `ArrayIndexOutOfBoundsException` due to invalid source in position. [#1181](https://github.com/sbt/sbt/issues/1181) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes `http.proxyPassword` showing up in launcher's update.log. [#670](https://github.com/sbt/sbt/issues/670) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes config-classes leak in loading build files. [#1524](https://github.com/sbt/sbt/issues/1524) by [@jsuereth](https://github.com/jsuereth)
- Fixes name-conflicts in hashed settings class files. [#1465](https://github.com/sbt/sbt/issues/1465) by [@jsuereth](https://github.com/jsuereth)
- Fixes the pom conversion of dynamic revisions like `1.1+`. [#1275](https://github.com/sbt/sbt/issues/1275) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes `NullPointerError` in tab completion by `FileExamples`. [#1530](https://github.com/sbt/sbt/issues/1530) by [@eed3si9n](https://github.com/eed3si9n)
- Fixes metabuild downloading unused Scala 2.10.2. [#1439](https://github.com/sbt/sbt/issues/1439) by [@eed3si9n](https://github.com/eed3si9n)

### HTTPS related changes

Thanks to Sonatype, HTTPS access to Maven Central Repository is available to public. This is now enabled by default, but if HTTP is required for some reason the following system properties can be used:

```
-Dsbt.repository.secure=false
```

Java.net Maven 2 repository, Typesafe repository, and sbt Plugin repository also defaults to HTTPS.

[#1494](https://github.com/sbt/sbt/pull/1494) by [@rtyley](https://github.com/rtyley), [#1536](https://github.com/sbt/sbt/pull/1536) by [@benmccann](https://github.com/benmccann), and [#1541](https://github.com/sbt/sbt/issues/1541) by [@eed3si9n](https://github.com/eed3si9n).

### enablePlugins/disablePlugins

sbt 0.13.6 now allows `enablePlugins` and `disablePlugins` to be written directly in `build.sbt`. [#1213](https://github.com/sbt/sbt/issues/1213)/[#1312](https://github.com/sbt/sbt/pull/1312) by [@jsuereth](https://github.com/jsuereth)

### Unresolved dependencies error

sbt 0.13.6 will try to reconstruct dependencies tree when it fails to resolve a managed dependency.
This is an approximation, but it should help you figure out where the problematic dependency is coming from. When possible sbt will display the source position next to the modules:

```
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn]  ::          UNRESOLVED DEPENDENCIES         ::
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn]  :: foundrylogic.vpp#vpp;2.2.1: not found
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn] 
[warn]  Note: Unresolved dependencies path:
[warn]      foundrylogic.vpp:vpp:2.2.1
[warn]        +- org.apache.cayenne:cayenne-tools:3.0.2
[warn]        +- org.apache.cayenne.plugins:maven-cayenne-plugin:3.0.2 (/foo/some-test/build.sbt#L28)
[warn]        +- d:d_2.10:0.1-SNAPSHOT
```

[#528](https://github.com/sbt/sbt/issues/528)/[#1422](https://github.com/sbt/sbt/issues/1422)/[#1447](https://github.com/sbt/sbt/pull/1447) by [@eed3si9n](https://github.com/eed3si9n)

### Eviction warnings

sbt 0.13.6 displays eviction warnings when it resolves your project's managed dependencies via `update` task.
Currently the eviction warnings are categorized into three layers: `scalaVersion` eviction, direct evictions, and transitive evictions.
By default eviction warning on `update` task will display only `scalaVersion` evictin and direct evictions.

`scalaVersion` eviction warns you when `scalaVersion` is no longer effecitive. This happens when one of your dependency depends on a newer release of scala-library than your `scalaVersion`.
Direct evctions are evictions related to your direct dependencies. Warnings are displayed only when API incompatibility is suspected. For Java libraries, Semantic Versioning is used for guessing, and for Scala libraries Second Segment versioning (second segment bump makes API incompatible) is used.

To display all eviction warnings with caller information, run `evicted` task.

```
[warn] There may be incompatibilities among your library dependencies.
[warn] Here are some of the libraries that were evicted:
[warn]     * com.typesafe.akka:akka-actor_2.10:2.1.4 -> 2.3.4 (caller: com.typesafe.akka:akka-remote_2.10:2.3.4,
org.w3:banana-sesame_2.10:0.4, org.w3:banana-rdf_2.10:0.4)
```

[#1200](https://github.com/sbt/sbt/issues/1200)/[#1467](https://github.com/sbt/sbt/pull/1467) by [@eed3si9n](https://github.com/eed3si9n)

### Latest SNAPSHOTs

sbt 0.13.6 adds a new setting key called `updateOptions` for customizing the details of managed dependency resolution with `update` task. One of its flags is called `lastestSnapshots`, which controls the behavior of the chained resolver. Up until 0.13.6, sbt was picking the first `-SNAPSHOT` revision it found along the chain. When `latestSnapshots` is enabled (default: `true`), it will look into all resolvers on the chain, and compare them using the publish date.

The tradeoff is probably a longer resolution time if you have many remote repositories on the build or you live away from the severs. So here's how to disable it:

```
updateOptions := updateOptions.value.withLatestSnapshots(false)
```

[#1514](https://github.com/sbt/sbt/issues/1514) by [@eed3si9n](https://github.com/eed3si9n)

### Consolidated resolution

`updateOptions` can also be used to enable consolidated resolution for `update` task.

```
updateOptions := updateOptions.value.withConsolidatedResolution(true)
```

This feature is specifically targeted to address [Ivy resolution is beging slow for multi-module projects #413](https://github.com/sbt/sbt/issues/413). Consolidated resolution aims to fix this issue by artificially constructing an Ivy dependency graph for the unique managed dependencies. If two subprojects introduce identical external dependencies, both subprojects should consolidate to the same graph, and therefore resolve immediately for the second `update`. [#1454](https://github.com/sbt/sbt/pull/1454) by [@eed3si9n](https://github.com/eed3si9n)
",https://api.github.com/users/jsuereth,29006,jsuereth,https://api.github.com/repos/sbt/sbt/releases/554498/assets,https://api.github.com/repos/sbt/sbt/releases/554498,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.6,https://github.com/sbt/sbt/releases/tag/v0.13.6,https://api.github.com/repos/sbt/sbt/zipball/v0.13.6,v0.13.6,False,False
341785,2014-05-27T13:35:41Z,2014-05-27T14:40:38Z,0.13.5 - Autoplugins,"This marks a preview release of sbt 1.0, with the addition of AutoPlguins a new mechanism to cleanup the user experience of sbt plugin ecosystem.

#### Commits and the issues they fixed since v0.13.2

| Issue(s) | Commit | Message |
| --- | --- | --- |
| [1341](https://github.com/sbt/sbt/issues/1341) | [e95feccfca](https://github.com/sbt/sbt/commit/e95feccfca) | <notextile>Fix pattern match on buildLoaders.</notextile> |
| [1329](https://github.com/sbt/sbt/issues/1329) | [664d83ed0f](https://github.com/sbt/sbt/commit/664d83ed0f) | <notextile>Back out autogc fix to be optionally enabled.</notextile> |
| [1314](https://github.com/sbt/sbt/issues/1314) | [2b621869fc](https://github.com/sbt/sbt/commit/2b621869fc) | <notextile>Check for object autoImport in auto plugins. Fixes #1314</notextile> |
|  | [2adbe0e1e8](https://github.com/sbt/sbt/commit/2adbe0e1e8) | <notextile>Fix for new location of MSI files.</notextile> |
|  | [1508c967a9](https://github.com/sbt/sbt/commit/1508c967a9) | <notextile>Fix native package location for bintray distribution.</notextile> |
|  | [447ab8d334](https://github.com/sbt/sbt/commit/447ab8d334) | <notextile>Created unit tests for ParserWithExamples and FixedSetExampleSource.</notextile> |
|  | [d00037263b](https://github.com/sbt/sbt/commit/d00037263b) | <notextile>Documented the DynamicExamples and FixedSetExamples classes.</notextile> |
|  | [143993fdc1](https://github.com/sbt/sbt/commit/143993fdc1) | <notextile>Implemented a file parser. Added SourceOfExamples for lazy example listing (espe</notextile> |
| [1267](https://github.com/sbt/sbt/issues/1267) | [f5dd022551](https://github.com/sbt/sbt/commit/f5dd022551) | <notextile>Separate location of analysis cache if we're cross compiling scala.</notextile> |
| [1223](https://github.com/sbt/sbt/issues/1223) | [e076bfa970](https://github.com/sbt/sbt/commit/e076bfa970) | <notextile>Automatically run GC/finalization after each task execution.</notextile> |
| [1272](https://github.com/sbt/sbt/issues/1272) | [37e57f7940](https://github.com/sbt/sbt/commit/37e57f7940) | <notextile>Use dedicated api for lastCompilationTime in build definition</notextile> |
|  | [f92206b785](https://github.com/sbt/sbt/commit/f92206b785) | <notextile>Fixes issue with deadlocking server discovery on windows.</notextile> |
|  | [3632a998ca](https://github.com/sbt/sbt/commit/3632a998ca) | <notextile>Fixing typos</notextile> |
| [1247](https://github.com/sbt/sbt/issues/1247) | [22b99a9a1c](https://github.com/sbt/sbt/commit/22b99a9a1c) | <notextile>Autoplugin confgiurations must be injected first into project.</notextile> |
|  | [d34ca37c40](https://github.com/sbt/sbt/commit/d34ca37c40) | <notextile>Bump ivy version to include exclusion performance fix.</notextile> |
|  | [6e72324b88](https://github.com/sbt/sbt/commit/6e72324b88) | <notextile>Bump to our own nightly of ivy 2.4.0 (RC1+).</notextile> |
| [1251](https://github.com/sbt/sbt/issues/1251) | [7fead66244](https://github.com/sbt/sbt/commit/7fead66244) | <notextile>Pick the right overload in EvaluateTask.runTask</notextile> |
|  | [f1d61be125](https://github.com/sbt/sbt/commit/f1d61be125) | <notextile>`DefaultOptions` for resolvers should not resets existing values.</notextile> |
|  | [7179912387](https://github.com/sbt/sbt/commit/7179912387) | <notextile>`DefaultOptions` for resolvers should not resets existing values.</notextile> |
|  | [43c25beeed](https://github.com/sbt/sbt/commit/43c25beeed) | <notextile>Fix infinite loop of death.</notextile> |
|  | [f42dee8090](https://github.com/sbt/sbt/commit/f42dee8090) | <notextile>Naming fixes to TaskCancellationStrategy to be clearer.</notextile> |
|  | [6e480fc2b6](https://github.com/sbt/sbt/commit/6e480fc2b6) | <notextile>Fix deprecated 'since' clauses to reflect our actual release versions.</notextile> |
| [1](https://github.com/sbt/sbt/issues/1) | [2686acd993](https://github.com/sbt/sbt/commit/2686acd993) | <notextile>Part #1 of cancel-task-hooks - Hooks EvaluateTask.</notextile> |
| [1237](https://github.com/sbt/sbt/issues/1237) [1163](https://github.com/sbt/sbt/issues/1163) [1237](https://github.com/sbt/sbt/issues/1237) | [a80966e394](https://github.com/sbt/sbt/commit/a80966e394) | <notextile>Handle macros that have themselves as original tree</notextile> |
|  | [60a457d083](https://github.com/sbt/sbt/commit/60a457d083) | <notextile>Ensure that if artifact is published, we overwrite default checksums.</notextile> |
| [641](https://github.com/sbt/sbt/issues/641) [641](https://github.com/sbt/sbt/issues/641) [1091](https://github.com/sbt/sbt/issues/1091) | [d8ee16c600](https://github.com/sbt/sbt/commit/d8ee16c600) | <notextile>Roll back sbt/sbt@482f99 (aggressive deletion of cache). Fixes #1091.</notextile> |
|  | [c4f6217a70](https://github.com/sbt/sbt/commit/c4f6217a70) | <notextile>Fix URITests to work under Windows</notextile> |
| [1142](https://github.com/sbt/sbt/issues/1142) [1142](https://github.com/sbt/sbt/issues/1142) | [5a40641cc1](https://github.com/sbt/sbt/commit/5a40641cc1) | <notextile>Classes that only inherit a macro don't have a macro</notextile> |
| [1217](https://github.com/sbt/sbt/issues/1217) | [5f7e68c7dd](https://github.com/sbt/sbt/commit/5f7e68c7dd) | <notextile>Auto plugin names are imported with or without autoImport. Fixes #1217</notextile> |
|  | [3f2f12f5bb](https://github.com/sbt/sbt/commit/3f2f12f5bb) | <notextile>Fix PluginsTest</notextile> |
| [1188](https://github.com/sbt/sbt/issues/1188) | [2c654b2d90](https://github.com/sbt/sbt/commit/2c654b2d90) | <notextile>Unifies AutoPlugin and AutoImport. Fixes #1188</notextile> |
|  | [c7dc499fe4](https://github.com/sbt/sbt/commit/c7dc499fe4) | <notextile>Updated comments. Typo fix per @jozic</notextile> |
| [1196](https://github.com/sbt/sbt/issues/1196) | [910d39f3a9](https://github.com/sbt/sbt/commit/910d39f3a9) | <notextile>fixes #1196</notextile> |
|  | [9f20f04e16](https://github.com/sbt/sbt/commit/9f20f04e16) | <notextile>Allow end users to add Plugins, not just AutoPlugins</notextile> |
| [1176](https://github.com/sbt/sbt/issues/1176) | [7c15eb01f3](https://github.com/sbt/sbt/commit/7c15eb01f3) | <notextile>When fragmenting Defaults, we mixed back settings in the wrong order.</notextile> |
|  | [152e04bc05](https://github.com/sbt/sbt/commit/152e04bc05) | <notextile>Fix spelling issues in architecture document.</notextile> |
|  | [dc76a8feb3](https://github.com/sbt/sbt/commit/dc76a8feb3) | <notextile>Fixes missing tests from autoplugins feature.</notextile> |
| [1156](https://github.com/sbt/sbt/issues/1156) | [893794a8ba](https://github.com/sbt/sbt/commit/893794a8ba) | <notextile>Fix overwrite default to true in deprecated method calls.</notextile> |
|  | [7413fbe9c0](https://github.com/sbt/sbt/commit/7413fbe9c0) | <notextile>Doc fix ups from review.</notextile> |
|  | [af25df1777](https://github.com/sbt/sbt/commit/af25df1777) | <notextile>Fix @retronym's comments</notextile> |
| [1107](https://github.com/sbt/sbt/issues/1107) | [af7eca1080](https://github.com/sbt/sbt/commit/af7eca1080) | <notextile>Fix NPE in task macro accessing q&quot;{...}&quot;.symbol.pos</notextile> |
| [1150](https://github.com/sbt/sbt/issues/1150) | [563415aa6a](https://github.com/sbt/sbt/commit/563415aa6a) | <notextile>Fix task macro's handling of Symbol owners in &lt;qual&gt;.value</notextile> |
| [1155](https://github.com/sbt/sbt/issues/1155) | [dbb47b3ce8](https://github.com/sbt/sbt/commit/dbb47b3ce8) | <notextile>Updates `last` and `export` commands to read from correct key.</notextile> |
|  | [a4b288f35b](https://github.com/sbt/sbt/commit/a4b288f35b) | <notextile>Revert &quot;Fix task macro's handling of Symbol owners in &lt;qual&gt;.value&quot;</notextile> |
| [1136](https://github.com/sbt/sbt/issues/1136) | [8cd44646b7](https://github.com/sbt/sbt/commit/8cd44646b7) | <notextile>Fix #1136 - Ivy's `+` dependencies not converted to maven style syntax.</notextile> |
| [1150](https://github.com/sbt/sbt/issues/1150) | [3017bfcd07](https://github.com/sbt/sbt/commit/3017bfcd07) | <notextile>Fix task macro's handling of Symbol owners in &lt;qual&gt;.value</notextile> |
|  | [0a8d844071](https://github.com/sbt/sbt/commit/0a8d844071) | <notextile>Fix merge conflicts in pulling doc fixes from 0.13.1 into 0.13 branch.</notextile> |
| [429](https://github.com/sbt/sbt/issues/429) | [21da87c4e7](https://github.com/sbt/sbt/commit/21da87c4e7) | <notextile>Fixes #429 - Add better error messages when credentials are not found.</notextile> |
|  | [0e337b8cbd](https://github.com/sbt/sbt/commit/0e337b8cbd) | <notextile>Fix binary-plugin scripted test so it can run more than once.</notextile> |
|  | [2ee2576cb9](https://github.com/sbt/sbt/commit/2ee2576cb9) | <notextile>Fix auto-plugin test from removal of unary_! on Nature but not AutoPlugin.</notextile> |
|  | [4feb7d3dc8](https://github.com/sbt/sbt/commit/4feb7d3dc8) | <notextile>Fix typos in AutoPlugin API docs.</notextile> |
| [1081](https://github.com/sbt/sbt/issues/1081) [1071](https://github.com/sbt/sbt/issues/1071) [1071](https://github.com/sbt/sbt/issues/1071) | [c7f435026f](https://github.com/sbt/sbt/commit/c7f435026f) | <notextile>Include value of `nameHashing` flag in `CompileSetup`.</notextile> |
|  | [4a9981720a](https://github.com/sbt/sbt/commit/4a9981720a) | <notextile>Remove work-arounds for Scala 2.11 problematic dependencies</notextile> |
|  | [4e073373da](https://github.com/sbt/sbt/commit/4e073373da) | <notextile>SI-8263 Avoid SOE in Symbol#logicallyEnclosingMember under Scala 2.11</notextile> |
|  | [9b4564f0cd](https://github.com/sbt/sbt/commit/9b4564f0cd) | <notextile>SI-8262 Fix compilation with 2.11 due to shadowing of Range</notextile> |
|  | [4ab8074753](https://github.com/sbt/sbt/commit/4ab8074753) | <notextile>Fix formatting of inline code samples which are pluralized</notextile> |
|  | [8bfab5313e](https://github.com/sbt/sbt/commit/8bfab5313e) | <notextile>Fixed SessionSettings replacing existing setting</notextile> |
|  | [ba4d57b120](https://github.com/sbt/sbt/commit/ba4d57b120) | <notextile>Fix binary compatibility with 0.13</notextile> |
| [1031](https://github.com/sbt/sbt/issues/1031) | [264e49a912](https://github.com/sbt/sbt/commit/264e49a912) | <notextile>Avoid compiler crash for naked `key.value` calls.</notextile> |
|  | [668ae8d8b1](https://github.com/sbt/sbt/commit/668ae8d8b1) | <notextile>Fix typo in assertion message in TextAnalysisFormat</notextile> |
|  | [2abe7574df](https://github.com/sbt/sbt/commit/2abe7574df) | <notextile>Fixes to the internal API hooks for the sbt server.</notextile> |
|  | [b9489c6035](https://github.com/sbt/sbt/commit/b9489c6035) | <notextile>Fix compilation failure due to missing type annotation.</notextile> |
|  | [f4940df48d](https://github.com/sbt/sbt/commit/f4940df48d) | <notextile>Make all APIChange subclasses final.</notextile> |
| [6](https://github.com/sbt/sbt/issues/6) [5](https://github.com/sbt/sbt/issues/5) [3](https://github.com/sbt/sbt/issues/3) | [a48ab0d38b](https://github.com/sbt/sbt/commit/a48ab0d38b) | <notextile>Implement name hashing algorithm in incremental compiler.</notextile> |
|  | [88528a43cb](https://github.com/sbt/sbt/commit/88528a43cb) | <notextile>Fix a few mistakes related to IncOptions.recompileOnMacroDef</notextile> |
|  | [b6e16f1e95](https://github.com/sbt/sbt/commit/b6e16f1e95) | <notextile>fix CommandStrings.settingsDetailed</notextile> |
|  | [eb8077427e](https://github.com/sbt/sbt/commit/eb8077427e) | <notextile>Fix saving session settings</notextile> |
|  | [09fa2f9efe](https://github.com/sbt/sbt/commit/09fa2f9efe) | <notextile>Fix a typo</notextile> |
| [1038](https://github.com/sbt/sbt/issues/1038) | [ca4b22e272](https://github.com/sbt/sbt/commit/ca4b22e272) | <notextile>Generate an error when making a path string from paths containing the separator.</notextile> |
| [1035](https://github.com/sbt/sbt/issues/1035) | [b09cf5b5e7](https://github.com/sbt/sbt/commit/b09cf5b5e7) | <notextile>Fixes #1035 by catching the format error and returning the erased type as a back</notextile> |
|  | [a677448a6c](https://github.com/sbt/sbt/commit/a677448a6c) | <notextile>Fix closeable streams to recreate streams for a key if the delegate was closed.</notextile> |
|  | [21a05978de](https://github.com/sbt/sbt/commit/21a05978de) | <notextile>Fix parsing and evaluation of 'all' and 'show'.  See comment in evaluatingParser</notextile> |
| [1024](https://github.com/sbt/sbt/issues/1024) | [140ce04809](https://github.com/sbt/sbt/commit/140ce04809) | <notextile>Fix #1024. Use log.debug instead of println in TrapExit.</notextile> |
|  | [a9a709ccc0](https://github.com/sbt/sbt/commit/a9a709ccc0) | <notextile>Add hashing of public names defined in a source file.</notextile> |
|  | [993aa5b26f](https://github.com/sbt/sbt/commit/993aa5b26f) | <notextile>Access `Relations.names` conditionally in TextAnalysisFormat</notextile> |
| [5](https://github.com/sbt/sbt/issues/5) [6](https://github.com/sbt/sbt/issues/6) | [304796bb7a](https://github.com/sbt/sbt/commit/304796bb7a) | <notextile>Add support for tracking names used in Scala source files.</notextile> |
|  | [88444f2b46](https://github.com/sbt/sbt/commit/88444f2b46) | <notextile>Fix access modifiers for newly introduced members in Relations.</notextile> |
|  | [d740965ea1](https://github.com/sbt/sbt/commit/d740965ea1) | <notextile>Fix deriveAndLocal bug</notextile> |
| [997](https://github.com/sbt/sbt/issues/997) | [e16864f2e7](https://github.com/sbt/sbt/commit/e16864f2e7) | <notextile>Drop Thread.getName from use in computeID(thread) in TrapExit SecurityManager to</notextile> |
| [628](https://github.com/sbt/sbt/issues/628) | [d38450b41f](https://github.com/sbt/sbt/commit/d38450b41f) | <notextile>Command to run multiple tasks concurrently: 'all a b'. Fixes #628.</notextile> |
| [1007](https://github.com/sbt/sbt/issues/1007) | [13041bfb9a](https://github.com/sbt/sbt/commit/13041bfb9a) | <notextile>Don't mark ExceptionInInitializerError as incompatible plugins: rethrow the caus</notextile> |
| [999](https://github.com/sbt/sbt/issues/999) | [818f4f96fb](https://github.com/sbt/sbt/commit/818f4f96fb) | <notextile>Docs: add section on Task.taskDyn.  Fixes #999.</notextile> |
| [866](https://github.com/sbt/sbt/issues/866) | [fcb35f3b8f](https://github.com/sbt/sbt/commit/fcb35f3b8f) | <notextile>Add Initialize[Task[T]].taskValue: Task[T] to allow selecting the Task for use b</notextile> |
| [933](https://github.com/sbt/sbt/issues/933) [598](https://github.com/sbt/sbt/issues/598) | [1d9b44d5d7](https://github.com/sbt/sbt/commit/1d9b44d5d7) | <notextile>Expand aliases instead of evaluating directly.</notextile> |
| [973](https://github.com/sbt/sbt/issues/973) | [e268db3f80](https://github.com/sbt/sbt/commit/e268db3f80) | <notextile>Propagate argument to 'reload'  to load failure handling command.  Fixes #973.</notextile> |
| [952](https://github.com/sbt/sbt/issues/952) | [3b213e59ca](https://github.com/sbt/sbt/commit/3b213e59ca) | <notextile>Remove the need for resetLocalAttrs.  Fixes #994, #952. The fix was made possibl</notextile> |
|  | [5a88bd2302](https://github.com/sbt/sbt/commit/5a88bd2302) | <notextile>Third draft to execute the forked tests in parallel.</notextile> |
|  | [86b0098078](https://github.com/sbt/sbt/commit/86b0098078) | <notextile>Resolved bugs reported in Issue 947. Also added SNAPSHOT suffix to the version b</notextile> |
| [990](https://github.com/sbt/sbt/issues/990) | [f3c050921a](https://github.com/sbt/sbt/commit/f3c050921a) | <notextile>Fixes #989, #990.  TrapExit jvm-independent and awt handling is only done when a</notextile> |
| [923](https://github.com/sbt/sbt/issues/923) | [4f81512109](https://github.com/sbt/sbt/commit/4f81512109) | <notextile>Fix source-dependencies/relative-source-error to use explicit reloads.  Ref #923</notextile> |
| [970](https://github.com/sbt/sbt/issues/970) | [7d10c7e103](https://github.com/sbt/sbt/commit/7d10c7e103) | <notextile>Docs: correct substitution syntax when preceding character is symbol.  Fixes #97</notextile> |
| [971](https://github.com/sbt/sbt/issues/971) | [09fc6c1fd6](https://github.com/sbt/sbt/commit/09fc6c1fd6) | <notextile>Fix type error in example code</notextile> |
| [923](https://github.com/sbt/sbt/issues/923) | [2f683ef81d](https://github.com/sbt/sbt/commit/2f683ef81d) | <notextile>Generate an error when the incremental compiler is given relative source files. </notextile> |
| [958](https://github.com/sbt/sbt/issues/958) [958](https://github.com/sbt/sbt/issues/958) [958](https://github.com/sbt/sbt/issues/958) | [33514ab6d7](https://github.com/sbt/sbt/commit/33514ab6d7) | <notextile>Recover from class files and Analysis object getting out of sync.</notextile> |
| [951](https://github.com/sbt/sbt/issues/951) | [3abec9885e](https://github.com/sbt/sbt/commit/3abec9885e) | <notextile>Docs: fix typo.  Fixes #951.</notextile> |
| [937](https://github.com/sbt/sbt/issues/937) | [ca7e78d03d](https://github.com/sbt/sbt/commit/ca7e78d03d) | <notextile>Explicitly, optimistically close export streams early: workaround for #937</notextile> |
|  | [cc78174e27](https://github.com/sbt/sbt/commit/cc78174e27) | <notextile>Fix implementation of Relation.size.</notextile> |
| [823](https://github.com/sbt/sbt/issues/823) [823](https://github.com/sbt/sbt/issues/823) | [a37d8d4770](https://github.com/sbt/sbt/commit/a37d8d4770) | <notextile>Fix unstable existential type names bug.</notextile> |
|  | [655e2e5c91](https://github.com/sbt/sbt/commit/655e2e5c91) | <notextile>Fix serialization in Sync.</notextile> |

#### A big thank you to all the contributors!

| # | Author |
| --: | --- |
| 70 | <notextile>Josh Suereth</notextile> |
| 60 | <notextile>Grzegorz Kossakowski</notextile> |
| 56 | <notextile>Mark Harrah</notextile> |
| 27 | <notextile>Eugene Yokota</notextile> |
| 11 | <notextile>Matej Urbas</notextile> |
| 11 | <notextile>Jacek Laskowski</notextile> |
| 11 | <notextile>Dan Sanduleac</notextile> |
| 9 | <notextile>Martin Duhem</notextile> |
| 8 | <notextile>Jason Zaugg</notextile> |
| 6 | <notextile>Bruno Bieth</notextile> |
| 5 | <notextile>Benjy</notextile> |
| 4 | <notextile>James Roper</notextile> |
| 3 | <notextile>Indrajit Raychaudhuri</notextile> |
| 3 | <notextile>Luca Milanesio</notextile> |
| 3 | <notextile>Heikki Vesalainen</notextile> |
| 2 | <notextile>xuwei-k</notextile> |
| 2 | <notextile>William Benton</notextile> |
| 2 | <notextile>Taro L. Saito</notextile> |
| 2 | <notextile>Anthony Whitford</notextile> |
| 2 | <notextile>Simeon H.K. Fitch</notextile> |
| 2 | <notextile>Antonio Cunei</notextile> |
| 1 | <notextile>Suzanne Hamilton</notextile> |
| 1 | <notextile>Pierre DAL-PRA</notextile> |
| 1 | <notextile>Roch Delsalle</notextile> |
| 1 | <notextile>Ngoc Dao</notextile> |
| 1 | <notextile>Jens Halm</notextile> |
| 1 | <notextile>Adriaan Moors</notextile> |
| 1 | <notextile>Paolo G. Giarrusso</notextile> |
| 1 | <notextile>drdamour</notextile> |
| 1 | <notextile>Eugene Platonov</notextile> |
| 1 | <notextile>Alexey Alekhin</notextile> |
| 1 | <notextile>Christian Dedie</notextile> |
| 1 | <notextile>Heejong Lee</notextile> |
| 1 | <notextile>kalmanb</notextile> |
| 1 | <notextile>Oscar Vargas Torres</notextile> |
| 1 | <notextile>Antoine Gourlay</notextile> |
| 1 | <notextile>Jarek Sacha</notextile> |
| 1 | <notextile>David Hotham</notextile> |
| 1 | <notextile>David Barri</notextile> |
| 1 | <notextile>Zava</notextile> |
| 1 | <notextile>Henri Kerola</notextile> |
| 1 | <notextile>Charles Feduke</notextile> |
| 1 | <notextile>sam</notextile> |
| 1 | <notextile>rschatz</notextile> |
| 1 | <notextile>Cody Allen</notextile> |
| 1 | <notextile>Ikenna Nwaiwu</notextile> |
| 1 | <notextile>Sergey Andreev</notextile> |
| 1 | <notextile>Ismael Juma</notextile> |
",https://api.github.com/users/jsuereth,29006,jsuereth,https://api.github.com/repos/sbt/sbt/releases/341785/assets,https://api.github.com/repos/sbt/sbt/releases/341785,1.x,https://api.github.com/repos/sbt/sbt/tarball/v0.13.5,https://github.com/sbt/sbt/releases/tag/v0.13.5,https://api.github.com/repos/sbt/sbt/zipball/v0.13.5,v0.13.5,False,False
