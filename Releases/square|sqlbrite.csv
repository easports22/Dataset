id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
2721022,2016-03-01T18:23:03Z,2016-03-01T18:23:39Z,,"- Fix: Document explicitly and correctly handle the fact that `Query.run()` can return `null` in
  some situations. The `mapToOne`, `mapToOneOrDefault`, `mapToList`, and `asRows` helpers have all
  been updated to handle this case and each is documented with their respective behavior.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/2721022/assets,https://api.github.com/repos/square/sqlbrite/releases/2721022,master,https://api.github.com/repos/square/sqlbrite/tarball/0.6.2,https://github.com/square/sqlbrite/releases/tag/0.6.2,https://api.github.com/repos/square/sqlbrite/zipball/0.6.2,0.6.2,False,False
2715613,2016-03-01T03:25:43Z,2016-03-01T03:27:30Z,,"- Fix: Apply backpressure strategy between database/content provider and the supplied `Scheduler`.
  This guards against backpressure exceptions when the scheduler is unable to keep up with the rate
  at which queries are being triggered.
- Fix: Indent the subsequent lines of a multi-line queries when logging.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/2715613/assets,https://api.github.com/repos/square/sqlbrite/releases/2715613,master,https://api.github.com/repos/square/sqlbrite/tarball/0.6.1,https://github.com/square/sqlbrite/releases/tag/0.6.1,https://api.github.com/repos/square/sqlbrite/zipball/0.6.1,0.6.1,False,False
2633781,2016-02-17T17:11:02Z,2016-02-17T17:12:44Z,,"- New: Require a `Scheduler` when wrapping a database or content provider which will be used when sending query triggers. This allows the query to be run in subsequent operators without needing an additional `observeOn`. It also eliminates the need to use `subscribeOn` since the supplied `Scheduler` will be used for all emissions (similar to RxJava's `timer`, `interval`, etc.).
  
  This also corrects a potential violation of the RxJava contract and potential source of bugs in that all triggers now occur on the supplied `Scheduler`. Previously the initial value would trigger synchronously (on the subscribing thread) while subsequent ones trigger on the thread which performed the transaction. The new behavior puts the initial trigger on the same thread as all subsequent triggers and also does not force transactions to block while sending triggers.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/2633781/assets,https://api.github.com/repos/square/sqlbrite/releases/2633781,master,https://api.github.com/repos/square/sqlbrite/tarball/0.6.0,https://github.com/square/sqlbrite/releases/tag/0.6.0,https://api.github.com/repos/square/sqlbrite/zipball/0.6.0,0.6.0,False,False
2633774,2016-02-03T18:39:22Z,2016-02-17T17:12:11Z,,"- New: Query logs now contain timing information on how long they took to execute. This only covers
  the time until a `Cursor` was made available, not object mapping or delivering to subscribers.
- Fix: Switch query logging to happen when `Query.run` is called, not when a query is triggered.
- Fix: Check for subscribing inside a transaction using a more accurate primitive.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/2633774/assets,https://api.github.com/repos/square/sqlbrite/releases/2633774,master,https://api.github.com/repos/square/sqlbrite/tarball/0.5.1,https://github.com/square/sqlbrite/releases/tag/0.5.1,https://api.github.com/repos/square/sqlbrite/zipball/0.5.1,0.5.1,False,False
2261736,2015-12-09T20:51:55Z,2015-12-09T20:53:32Z,,"- New: Expose `mapToOne`, `mapToOneOrDefault`, and `mapToList` as static methods on `Query`. These
  mirror the behavior of the methods of the same name on `QueryObservable` but can be used later in
  a stream by passing the returned `Operator` instances to `lift()` (e.g.,
  `take(1).lift(Query.mapToOne(..))`).
- Requires RxJava 1.1.0 or newer.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/2261736/assets,https://api.github.com/repos/square/sqlbrite/releases/2261736,master,https://api.github.com/repos/square/sqlbrite/tarball/0.5.0,https://github.com/square/sqlbrite/releases/tag/0.5.0,https://api.github.com/repos/square/sqlbrite/zipball/0.5.0,0.5.0,False,False
1980007,2015-10-19T03:59:52Z,2015-10-19T04:01:11Z,,"- New: `execute` method provides the ability to execute arbitrary SQL statements.
- New: `executeAndTrigger` method provides the ability to execute arbitrary SQL statements and
  notifying any queries to update on the specified table.
- Fix: `Query.asRows` no longer calls `onCompleted` when the downstream subscriber has unsubscribed.
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/1980007/assets,https://api.github.com/repos/square/sqlbrite/releases/1980007,master,https://api.github.com/repos/square/sqlbrite/tarball/0.4.1,https://github.com/square/sqlbrite/releases/tag/0.4.1,https://api.github.com/repos/square/sqlbrite/zipball/0.4.1,0.4.1,False,False
1851605,2015-09-22T19:04:10Z,2015-09-22T19:06:21Z,,"- New: `mapToOneOrDefault` replaces `mapToOneOrNull` for more flexibility.
- Fix: Notifications of table updates as the result of a transaction now occur after the transaction
  has been applied. Previous the notification would happen during the commit at which time it was
  invalid to create a new transaction in a subscriber.

Download:

``` groovy
compile 'com.squareup.sqlbrite:sqlbrite:0.4.0'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/1851605/assets,https://api.github.com/repos/square/sqlbrite/releases/1851605,master,https://api.github.com/repos/square/sqlbrite/tarball/0.4.0,https://github.com/square/sqlbrite/releases/tag/0.4.0,https://api.github.com/repos/square/sqlbrite/zipball/0.4.0,0.4.0,False,False
1758196,2015-09-02T17:18:15Z,2015-09-02T17:25:10Z,,"- New: `mapToOne` and `mapToOneOrNull` operators on `QueryObservable`. These work on queries which
  return 0 or 1 rows and are a convenience for turning them into a type `T` given a mapper of type
  `Func1<Cursor, T>` (the same which can be used for `mapToList`).
- Fix: Remove `@WorkerThread` annotations for now. Various combinations of lint, RxJava, and
  retrolambda can cause false-positives.

Download:

``` groovy
compile 'com.squareup.sqlbrite:sqlbrite:0.3.1'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/1758196/assets,https://api.github.com/repos/square/sqlbrite/releases/1758196,master,https://api.github.com/repos/square/sqlbrite/tarball/0.3.1,https://github.com/square/sqlbrite/releases/tag/0.3.1,https://api.github.com/repos/square/sqlbrite/zipball/0.3.1,0.3.1,False,False
1746762,2015-08-31T18:36:54Z,2015-08-31T18:39:21Z,,"- Transactions are now exposed as objects instead of methods. Call `newTransaction()` to start a
  transaction. On the `Transaction` instance, call `markSuccessful()` to indicate success and
  `end()` to commit or rollback the transaction. The `Transaction` instance implements `Closeable`
  to allow its use in a try-with-resources construct. See the `newTransaction()` Javadoc for more
  information.
- `Query` instances can now be turned directly into an `Observable<T>` by calling `asRows` with a
  `Func1<Cursor, T>` that maps rows to a type `T`. This allows easy filtering and limiting in
  memory rather than in the query. See the `asRows` Javadoc for more information.
- `createQuery` now returns a `QueryObservable` which offers a `mapToList` operator. This operator
  also takes a `Func1<Cursor, T>` for mapping rows to a type `T`, but instead of individual rows it
  collects all the rows into a list. For large query results or frequently updated tables this can
  create a lot of objects. See the `mapToList` Javadoc for more information.
- New: Nullability, `@CheckResult`, and `@WorkerThread` annotations on all APIs allow a more useful
  interaction with lint in consuming projects.

Download:

``` groovy
compile 'com.squareup.sqlbrite:sqlbrite:0.3.0'
```
",https://api.github.com/users/JakeWharton,66577,JakeWharton,https://api.github.com/repos/square/sqlbrite/releases/1746762/assets,https://api.github.com/repos/square/sqlbrite/releases/1746762,master,https://api.github.com/repos/square/sqlbrite/tarball/0.3.0,https://github.com/square/sqlbrite/releases/tag/0.3.0,https://api.github.com/repos/square/sqlbrite/zipball/0.3.0,0.3.0,False,False
