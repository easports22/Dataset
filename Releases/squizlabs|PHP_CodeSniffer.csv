id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
8141197,2017-10-16T22:46:48Z,2017-10-16T22:48:50Z,3.1.1,"* Restored preference of non-dist files over dist files for `phpcs.xml` and `phpcs.xml.dist`
    * The order that the files are searched is now: `.phpcs.xml`, `phpcs.xml`, `.phpcs.xml.dist`, `phpcs.xml.dist`
    * Thanks to Juliette Reinders Folmer for the patch
* Progress output now correctly shows skipped files
* Progress output now shows 100% when the file list has finished processing (request [#1697](https://github.com/squizlabs/PHP_CodeSniffer/issues/1697))
* Stopped some IDEs complaining about testing class aliases
    * Thanks to Vytautas Stankus for the patch
* `Squiz.Commenting.InlineComment` incorrectly identified comment blocks in some cases, muting some errors
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug [#1512](https://github.com/squizlabs/PHP_CodeSniffer/issues/1512) : PEAR.Functions.FunctionCallSignature enforces spaces when no arguments if required spaces is not 0
* Fixed bug [#1522](https://github.com/squizlabs/PHP_CodeSniffer/issues/1522) : Squiz Arrays.ArrayDeclaration and Strings.ConcatenationSpacing fixers causing parse errors with here/nowdocs
* Fixed bug [#1570](https://github.com/squizlabs/PHP_CodeSniffer/issues/1570) : Squiz.Arrays.ArrayDeclaration fixer removes comments between array keyword and open parentheses
* Fixed bug [#1604](https://github.com/squizlabs/PHP_CodeSniffer/issues/1604) : File::isReference has problems with some bitwise operators and class property references
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug [#1645](https://github.com/squizlabs/PHP_CodeSniffer/issues/1645) : Squiz.Commenting.InlineComment will fail to fix comments at the end of the file
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug [#1656](https://github.com/squizlabs/PHP_CodeSniffer/issues/1656) : Using the --sniffs argument has a problem with case sensitivity
* Fixed bug [#1657](https://github.com/squizlabs/PHP_CodeSniffer/issues/1657) : Uninitialized string offset: 0 when sniffing CSS
* Fixed bug [#1669](https://github.com/squizlabs/PHP_CodeSniffer/issues/1669) : Temporary expression proceeded by curly brace is detected as function call
* Fixed bug [#1681](https://github.com/squizlabs/PHP_CodeSniffer/issues/1681) : Huge arrays are super slow to scan with Squiz.Arrays.ArrayDeclaration sniff
* Fixed bug [#1694](https://github.com/squizlabs/PHP_CodeSniffer/issues/1694) : Squiz.Arrays.ArrayBracketSpacing is removing some comments during fixing
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug [#1702](https://github.com/squizlabs/PHP_CodeSniffer/issues/1702) : Generic.WhiteSpaceDisallowSpaceIndent fixer bug when line only contains superfluous whitespace",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/8141197/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/8141197,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.1.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.1.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.1.1,3.1.1,False,False
7816058,2017-09-19T22:54:47Z,2017-09-19T23:02:41Z,3.1.0,"## Unit Test Changes
* This release includes a change to support newer versions of PHPUnit (versions 4, 5, and 6 are now supported)
    * The custom PHP_CodeSniffer test runner now requires a bootstrap file
    * Developers with custom standards using the PHP_CodeSniffer test runner will need to do one of the following:
        * run your unit tests from the PHP_CodeSniffer root dir so the bootstrap file is included
        * specify the PHP_CodeSniffer bootstrap file on the command line: `phpunit --bootstrap=/path/to/phpcs/tests/bootstrap.php`
        * require the PHP_CodeSniffer bootstrap file from your own bootstrap file
    * If you don't run PHP_CodeSniffer unit tests, this change will not affect you
    * Thanks to Juliette Reinders Folmer for the patch


## Other Changes
* A `phpcs.xml` or `phpcs.xml.dist` file now takes precedence over the default_standard config setting
    * Thanks to Björn Fischer for the patch
* Both `phpcs.xml` and `phpcs.xml.dist` files can now be prefixed with a dot (request [#1566](https://github.com/squizlabs/PHP_CodeSniffer/issues/1566))
    * The order that the files are searched is: `.phpcs.xml`, `.phpcs.xml.dist`, `phpcs.xml`, `phpcs.xml.dist`
* The autoloader will now search for files during unit tests runs from the same locations as during normal phpcs runs
    * Allows for easier unit testing of custom standards that use helper classes or custom namespaces
* Include patterns for sniffs now use `OR` logic instead of `AND` logic
    * Previously, a file had to be in each of the include patterns to be processed by a sniff
    * Now, a file has to only be in at least one of the patterns
    * This change reflects the original intention of the feature
* PHPCS will now follow symlinks under the list of checked directories
    * This previously only worked if you specified the path to a symlink on the command line
* Output from `--config-show`, `--config-set`, and `--config-delete` now includes the path to the loaded config file
* PHPCS now cleanly exits if its config file is not readable
    * Previously, a combination of PHP notices and PHPCS errors would be generated
* Comment tokens that start with `/**` are now always tokenized as docblocks
    * Thanks to Michał Bundyra for the patch
* The PHP-supplied `T_YIELD` and `T_YIELD_FROM` tokens have been replicated for older PHP versions
    * Thanks to Michał Bundyra for the patch
* Added new `Generic.CodeAnalysis.AssignmentInCondition` sniff to warn about variable assignments inside conditions
    * Thanks to Juliette Reinders Folmer for the contribution
* Added `Generic.Files.OneObjectStructurePerFile` sniff to ensure there is a single class/interface/trait per file
    * Thanks to Mponos George for the contribution
* Function call sniffs now check variable function names and self/static object creation
    * Specific sniffs are `Generic.Functions.FunctionCallArgumentSpacing`, `PEAR.Functions.FunctionCallSignature`, and `PSR2.Methods.FunctionCallSignature`
    * Thanks to Michał Bundyra for the patch
* `Generic.Files.LineLength` can now be configured to ignore all comment lines, no matter their length
    * Set the `ignoreComments` property to `TRUE` (default is `FALSE`) in your `ruleset.xml` file to enable this
    * Thanks to Juliette Reinders Folmer for the patch
* `Generic.PHP.LowerCaseKeyword` now checks self, parent, yield, yield from, and closure (function) keywords
    * Thanks to Michał Bundyra for the patch
* `PEAR.Functions.FunctionDeclaration` now removes a blank line if it creates one by moving the curly brace during fixing
* `Squiz.Commenting.FunctionCommentThrowTag` now supports PHP 7.1 multi catch exceptions
* `Squiz.Formatting.OperatorBracket` no longer throws errors for PHP 7.1 multi catch exceptions
* `Squiz.Commenting.LongConditionClosingComment` now supports finally statements
* `Squiz.Formatting.OperatorBracket` now correctly fixes pipe separated flags
* `Squiz.Formatting.OperatorBracket` now correctly fixes statements containing short array syntax
* `Squiz.PHP.EmbeddedPhp` now properly fixes cases where the only content in an embedded PHP block is a comment
    * Thanks to Juliette Reinders Folmer for the patch
* `Squiz.WhiteSpace.ControlStructureSpacing` now ignores comments when checking blank lines at the top of control structures
* `Squiz.WhiteSpace.ObjectOperatorSpacing` now detects and fixes spaces around double colons
    * Thanks to Julius Šmatavičius for the patch
* `Squiz.WhiteSpace.MemberVarSpacing` can now be configured to check any number of blank lines between member vars
    * Set the `spacing` property (default is `1`) in your `ruleset.xml` file to set the spacing
* `Squiz.WhiteSpace.MemberVarSpacing` can now be configured to check a different number of blank lines before the first member var
    * Set the `spacingBeforeFirst` property (default is `1`) in your `ruleset.xml` file to set the spacing
* Added a new `PHP_CodeSniffer\Util\Tokens::$ooScopeTokens` static member var for quickly checking object scope
    * Includes `T_CLASS`, `T_ANON_CLASS`, `T_INTERFACE`, and `T_TRAIT`
    * Thanks to Juliette Reinders Folmer for the patch
* `PHP_CodeSniffer\Files\File::findExtendedClassName()` now supports extended interfaces
    * Thanks to Martin Hujer for the patch
* Fixed bug [#1550](https://github.com/squizlabs/PHP_CodeSniffer/issues/1550) : Squiz.Commenting.FunctionComment false positive when function contains closure
* Fixed bug [#1577](https://github.com/squizlabs/PHP_CodeSniffer/issues/1577) : Generic.InlineControlStructureSniff breaks with a comment between body and condition in do while loops
* Fixed bug [#1581](https://github.com/squizlabs/PHP_CodeSniffer/issues/1581) : Sniffs not loaded when one-standard directories are being registered in installed_paths
* Fixed bug [#1591](https://github.com/squizlabs/PHP_CodeSniffer/issues/1591) : Autoloader failing to load arbitrary files when installed_paths only set via a custom ruleset
* Fixed bug [#1605](https://github.com/squizlabs/PHP_CodeSniffer/issues/1605) : Squiz.WhiteSpace.OperatorSpacing false positive on unary minus after comment
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug [#1615](https://github.com/squizlabs/PHP_CodeSniffer/issues/1615) : Uncaught RuntimeException when phpcbf fails to fix files
* Fixed bug [#1637](https://github.com/squizlabs/PHP_CodeSniffer/issues/1637) : Generic.WhiteSpaceScopeIndent closure argument indenting incorrect with multi-line strings
* Fixed bug [#1638](https://github.com/squizlabs/PHP_CodeSniffer/issues/1638) : Squiz.WhiteSpace.ScopeClosingBrace closure argument indenting incorrect with multi-line strings
* Fixed bug [#1640](https://github.com/squizlabs/PHP_CodeSniffer/issues/1640) : Squiz.Strings.DoubleQuoteUsage replaces tabs with spaces when fixing
    * Thanks to Juliette Reinders Folmer for the patch",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/7816058/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/7816058,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.1.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.1.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.1.0,3.1.0,False,False
7071953,2017-07-18T01:21:55Z,2017-07-18T01:24:59Z,3.0.2,"* Fixed a problem where the source report was not printing the correct number of errors found
* Fixed a problem where the `--cache=/path/to/cachefile` CLI argument was not working
* The code report now gracefully handles tokenizer exceptions
* The phpcs and phpcbf scripts are now the only places that exit() in the code
    * This allows for easier usage of core PHPCS functions from external scripts
    * If you are calling `Runner::runPHPCS()` or `Runner::runPHPCBF()` directly, you will get back the full range of exit codes
    * If not, catch the new `DeepExitException` to get the error message (`$e->getMessage()`) and exit code (`$e->getCode()`)
* NOWDOC tokens are now considered conditions, just as HEREDOC tokens are
    * This makes it easier to find the start and end of a NOWDOC from any token within it
    * Thanks to Michał Bundyra for the patch
* Custom autoloaders are now only included once in case multiple standards are using the same one
    * Thanks to Juliette Reinders Folmer for the patch
* Improved tokenizing of fallthrough CASE and DEFAULT statements that share a closing statement and use curly braces
* Improved the error message when Squiz.ControlStructures.ControlSignature detects a newline after the closing parenthesis
* Fixed bug #1465 : Generic.WhiteSpace.ScopeIndent reports incorrect errors when indenting double arrows in short arrays
* Fixed bug #1478 : Indentation in fallthrough CASE that contains a closure
* Fixed bug #1497 : Fatal error if composer prepend-autoloader is set to false
    * Thanks to Kunal Mehta for the patch
* Fixed bug #1503 : Alternative control structure syntax not always recognized as scoped
* Fixed bug #1523 : Fatal error when using the `--suffix` argument
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug #1526 : Use of basepath setting can stop PHPCBF being able to write fixed files
* Fixed bug #1530 : Generic.WhiteSpace.ScopeIndent can increase indent too much for lines within code blocks
* Fixed bug #1547 : Wrong token type for backslash in use function
    * Thanks to Michał Bundyra for the patch
* Fixed bug #1549 : Squiz.PHP.EmbeddedPhp fixer conflict with `// comment` before PHP close tag
    * Thanks to Juliette Reinders Folmer for the patch
* Fixed bug #1560 : Squiz.Commenting.FunctionComment fatal error when fixing additional param comment lines that have no indent",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/7071953/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/7071953,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.2,3.0.2,False,False
6704305,2017-06-14T01:37:42Z,2017-06-14T01:39:24Z,3.0.1,"## Security Advisory
- This release contains a fix for a security advisory related to the improper handling of a shell command
    - A properly crafted filename would allow for arbitrary code execution when using the `--filter=gitmodified` command line option
    - All version 3 users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
        - e.g., you run PHPCS over libraries that you did not write
        - e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
        - e.g., you allow external tool paths to be set by user-defined values
    - If you are unable to upgrade but you check 3rd-party code, ensure you are not using the Git modified filter
    - This advisory does not affect PHP_CodeSniffer version 2.
    - Thanks to Sergei Morozov for the report and patch

## Other Changes
- Arguments on the command line now override or merge with those specified in a ruleset.xml file in all cases
- PHPCS now stops looking for a phpcs.xml file as soon as one is found, favoring the closest one to the current dir
- Added missing help text for the `--stdin-path` CLI option to `--help`
- Re-added missing help text for the `--file-list` and `--bootstrap` CLI options to `--help`
- `Runner::runPHPCS()` and `Runner::runPHPCBF()` now return an exit code instead of exiting directly (request #1484)
- The Squiz standard now enforces short array syntax by default
- The autoloader is now working correctly with classes created with `class_alias()`
- The autoloader will now search for files inside all directories in the installed_paths config var
    - This allows autoloading of files inside included custom coding standards without manually requiring them
- You can now specify a namespace for a custom coding standard, used by the autoloader to load non-sniff helper files
    - Also used by the autoloader to help other standards directly include sniffs for your standard
    - Set the value to the namespace prefix you are using for sniff files (everything up to `\Sniffs\`)
    - e.g., if your namespace format is `MyProject\CS\Standard\Sniffs\Category` set the namespace to `MyProject\CS\Standard`
    - If omitted, the namespace is assumed to be the same as the directory name containing the ruleset.xml file
    - The namespace is set in the ruleset tag of the ruleset.xml file
    - e.g., `<ruleset name=""My Coding Standard"" namespace=""MyProject\CS\Standard"">`
- Rulesets can now specify custom autoloaders using the new autoload tag
    - Autoloaders are included while the ruleset is being processed and before any custom sniffs are included
    - Allows for very custom autoloading of helper classes well before the bootstrap files are included
- The PEAR standard now includes Squiz.Commenting.DocCommentAlignment
    - It previously broke comments onto multiple lines, but didn't align them
- Fixed a problem where excluding a message from a custom standard's own sniff would exclude the whole sniff
    - This caused some PSR2 errors to be under-reported
- Fixed bug #1442 : T_NULLABLE detection not working for nullable parameters and return type hints in some cases
- Fixed bug #1447 : Running the unit tests with a phpunit config file breaks the test suite
    - Unknown arguments were not being handled correctly, but are now stored in `$config->unknown`
- Fixed bug #1449 : Generic.Classes.OpeningBraceSameLine doesn't detect comment before opening brace
    - Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1450 : Coding standard located under an installed_path with the same directory name throws an error
    - Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1451 : Sniff exclusions/restrictions dont work with custom sniffs unless they use the PHP_CodeSniffer NS
- Fixed bug #1454 : Squiz.WhiteSpace.OperatorSpacing is not checking spacing on either side of a short ternary operator
    - Thanks to Mponos George for the patch
- Fixed bug #1495 : Setting an invalid installed path breaks all commands
- Fixed bug #1496 : Squiz.Strings.DoubleQuoteUsage not unescaping dollar sign when fixing
    - Thanks to Michał Bundyra for the patch
- Fixed bug #1501 : Interactive mode is broken
- Fixed bug #1504 : PSR2.Namespaces.UseDeclaration hangs fixing use statement with no trailing code",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6704305/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6704305,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.1,3.0.1,False,False
6457735,2017-05-22T02:59:38Z,2017-05-22T03:04:20Z,2.9.1,"* Fixed bug #1442 : T_NULLABLE detection not working for nullable parameters and return type hints in some cases
* Fixed bug #1448 : Generic.Classes.OpeningBraceSameLine doesn't detect comment before opening brace
    * Thanks to Juliette Reinders Folmer for the patch",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6457735/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6457735,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.9.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.9.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.9.1,2.9.1,False,False
6273113,2017-05-04T00:44:02Z,2017-05-04T00:49:21Z,3.0.0,"This is the first stable release of the 3.0 branch, and is a large refactoring of the code base. It breaks backwards compatibility for _all_ custom sniffs and custom reports. An upgrade guide for sniff and report developers is available here: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Version-3.0-Upgrade-Guide

> Note: If you only use the built-in coding standards (such as PEAR or PSR2), or you have a custom ruleset.xml file that only makes use of the sniffs and reports distributed with PHP_CodeSniffer, you do not need to make any changes to begin using the 3.0.0 version.

There are no future planned releases for the 2.x branch, but there may still be additional 2.9.x versions released for a time due to the number of changes required to upgrade custom sniffs for 3.0. The intention is to limit 2.9.x releases to serious bug and security fixes only.

## Changes since 3.0.0RC4

* Added an --ignore-annotations command line argument to ignore all @codingStandards annotations in code comments (request [#811](https://github.com/squizlabs/PHP_CodeSniffer/issues/811))
    * This allows you to force errors to be shown that would otherwise be ignored by code comments
    * Also stop files being able to change sniff properties mid way through processing
* An error is now reported if no sniffs were registered to be run (request [#1129](https://github.com/squizlabs/PHP_CodeSniffer/issues/1129))
* The autoloader will now search for files inside the directory of any loaded coding standard
    * This allows autoloading of any file inside a custom coding standard without manually requiring them
    * Ensure your namespace begins with your coding standard's directory name and follows PSR-4
    * e.g., StandardName\Sniffs\CategoryName\AbstractHelper or StandardName\Helpers\StringSniffHelper
* Fixed an error where STDIN was sometimes not checked when using the --parallel CLI option
* The is_closure index has been removed from the return value of File::getMethodProperties()
    * This value was always false becasue T_FUNCTION tokens are never closures
    * Closures have a token type of T_CLOSURE
* The File::isAnonymousFunction() method has been removed
    * This function always returned false because it only accepted T_FUNCTION tokens, which are never closures
    * Closures have a token type of T_CLOSURE
* Includes all changes from the 2.9.0 release
* Fixed bug [#834](https://github.com/squizlabs/PHP_CodeSniffer/issues/834) : PSR2.ControlStructures.SwitchDeclaration does not handle if branches with returns
    * Thanks to Fabian Wiget for the patch

## Changes since 2.x

For a full list of changes from the 2.x version, please review the following changelogs:
https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0a1
https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC1
https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC2
https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC3
https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC4",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6273113/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6273113,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0,3.0.0,False,False
6272762,2017-05-03T23:39:33Z,2017-05-03T23:44:37Z,2.9.0,"* Added Generic.Debug.ESLint sniff to run ESLint over JS files and report errors
    * Set eslint path using: phpcs --config-set eslint_path /path/to/eslint
    * Thanks to Ryan McCue for the contribution
* T_POW is now properly considered an arithmetic operator, and will be checked as such
    * Thanks to Juliette Reinders Folmer for the patch
* T_SPACESHIP and T_COALESCE are now properly considered comparison operators, and will be checked as such
    * Thanks to Juliette Reinders Folmer for the patch
* Generic.PHP.DisallowShortOpenTag now warns about possible short open tags even when short_open_tag is set to OFF
    * Thanks to Juliette Reinders Folmer for the patch
* Generic.WhiteSpace.DisallowTabIndent now finds and fixes inproper use of spaces anywhere inside the line indent
    * Previously, only the first part of the indent was used to determine the indent type
    * Thanks to Juliette Reinders Folmer for the patch
* PEAR.Commenting.ClassComment now supports checking of traits as well as classes and interfaces
    * Thanks to Juliette Reinders Folmer for the patch
* Squiz.Commenting.FunctionCommentThrowTag now supports re-throwing exceptions (request [#946](https://github.com/squizlabs/PHP_CodeSniffer/issues/946))
    * Thanks to Samuel Levy for the patch
* Squiz.PHP.DisallowMultipleAssignments now ignores PHP4-style member var assignments
    * Thanks to Juliette Reinders Folmer for the patch
* Squiz.WhiteSpace.FunctionSpacing now ignores spacing above functions when they are preceded by inline comments
    * Stops conflicts between this sniff and comment spacing sniffs
* Squiz.WhiteSpace.OperatorSpacing no longer checks the equal sign in declare statements
    * Thanks to Juliette Reinders Folmer for the patch
* Added missing error codes for a couple of sniffs so they can now be customised as normal
* Fixed bug [#1266](https://github.com/squizlabs/PHP_CodeSniffer/issues/1266) : PEAR.WhiteSpace.ScopeClosingBrace can throw an error while fixing mixed PHP/HTML
* Fixed bug [#1364](https://github.com/squizlabs/PHP_CodeSniffer/issues/1364) : Yield From values are not recognised as returned values in Squiz FunctionComment sniff
* Fixed bug [#1373](https://github.com/squizlabs/PHP_CodeSniffer/issues/1373) : Error in tab expansion results in white-space of incorrect size
    * Thanks to Mark Clements for the patch
* Fixed bug [#1381](https://github.com/squizlabs/PHP_CodeSniffer/issues/1381) : Tokenizer: derefencing incorrectly identified as short array
* Fixed bug [#1387](https://github.com/squizlabs/PHP_CodeSniffer/issues/1387) : Squiz.ControlStructures.ControlSignature does not handle alt syntax when checking space after closing brace
* Fixed bug [#1392](https://github.com/squizlabs/PHP_CodeSniffer/issues/1392) : Scope indent calculated incorrectly when using array destructuring
* Fixed bug [#1394](https://github.com/squizlabs/PHP_CodeSniffer/issues/1394) : integer type hints appearing as TypeHintMissing instead of ScalarTypeHintMissing
    * PHP 7 type hints were also being shown when run under PHP 5 in some cases
* Fixed bug [#1405](https://github.com/squizlabs/PHP_CodeSniffer/issues/1405) : Squiz.WhiteSpace.ScopeClosingBrace fails to fix closing brace within indented PHP tags
* Fixed bug [#1421](https://github.com/squizlabs/PHP_CodeSniffer/issues/1421) : Ternaries used in constant scalar expression for param default misidentified by tokenizer
* Fixed bug [#1431](https://github.com/squizlabs/PHP_CodeSniffer/issues/1431) : PHPCBF can't fix short open tags when they are not followed by a space
    * Thanks to Gonçalo Queirós for the patch
* Fixed bug [#1432](https://github.com/squizlabs/PHP_CodeSniffer/issues/1432) : PHPCBF can make invalid fixes to inline JS control structures that make use of JS objects",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6272762/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/6272762,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.9.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.9.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.9.0,2.9.0,False,False
5612671,2017-03-01T22:38:51Z,2017-03-01T22:42:01Z,3.0.0RC4,"## Security Advisory
- This release contains a fix for a security advisory related to the improper handling of shell commands
  - Uses of shell_exec() and exec() were not escaping filenames and configuration settings in most cases
  - A properly crafted filename or configuration option would allow for arbitrary code execution when using some features
  - All users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
    - e.g., you run PHPCS over libraries that you did not write
    - e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
    - e.g., you allow external tool paths to be set by user-defined values
  - If you are unable to upgrade but you check 3rd-party code, ensure you are not using the following features:
    - The diff report
    - The notify-send report
    - The Generic.PHP.Syntax sniff
    - The Generic.Debug.CSSLint sniff
    - The Generic.Debug.ClosureLinter sniff
    - The Generic.Debug.JSHint sniff
    - The Squiz.Debug.JSLint sniff
    - The Squiz.Debug.JavaScriptLint sniff
    - The Zend.Debug.CodeAnalyzer sniff
  - Thanks to Klaus Purer for the report

## Other Changes
- The indent property of PEAR.Classes.ClassDeclaration has been removed
  - Instead of calculating the indent of the brace, it just ensures the brace is aligned with the class keyword
  - Other sniffs can be used to ensure the class itself is indented correctly
- Invalid exclude rules inside a ruleset.xml file are now ignored instead of potentially causing out of memory errors
  - Using the -vv command line argument now also shows the invalid exclude rule as XML
- Includes all changes from the [2.8.1 release](https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.8.1)
- Fixed bug [#1333](https://github.com/squizlabs/PHP_CodeSniffer/issues/1333) : The new autoloader breaks some frameworks with custom autoloaders
- Fixed bug [#1334](https://github.com/squizlabs/PHP_CodeSniffer/issues/1334) : Undefined offset when explaining standard with custom sniffs
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5612671/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5612671,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0RC4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0RC4,3.0.0RC4,False,True
5612539,2017-03-01T22:25:00Z,2017-03-01T22:28:51Z,2.8.1,"## Security Advisory
- This release contains a fix for a security advisory related to the improper handling of shell commands
  - Uses of shell_exec() and exec() were not escaping filenames and configuration settings in most cases
  - A properly crafted filename or configuration option would allow for arbitrary code execution when using some features
  - All users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
    - e.g., you run PHPCS over libraries that you did not write
    - e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
    - e.g., you allow external tool paths to be set by user-defined values
  - If you are unable to upgrade but you check 3rd-party code, ensure you are not using the following features:
    - The diff report
    - The notify-send report
    - The Generic.PHP.Syntax sniff
    - The Generic.Debug.CSSLint sniff
    - The Generic.Debug.ClosureLinter sniff
    - The Generic.Debug.JSHint sniff
    - The Squiz.Debug.JSLint sniff
    - The Squiz.Debug.JavaScriptLint sniff
    - The Zend.Debug.CodeAnalyzer sniff
  - Thanks to Klaus Purer for the report

## Other Changes
- The PHP-supplied T_COALESCE_EQUAL token has been replicated for PHP versions before 7.2
- PEAR.Functions.FunctionDeclaration now reports an error for blank lines found inside a function declaration
- PEAR.Functions.FunctionDeclaration no longer reports indent errors for blank lines in a function declaration
- Squiz.Functions.MultiLineFunctionDeclaration no longer reports errors for blank lines in a function declaration
  - It would previously report that only one argument is allowed per line
- Squiz.Commenting.FunctionComment now corrects multi-line param comment padding more accurately
- Squiz.Commenting.FunctionComment now properly fixes pipe-separated param types
- Squiz.Commenting.FunctionComment now works correctly when function return types also contain a comment
  - Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.InlineIfDeclaration now supports the elvis operator
  - As this is not a real PHP operator, it enforces no spaces between ? and : when the THEN statement is empty
- Squiz.ControlStructures.InlineIfDeclaration is now able to fix the spacing errors it reports
- Fixed bug [#1340](https://github.com/squizlabs/PHP_CodeSniffer/issues/1340) : STDIN file contents not being populated in some cases
  - Thanks to David Biňovec for the patch
- Fixed bug [#1344](https://github.com/squizlabs/PHP_CodeSniffer/issues/1344) : PEAR.Functions.FunctionCallSignatureSniff throws error for blank comment lines
- Fixed bug [#1347](https://github.com/squizlabs/PHP_CodeSniffer/issues/1347) : PSR2.Methods.FunctionCallSignature strips some comments during fixing
  - Thanks to Algirdas Gurevicius for the patch
- Fixed bug [#1349](https://github.com/squizlabs/PHP_CodeSniffer/issues/1349) : Squiz.Strings.DoubleQuoteUsage.NotRequired message is badly formatted when string contains a CR newline char
  - Thanks to Algirdas Gurevicius for the patch
- Fixed bug [#1350](https://github.com/squizlabs/PHP_CodeSniffer/issues/1350) : Invalid Squiz.Formatting.OperatorBracket error when using namespaces
- Fixed bug [#1369](https://github.com/squizlabs/PHP_CodeSniffer/issues/1369) : Empty line in multi-line function declaration cause infinite loop
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5612539/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5612539,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.8.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.8.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.8.1,2.8.1,False,False
5335663,2017-02-02T03:58:08Z,2017-02-02T04:03:19Z,3.0.0RC3,"- Added support for ES6 class declarations
  - Previously, these class were tokenized as JS objects but are now tokenzied as normal T_CLASS structures
- Added support for ES6 method declarations, where the ""function"" keyword is not used
  - Previously, these methods were tokenized as JS objects (fixes bug [#1251](https://github.com/squizlabs/PHP_CodeSniffer/issues/1251))
  - The name of the ES6 method is now assigned the T_FUNCTION keyword and treated like a normal function
  - Custom sniffs that support JS and listen for T_FUNCTION tokens can't assume the token represents the word ""function""
  - Check the contents of the token first, or use $phpcsFile->getDeclarationName($stackPtr) if you just want its name
  - There is no change for custom sniffs that only check PHP code
- PHPCBF exit codes have been changed so they are now more useful (request [#1270](https://github.com/squizlabs/PHP_CodeSniffer/issues/1270))
  - Exit code 0 is now used to indicate that no fixable errors were found, and so nothing was fixed
  - Exit code 1 is now used to indicate that all fixable errors were fixed correctly
  - Exit code 2 is now used to indicate that PHPCBF failed to fix some of the fixable errors it found
  - Exit code 3 is now used for general script execution errors
- Added PEAR.Commenting.FileComment.ParamCommentAlignment to check alignment of multi-line param comments
- Includes all changes from the 2.8.0 release
- Fixed an issue where excluding a file using a @codingStandardsIgnoreFile comment would produce errors
  - For PHPCS, it would show empty files being processed
  - For PHPCBF, it would produce a PHP error
- Fixed bug [#1233](https://github.com/squizlabs/PHP_CodeSniffer/issues/1233) : Can't set config data inside ruleset.xml file
- Fixed bug [#1241](https://github.com/squizlabs/PHP_CodeSniffer/issues/1241) : CodeSniffer.conf not working with 3.x PHAR file
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5335663/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5335663,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0RC3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0RC3,3.0.0RC3,False,True
5335558,2017-02-02T03:34:19Z,2017-02-02T03:38:34Z,2.8.0,"- The Internal.NoCodeFound error is no longer generated for content sourced from STDIN
  - This should stop some Git hooks generating errors because PHPCS is trying to process the refs passed on STDIN
- Squiz.Commenting.DocCommentAlignment now checks comments on class properties defined using the VAR keyword
  - Thanks to Klaus Purer for the patch
- The getMethodParameters() method now recognises ""self"" as a valid type hint
  - The return array now contains a new ""content"" index containing the raw content of the param definition
  - Thanks to Juliette Reinders Folmer for the patch
- The getMethodParameters() method now supports nullable types
  - The return array now contains a new ""nullable_type"" index set to true or false for each method param
  - Thanks to Juliette Reinders Folmer for the patch
- The getMethodParameters() method now supports closures
  - Thanks to Juliette Reinders Folmer for the patch
- Added more guard code for JS files with syntax errors (request [#1271](https://github.com/squizlabs/PHP_CodeSniffer/issues/1271) and request [#1272](https://github.com/squizlabs/PHP_CodeSniffer/issues/1272))
- Added more guard code for CSS files with syntax errors (request [#1304](https://github.com/squizlabs/PHP_CodeSniffer/issues/1304))
- PEAR.Commenting.FunctionComment fixers now correctly handle multi-line param comments
- AbstractVariableSniff now supports anonymous classes
  - Thanks to Juliette Reinders Folmer for the patch
- Generic.NamingConventions.ConstructorName and PEAR.NamingConventions.ValidVariable now support anonymous classes
- Generic.NamingConventions.CamelCapsFunctionName and PEAR.NamingConventions.ValidFunctionName now support anonymous classes
  - Thanks to Juliette Reinders Folmer for the patch
- Generic.CodeAnalysis.UnusedFunctionParameter and PEAR.Functions.ValidDefaultValue now support closures
  - Thanks to Juliette Reinders Folmer for the patch
- PEAR.NamingConventions.ValidClassName and Squiz.Classes.ValidClassName now support traits
  - Thanks to Juliette Reinders Folmer for the patch
- Generic.Functions.FunctionCallArgumentSpacing now supports closures other PHP-provided functions
  - Thanks to Algirdas Gurevicius for the patch
- Fixed an error where a nullable type character was detected as an inline then token
  - A new T_NULLABLE token has been added to represent the ? nullable type character
  - Thanks to Jaroslav Hanslík for the patch
- Squiz.WhiteSpace.SemicolonSpacing no longer removes comments while fixing the placement of semicolons
  - Thanks to Algirdas Gurevicius for the patch
- Fixed bug [#1230](https://github.com/squizlabs/PHP_CodeSniffer/issues/1230) : JS tokeniser incorrectly tokenises bitwise shifts as comparison
  - Thanks to Ryan McCue for the patch
- Fixed bug [#1237](https://github.com/squizlabs/PHP_CodeSniffer/issues/1237) : Uninitialized string offset in PHP Tokenizer on PHP 5.2
- Fixed bug [#1239](https://github.com/squizlabs/PHP_CodeSniffer/issues/1239) : Warning when static method name is 'default'
- Fixed bug [#1240](https://github.com/squizlabs/PHP_CodeSniffer/issues/1240) : False positive for function names starting with triple underscore
  - Thanks to Juliette Reinders Folmer for the patch
- Fixed bug [#1245](https://github.com/squizlabs/PHP_CodeSniffer/issues/1245) : SELF is not recognised as T_SELF token in: return new self
- Fixed bug [#1246](https://github.com/squizlabs/PHP_CodeSniffer/issues/1246) : A mix of USE statements with and without braces can cause the tokenizer to mismatch brace tokens
  - Thanks to Michał Bundyra for the patch
- Fixed bug [#1249](https://github.com/squizlabs/PHP_CodeSniffer/issues/1249) : GitBlame report requires a .git directory
- Fixed bug [#1252](https://github.com/squizlabs/PHP_CodeSniffer/issues/1252) : Squiz.Strings.ConcatenationSpacing fix creates syntax error when joining a number to a string
- Fixed bug [#1253](https://github.com/squizlabs/PHP_CodeSniffer/issues/1253) : Generic.ControlStructures.InlineControlStructure fix creates syntax error fixing if-try/catch
- Fixed bug [#1255](https://github.com/squizlabs/PHP_CodeSniffer/issues/1255) : Inconsistent indentation check results when ELSE on new line
- Fixed bug [#1257](https://github.com/squizlabs/PHP_CodeSniffer/issues/1257) : Double dash in CSS class name can lead to ""Named colours are forbidden"" false positives
- Fixed bug [#1260](https://github.com/squizlabs/PHP_CodeSniffer/issues/1260) : Syntax errors not being shown when error_prepend_string is set
  - Thanks to Juliette Reinders Folmer for the patch
- Fixed bug [#1264](https://github.com/squizlabs/PHP_CodeSniffer/issues/1264) : Array return type hint is sometimes detected as T_ARRAY_HINT instead of T_RETURN_TYPE
  - Thanks to Jaroslav Hanslík for the patch
- Fixed bug [#1265](https://github.com/squizlabs/PHP_CodeSniffer/issues/1265) : ES6 arrow function raises unexpected operator spacing errors
- Fixed bug [#1267](https://github.com/squizlabs/PHP_CodeSniffer/issues/1267) : Fixer incorrectly handles filepaths with repeated dir names
  - Thanks to Sergey Ovchinnikov for the patch
- Fixed bug [#1276](https://github.com/squizlabs/PHP_CodeSniffer/issues/1276) : Commenting.FunctionComment.InvalidReturnVoid conditional issue with anonymous classes
- Fixed bug [#1277](https://github.com/squizlabs/PHP_CodeSniffer/issues/1277) : Squiz.PHP.DisallowMultipleAssignments.Found error when var assignment is on the same line as an open tag
- Fixed bug [#1284](https://github.com/squizlabs/PHP_CodeSniffer/issues/1284) : Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket false positive match for short list syntax
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5335558/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/5335558,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.8.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.8.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.8.0,2.8.0,False,False
4790967,2016-11-30T04:31:37Z,2016-11-30T04:33:03Z,3.0.0RC2,"- Fixed an undefined var name error that could be produced while running PHPCBF
- Made the Runner class easier to use with wrapper scripts
- Full usage information is no longer printed when a usage error is encountered (request [#1186](https://github.com/squizlabs/PHP_CodeSniffer/issues/1186))
  - Makes it a lot easier to find and read the error message that was printed
- Includes all changes from the 2.7.1 release
- Fixed bug [#1167](https://github.com/squizlabs/PHP_CodeSniffer/issues/1167) : 3.0.0RC1 PHAR does not work with PEAR standard
- Fixed bug [#1208](https://github.com/squizlabs/PHP_CodeSniffer/issues/1208) : Excluding files doesn't work when using STDIN with a filename specified
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4790967/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4790967,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0RC2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0RC2,3.0.0RC2,False,True
4790904,2016-11-30T04:11:22Z,2016-11-30T04:15:58Z,2.7.1,"- Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis fix now removes unnecessary whitespace
- Squiz.Formatting.OperatorBracket no longer errors for negative array indexes used within a function call
- Squiz.PHP.EmbeddedPhp no longer expects a semicolon after statements that are only opening a scope
- Fixed a problem where the content of T_DOC_COMMENT_CLOSE_TAG tokens could sometimes be (boolean) false
- Developers of custom standards with custom test runners can now have their standards ignored by the built-in test runner
  - Set the value of an environment variable called PHPCS_IGNORE_TESTS with a comma separated list of your standard names
  - Thanks to Juliette Reinders Folmer for the patch
- The unit test runner now loads the test sniff outside of the standard's ruleset so that exclude rules do not get applied
  - This may have caused problems when testing custom sniffs inside custom standards
  - Also makes the unit tests runs a little faster
- The SVN pre-commit hook now works correctly when installed via composer
  - Thanks to Sergey for the patch
- Fixed bug [#1135](https://github.com/squizlabs/PHP_CodeSniffer/issues/1135) : PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine not detected if preceded by multiline function call
- Fixed bug [#1138](https://github.com/squizlabs/PHP_CodeSniffer/issues/1138) : PEAR.ControlStructures.MultiLineCondition.Alignment not detected if closing brace is first token on line
- Fixed bug [#1141](https://github.com/squizlabs/PHP_CodeSniffer/issues/1141) : Sniffs that check EOF newlines don't detect newlines properly when the last token is a doc block
- Fixed bug [#1150](https://github.com/squizlabs/PHP_CodeSniffer/issues/1150) : Squiz.Strings.EchoedStrings does not properly fix bracketed statements
- Fixed bug [#1156](https://github.com/squizlabs/PHP_CodeSniffer/issues/1156) : Generic.Formatting.DisallowMultipleStatements errors when multiple short echo tags are used on the same line
  - Thanks to Nikola Kovacs for the patch
- Fixed bug [#1161](https://github.com/squizlabs/PHP_CodeSniffer/issues/1161) : Absolute report path is treated like a relative path if it also exists within the current directory
- Fixed bug [#1170](https://github.com/squizlabs/PHP_CodeSniffer/issues/1170) : Javascript regular expression literal not recognized after comparison operator
- Fixed bug [#1180](https://github.com/squizlabs/PHP_CodeSniffer/issues/1180) : Class constant named FUNCTION is incorrectly tokenized
- Fixed bug [#1181](https://github.com/squizlabs/PHP_CodeSniffer/issues/1181) : Squiz.Operators.IncrementDecrementUsage.NoBrackets false positive when incrementing properties
  - Thanks to Jürgen Henge-Ernst for the patch
- Fixed bug [#1188](https://github.com/squizlabs/PHP_CodeSniffer/issues/1188) : Generic.WhiteSpace.ScopeIndent issues with inline HTML and multi-line function signatures
- Fixed bug [#1190](https://github.com/squizlabs/PHP_CodeSniffer/issues/1190) : phpcbf on if/else with trailing comment generates erroneous code
- Fixed bug [#1191](https://github.com/squizlabs/PHP_CodeSniffer/issues/1191) : Javascript sniffer fails with function called ""Function""
- Fixed bug [#1203](https://github.com/squizlabs/PHP_CodeSniffer/issues/1203) : Inconsistent behavior of PHP_CodeSniffer_File::findEndOfStatement
- Fixed bug [#1218](https://github.com/squizlabs/PHP_CodeSniffer/issues/1218) : CASE conditions using class constants named NAMESPACE/INTERFACE/TRAIT etc are incorrectly tokenized
- Fixed bug [#1221](https://github.com/squizlabs/PHP_CodeSniffer/issues/1221) : Indented function call with multiple closure arguments can cause scope indent error
- Fixed bug [#1224](https://github.com/squizlabs/PHP_CodeSniffer/issues/1224) : PHPCBF fails to fix code with heredoc/nowdoc as first argument to a function  
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4790904/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4790904,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.7.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.7.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.7.1,2.7.1,False,False
4034557,2016-09-02T00:40:01Z,2016-09-02T00:44:36Z,,"- Progress output now shows E and W in green when a file has fixable errors or warnings
  - Only supported if colors are enabled
- PHPCBF no longer produces verbose output by default (request [#699](https://github.com/squizlabs/PHP_CodeSniffer/issues/699))
  - Use the -v command line argument to show verbose fixing output
  - Use the -q command line argument to disable verbose information if enabled by default
- PHPBF now prints a summary report after fixing files
  - Report shows files that were fixed, how many errors were fixed, and how many remain
- PHPCBF now supports the -p command line argument to print progress information
  - Prints a green F for files where fixes occurred
  - Prints a red E for files that could not be fixed due to an error
  - Use the -q command line argument to disable progress information if enabled by default
- Running unit tests using --verbose no longer throws errors
- Fixed shell error appearing on some systems when trying to find executable paths
- Includes all changes from the 2.7.0 release
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4034557/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4034557,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0RC1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0RC1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0RC1,3.0.0RC1,False,True
4034357,2016-09-01T23:57:04Z,2016-09-02T00:00:30Z,2.7.0,"- Added --file-list command line argument to allow a list of files and directories to be specified in an external file
  - Useful is you have a generated list of files to check that would be too long for the command line
  - File and directory paths are listed one per line
  - Usage is: phpcs --file-list=/path/to/file-list ...
  - Thanks to Blotzu for the patch
- Values set using @codingStandardsChangeSetting comments can now contain spaces
- Sniff unit tests can now specify a list of test files instead of letting the runner pick them (request [#1078](https://github.com/squizlabs/PHP_CodeSniffer/issues/1078))
  - Useful if a sniff needs to exclude files based on the environment, or is checking filenames
  - Override the new getTestFiles() method to specify your own list of test files
- Generic.Functions.OpeningFunctionBraceKernighanRitchie now ignores spacing for function return types
  - The sniff code Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceAfterBracket has been removed
  - Replaced by Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace
  - The new error message is slightly clearer as it indicates that a single space is needed before the brace
- Squiz.Commenting.LongConditionClosingComment now allows for the length of a code block to be configured
  - Set the lineLimit property (default is 20) in your ruleset.xml file to set the code block length
  - When the code block length is reached, the sniff will enforce a closing comment after the closing brace
  - Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.LongConditionClosingComment now allows for the end comment format to be configured
  - Set the commentFormat property (default is ""//end %s"") in your ruleset.xml file to set the format
  - The placeholder %s will be replaced with the type of condition opener, e.g., ""//end foreach""
  - Thanks to Juliette Reinders Folmer for the patch
- Generic.PHPForbiddenFunctions now allows forbidden functions to have mixed case
  - Previously, it would only do a strtolower comparison
  - Error message now shows what case was found in the code and what the correct case should be
  - Thanks to Juliette Reinders Folmer for the patch
- Added Generic.Classes.OpeningBraceSameLine to ensure opening brace of class/interface/trait is on the same line as the declaration
  - Thanks to Juliette Reinders Folmer for the patch
- Added Generic.PHP.BacktickOperator to ban the use of the backtick operator for running shell commands
  - Thanks to Juliette Reinders Folmer for the patch
- Added Generic.PHP.DisallowAlternativePHPTags to ban the use of alternate PHP tags
  - Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.LanguageConstructSpacing no longer checks for spaces if parenthesis are being used (request [#1062](https://github.com/squizlabs/PHP_CodeSniffer/issues/1062))
  - Makes this sniff more compatibile with those that check parenthesis spacing of function calls
- Squiz.WhiteSpace.ObjectOperatorSpacing now has a setting to ignore newline characters around object operators
  - Default remains FALSE, so newlines are not allowed
  - Override the ""ignoreNewlines"" setting in a ruleset.xml file to change
  - Thanks to Alex Howansky for the patch
- Squiz.Scope.MethodScope now sniffs traits as well as classes and interfaces
  - Thanks to Jesse Donat for the patch
- PHPCBF is now able to fix Squiz.SelfMemberReference.IncorrectCase errors
  - Thanks to Nikola Kovacs for the patch
- PHPCBF is now able to fix Squiz.Commenting.VariableComment.IncorrectVarType
  - Thanks to Walt Sorensen for the patch
- PHPCBF is now able to fix Generic.PHP.DisallowShortOpenTag
  - Thanks to Juliette Reinders Folmer for the patch
- Improved the formatting of the end brace when auto fixing InlineControlStructure errors (request [#1121](https://github.com/squizlabs/PHP_CodeSniffer/issues/1121))
- Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine fix no longer leaves blank line after brace (request [#1085](https://github.com/squizlabs/PHP_CodeSniffer/issues/1085))
- Generic UpperCaseConstantNameSniff now allows lowercase namespaces in constant definitions
  - Thanks to Daniel Schniepp for the patch
- Squiz DoubleQuoteUsageSniff is now more tolerant of syntax errors caused by mismatched string tokens
- A few sniffs that produce errors based on the current PHP version can now be told to run using a specific PHP version
  - Set the php_version config var using --config-set, --runtime-set, or in a ruleset to specify a specific PHP version
  - The format of the PHP version is the same as the PHP_VERSION_ID constant (e.g., 50403 for version 5.4.3)
  - Supported sniffs are Generic.PHP.DisallowAlternativePHPTags, PSR1.Classes.ClassDeclaration, Squiz.Commenting.FunctionComment
  - Thanks to Finlay Beaton for the patch
- Fixed bug [#985](https://github.com/squizlabs/PHP_CodeSniffer/issues/985) : Duplicate class definition detection generates false-positives in media queries
  - Thanks to Raphael Horber for the patch
- Fixed bug [#1014](https://github.com/squizlabs/PHP_CodeSniffer/issues/1014) : Squiz VariableCommentSniff doesn't always detect a missing comment
- Fixed bug [#1066](https://github.com/squizlabs/PHP_CodeSniffer/issues/1066) : Undefined index: quiet in CLI.php during unit test run with -v command line arg
- Fixed bug [#1072](https://github.com/squizlabs/PHP_CodeSniffer/issues/1072) : Squiz.SelfMemberReference.NotUsed not detected if leading namespace separator is used
- Fixed bug [#1089](https://github.com/squizlabs/PHP_CodeSniffer/issues/1089) : Rulesets cannot be loaded if the path contains urlencoded characters
- Fixed bug [#1091](https://github.com/squizlabs/PHP_CodeSniffer/issues/1091) : PEAR and Squiz FunctionComment sniffs throw errors for some invalid @param line formats
- Fixed bug [#1092](https://github.com/squizlabs/PHP_CodeSniffer/issues/1092) : PEAR.Functions.ValidDefaultValue should not flag type hinted methods with a NULL default argument
- Fixed bug [#1095](https://github.com/squizlabs/PHP_CodeSniffer/issues/1095) : Generic LineEndings sniff replaces tabs with spaces with --tab-width is set
- Fixed bug [#1096](https://github.com/squizlabs/PHP_CodeSniffer/issues/1096) : Squiz FunctionDeclarationArgumentSpacing gives incorrect error/fix when variadic operator is followed by a space
- Fixed bug [#1099](https://github.com/squizlabs/PHP_CodeSniffer/issues/1099) : Group use declarations are incorrectly fixed by the PSR2 standard
  - Thanks to Jason McCreary for the patch
- Fixed bug [#1101](https://github.com/squizlabs/PHP_CodeSniffer/issues/1101) : Incorrect indent errors when breaking out of PHP inside an IF statement
- Fixed bug [#1102](https://github.com/squizlabs/PHP_CodeSniffer/issues/1102) : Squiz.Formatting.OperatorBracket.MissingBrackets faulty bracketing fix
- Fixed bug [#1109](https://github.com/squizlabs/PHP_CodeSniffer/issues/1109) : Wrong scope indent reported in anonymous class
- Fixed bug [#1112](https://github.com/squizlabs/PHP_CodeSniffer/issues/1112) : File docblock not recognized when require_once follows it
- Fixed bug [#1120](https://github.com/squizlabs/PHP_CodeSniffer/issues/1120) : InlineControlStructureSniff does not handle auto-fixing for control structures that make function calls
- Fixed bug [#1124](https://github.com/squizlabs/PHP_CodeSniffer/issues/1124) : Squiz.Operators.ComparisonOperatorUsage does not detect bracketed conditions for inline IF statements
  - Thanks to Raphael Horber for the patch
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4034357/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/4034357,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.7.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.7.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.7.0,2.7.0,False,False
3695988,2016-07-20T03:40:27Z,2016-07-20T03:41:10Z,3.0.0a1,"This is the first alpha release of the 3.0.0 version, and is a large refactoring of the code base. It breaks backwards compatibility for _all_ custom sniffs and custom reports. An upgrade guide for sniff and report developers is available here: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Version-3.0-Upgrade-Guide

> Note: If you only use the built-in coding standards (such as PEAR or PSR2), or you have a custom ruleset.xml file that only makes use of the sniffs and reports distributed with PHP_CodeSniffer, you do not need to make any changes to use this alpha release.

## PHP version change

This release changes the minimum PHP version from 5.1.2 to 5.4.0.
- Why not 5.6? Because the reality is that many developers have to work in corporate environments where the PHP version is maintained by the OS vendor. 5.6 and 7 are out of reach for a large number of developers working on big commercial applications, which is a place where PHPCS is of great benefit.
- Why not 5.3? Where 5.3 is available, 5.4 should be available through official OS repositories. The min PHP version for PHPCS will remain stable for some time, so an attempt has been made to pick a version that is hopefully available to the vast majority of developers while still providing new language features to PHPCS itself.

## Installation

You can install PHP_CodeSniffer 3.0.0a1 via composer or PEAR, or download the PHAR files attached to these release notes. You can also clone the git repository directly and run PHPCS from there.

If you are using composer, you can use the 3.x-dev branch alias:

```
{
    ""require-dev"": {
        ""squizlabs/php_codesniffer"": ""3.x-dev""
    }
}
```

If you are installing via PEAR, please first uninstall the existing PHP_CodeSniffer package before installing the new one:

```
pear uninstall PHP_CodeSniffer
pear install PHP_CodeSniffer-3.0.0a1
```

## New features and core changes
- Added optional caching of results between runs (request [#530](https://github.com/squizlabs/PHP_CodeSniffer/issues/530))
  - Enable the cache by using the --cache command line argument
  - If you want the cache file written somewhere specific, use --cache=/path/to/cacheFile
  - Use the command ""phpcs --config-set cache true"" to turn caching on by default
  - Use the --no-cache command line argument to disable caching if it is being turned on automatically
- Add support for checking file in parallel (request [#421](https://github.com/squizlabs/PHP_CodeSniffer/issues/421))
  - Tell PHPCS how many files to check at once using the --parallel command line argument
  - To check 100 files at once, using --parallel=100
  - To disable parallel checking if it is being turned on automatically, use --parallel=1
  - Requires PHP to be compiled with the PCNTL package
- The default encoding has been changed from iso-8859-1 to utf-8 (request [#760](https://github.com/squizlabs/PHP_CodeSniffer/issues/760))
  - The --encoding command line argument still works, but you no longer have to set it to process files as utf-8
  - If encoding is being set to utf-8 in a ruleset or on the CLI, it can be safely removed
  - If the iconv PHP extension is not installed, standard non-multibyte aware functions will be used
- Added a new ""code"" report type to show a code snippet for each error (request [#419](https://github.com/squizlabs/PHP_CodeSniffer/issues/419))
  - The line containing the error is printed, along with 2 lines above and below it to show context
  - The location of the errors is underlined in the code snippet if you also use --colors
  - Use --report=code to generate this report
- Added support for custom filtering of the file list
  - Developers can write their own filter classes to perform custom filtering of the list before the run starts
  - Use the command line arg --filter=/path/to/filter.php to specify a filter to use
  - Extend \PHP_CodeSniffer\Filters\Filter to also support the core PHPCS extension and path filtering
  - Extend \PHP_CodeSniffer\Filters\ExactMatch to get the core filtering and the ability to use blacklists and whitelists
  - The included \PHP_CodeSniffer\Filters\GitModified filter is a good example of an ExactMatch filter
- Added support for only checking files that have been locally modified or added in a git repo
  - Use --filter=gitmodified to check these files
  - You still need to give PHPCS a list of files or directories in which to check
- Added automatic discovery of executable paths (request [#571](https://github.com/squizlabs/PHP_CodeSniffer/issues/571))
  - Thanks to Sergey Morozov for the patch
- You must now pass ""-"" on the command line to have PHPCS wait for STDIN
  - E.g., phpcs --standard=PSR2 -
  - You can still pipe content via STDIN as normal as PHPCS will see this and process it
  - But without the ""-"", PHPCS will throw an error if no content or files are passed to it
- All PHP errors generated by sniffs are caught, re-thrown as exceptions, and reported in the standard error reports
  - This should stop bugs inside sniffs causing infinite loops
  - Also stops invalid reports being produced as errors don't print to the screen directly
- Sniff codes are no longer optional
  - If a sniff throws and error or a warning, it must specify an internal code for that message
- The installed_paths config setting can now point directly to a standard
  - Previously, it had to always point to the directory in which the standard lives
- Multiple reports can now be specified using the --report command line argument
  - Report types are separated by commas
  - E.g., --report=full,summary,info
  - Previously, you had to use one argument for each report such as --report=full --report=summary --report=info
- You can now set the severity, message type, and exclude patterns for an entire sniff, category, or standard
  - Previously, this was only available for a single message
- You can now include a single sniff code in a ruleset instead of having to include an entire sniff
  - Including a sniff code will automatically exclude all other messages from that sniff
  - If the sniff is already included by an imported standard, set the sniff severity to 0 and include the specific message you want
- PHPCBF no longer uses patch
  - Files are now always overwritten
  - The --no-patch option has been removed
- Added a --basepath option to strip a directory from the front of file paths in output (request [#470](https://github.com/squizlabs/PHP_CodeSniffer/issues/470))
  - The basepath is absolute or relative to the current directory
  - E.g., to output paths relative to current dir in reports, use --basepath=.
- Ignore rules are now checked when using STDIN (request [#733](https://github.com/squizlabs/PHP_CodeSniffer/issues/733))
- Added an include-pattern tag to rulesets to include a sniff for specific files and folders only (request [#656](https://github.com/squizlabs/PHP_CodeSniffer/issues/656))
  - This is the exact opposite of the exclude-pattern tag
  - This option is only usable within sniffs, not globally like exclude-patterns are
- Added a new -m option to stop error messages from being recorded, which saves a lot of memory
  - PHPCBF always uses this setting to reduce memory as it never outputs error messages
  - Setting the $recordErrors member var inside custom report classes is no longer supported (use -m instead)
- Exit code 2 is now used to indicate fixable errors were found (request [#930](https://github.com/squizlabs/PHP_CodeSniffer/issues/930))
  - Exit code 3 is now used for general script execution errors
  - Exit code 1 is used to indicate that coding standard errors were found, but none are fixable
  - Exit code 0 is unchanged and continues to mean no coding standard errors found
- The included PHPCS standard has been removed
  - All rules are now found inside the phpcs.xml.dist file
  - Running ""phpcs"" without any arguments from a git clone will use this ruleset
- The included SVN pre-commit hook has been removed
  - Hooks for version control systems will no longer be maintained within the PHPCS project
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3695988/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3695988,3.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/3.0.0a1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.0.0a1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/3.0.0a1,3.0.0a1,False,True
3652737,2016-07-13T23:36:35Z,2016-07-13T23:39:25Z,2.6.2,"- Added a new --exclude CLI argument to exclude a list of sniffs from checking and fixing (request [#904](https://github.com/squizlabs/PHP_CodeSniffer/issues/904))
  - Accepts the same sniff codes as the --sniffs command line argument, but provides the opposite functionality
- Added a new -q command line argument to disable progress and verbose information from being printed (request [#969](https://github.com/squizlabs/PHP_CodeSniffer/issues/969))
  - Useful if a coding standard hard-codes progess or verbose output but you want PHPCS to be quiet
  - Use the command ""phpcs --config-set quiet true"" to turn quiet mode on by default
- Generic LineLength sniff no longer errors for comments that cannot be broken out onto a new line (request [#766](https://github.com/squizlabs/PHP_CodeSniffer/issues/766))
  - A typical case is a comment that contains a very long URL
  - The comment is ignored if putting the URL on a indented new comment line would be longer than the allowed length
- Settings extensions in a ruleset no longer causes PHP notices during unit testing
  - Thanks to Klaus Purer for the patch
- Version control reports now show which errors are fixable if you are showing sources
- Added a new sniff to enforce a single space after a NOT operator (request [#1051](https://github.com/squizlabs/PHP_CodeSniffer/issues/1051))
  - Include in a ruleset using the code Generic.Formatting.SpaceAfterNot
- The Squiz.Commenting.BlockComment sniff now supports tabs for indenting comment lines (request [#1056](https://github.com/squizlabs/PHP_CodeSniffer/issues/1056))
- Fixed bug [#790](https://github.com/squizlabs/PHP_CodeSniffer/issues/790) : Incorrect missing @throws error in methods that use closures
- Fixed bug [#908](https://github.com/squizlabs/PHP_CodeSniffer/issues/908) : PSR2 standard is not checking that closing brace is on line following the body
- Fixed bug [#945](https://github.com/squizlabs/PHP_CodeSniffer/issues/945) : Incorrect indent behavior using deep-nested function and arrays
- Fixed bug [#961](https://github.com/squizlabs/PHP_CodeSniffer/issues/961) : Two anonymous functions passed as function/method arguments cause indentation false positive
- Fixed bug [#1005](https://github.com/squizlabs/PHP_CodeSniffer/issues/1005) : Using global composer vendor autoload breaks PHP lowercase built-in function sniff
  - Thanks to Michael Butler for the patch
- Fixed bug [#1007](https://github.com/squizlabs/PHP_CodeSniffer/issues/1007) : Squiz Unreachable code detection is not working properly with a closure inside a case
- Fixed bug [#1023](https://github.com/squizlabs/PHP_CodeSniffer/issues/1023) : PSR2.Classes.ClassDeclaration fails if class extends base class and ""implements"" is on trailing line
- Fixed bug [#1026](https://github.com/squizlabs/PHP_CodeSniffer/issues/1026) : Arrays in comma delimited class properties cause ScopeIndent to increase indent
- Fixed bug [#1028](https://github.com/squizlabs/PHP_CodeSniffer/issues/1028) : Squiz ArrayDeclaration incorrectly fixes multi-line array where end bracket is not on a new line
- Fixed bug [#1034](https://github.com/squizlabs/PHP_CodeSniffer/issues/1034) : Squiz FunctionDeclarationArgumentSpacing gives incorrect error when first arg is a variadic
- Fixed bug [#1036](https://github.com/squizlabs/PHP_CodeSniffer/issues/1036) : Adjacent assignments aligned analysis statement wrong
- Fixed bug [#1049](https://github.com/squizlabs/PHP_CodeSniffer/issues/1049) : Version control reports can show notices when the report width is very small
- Fixed bug [#21050](http://pear.php.net/bugs/bug.php?id=21050) : PEAR MultiLineCondition sniff suppresses errors on last condition line
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3652737/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3652737,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.6.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.6.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.6.2,2.6.2,False,False
3335945,2016-05-30T22:31:12Z,2016-05-30T22:35:18Z,2.6.1,"- The PHP-supplied T_COALESCE token has been replicated for PHP versions before 7.0
- Function return types of self, parent and callable are now tokenized as T_RETURN_TYPE
  - Thanks to Jaroslav Hanslík for the patch
- The default_standard config setting now allows multiple standards to be listed, like on the command line
  - Thanks to Michael Mayer for the patch
- Installations done via composer now only include the composer autoloader for PHP 5.3.2+ (request [#942](https://github.com/squizlabs/PHP_CodeSniffer/issues/942))
- Added a rollbackChangeset() method to the Fixer class to purposely rollback the active changeset
- Fixed bug [#940](https://github.com/squizlabs/PHP_CodeSniffer/issues/940) : Auto-fixing issue encountered with inconsistent use of braces
- Fixed bug [#943](https://github.com/squizlabs/PHP_CodeSniffer/issues/943) : Squiz.PHP.InnerFunctions.NotAllowed reported in anonymous classes
- Fixed bug [#944](https://github.com/squizlabs/PHP_CodeSniffer/issues/944) : PHP warning when running the latest phar
- Fixed bug [#951](https://github.com/squizlabs/PHP_CodeSniffer/issues/951) : InlineIfDeclaration: invalid error produced with UTF-8 string
- Fixed bug [#957](https://github.com/squizlabs/PHP_CodeSniffer/issues/957) : Operator spacing sniff errors when plus is used as part of a number
  - Thanks to Klaus Purer for the patch
- Fixed bug [#959](https://github.com/squizlabs/PHP_CodeSniffer/issues/959) : Call-time pass-by-reference false positive if there is a square bracket before the ampersand
  - Thanks to Konstantin Leboev for the patch
- Fixed bug [#962](https://github.com/squizlabs/PHP_CodeSniffer/issues/962) : Null coalescing operator (??) not detected as a token
  - Thanks to Joel Posti for the patch
- Fixed bug [#973](https://github.com/squizlabs/PHP_CodeSniffer/issues/973) : Anonymous class declaration and PSR1.Files.SideEffects.FoundWithSymbols
- Fixed bug [#974](https://github.com/squizlabs/PHP_CodeSniffer/issues/974) : Error when file ends with ""function""
- Fixed bug [#979](https://github.com/squizlabs/PHP_CodeSniffer/issues/979) : Anonymous function with return type hint is not refactored as expected
- Fixed bug [#983](https://github.com/squizlabs/PHP_CodeSniffer/issues/983) : Squiz.WhiteSpace.MemberVarSpacing.AfterComment fails to fix error when comment is not a docblock
- Fixed bug [#1010](https://github.com/squizlabs/PHP_CodeSniffer/issues/1010) : Squiz NonExectuableCode sniff does not detect boolean OR
  - Thanks to Derek Henderson for the patch
- Fixed bug [#1015](https://github.com/squizlabs/PHP_CodeSniffer/issues/1015) : The Squiz.Commenting.FunctionComment sniff doesn't allow description in @return tag
  - Thanks to Alexander Obuhovich for the patch
- Fixed bug [#1022](https://github.com/squizlabs/PHP_CodeSniffer/issues/1022) : Duplicate spaces after opening bracket error with PSR2 standard
- Fixed bug [#1025](https://github.com/squizlabs/PHP_CodeSniffer/issues/1025) : Syntax error in JS file can cause undefined index for parenthesis_closer
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3335945/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/3335945,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.6.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.6.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.6.1,2.6.1,False,False
2943278,2016-04-03T23:02:59Z,2016-04-03T23:07:58Z,2.6.0,"- Paths used when setting CLI arguments inside ruleset.xml files are now relative to the ruleset location (request [#847](https://github.com/squizlabs/PHP_CodeSniffer/issues/847))
  - This change only applies to paths within ARG tags, used to set CLI arguments
  - Previously, the paths were relative to the directory PHPCS was being run from
  - Absolute paths are still allowed and work the same way they always have
  - This change allows ruleset.xml files to be more portable
- Content passed via STDIN will now be processed even if files are specified on the command line or in a ruleset
- When passing content via STDIN, you can now specify the file path to use on the command line (request [#934](https://github.com/squizlabs/PHP_CodeSniffer/issues/934))
  - This allows sniffs that check file paths to work correctly
  - This is the same functionality provided by the phpcs_input_file line, except it is available on the command line
- Files processed with custom tokenizers will no longer be skipped if they appear minified (request [#877](https://github.com/squizlabs/PHP_CodeSniffer/issues/877))
  - If the custom tokenizer wants minified files skipped, it can set a $skipMinified member var to TRUE
  - See the included JS and CSS tokenizers for an example
- Config vars set in ruleset.xml files are now processed earlier, allowing them to be used during sniff registration
  - Among other things, this allows the installed_paths config var to be set in ruleset.xml files
  - Thanks to Pieter Frenssen for the patch
- Improved detection of regular expressions in the JS tokenizer
- Generic PHP Syntax sniff now uses PHP_BINARY (if available) to determine the path to PHP if no other path is available
  - You can still manually set php_path to use a specific binary for testing
  - Thanks to Andrew Berry for the patch
- The PHP-supplied T_POW_EQUAL token has been replicated for PHP versions before 5.6
- Added support for PHP7 use group declarations (request [#878](https://github.com/squizlabs/PHP_CodeSniffer/issues/878))
  - New tokens T_OPEN_USE_GROUP and T_CLOSE_USE_GROUP are assigned to the open and close curly braces
- Generic ScopeIndent sniff now reports errors for every line that needs the indent changed (request [#903](https://github.com/squizlabs/PHP_CodeSniffer/issues/903))
  - Previously, it ignored lines that were indented correctly in the context of their block
  - This change produces more technically accurate error messages, but is much more verbose
- The PSR2 and Squiz standards now allow multi-line default values in function declarations (request [#542](https://github.com/squizlabs/PHP_CodeSniffer/issues/542))
  - Previously, these would automatically make the function a multi-line declaration
- Squiz InlineCommentSniff now allows docblocks on require(_once) and include(_once) statements
  - Thanks to Gary Jones for the patch
- Squiz and PEAR Class and File sniffs no longer assume the first comment in a file is always a file comment
  - phpDocumentor assigns the comment to the file only if it is not followed by a structural element
  - These sniffs now follow this same rule
- Squiz ClassCommentSniff no longer checks for blank lines before class comments
  - Removes the error Squiz.Commenting.ClassComment.SpaceBefore
- Renamed Squiz.CSS.Opacity.SpacingAfterPoint to Squiz.CSS.Opacity.DecimalPrecision
  - Please update your ruleset if you are referencing this error code directly
- Fixed PHP tokenizer problem that caused an infinite loop when checking a comment with specific content
- Generic Disallow Space and Tab indent sniffs now detect and fix indents inside embedded HTML chunks (request [#882](https://github.com/squizlabs/PHP_CodeSniffer/issues/882))
- Squiz CSS IndentationSniff no longer assumes the class opening brace is at the end of a line
- Squiz FunctionCommentThrowTagSniff now ignores non-docblock comments
- Squiz ComparisonOperatorUsageSniff now allows conditions like while(true)
- PEAR FunctionCallSignatureSniff (and the Squiz and PSR2 sniffs that use it) now correctly check the first argument
  - Further fix for bug [#698](https://github.com/squizlabs/PHP_CodeSniffer/issues/698)
- Fixed bug [#791](https://github.com/squizlabs/PHP_CodeSniffer/issues/791) : codingStandardsChangeSetting settings not working with namespaces
- Fixed bug [#872](https://github.com/squizlabs/PHP_CodeSniffer/issues/872) : Incorrect detection of blank lines between CSS class names
- Fixed bug [#879](https://github.com/squizlabs/PHP_CodeSniffer/issues/879) : Generic InlineControlStructureSniff can create parse error when case/if/elseif/else have mixed brace and braceless definitions
- Fixed bug [#883](https://github.com/squizlabs/PHP_CodeSniffer/issues/883) : PSR2 is not checking for blank lines at the start and end of control structures
- Fixed bug [#884](https://github.com/squizlabs/PHP_CodeSniffer/issues/884) : Incorrect indentation notice for anonymous classes
- Fixed bug [#887](https://github.com/squizlabs/PHP_CodeSniffer/issues/887) : Using curly braces for a shared CASE/DEFAULT statement can generate an error in PSR2 SwitchDeclaration
- Fixed bug [#889](https://github.com/squizlabs/PHP_CodeSniffer/issues/889) : Closure inside catch/else/elseif causes indentation error
- Fixed bug [#890](https://github.com/squizlabs/PHP_CodeSniffer/issues/890) : Function call inside returned short array value can cause indentation error inside CASE statements
- Fixed bug [#897](https://github.com/squizlabs/PHP_CodeSniffer/issues/897) : Generic.Functions.CallTimePassByReference.NotAllowed false positive when short array syntax
- Fixed bug [#900](https://github.com/squizlabs/PHP_CodeSniffer/issues/900) : Squiz.Functions.FunctionDeclarationArgumentSpacing bug when no space between type hint and argument
- Fixed bug [#902](https://github.com/squizlabs/PHP_CodeSniffer/issues/902) : T_OR_EQUAL and T_POW_EQUAL are not seen as assignment tokens
- Fixed bug [#910](https://github.com/squizlabs/PHP_CodeSniffer/issues/910) : Unrecognized ""extends"" and indentation on anonymous classes
- Fixed bug [#915](https://github.com/squizlabs/PHP_CodeSniffer/issues/915) : JS Tokenizer generates errors when processing some decimals
- Fixed bug [#928](https://github.com/squizlabs/PHP_CodeSniffer/issues/928) : Endless loop when sniffing a PHP file with a git merge conflict inside a function
- Fixed bug [#937](https://github.com/squizlabs/PHP_CodeSniffer/issues/937) : Shebang can cause PSR1 SideEffects warning
  - Thanks to Clay Loveless for the patch
- Fixed bug [#938](https://github.com/squizlabs/PHP_CodeSniffer/issues/938) : CallTimePassByReferenceSniff ignores functions with return value
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2943278/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2943278,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.6.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.6.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.6.0,2.6.0,False,False
2456527,2016-01-19T23:43:13Z,2016-01-19T23:48:13Z,2.5.1,"- The PHP-supplied T_SPACESHIP token has been replicated for PHP versions before 7.0
- T_SPACESHIP is now correctly identified as an operator
  - Thanks to Alexander Obuhovich for the patch
- Generic LowerCaseKeyword now ensures array type hints are lowercase as well
  - Thanks to Mathieu Rochette for the patch
- Squiz ComparisonOperatorUsageSniff no longer hangs on JS FOR loops that don't use semicolons
- PHP_CodesSniffer now includes the composer autoload.php file, if there is one
  - Thanks to Klaus Purer for the patch
- Added error Squiz.Commenting.FunctionComment.ScalarTypeHintMissing for PHP7 only (request [#858](https://github.com/squizlabs/PHP_CodeSniffer/issues/858))
  - These errors were previously reported as Squiz.Commenting.FunctionComment.TypeHintMissing on PHP7
  - Disable this error message in a ruleset.xml file if your code needs to run on both PHP5 and PHP7
- The PHP 5.6 __debugInfo magic method no longer produces naming convention errors
  - Thanks to Michael Nowack for the patch
- PEAR and Squiz FunctionComment sniffs now support variadic functions (request [#841](https://github.com/squizlabs/PHP_CodeSniffer/issues/841))
- Fixed bug [#622](https://github.com/squizlabs/PHP_CodeSniffer/issues/622) : Wrong detection of Squiz.CSS.DuplicateStyleDefinition with media queries
- Fixed bug [#752](https://github.com/squizlabs/PHP_CodeSniffer/issues/752) : The missing exception error is reported in first found DocBlock
- Fixed bug [#794](https://github.com/squizlabs/PHP_CodeSniffer/issues/794) : PSR2 MultiLineFunctionDeclaration forbids comments after opening parenthesis of a multiline call
- Fixed bug [#820](https://github.com/squizlabs/PHP_CodeSniffer/issues/820) : PEAR/PSR2 FunctionCallSignature sniffs suggest wrong indent when there are multiple arguments on a line
- Fixed bug [#822](https://github.com/squizlabs/PHP_CodeSniffer/issues/822) : Ruleset hard-coded file paths are not used if not running from the same directory as the ruleset
- Fixed bug [#825](https://github.com/squizlabs/PHP_CodeSniffer/issues/825) : FunctionCallArgumentSpacing sniff complains about more than one space before comment in multi-line function call
- Fixed bug [#828](https://github.com/squizlabs/PHP_CodeSniffer/issues/828) : Null classname is tokenized as T_NULL instead of T_STRING
- Fixed bug [#829](https://github.com/squizlabs/PHP_CodeSniffer/issues/829) : Short array argument not fixed correctly when multiple function arguments are on the same line
- Fixed bug [#831](https://github.com/squizlabs/PHP_CodeSniffer/issues/831) : PHPCS freezes in an infinite loop under Windows if no standard is passed
- Fixed bug [#832](https://github.com/squizlabs/PHP_CodeSniffer/issues/832) : Tokenizer does not support context sensitive parsing
  - Thanks to Jaroslav Hanslík for the patch
- Fixed bug [#835](https://github.com/squizlabs/PHP_CodeSniffer/issues/835) : PEAR.Functions.FunctionCallSignature broken when closure uses return types
- Fixed bug [#838](https://github.com/squizlabs/PHP_CodeSniffer/issues/838) : CSS indentation fixer changes color codes
  - Thanks to Klaus Purer for the patch
- Fixed bug [#839](https://github.com/squizlabs/PHP_CodeSniffer/issues/839) : ""__()"" method is marked as not camel caps
  - Thanks to Tim Bezhashvyly for the patch
- Fixed bug [#852](https://github.com/squizlabs/PHP_CodeSniffer/issues/852) : Generic.Commenting.DocComment not finding errors when long description is omitted
- Fixed bug [#854](https://github.com/squizlabs/PHP_CodeSniffer/issues/854) : Return typehints in interfaces are not reported as T_RETURN_TYPE
  - Thanks to Jaroslav Hanslík for the patch
- Fixed bug [#855](https://github.com/squizlabs/PHP_CodeSniffer/issues/855) : Capital letter detection for multibyte strings doesn't work correctly
- Fixed bug [#857](https://github.com/squizlabs/PHP_CodeSniffer/issues/857) : PSR2.ControlStructure.SwitchDeclaration shouldn't check indent of curly brace closers
- Fixed bug [#859](https://github.com/squizlabs/PHP_CodeSniffer/issues/859) : Switch statement indention issue when returning function call with closure
- Fixed bug [#861](https://github.com/squizlabs/PHP_CodeSniffer/issues/861) : Single-line arrays and function calls can generate incorrect indentation errors
- Fixed bug [#867](https://github.com/squizlabs/PHP_CodeSniffer/issues/867) : Squiz.Strings.DoubleQuoteUsage broken for some escape codes
  - Thanks to Jack Blower for the help with the fix
- Fixed bug [#21005](http://pear.php.net/bugs/bug.php?id=21005) : Incorrect indent detection when multiple properties are initialized to arrays
- Fixed bug [#21010](http://pear.php.net/bugs/bug.php?id=21010) : Incorrect missing colon detection in CSS when first style is not on new line
- Fixed bug [#21011](http://pear.php.net/bugs/bug.php?id=21011) : Incorrect error message text when newline found after opening brace
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2456527/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2456527,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.5.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.5.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.5.1,2.5.1,False,False
2269795,2015-12-11T00:16:39Z,2015-12-11T00:19:40Z,2.5.0,"- PHPCS will now look for a phpcs.xml file in parent directories as well as the current directory (request [#626](https://github.com/squizlabs/PHP_CodeSniffer/issues/626))
- PHPCS will now use a phpcs.xml file even if files are specified on the command line
  - This file is still only used if no standard is specified on the command line
- Added support for a phpcs.xml.dist file (request [#583](https://github.com/squizlabs/PHP_CodeSniffer/issues/583))
  - If both a phpcs.xml and phpcs.xml.dist file are present, the phpcs.xml file will be used
- Added support for setting PHP ini values in ruleset.xml files (request [#560](https://github.com/squizlabs/PHP_CodeSniffer/issues/560))
  - Setting the value of the new ini tags to name=""memory_limit"" value=""32M"" is the same as -d memory_limit=32M
- Added support for one or more bootstrap files to be run before processing begins
  - Use the --bootstrap=file,file,file command line argument to include bootstrap files
  - Useful if you want to override some of the high-level settings of PHPCS or PHPCBF
  - Thanks to John Maguire for the patch
- Added additional verbose output for CSS tokenizing
- Squiz ComparisonOperatorUsageSniff now checks FOR, WHILE and DO-WHILE statements
  - Thanks to Arnout Boks for the patch
- Fixed bug [#660](https://github.com/squizlabs/PHP_CodeSniffer/issues/660) : Syntax checks can fail on Windows with PHP5.6
- Fixed bug [#784](https://github.com/squizlabs/PHP_CodeSniffer/issues/784) : $this->trait is seen as a T_TRAIT token
- Fixed bug [#786](https://github.com/squizlabs/PHP_CodeSniffer/issues/786) : Switch indent issue with short array notation
- Fixed bug [#787](https://github.com/squizlabs/PHP_CodeSniffer/issues/787) : SpacingAfterDefaultBreak confused by multi-line statements
- Fixed bug [#797](https://github.com/squizlabs/PHP_CodeSniffer/issues/797) : Parsing CSS url() value breaks further parsing
- Fixed bug [#805](https://github.com/squizlabs/PHP_CodeSniffer/issues/805) : Squiz.Commenting.FunctionComment.InvalidTypeHint on Scalar types on PHP7
- Fixed bug [#807](https://github.com/squizlabs/PHP_CodeSniffer/issues/807) : Cannot fix line endings when open PHP tag is not on the first line
- Fixed bug [#808](https://github.com/squizlabs/PHP_CodeSniffer/issues/808) : JS tokeniser incorrectly setting some function and class names to control structure tokens
- Fixed bug [#809](https://github.com/squizlabs/PHP_CodeSniffer/issues/809) : PHPCBF can break a require_once statement with a space before the open parenthesis
- Fixed bug [#813](https://github.com/squizlabs/PHP_CodeSniffer/issues/813) : PEAR FunctionCallSignature checks wrong indent when first token on line is part of a multi-line string
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2269795/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2269795,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.5.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.5.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.5.0,2.5.0,False,False
2173741,2015-11-23T21:35:21Z,2015-11-23T21:39:07Z,2.4.0,"- Added support for PHP 7 anonymous classes
  - Anonymous classes are now tokenized as T_ANON_CLASS and ignored by normal class sniffs
- Added support for PHP 7 function return type declarations
  - Return types are now tokenized as T_RETURN_TYPE
- Fixed tokenizing of the XOR operator, which was incorrectly identified as a power operator (bug [#765](https://github.com/squizlabs/PHP_CodeSniffer/issues/765))
  - The T_POWER token has been removed and replaced by the T_BITWISE_XOR token
  - The PHP-supplied T_POW token has been replicated for PHP versions before 5.6
- Traits are now tokenized in PHP versions before 5.4 to make testing easier
- Improved regular expression detection in JS files
- PEAR FunctionCallSignatureSniff now properly detects indents in more mixed HTML/PHP code blocks
- Full report now properly indents lines when newlines are found inside error messages
- Generating documentation without specifying a standard now uses the default standard instead
  - Thanks to Ken Guest for the patch
- Generic InlineControlStructureSniff now supports braceless do/while loops in JS
  - Thanks to Pieter Frenssen for the patch
- Added more guard code for function declarations with syntax errors
  - Thanks to Yun Young-jin for the patch
- Added more guard code for foreach declarations with syntax errors
  - Thanks to Johan de Ruijter for the patch
- Added more guard code for class declarations with syntax errors
- Squiz ArrayDeclarationSniff now has guard code for arrays with syntax errors
- Generic InlineControlStructureSniff now correctly fixes ELSEIF statements
- Fixed bug [#601](https://github.com/squizlabs/PHP_CodeSniffer/issues/601) : Expected type hint int[]; found array in Squiz FunctionCommentSniff
  - Thanks to Scato Eggen for the patch
- Fixed bug [#625](https://github.com/squizlabs/PHP_CodeSniffer/issues/625) : Consider working around T_HASHBANG in HHVM 3.5.x and 3.6.x
  - Thanks to Kunal Mehta for the patch
- Fixed bug [#692](https://github.com/squizlabs/PHP_CodeSniffer/issues/692) : Comment tokenizer can break when using mbstring function overloading
- Fixed bug [#694](https://github.com/squizlabs/PHP_CodeSniffer/issues/694) : Long sniff codes can cause PHP warnings in source report when showing error codes
- Fixed bug [#698](https://github.com/squizlabs/PHP_CodeSniffer/issues/698) : PSR2.Methods.FunctionCallSignature.Indent forces exact indent of ternary operator parameters
- Fixed bug [#704](https://github.com/squizlabs/PHP_CodeSniffer/issues/704) : ScopeIndent can fail when an opening parenthesis is on a line by itself
- Fixed bug [#707](https://github.com/squizlabs/PHP_CodeSniffer/issues/707) : Squiz MethodScopeSniff doesn't handle nested functions
- Fixed bug [#709](https://github.com/squizlabs/PHP_CodeSniffer/issues/709) : Squiz.Sniffs.Whitespace.ScopeClosingBraceSniff marking indented endif in mixed inline HTML blocks
- Fixed bug [#711](https://github.com/squizlabs/PHP_CodeSniffer/issues/711) : Sniffing from STDIN shows Generic.Files.LowercasedFilename.NotFound error
- Fixed bug [#714](https://github.com/squizlabs/PHP_CodeSniffer/issues/714) : Fixes suppression of errors using docblocks
  - Thanks to Andrzej Karmazyn for the patch
- Fixed bug [#716](https://github.com/squizlabs/PHP_CodeSniffer/issues/716) : JSON report is invalid when messages contain newlines or tabs
  - Thanks to Pieter Frenssen for the patch
- Fixed bug [#723](https://github.com/squizlabs/PHP_CodeSniffer/issues/723) : ScopeIndent can fail when multiple array closers are on the same line
- Fixed bug [#730](https://github.com/squizlabs/PHP_CodeSniffer/issues/730) : ScopeIndent can fail when a short array opening square bracket is on a line by itself
- Fixed bug [#732](https://github.com/squizlabs/PHP_CodeSniffer/issues/732) : PHP Notice if @package name is made up of all invalid characters
  - Adds new error code PEAR.Commenting.FileComment.InvalidPackageValue
- Fixed bug [#748](https://github.com/squizlabs/PHP_CodeSniffer/issues/748) : Auto fix for Squiz.Commenting.BlockComment.WrongEnd is incorrect
  - Thanks to J.D. Grimes for the patch
- Fixed bug [#753](https://github.com/squizlabs/PHP_CodeSniffer/issues/753) : PSR2 standard shouldn't require space after USE block when next code is a closing tag
- Fixed bug [#768](https://github.com/squizlabs/PHP_CodeSniffer/issues/768) : PEAR FunctionCallSignature sniff forbids comments after opening parenthesis of a multiline call
- Fixed bug [#769](https://github.com/squizlabs/PHP_CodeSniffer/issues/769) : Incorrect detection of variable reference operator when used with short array syntax
  - Thanks to Klaus Purer for the patch
- Fixed bug [#772](https://github.com/squizlabs/PHP_CodeSniffer/issues/772) : Syntax error when using PHPCBF on alternative style foreach loops
- Fixed bug [#773](https://github.com/squizlabs/PHP_CodeSniffer/issues/773) : Syntax error when stripping trailing PHP close tag and previous statement has no semicolon
- Fixed bug [#778](https://github.com/squizlabs/PHP_CodeSniffer/issues/778) : PHPCBF creates invalid PHP for inline FOREACH containing multiple control structures
- Fixed bug [#781](https://github.com/squizlabs/PHP_CodeSniffer/issues/781) : Incorrect checking for PHP7 return types on multi-line function declartions
- Fixed bug [#782](https://github.com/squizlabs/PHP_CodeSniffer/issues/782) : Conditional function declarations cause fixing conflicts in Squiz standard
  - Squiz.ControlStructures.ControlSignature no longer enforces a single newline after open brace
  - Squiz.WhiteSpace.ControlStructureSpacing can be used to checl spacing at the start/end of control structures
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2173741/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/2173741,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.4.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.4.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.4.0,2.4.0,False,False
1785411,2015-09-09T00:38:23Z,2015-09-09T00:40:20Z,2.3.4,"- JSON report format now includes the fixable status for each error message and the total number of fixable errors
- Added more guard code for function declarations with syntax errors
- Added tokenizer support for the PHP declare construct
  - Thanks to Andy Blyler for the patch
- Generic UnnecessaryStringConcatSniff can now allow strings concatenated over multiple lines
  - Set the allowMultiline property to TRUE (default is FALSE) in your ruleset.xml file to enable this
  - By default, concat used only for getting around line length limits still generates an error
  - Thanks to Stefan Lenselink for the contribution
- Invalid byte sequences no longer throw iconv_strlen() errors (request [#639](https://github.com/squizlabs/PHP_CodeSniffer/issues/639))
  - Thanks to Willem Stuursma for the patch
- Generic TodoSniff and FixmeSniff are now better at processing strings with invalid characters
- PEAR FunctionCallSignatureSniff now ignores indentation of inline HTML content
- Squiz ControlSignatureSniff now supports control structures with only inline HTML content
- Fixed bug [#636](https://github.com/squizlabs/PHP_CodeSniffer/issues/636) : Some class names cause CSS tokenizer to hang
- Fixed bug [#638](https://github.com/squizlabs/PHP_CodeSniffer/issues/638) : VCS blame reports output error content from the blame commands for files not under VC
- Fixed bug [#642](https://github.com/squizlabs/PHP_CodeSniffer/issues/642) : Method params incorrectly detected when default value uses short array syntax
  - Thanks to Josh Davis for the patch
- Fixed bug [#644](https://github.com/squizlabs/PHP_CodeSniffer/issues/644) : PEAR ScopeClosingBrace sniff does not work with mixed HTML/PHP
- Fixed bug [#645](https://github.com/squizlabs/PHP_CodeSniffer/issues/645) : FunctionSignature and ScopeIndent sniffs don't detect indents correctly when PHP open tag is not on a line by itself
- Fixed bug [#648](https://github.com/squizlabs/PHP_CodeSniffer/issues/648) : Namespace not tokenized correctly when followed by multiple use statements
- Fixed bug [#654](https://github.com/squizlabs/PHP_CodeSniffer/issues/654) : Comments affect indent check for BSDAllman brace style
- Fixed bug [#658](https://github.com/squizlabs/PHP_CodeSniffer/issues/658) : Squiz.Functions.FunctionDeclarationSpacing error for multi-line declarations with required spaces greater than zero
  - Thanks to J.D. Grimes for the patch
- Fixed bug [#663](https://github.com/squizlabs/PHP_CodeSniffer/issues/663) : No space after class name generates: Class name """" is not in camel caps format
- Fixed bug [#667](https://github.com/squizlabs/PHP_CodeSniffer/issues/667) : Scope indent check can go into infinite loop due to some parse errors
- Fixed bug [#670](https://github.com/squizlabs/PHP_CodeSniffer/issues/670) : Endless loop in PSR1 SideEffects sniffer if no semicolon after last statement
  - Thanks to Thomas Jarosch for the patch
- Fixed bug [#672](https://github.com/squizlabs/PHP_CodeSniffer/issues/672) : Call-time pass-by-reference false positive
- Fixed bug [#683](https://github.com/squizlabs/PHP_CodeSniffer/issues/683) : Comments are incorrectly reported by PSR2.ControlStructures.SwitchDeclaration sniff
- Fixed bug [#687](https://github.com/squizlabs/PHP_CodeSniffer/issues/687) : ScopeIndent does not check indent correctly for method prefixes like public and abstract
- Fixed bug [#689](https://github.com/squizlabs/PHP_CodeSniffer/issues/689) : False error on some comments after class closing brace
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1785411/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1785411,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.3.4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.3.4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.3.4,2.3.4,False,False
1453629,2015-06-24T03:27:44Z,2015-06-24T03:32:05Z,2.3.3,"- Improved the performance of the CSS tokenizer, especially on very large CSS files (thousands of lines)
  - Thanks to Klaus Purer for the patch
- Defined tokens for lower PHP versions are now phpcs-specific strings instead of ints
  - Stops conflict with other projects, like PHP_CodeCoverage
- Added more guard code for syntax errors to various sniffs
- Improved support for older HHVM versions
  - Thanks to Kunal Mehta for the patch
- Squiz ValidLogicalOperatorsSniff now ignores XOR as type casting is different when using the ^ operator (request [#567](https://github.com/squizlabs/PHP_CodeSniffer/issues/567))
- Squiz CommentedOutCodeSniff is now better at ignoring URLs inside comments
- Squiz ControlSignatureSniff is now better at checking embedded PHP code
- Squiz ScopeClosingBraceSniff is now better at checking embedded PHP code
- Fixed bug [#584](https://github.com/squizlabs/PHP_CodeSniffer/issues/584) : Squiz.Arrays.ArrayDeclaration sniff gives incorrect NoComma error for multiline string values
- Fixed bug [#589](https://github.com/squizlabs/PHP_CodeSniffer/issues/589) : PEAR.Functions.FunctionCallSignature sniff not checking all function calls
- Fixed bug [#592](https://github.com/squizlabs/PHP_CodeSniffer/issues/592) : USE statement tokenising can sometimes result in mismatched scopes
- Fixed bug [#594](https://github.com/squizlabs/PHP_CodeSniffer/issues/594) : Tokenizer issue on closure that returns by reference
- Fixed bug [#595](https://github.com/squizlabs/PHP_CodeSniffer/issues/595) : Colons in CSS selectors within media queries throw false positives
  - Thanks to Klaus Purer for the patch
- Fixed bug [#598](https://github.com/squizlabs/PHP_CodeSniffer/issues/598) : PHPCBF can break function/use closure brace placement
- Fixed bug [#603](https://github.com/squizlabs/PHP_CodeSniffer/issues/603) : Squiz ControlSignatureSniff hard-codes opener type while fixing
- Fixed bug [#605](https://github.com/squizlabs/PHP_CodeSniffer/issues/605) : Auto report-width specified in ruleset.xml ignored
- Fixed bug [#611](https://github.com/squizlabs/PHP_CodeSniffer/issues/611) : Invalid numeric literal on CSS files under PHP7
- Fixed bug [#612](https://github.com/squizlabs/PHP_CodeSniffer/issues/612) : Multi-file diff generating incorrectly if files do not end with EOL char
- Fixed bug [#615](https://github.com/squizlabs/PHP_CodeSniffer/issues/615) : Squiz OperatorBracketSniff incorrectly reports and fixes operations using self::
- Fixed bug [#616](https://github.com/squizlabs/PHP_CodeSniffer/issues/616) : Squiz DisallowComparisonAssignmentSniff inconsistent errors with inline IF statements
- Fixed bug [#617](https://github.com/squizlabs/PHP_CodeSniffer/issues/617) : Space after switch keyword in PSR-2 is not being enforced
- Fixed bug [#621](https://github.com/squizlabs/PHP_CodeSniffer/issues/621) : PSR2 SwitchDeclaration sniff doesn't detect, or correctly fix, case body on same line as statement
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1453629/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1453629,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.3.3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.3.3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.3.3,2.3.3,False,False
1229988,2015-04-28T23:37:43Z,2015-04-28T23:40:18Z,2.3.2,"- The error message for PSR2.ControlStructures.SwitchDeclaration.WrongOpenercase is now clearer (request [#579](https://github.com/squizlabs/PHP_CodeSniffer/issues/579))
- Fixed bug [#545](https://github.com/squizlabs/PHP_CodeSniffer/issues/545) : Long list of CASE statements can cause tokenizer to reach a depth limit
- Fixed bug [#565](https://github.com/squizlabs/PHP_CodeSniffer/issues/565) : Squiz.WhiteSpace.OperatorSpacing reports negative number in short array
  - Thanks to Vašek Purchart for the patch
  - Same fix also applied to Squiz.Formatting.OperatorBracket
- Fixed bug [#569](https://github.com/squizlabs/PHP_CodeSniffer/issues/569) : Generic ScopeIndentSniff throws PHP notices in JS files
- Fixed bug [#570](https://github.com/squizlabs/PHP_CodeSniffer/issues/570) : Phar class fatals in PHP less than 5.3
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1229988/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1229988,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.3.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.3.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.3.2,2.3.2,False,False
1204599,2015-04-23T03:47:03Z,2015-04-23T03:49:50Z,2.3.1,"- PHPCS can now exit with 0 even if errors are found
  - Set the ignore_errors_on_exit config variable to 1 to set this behaviour
  - Use with the ignore_warnings_on_exit config variable to never return a non-zero exit code
- Added Generic DisallowLongArraySyntaxSniff to enforce the use of the PHP short array syntax (request [#483](https://github.com/squizlabs/PHP_CodeSniffer/issues/483))
  - Thanks to Xaver Loppenstedt for helping with tests
- Added Generic DisallowShortArraySyntaxSniff to ban the use of the PHP short array syntax (request [#483](https://github.com/squizlabs/PHP_CodeSniffer/issues/483))
  - Thanks to Xaver Loppenstedt for helping with tests
- Generic ScopeIndentSniff no longer does exact checking for content inside parenthesis (request [#528](https://github.com/squizlabs/PHP_CodeSniffer/issues/528))
  - Only applies to custom coding standards that set the ""exact"" flag to TRUE
- Squiz ConcatenationSpacingSniff now has a setting to ignore newline characters around operators (request [#511](https://github.com/squizlabs/PHP_CodeSniffer/issues/511))
  - Default remains FALSE, so newlines are not allowed
  - Override the ""ignoreNewlines"" setting in a ruleset.xml file to change
- Squiz InlineCommentSniff no longer checks the last char of a comment if the first char is not a letter (request [#505](https://github.com/squizlabs/PHP_CodeSniffer/issues/505))
- The Squiz standard has increased the max padding for statement alignment from 12 to 20
- Fixed bug [#479](https://github.com/squizlabs/PHP_CodeSniffer/issues/479) : Yielded values are not recognised as returned values in Squiz FunctionComment sniff
- Fixed bug [#512](https://github.com/squizlabs/PHP_CodeSniffer/issues/512) : Endless loop whilst parsing mixture of control structure styles
- Fixed bug [#515](https://github.com/squizlabs/PHP_CodeSniffer/issues/515) : Spaces in JS block incorrectly flagged as indentation error
- Fixed bug [#523](https://github.com/squizlabs/PHP_CodeSniffer/issues/523) : Generic ScopeIndent errors for IF in FINALLY
- Fixed bug [#527](https://github.com/squizlabs/PHP_CodeSniffer/issues/527) : Closure inside IF statement is not tokenized correctly
- Fixed bug [#529](https://github.com/squizlabs/PHP_CodeSniffer/issues/529) : Squiz.Strings.EchoedStrings gives false positive when echo'ing using an inline condition
- Fixed bug [#537](https://github.com/squizlabs/PHP_CodeSniffer/issues/537) : Using --config-set is breaking phpcs.phar
- Fixed bug [#543](https://github.com/squizlabs/PHP_CodeSniffer/issues/543) : SWITCH with closure in condition generates inline control structure error
- Fixed bug [#551](https://github.com/squizlabs/PHP_CodeSniffer/issues/551) : Multiple catch blocks not checked in Squiz.ControlStructures.ControlSignature sniff
- Fixed bug [#554](https://github.com/squizlabs/PHP_CodeSniffer/issues/554) : ScopeIndentSniff causes errors when encountering an unmatched parenthesis
- Fixed bug [#558](https://github.com/squizlabs/PHP_CodeSniffer/issues/558) : PHPCBF adds brace for ELSE IF split over multiple lines
- Fixed bug [#564](https://github.com/squizlabs/PHP_CodeSniffer/issues/564) : Generic MultipleStatementAlignment sniff reports incorrect errors for multiple assignments on a single line
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1204599/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1204599,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.3.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.3.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.3.1,2.3.1,False,False
1010346,2015-03-04T02:11:09Z,2015-03-04T02:13:23Z,2.3.0,"- The existence of the main config file is now cached to reduce is_file() calls when it doesn't exist (request [#486](https://github.com/squizlabs/PHP_CodeSniffer/issues/486))
- Abstract classes inside the Sniffs directory are now ignored even if they are named [Name]Sniff.php (request [#476](https://github.com/squizlabs/PHP_CodeSniffer/issues/476))
  - Thanks to David Vernet for the patch
- PEAR and Squiz FileComment sniffs no longer have @ in their error codes
  - e.g., PEAR.Commenting.FileComment.Duplicate@categoryTag becomes PEAR.Commenting.FileComment.DuplicateCategoryTag
  - e.g., Squiz.Commenting.FileComment.Missing@categoryTag becomes Squiz.Commenting.FileComment.MissingCategoryTag
- PEAR MultiLineConditionSniff now allows comment lines inside multi-line IF statement conditions
  - Thanks to Klaus Purer for the patch
- Generic ForbiddenFunctionsSniff now supports setting null replacements in ruleset files (request [#263](https://github.com/squizlabs/PHP_CodeSniffer/issues/263))
- Generic opening function brace sniffs now support checking of closures
  - Set the checkClosures property to TRUE (default is FALSE) in your ruleset.xml file to enable this
  - Can also set the checkFunctions property to FALSE (default is TRUE) in your ruleset.xml file to only check closures
  - Affects OpeningFunctionBraceBsdAllmanSniff and OpeningFunctionBraceKernighanRitchieSniff
- Generic OpeningFunctionBraceKernighanRitchieSniff can now fix all the errors it finds
- Generic OpeningFunctionBraceKernighanRitchieSniff now allows empty functions with braces next to each other
- Generic OpeningFunctionBraceBsdAllmanSniff now allows empty functions with braces next to each other
- Improved auto report width for the ""full"" report
- Improved conflict detection during auto fixing
- Generic ScopeIndentSniff is no longer confused by empty closures
- Squiz ControlSignatureSniff now always ignores comments (fixes bug [#490](https://github.com/squizlabs/PHP_CodeSniffer/issues/490))
  - Include the Squiz.Commenting.PostStatementComment sniff in your ruleset.xml to ban these comments again
- Squiz OperatorSpacingSniff no longer throws errors for code in the form ($foo || -1 === $bar)
- Fixed errors tokenizing T_ELSEIF tokens on HHVM 3.5
- Squiz ArrayDeclarationSniff is no longer tricked by comments after array values
- PEAR IncludingFileSniff no longer produces invalid code when removing parenthesis from require/include statements
- Fixed bug [#415](https://github.com/squizlabs/PHP_CodeSniffer/issues/415) : The @codingStandardsIgnoreStart has no effect during fixing
- Fixed bug [#432](https://github.com/squizlabs/PHP_CodeSniffer/issues/432) : Properties of custom sniffs cannot be configured
- Fixed bug [#453](https://github.com/squizlabs/PHP_CodeSniffer/issues/453) : PSR2 standard does not allow closing tag for mixed PHP/HTML files
- Fixed bug [#457](https://github.com/squizlabs/PHP_CodeSniffer/issues/457) : FunctionCallSignature sniffs do not support here/nowdoc syntax and can cause syntax error when fixing
- Fixed bug [#466](https://github.com/squizlabs/PHP_CodeSniffer/issues/466) : PropertyLabelSpacing JS fixer issue when there is no space after colon
- Fixed bug [#473](https://github.com/squizlabs/PHP_CodeSniffer/issues/473) : Writing a report for an empty folder to existing file includes the existing contents
- Fixed bug [#485](https://github.com/squizlabs/PHP_CodeSniffer/issues/485) : PHP notice in Squiz.Commenting.FunctionComment when checking malformed @throws comment
- Fixed bug [#491](https://github.com/squizlabs/PHP_CodeSniffer/issues/491) : Generic InlineControlStructureSniff can correct with missing semicolon
  - Thanks to Jesse Donat for the patch
- Fixed bug [#492](https://github.com/squizlabs/PHP_CodeSniffer/issues/492) : Use statements don't increase the scope indent
- Fixed bug [#493](https://github.com/squizlabs/PHP_CodeSniffer/issues/493) : PSR1_Sniffs_Methods_CamelCapsMethodNameSniff false positives for some magic method detection
  - Thanks to Andreas Möller for the patch
- Fixed bug [#496](https://github.com/squizlabs/PHP_CodeSniffer/issues/496) : Closures in PSR2 are not checked for a space after the function keyword
- Fixed bug [#497](https://github.com/squizlabs/PHP_CodeSniffer/issues/497) : Generic InlineControlStructureSniff does not support alternative SWITCH syntax
- Fixed bug [#500](https://github.com/squizlabs/PHP_CodeSniffer/issues/500) : Functions not supported as values in Squiz ArrayDeclaration sniff
- Fixed bug [#501](https://github.com/squizlabs/PHP_CodeSniffer/issues/501) : ScopeClosingBrace and ScopeIndent conflict with closures used as array values
  - Generic ScopeIndentSniff may now report fewer errors for closures, but perform the same fixes
- Fixed bug [#502](https://github.com/squizlabs/PHP_CodeSniffer/issues/502) : PSR1 SideEffectsSniff sees declare() statements as side effects
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1010346/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1010346,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.3.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.3.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.3.0,2.3.0,False,False
872887,2015-01-21T22:51:46Z,2015-01-21T22:56:06Z,2.2.0,"- Added (hopefully) tastefully used colors to report and progress output for the phpcs command
  - Use the --colors command line argument to use colors in output
  - Use the command ""phpcs --config-set colors true"" to turn colors on by default
  - Use the --no-colors command line argument to turn colors off when the config value is set
- Added support for using the full terminal width for report output
  - Use the --report-width=auto command line argument to auto-size the reports
  - Use the command ""phpcs --config-set report_width auto"" to use auto-sizing by default
- Reports will now size to fit inside the report width setting instead of always using padding to fill the space
- If no files or standards are specified, PHPCS will now look for a phpcs.xml file in the current directory
  - This file has the same format as a standard ruleset.xml file
  - The phpcs.xml file should specify (at least) files to process and a standard/sniffs to use
  - Useful for running the phpcs and phpcbf commands without any arguments at the top of a repository
- Default file paths can now be specified in a ruleset.xml file using the ""file"" tag
  - File paths are only processed if no files were specified on the command line
- Extensions specified on the CLI are now merged with those set in ruleset.xml files
  - Previously, the ruleset.xml file setting replaced the CLI setting completely
- Squiz coding standard now requires lowercase PHP constants (true, false and null)
  - Removed Squiz.NamingConventions.ConstantCase sniff as the rule is now consistent across PHP and JS files
- Squiz FunctionOpeningBraceSpaceSniff no longer does additional checks for JS functions
  - PHP and JS functions and closures are now treated the same way
- Squiz MultiLineFunctionDeclarationSniff now supports JS files
- Interactive mode no longer breaks if you also specify a report type on the command line
- PEAR InlineCommentSniff now fixes the Perl-style comments that it finds (request [#375](https://github.com/squizlabs/PHP_CodeSniffer/issues/375))
- PSR2 standard no longer fixes the placement of docblock open tags as comments are excluded from this standard
- PSR2 standard now sets a default tab width of 4 spaces
- Generic DocCommentSniff now only disallows lowercase letters at the start of a long/short comment (request [#377](https://github.com/squizlabs/PHP_CodeSniffer/issues/377))
  - All non-letter characters are now allowed, including markdown special characters and numbers
- Generic DisallowMultipleStatementsSniff now allows multiple open/close tags on the same line (request [#423](https://github.com/squizlabs/PHP_CodeSniffer/issues/423))
- Generic CharacterBeforePHPOpeningTagSniff now only checks the first PHP tag it finds (request [#423](https://github.com/squizlabs/PHP_CodeSniffer/issues/423))
- Generic CharacterBeforePHPOpeningTagSniff now allows a shebang line at the start of the file (request [#20481](http://pear.php.net/bugs/bug.php?id=20481))
- Generic InlineHTMLUnitTest now allows a shebang line at the start of the file (request [#20481](http://pear.php.net/bugs/bug.php?id=20481))
- PEAR ObjectOperatorIndentSniff now only checks object operators at the start of a line
- PEAR FileComment and ClassComment sniffs no longer have @ in their error codes
  - E.g., PEAR.Commenting.FileComment.Missing@categoryTag becomes PEAR.Commenting.FileComment.MissingCategoryTag
  - Thanks to Grzegorz Rygielski for the patch
- Squiz ControlStructureSpacingSniff no longer enforces a blank line before CATCH statements
- Squiz FunctionCommentSniff now fixes the return type in the @return tag (request [#392](https://github.com/squizlabs/PHP_CodeSniffer/issues/392))
- Squiz BlockCommentSniff now only disallows lowercase letters at the start of the comment
- Squiz InlineCommentSniff now only disallows lowercase letters at the start of the comment
- Squiz OperatorSpacingSniff now has a setting to ignore newline characters around operators (request [#348](https://github.com/squizlabs/PHP_CodeSniffer/issues/348))
  - Default remains FALSE, so newlines are not allowed
  - Override the ""ignoreNewlines"" setting in a ruleset.xml file to change
- PSR2 ControlStructureSpacingSniff now checks for, and fixes, newlines after the opening parenthesis
- Added a markdown document generator (--generator=markdown to use)
  - Thanks to Stefano Kowalke for the contribution
- Fixed bug [#379](https://github.com/squizlabs/PHP_CodeSniffer/issues/379) : Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast incorrectly detects comments
- Fixed bug [#382](https://github.com/squizlabs/PHP_CodeSniffer/issues/382) : JS tokenizer incorrect for inline conditionally created immediately invoked anon function
- Fixed bug [#383](https://github.com/squizlabs/PHP_CodeSniffer/issues/383) : Squiz.Arrays.ArrayDeclaration.ValueNoNewline incorrectly detects nested arrays
- Fixed bug [#386](https://github.com/squizlabs/PHP_CodeSniffer/issues/386) : Undefined offset in Squiz.FunctionComment sniff when param has no comment
- Fixed bug [#390](https://github.com/squizlabs/PHP_CodeSniffer/issues/390) : Indentation of non-control structures isn't adjusted when containing structure is fixed
- Fixed bug [#400](https://github.com/squizlabs/PHP_CodeSniffer/issues/400) : InlineControlStructureSniff fails to fix when statement has no semicolon
- Fixed bug [#401](https://github.com/squizlabs/PHP_CodeSniffer/issues/401) : PHPCBF no-patch option shows an error when there are no fixable violations in a file
- Fixed bug [#405](https://github.com/squizlabs/PHP_CodeSniffer/issues/405) : The ""Squiz.WhiteSpace.FunctionSpacing"" sniff removes class ""}"" during fixing
- Fixed bug [#407](https://github.com/squizlabs/PHP_CodeSniffer/issues/407) : PEAR.ControlStructures.MultiLineCondition doesn't account for comments at the end of lines
- Fixed bug [#410](https://github.com/squizlabs/PHP_CodeSniffer/issues/410) : The ""Squiz.WhiteSpace.MemberVarSpacing"" not respecting ""var""
- Fixed bug [#411](https://github.com/squizlabs/PHP_CodeSniffer/issues/411) : Generic.WhiteSpace.ScopeIndent.Incorrect - false positive with multiple arrays in argument list
- Fixed bug [#412](https://github.com/squizlabs/PHP_CodeSniffer/issues/412) : PSR2 multi-line detection doesn't work for inline IF and string concats
- Fixed bug [#414](https://github.com/squizlabs/PHP_CodeSniffer/issues/414) : Squiz.WhiteSpace.MemberVarSpacing - inconsistent checking of member vars with comment
- Fixed bug [#433](https://github.com/squizlabs/PHP_CodeSniffer/issues/433) : Wrong detection of Squiz.Arrays.ArrayDeclaration.KeyNotAligned when key contains space
- Fixed bug [#434](https://github.com/squizlabs/PHP_CodeSniffer/issues/434) : False positive for spacing around ""=>"" in inline array within foreach
- Fixed bug [#452](https://github.com/squizlabs/PHP_CodeSniffer/issues/452) : Ruleset exclude-pattern for specific sniff code ignored when using CLI --ignore option
- Fixed bug [#20482](http://pear.php.net/bugs/bug.php?id=20482) : Scope indent sniff can get into infinite loop when processing a parse error
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/872887/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/872887,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.2.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.2.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.2.0,2.2.0,False,False
792918,2014-12-18T02:48:47Z,2014-12-18T02:51:34Z,2.1.0,"- Time and memory output is now shown if progress information is also shown (request [#335](https://github.com/squizlabs/PHP_CodeSniffer/issues/335))
- A tilde can now be used to reference a user's home directory in a path to a standard (request [#353](https://github.com/squizlabs/PHP_CodeSniffer/issues/353))
- Added PHP_CodeSniffer_File::findStartOfStatement() to find the first non-whitespace token in a statement
  - Possible alternative for code using PHP_CodeSniffer_File::findPrevious() with the local flag set
- Added PHP_CodeSniffer_File::findEndOfStatement() to find the last non-whitespace token in a statement
  - Possible alternative for code using PHP_CodeSniffer_File::findNext() with the local flag set
- Generic opening function brace sniff now ensure the opening brace is the last content on the line
  - Affects OpeningFunctionBraceBsdAllmanSniff and OpeningFunctionBraceKernighanRitchieSniff
  - Also enforced in PEAR FunctionDeclarationSniff and Squiz MultiLineFunctionDeclarationSniff
- Generic DisallowTabIndentSniff now replaces tabs everywhere it finds them, except in strings and here/now docs
- Generic EmptyStatementSniff error codes now contain the type of empty statement detected (request [#314](https://github.com/squizlabs/PHP_CodeSniffer/issues/314))
  - All messages generated by this sniff are now errors (empty CATCH was previously a warning)
  - Message code Generic.CodeAnalysis.EmptyStatement.NotAllowed has been removed
  - Message code Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning has been removed
  - New message codes have the format Generic.CodeAnalysis.EmptyStatement.Detected[TYPE]
  - Example code is Generic.CodeAnalysis.EmptyStatement.DetectedCATCH
  - You can now use a custom ruleset to change messages to warnings and to exclude them
- PEAR and Squiz FunctionCommentSniffs no longer ban @return tags for constructors and destructors
  - Removed message PEAR.Commenting.FunctionComment.ReturnNotRequired
  - Removed message Squiz.Commenting.FunctionComment.ReturnNotRequired
  - Change initiated by request [#324](https://github.com/squizlabs/PHP_CodeSniffer/issues/324) and request [#369](https://github.com/squizlabs/PHP_CodeSniffer/issues/369)
- Squiz EmptyStatementSniff has been removed
  - Squiz standard now includes Generic EmptyStatementSniff and turns off the empty CATCH error
- Squiz ControlSignatureSniff fixes now retain comments between the closing parenthesis and open brace
- Squiz SuperfluousWhitespaceSniff now checks for extra blank lines inside closures
  - Thanks to Sertan Danis for the patch
- Squiz ArrayDeclarationSniff now skips function calls while checking multi-line arrays
- Fixed bug [#337](https://github.com/squizlabs/PHP_CodeSniffer/issues/337) : False positive with anonymous functions in Generic_Sniffs_WhiteSpace_ScopeIndentSniff
- Fixed bug [#339](https://github.com/squizlabs/PHP_CodeSniffer/issues/339) : reformatting brace location can result in broken code
- Fixed bug [#342](https://github.com/squizlabs/PHP_CodeSniffer/issues/342) : Nested ternary operators not tokenized correctly
- Fixed bug [#345](https://github.com/squizlabs/PHP_CodeSniffer/issues/345) : Javascript regex not tokenized when inside array
- Fixed bug [#346](https://github.com/squizlabs/PHP_CodeSniffer/issues/346) : PHP path can't be determined in some cases in ""phpcs.bat"" (on Windows XP)
- Fixed bug [#358](https://github.com/squizlabs/PHP_CodeSniffer/issues/358) : False positives for Generic_Sniffs_WhiteSpace_ScopeIndentSniff
- Fixed bug [#361](https://github.com/squizlabs/PHP_CodeSniffer/issues/361) : Sniff-specific exclude patterns don't work for Windows
- Fixed bug [#364](https://github.com/squizlabs/PHP_CodeSniffer/issues/364) : Don't interpret ""use function"" as declaration
- Fixed bug [#366](https://github.com/squizlabs/PHP_CodeSniffer/issues/366) : phpcbf with PSR2 errors on control structure alternative syntax
- Fixed bug [#367](https://github.com/squizlabs/PHP_CodeSniffer/issues/367) : Nested Anonymous Functions Causing False Negative
- Fixed bug [#371](https://github.com/squizlabs/PHP_CodeSniffer/issues/371) : Shorthand binary cast causes tokenizer errors
  - New token T_BINARY_CAST added for the b""string"" cast format (the 'b' is the T_BINARY_CAST token)
- Fixed bug [#372](https://github.com/squizlabs/PHP_CodeSniffer/issues/372) : phpcbf parse problem, wrong brace placement for inline IF
- Fixed bug [#373](https://github.com/squizlabs/PHP_CodeSniffer/issues/373) : Double quote usage fix removing too many double quotes
- Fixed bug [#20196](http://pear.php.net/bugs/bug.php?id=20196) : 1.5.2 breaks scope_closer position
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/792918/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/792918,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.1.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.1.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.1.0,2.1.0,False,False
757574,2014-12-05T02:48:39Z,2014-12-05T02:50:21Z,2.0.0,"- JS tokenizer now sets functions as T_CLOSUREs if the function is anonymous
- JS tokenizer now sets all objects to T_OBJECT
  - Object end braces are set to a new token T_CLOSE_OBJECT
  - T_OBJECT tokens no longer act like scopes; i.e., they have no condition/opener/closer
  - T_PROPERTY tokens no longer act like scopes; i.e., they have no condition/opener/closer
  - T_OBJECT tokens have a bracket_closer instead, which can be used to find the ending
  - T_CLOSE_OBJECT tokens have a bracket_opener
- Improved regular expression detection in the JS tokenizer
- You can now get PHP_CodeSniffer to ignore a single line by putting @codingStandardsIgnoreLine in a comment
  - When the comment is found, the comment line and the following line will be ignored
  - Thanks to Andy Bulford for the contribution
- PHPCBF now prints output when it is changing into directories
- Improved conflict detection during auto fixing
- The -vvv command line argument will now output the current file content for each loop during fixing
- Generic ScopeIndentSniff now checks that open/close PHP tags are aligned to the correct column
- PEAR FunctionCallSignatureSniff now checks indent of closing parenthesis even if it is not on a line by itself
- PEAR FunctionCallSignatureSniff now supports JS files
- PEAR MultiLineConditionSniff now supports JS files
- Squiz DocCommentAlignmentSniff now supports JS files
- Fixed a problem correcting the closing brace line in Squiz ArrayDeclarationSniff
- Fixed a problem auto-fixing the Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose error
- Squiz EmbeddedPhpSniff no longer reports incorrect alignment of tags when they are not on new lines
- Squiz EmbeddedPhpSniff now aligns open tags correctly when moving them onto a new line
- Improved fixing of arrays with multiple values in Squiz ArrayDeclarationSniff
- Improved detection of function comments in Squiz FunctionCommentSpacingSniff
- Improved fixing of lines after cases statements in Squiz SwitchDeclarationSniff
- Fixed bug [#311](https://github.com/squizlabs/PHP_CodeSniffer/issues/311) : Suppression of function prototype breaks checking of lines within function
- Fixed bug [#320](https://github.com/squizlabs/PHP_CodeSniffer/issues/320) : Code sniffer identation issue
- Fixed bug [#333](https://github.com/squizlabs/PHP_CodeSniffer/issues/333) : Nested ternary operators causing problems
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/757574/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/757574,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0,2.0.0,False,False
757084,2014-12-04T22:37:38Z,2014-12-04T22:38:38Z,1.5.6,"- JS tokenizer now detects xor statements correctly
- The --config-show command now pretty-prints the config values
  - Thanks to Ken Guest for the patch
- Setting and removing config values now catches exceptions if the config file is not writable
  - Thanks to Ken Guest for the patch
- Setting and removing config values now prints a message to confirm the action and show old values
- You can now get PHP_CodeSniffer to ignore a single line by putting @codingStandardsIgnoreLine in a comment
  - When the comment is found, the comment line and the following line will be ignored
  - Thanks to Andy Bulford for the contribution
- Generic ConstructorNameSniff no longer errors for PHP4 style constructors when __construct() is present
  - Thanks to Thibaud Fabre for the patch
- Fixed bug [#280](https://github.com/squizlabs/PHP_CodeSniffer/issues/280) : The --config-show option generates error when there is no config file
- Fixed bug [#306](https://github.com/squizlabs/PHP_CodeSniffer/issues/306) : File containing only a namespace declaration raises undefined index notice
- Fixed bug [#308](https://github.com/squizlabs/PHP_CodeSniffer/issues/308) : Squiz InlineIfDeclarationSniff fails on ternary operators inside closure
- Fixed bug [#310](https://github.com/squizlabs/PHP_CodeSniffer/issues/310) : Variadics not recognized by tokenizer
- Fixed bug [#311](https://github.com/squizlabs/PHP_CodeSniffer/issues/311) : Suppression of function prototype breaks checking of lines within function
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/757084/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/757084,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.6,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.6,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.6,1.5.6,False,False
684504,2014-11-06T21:20:39Z,2014-11-06T21:21:49Z,2.0.0RC4,"- JS tokenizer now detects xor statements correctly
- Improved detection of properties and objects in the JS tokenizer
- Generic ScopeIndentSniff can now fix indents using tabs instead of spaces
  - Set the tabIndent property to TRUE in your ruleset.xml file to enable this
  - It is important to also set a tab-width setting, either in the ruleset or on the command line, for accuracy
- Generic ScopeIndentSniff now checks and auto-fixes JS files
- Generic DisallowSpaceIndentSniff is now able to replace space indents with tab indents during fixing
- Support for phpcs-only and phpcbf-only attributes has been added to all ruleset.xml elements
  - Allows parts of the ruleset to only apply when using a specific tool
  - Useful for doing things like excluding indent fixes but still reporting indent errors
- Unit tests can now set command line arguments during a test run
  - Override getCliValues() and pass an array of CLI arguments for each file being tested
- File-wide sniff properties can now be set using T_INLINE_HTML content during unit test runs
  - Sniffs that start checking at the open tag can only, normally, have properties set using a ruleset
- Generic ConstructorNameSniff no longer errors for PHP4 style constructors when __construct() is present
  - Thanks to Thibaud Fabre for the patch
- Generic DocCommentSniff now checks that the end comment tag is on a new line
- Generic MultipleStatementAlignmentSniff no longer skips assignments for closures
- Squiz DocCommentAlignment sniff now has better checking for single line doc block
- Running unit tests with the -v CLI argument no longer generates PHP errors
- Fixed bug [#295](https://github.com/squizlabs/PHP_CodeSniffer/issues/295) : ScopeIndentSniff hangs when processing nested closures
- Fixed bug [#298](https://github.com/squizlabs/PHP_CodeSniffer/issues/298) : False positive in ScopeIndentSniff when anonymous functions are used with method chaining
- Fixed bug [#302](https://github.com/squizlabs/PHP_CodeSniffer/issues/302) : Fixing code in Squiz InlineComment sniff can remove some comment text
- Fixed bug [#303](https://github.com/squizlabs/PHP_CodeSniffer/issues/303) : Open and close tag on same line can cause a PHP notice checking scope indent
- Fixed bug [#306](https://github.com/squizlabs/PHP_CodeSniffer/issues/306) : File containing only a namespace declaration raises undefined index notice
- Fixed bug [#307](https://github.com/squizlabs/PHP_CodeSniffer/issues/307) : Conditional breaks in case statements get incorrect indentions
- Fixed bug [#308](https://github.com/squizlabs/PHP_CodeSniffer/issues/308) : Squiz InlineIfDeclarationSniff fails on ternary operators inside closure
- Fixed bug [#310](https://github.com/squizlabs/PHP_CodeSniffer/issues/310) : Variadics not recognized by tokenizer
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/684504/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/684504,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0RC4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0RC4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0RC4,2.0.0RC4,False,True
630015,2014-10-16T00:01:37Z,2014-10-16T00:07:20Z,2.0.0RC3,"- Improved default output for PHPCBF and removed the options to print verbose and progress output
- Fixer now uses temporary system files for diffing rather than creating them in the current working dir
- If a .fixed file is supplied for a unit test file, the auto fixes will be checked against it during testing
  - See Generic ScopeIndentUnitTest.inc and ScopeIndentUnitTest.inc.fixed for an example
- Fixer token replacement methods now return TRUE if the change was accepted and FALSE if rejected
- The --config-show command now pretty-prints the config values
  - Thanks to Ken Guest for the patch
- Setting and removing config values now catches exceptions if the config file is not writable
  - Thanks to Ken Guest for the patch
- Setting and removing config values now prints a message to confirm the action and show old values
- Generic ScopeIndentSniff has been completly rewritten to improve fixing and embedded PHP detection
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs now detect indents at the start of block comments
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs now detect indents inside multi-line strings
- Generic DisallowTabIndentSniff now replaces tabs inside doc block comments
- Squiz ControlStructureSpacingSniff error codes have been corrected; they were reversed
- Squiz EmbeddedPhpSniff now checks open and close tag indents and fixes some errors
- Squiz FileCommentSniff no longer throws incorrect blank line before comment errors in JS files
- Squiz ClassDeclarationSniff now has better checking for blank lines after a closing brace
- Removed error Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace (request [#285](https://github.com/squizlabs/PHP_CodeSniffer/issues/285))
  - already handled by Squiz.Classes.ClassDeclaration.CloseBraceSameLine
- Fixed bug [#280](https://github.com/squizlabs/PHP_CodeSniffer/issues/280) : The --config-show option generates error when there is no config file
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/630015/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/630015,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0RC3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0RC3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0RC3,2.0.0RC3,False,True
583951,2014-09-25T22:46:53Z,2014-09-25T22:50:13Z,2.0.0RC2,"- Minified JS and CSS files are now detected and skipped (fixes bug [#252](https://github.com/squizlabs/PHP_CodeSniffer/issues/252) and bug [#19899](http://pear.php.net/bugs/bug.php?id=19899))
  - A warning will be added to the file so it can be found in the report and ignored in the future
- Fixed incorrect length of JS object operator tokens
- PHP tokenizer no longer converts class/function names to special tokens types
  - Class/function names such as parent and true would become special tokens such as T_PARENT and T_TRUE
- PHPCS can now exit with 0 if only warnings were found (request [#262](https://github.com/squizlabs/PHP_CodeSniffer/issues/262))
  - Set the ignore_warnings_on_exit config variable to 1 to set this behaviour
  - Default remains at exiting with 0 only if no errors and no warnings were found
  - Also changes return value of PHP_CodeSniffer_Reporting::printReport()
- Rulesets can now set associative array properties
  - property name=""[property]"" type=""array"" value=""foo=>bar,baz=>qux""
- Generic ForbiddenFunctionsSniff now has a public property called forbiddenFunctions (request [#263](https://github.com/squizlabs/PHP_CodeSniffer/issues/263))
  - Override the property in a ruleset.xml file to define forbidden functions and their replacements
  - A replacement of NULL indicates that no replacement is available
  - e.g., value=""delete=>unset,print=>echo,create_function=>null""
  - Custom sniffs overriding this one will need to change the visbility of their member var
- Improved closure support in Generic ScopeIndentSniff
- Improved indented PHP tag support in Generic ScopeIndentSniff
- Improved fixing of mixed line indents in Generic ScopeIndentSniff
- Added conflict detection to the file fixer
  - If 2 sniffs look to be conflicting, one change will be ignored to allow a fix to occur
- Generic CamelCapsFunctionNameSniff now ignores a single leading underscore
  - Thanks to Alex Slobodiskiy for the patch
- Standards can now be located within hidden directories (further fix for bug [#20323](http://pear.php.net/bugs/bug.php?id=20323))
  - Thanks to Klaus Purer for the patch
- Sniff ignore patterns now replace Win dir separators like file ignore patterns already did
- Exclude patterns now use backtick delimiters, allowing all special characters to work correctly again
  - Thanks to Jeremy Edgell for the patch
- Errors converted to warnings in a ruleset (and vice versa) now retain their fixable status
  - Thanks to Alexander Obuhovich for the patch
- Squiz ConcatenationSpacingSniff now has a setting to specify how many spaces there should around concat operators
  - Default remains at 0
  - Override the ""spacing"" setting in a ruleset.xml file to change
- Added auto-fixes for Squiz InlineCommentSniff
- Generic DocCommentSniff now correctly fixes additional blank lines at the end of a comment
- Squiz OperatorBracketSniff now correctly fixes operations that include arrays
- Zend ClosingTagSniff fix now correctly leaves closing tags when followed by HTML
- Added Generic SyntaxSniff to check for syntax errors in PHP files
  - Thanks to Blaine Schmeisser for the contribution
- Added Generic OneTraitPerFileSniff to check that only one trait is defined in each file
  - Thanks to Alexander Obuhovich for the contribution
- Squiz DiscouragedFunctionsSniff now warns about var_dump()
- PEAR ValidFunctionNameSniff no longer throws an error for _()
- Squiz and PEAR FunctionCommentSniffs now support _()
- Generic DisallowTabIndentSniff now checks for, and fixes, mixed indents again
- Generic UpperCaseConstantSniff and LowerCaseConstantSniff now ignore function names
- Fixed bug [#243](https://github.com/squizlabs/PHP_CodeSniffer/issues/243) : Missing DocBlock not detected
- Fixed bug [#248](https://github.com/squizlabs/PHP_CodeSniffer/issues/248) : FunctionCommentSniff expects ampersand on param name
- Fixed bug [#265](https://github.com/squizlabs/PHP_CodeSniffer/issues/265) : False positives with type hints in ForbiddenFunctionsSniff
- Fixed bug [#20373](http://pear.php.net/bugs/bug.php?id=20373) : Inline comment sniff tab handling way
- Fixed bug [#20377](http://pear.php.net/bugs/bug.php?id=20377) : Error when trying to execute phpcs with report=json
- Fixed bug [#20378](http://pear.php.net/bugs/bug.php?id=20378) : Report appended to existing file if no errors found in run
- Fixed bug [#20381](http://pear.php.net/bugs/bug.php?id=20381) : Invalid ""Comment closer must be on a new line""
  - Thanks to Brad Kent for the patch
- Fixed bug [#20402](http://pear.php.net/bugs/bug.php?id=20402) : SVN pre-commit hook fails due to unknown argument error
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/583951/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/583951,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0RC2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0RC2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0RC2,2.0.0RC2,False,True
583921,2014-09-25T22:26:45Z,2014-09-25T22:31:59Z,1.5.5,"- PHP tokenizer no longer converts class/function names to special tokens types
  - Class/function names such as parent and true would become special tokens such as T_PARENT and T_TRUE
- Improved closure support in Generic ScopeIndentSniff
- Improved indented PHP tag support in Generic ScopeIndentSniff
- Generic CamelCapsFunctionNameSniff now ignores a single leading underscore
  - Thanks to Alex Slobodiskiy for the patch
- Standards can now be located within hidden directories (further fix for bug [#20323](http://pear.php.net/bugs/bug.php?id=20323))
  - Thanks to Klaus Purer for the patch
- Added Generic SyntaxSniff to check for syntax errors in PHP files
  - Thanks to Blaine Schmeisser for the contribution
- Squiz DiscouragedFunctionsSniff now warns about var_dump()
- PEAR ValidFunctionNameSniff no longer throws an error for _()
- Squiz and PEAR FunctionCommentSnif now support _()
- Generic UpperCaseConstantSniff and LowerCaseConstantSniff now ignore function names
- Fixed bug [#248](https://github.com/squizlabs/PHP_CodeSniffer/issues/248) : FunctionCommentSniff expects ampersand on param name
- Fixed bug [#265](https://github.com/squizlabs/PHP_CodeSniffer/issues/265) : False positives with type hints in ForbiddenFunctionsSniff
- Fixed bug [#20373](http://pear.php.net/bugs/bug.php?id=20373) : Inline comment sniff tab handling way
- Fixed bug [#20378](http://pear.php.net/bugs/bug.php?id=20378) : Report appended to existing file if no errors found in run
- Fixed bug [#20381](http://pear.php.net/bugs/bug.php?id=20381) : Invalid ""Comment closer must be on a new line""
  - Thanks to Brad Kent for the patch
- Fixed bug [#20386](http://pear.php.net/bugs/bug.php?id=20386) : Squiz.Commenting.ClassComment.SpacingBefore thrown if first block comment
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/583921/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/583921,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.5,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.5,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.5,1.5.5,False,False
473380,2014-08-06T00:05:51Z,2014-08-06T00:09:13Z,2.0.0RC1,"- PHPCBF will now fix incorrect newline characters in a file
- PHPCBF now exists cleanly when there are no errors to fix
- Added phpcbf.bat file for Windows
- Verbose option no longer errors when using a phar file with a space in the path
- Fixed a reporting error when using HHVM
  - Thanks to Martins Sipenko for the patch
- addFixableError() and addFixableWarning() now only return true if the fixer is enabled
  - Saves checking ($phpcsFile->fixer->enabled === true) before every fix
- Added addErrorOnLine() and addWarningOnLine() to add a non-fixable violation to a line at column 1
  - Useful if you are generating errors using an external tool or parser and only know line numbers
  - Thanks to Ondřej Mirtes for the patch
- CSS tokenizer now identifies embedded PHP code using the new T_EMBEDDED_PHP token type
  - The entire string of PHP is contained in a single token
- PHP tokenizer contains better detection of short array syntax
- Unit test runner now also test any standards installed under the installed_paths config var
- Exclude patterns now use {} delimiters, allowing the | special character to work correctly again
- The filtering component of the --extensions argument is now ignored again when passing filenames
  - Can still be used to specify a custom tokenizer for each extension when passing filenames
  - If no tokenizer is specified, default values will be used for common file extensions
- Diff report now produces relative paths on Windows, where possible (further fix for bug [#20234](http://pear.php.net/bugs/bug.php?id=20234))
- If a token's content has been modified by the tab-width setting, it will now have an orig_content in the tokens array
- Generic DisallowSpaceIndent and DisallowTabIndent sniffs now check original indent content even when tab-width is set
  - Previously, setting --tab-width would force both to check the indent as spaces
- Fixed a problem where PHPCBF could replace tabs with too many spaces when changing indents
- Fixed a problem that could occur with line numbers when using HHVM to check files with Windows newline characters
- Removed use of sys_get_temp_dir() as this is not supported by the min PHP version
- Squiz ArrayDeclarationSniff now supports short array syntax
- Squiz ControlSignatureSniff no longer uses the Abstract Pattern sniff
  - If you are extending this sniff, you'll need to rewrite your code
  - The rewrite allows this sniff to fix all control structure formatting issues it finds
- The installed_paths config var now accepts relative paths
  - The paths are relative to the PHP_CodeSniffer install directory
  - Thanks to Weston Ruter for the patch
- Generic ScopeIndentSniff now accounts for different open tag indents
- PEAR FunctionDeclarationSniff now ignores short arrays when checking indent
  - Thanks to Daniel Tschinder for the patch
- PSR2 FunctionCallSignatureSniff now treats multi-line strings as a single-line argument, like arrays and closures
  - Thanks to Dawid Nowak for the patch
- PSR2 UseDeclarationSniff now checks for a single space after the USE keyword
- Generic ForbiddenFunctionsSniff now detects calls to functions in the global namespace
  - Thanks to Ole Martin Handeland for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore namespaces beginning with TRUE/FALSE/NULL
  - Thanks to Renan Gonçalves for the patch
- Squiz InlineCommentSniff no longer requires a blank line after post-statement comments (request [#20299](http://pear.php.net/bugs/bug.php?id=20299))
- Squiz SelfMemberReferenceSniff now works correctly with namespaces
- Squiz FunctionCommentSniff is now more relaxed when checking namespaced type hints
- Tab characters are now encoded in abstract pattern errors messages
  - Thanks to Blaine Schmeisser for the patch
- Invalid sniff codes passed to --sniffs now show a friendly error message (request [#20313](http://pear.php.net/bugs/bug.php?id=20313))
- Generic LineLengthSniff now shows a warning if the iconv module is disabled (request [#20314](http://pear.php.net/bugs/bug.php?id=20314))
- Source report no longer shows errors if category or sniff names ends in an uppercase error
  - Thanks to Jonathan Marcil for the patch
- Fixed bug [#20261](http://pear.php.net/bugs/bug.php?id=20261) : phpcbf has an endless fixing loop
- Fixed bug [#20268](http://pear.php.net/bugs/bug.php?id=20268) : Incorrect documentation titles in PEAR documentation
- Fixed bug [#20296](http://pear.php.net/bugs/bug.php?id=20296) : new array notion in function comma check fails
- Fixed bug [#20297](http://pear.php.net/bugs/bug.php?id=20297) : phar does not work when renamed it to phpcs
- Fixed bug [#20307](http://pear.php.net/bugs/bug.php?id=20307) : PHP_CodeSniffer_Standards_AbstractVariableSniff analyze traits
- Fixed bug [#20308](http://pear.php.net/bugs/bug.php?id=20308) : Squiz.ValidVariableNameSniff - wrong variable usage
- Fixed bug [#20309](http://pear.php.net/bugs/bug.php?id=20309) : Use ""member variable"" term in sniff ""processMemberVar"" method
- Fixed bug [#20310](http://pear.php.net/bugs/bug.php?id=20310) : PSR2 does not check for space after function name
- Fixed bug [#20322](http://pear.php.net/bugs/bug.php?id=20322) : Display rules set to type=error even when suppressing warnings
- Fixed bug [#20323](http://pear.php.net/bugs/bug.php?id=20323) : PHPCS tries to load sniffs from hidden directories
- Fixed bug [#20346](http://pear.php.net/bugs/bug.php?id=20346) : Fixer endless loop with Squiz.CSS sniffs
- Fixed bug [#20355](http://pear.php.net/bugs/bug.php?id=20355) : No sniffs are registered with PHAR on Windows
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/473380/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/473380,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0RC1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0RC1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0RC1,2.0.0RC1,False,True
473366,2014-08-05T23:54:13Z,2014-08-05T23:57:30Z,1.5.4,"- Removed use of sys_get_temp_dir() as this is not supported by the min PHP version
- The installed_paths config var now accepts relative paths
  - The paths are relative to the PHP_CodeSniffer install directory
  - Thanks to Weston Ruter for the patch
- Generic ScopeIndentSniff now accounts for different open tag indents
- PEAR FunctionDeclarationSniff now ignores short arrays when checking indent
  - Thanks to Daniel Tschinder for the patch
- PSR2 FunctionCallSignatureSniff now treats multi-line strings as a single-line argument, like arrays and closures
  - Thanks to Dawid Nowak for the patch
- Generic ForbiddenFunctionsSniff now detects calls to functions in the global namespace
  - Thanks to Ole Martin Handeland for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore namespaces beginning with TRUE/FALSE/NULL
  - Thanks to Renan Gonçalves for the patch
- Squiz InlineCommentSniff no longer requires a blank line after post-statement comments (request [#20299](http://pear.php.net/bugs/bug.php?id=20299))
- Squiz SelfMemberReferenceSniff now works correctly with namespaces
- Tab characters are now encoded in abstract pattern errors messages
  - Thanks to Blaine Schmeisser for the patch
- Invalid sniff codes passed to --sniffs now show a friendly error message (request [#20313](http://pear.php.net/bugs/bug.php?id=20313))
- Generic LineLengthSniff now shows a warning if the iconv module is disabled (request [#20314](http://pear.php.net/bugs/bug.php?id=20314))
- Source report no longer shows errors if category or sniff names ends in an uppercase error
  - Thanks to Jonathan Marcil for the patch
- Fixed bug [#20268](http://pear.php.net/bugs/bug.php?id=20268) : Incorrect documentation titles in PEAR documentation
- Fixed bug [#20296](http://pear.php.net/bugs/bug.php?id=20296) : new array notion in function comma check fails
- Fixed bug [#20307](http://pear.php.net/bugs/bug.php?id=20307) : PHP_CodeSniffer_Standards_AbstractVariableSniff analyze traits
- Fixed bug [#20308](http://pear.php.net/bugs/bug.php?id=20308) : Squiz.ValidVariableNameSniff - wrong variable usage
- Fixed bug [#20309](http://pear.php.net/bugs/bug.php?id=20309) : Use ""member variable"" term in sniff ""processMemberVar"" method
- Fixed bug [#20310](http://pear.php.net/bugs/bug.php?id=20310) : PSR2 does not check for space after function name
- Fixed bug [#20322](http://pear.php.net/bugs/bug.php?id=20322) : Display rules set to type=error even when suppressing warnings
- Fixed bug [#20323](http://pear.php.net/bugs/bug.php?id=20323) : PHPCS tries to load sniffs from hidden directories
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/473366/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/473366,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.4,1.5.4,False,False
297900,2014-05-01T03:32:43Z,2014-05-01T03:35:07Z,2.0.0a2,"- Added report type --report=info to show information about the checked code to make building a standard easier
  - Checks a number of things, such as what line length you use, and spacing are brackets, but not everything
  - Still highly experimental
- Generic LineLengthSniff now shows warnings for long lines referring to licence and VCS information
  - It previously ignored these lines, but at the expense of performance
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs no longer error when detecting mixed indent types
  - Only the first type of indent found on a line (space or indent) is considered
- Lots of little performance improvements that can add up to a substantial saving over large code bases
  - Added a ""length"" array index to tokens so you don't need to call strlen() of them, or deal with encoding
  - Can now use isset() to find tokens inside the PHP_CodeSniffer_Tokens static vars instead of in_array()
- Custom reports can now specify a $recordErrors member var; this previously only worked for built-in reports
  - When set to FALSE, error messages will not be recorded and only totals will be returned
  - This can save significant memory while processing a large code base
- Removed dependence on PHP_Timer
- PHP tokenizer now supports DEFAULT statements opened with a T_SEMICOLON
- The Squiz and PHPCS standards have increased the max padding for statement alignment from 8 to 12
- Squiz EchoedStringsSniff now supports statments without a semicolon, such as PHP embedded in HTML
- Squiz DoubleQuoteUsageSniff now properly replaces escaped double quotes when fixing a doubled quoted string
- Improved detection of nested IF statements that use the alternate IF/ENDIF syntax
- PSR1 CamelCapsMethodNameSniff now ignores magic methods
  - Thanks to Eser Ozvataf for the patch
- PSR1 SideEffectsSniff now ignores methods named define()
- PSR1 and PEAR ClassDeclarationSniffs now support traits (request [#20208](http://pear.php.net/bugs/bug.php?id=20208))
- PSR2 ControlStructureSpacingSniff now allows newlines before/after parentheses
  - Thanks to Maurus Cuelenaere for the patch
- PSR2 ControlStructureSpacingSniff now checks TRY and CATCH statements
- Squiz SuperfluousWhitespaceSniff now detects whitespace at the end of block comment lines
  - Thanks to Klaus Purer for the patch
- Squiz LowercasePHPFunctionsSniff no longer reports errors for namespaced functions
  - Thanks to Max Galbusera for the patch
- Squiz SwitchDeclarationSniff now allows exit() as a breaking statement for case/default
- Squiz ValidVariableNameSniff and Zend ValidVariableNameSniff now ignore additional PHP reserved vars
  - Thanks to Mikuláš Dítě and Adrian Crepaz for the patch
- Sniff code Squiz.WhiteSpace.MemberVarSpacing.After changed to Squiz.WhiteSpace.MemberVarSpacing.Incorrect (request [#20241](http://pear.php.net/bugs/bug.php?id=20241))
- Fixed bug [#20200](http://pear.php.net/bugs/bug.php?id=20200) : Invalid JSON produced with specific error message
- Fixed bug [#20204](http://pear.php.net/bugs/bug.php?id=20204) : Ruleset exclude checks are case sensitive
- Fixed bug [#20213](http://pear.php.net/bugs/bug.php?id=20213) : Invalid error, Inline IF must be declared on single line
- Fixed bug [#20225](http://pear.php.net/bugs/bug.php?id=20225) : array_merge() that takes more than one line generates error
- Fixed bug [#20230](http://pear.php.net/bugs/bug.php?id=20230) : Squiz ControlStructureSpacing sniff assumes specific condition formatting
- Fixed bug [#20234](http://pear.php.net/bugs/bug.php?id=20234) : phpcbf patch command absolute paths
- Fixed bug [#20240](http://pear.php.net/bugs/bug.php?id=20240) : Squiz block comment sniff fails when newline present
- Fixed bug [#20247](http://pear.php.net/bugs/bug.php?id=20247) : The Squiz.WhiteSpace.ControlStructureSpacing sniff and do-while
  - Thanks to Alexander Obuhovich for the patch
- Fixed bug [#20248](http://pear.php.net/bugs/bug.php?id=20248) : The Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff sniff and empty scope
- Fixed bug [#20252](http://pear.php.net/bugs/bug.php?id=20252) : Unitialized string offset when package name starts with underscore 
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/297900/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/297900,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0a2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0a2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0a2,2.0.0a2,False,True
297878,2014-05-01T03:07:54Z,2014-05-01T03:10:28Z,1.5.3,"- Improved detection of nested IF statements that use the alternate IF/ENDIF syntax
- PHP tokenizer now supports DEFAULT statements opened with a T_SEMICOLON
- PSR1 CamelCapsMethodNameSniff now ignores magic methods
  - Thanks to Eser Ozvataf for the patch
- PSR1 SideEffectsSniff now ignores methods named define()
- PSR1 and PEAR ClassDeclarationSniffs now support traits (request [#20208](http://pear.php.net/bugs/bug.php?id=20208))
- PSR2 ControlStructureSpacingSniff now allows newlines before/after parentheses
  - Thanks to Maurus Cuelenaere for the patch
- Squiz LowercasePHPFunctionsSniff no longer reports errors for namespaced functions
  - Thanks to Max Galbusera for the patch
- Squiz SwitchDeclarationSniff now allows exit() as a breaking statement for case/default
- Squiz ValidVariableNameSniff and Zend ValidVariableNameSniff now ignore additional PHP reserved vars
  - Thanks to Mikuláš Dítě and Adrian Crepaz for the patch
- Sniff code Squiz.WhiteSpace.MemberVarSpacing.After changed to Squiz.WhiteSpace.MemberVarSpacing.Incorrect (request [#20241](http://pear.php.net/bugs/bug.php?id=20241))
- Fixed bug [#20200](http://pear.php.net/bugs/bug.php?id=20200) : Invalid JSON produced with specific error message
- Fixed bug [#20204](http://pear.php.net/bugs/bug.php?id=20204) : Ruleset exclude checks are case sensitive
- Fixed bug [#20213](http://pear.php.net/bugs/bug.php?id=20213) : Invalid error, Inline IF must be declared on single line
- Fixed bug [#20225](http://pear.php.net/bugs/bug.php?id=20225) : array_merge() that takes more than one line generates error
- Fixed bug [#20230](http://pear.php.net/bugs/bug.php?id=20230) : Squiz ControlStructureSpacing sniff assumes specific condition formatting
- Fixed bug [#20240](http://pear.php.net/bugs/bug.php?id=20240) : Squiz block comment sniff fails when newline present
- Fixed bug [#20247](http://pear.php.net/bugs/bug.php?id=20247) : The Squiz.WhiteSpace.ControlStructureSpacing sniff and do-while
  - Thanks to Alexander Obuhovich for the patch
- Fixed bug [#20248](http://pear.php.net/bugs/bug.php?id=20248) : The Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff sniff and empty scope
- Fixed bug [#20252](http://pear.php.net/bugs/bug.php?id=20252) : Unitialized string offset when package name starts with underscore
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/297878/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/297878,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.3,1.5.3,False,False
173534,2014-02-05T02:59:15Z,2014-02-05T03:11:18Z,2.0.0a1,"- Added the phpcbf script to automatically fix many errors found by the phpcs script
- Added report type --report=diff to show suggested changes to fix coding standard violations
- The --report argument now allows for custom reports to be used
  - Use the full path to your custom report class as the report name
- The --extensions argument is now respected when passing filenames; not just with directories
- The --extensions argument now allows you to specify the tokenizer for each extension
  - e.g., --extensions=module/php,es/js
- Command line arguments can now be set in ruleset files
  - e.g., arg name=""report"" value=""summary"" (print summary report; same as --report=summary)
  - e.g., arg value=""sp"" (print source and progress information; same as -sp)
  - The -vvv, --sniffs, --standard and -l command line arguments cannot be set in this way
- Sniff process() methods can not optionally return a token to ignore up to
  - If returned, the sniff will not be executed again until the passed token is reached in the file
  - Useful if you are looking for tokens like T_OPEN_TAG but only want to process the first one
- Removed the comment parser classes and replaced it with a simple comment tokenier
  - T_DOC_COMMENT tokens are now tokenized into T_DOC_COMMENT_\* tokens so they can be used more easily
  - This change requires a significant rewrite of sniffs that use the comment parser
  - This change requires minor changes to sniffs that listen for T_DOC_COMMENT tokens directly
- Added Generic DocCommentSniff to check generic doc block formatting
  - Removed doc block formatting checks from PEAR ClassCommentSniff
  - Removed doc block formatting checks from PEAR FileCommentSniff
  - Removed doc block formatting checks from PEAR FunctionCommentSniff
  - Removed doc block formatting checks from Squiz ClassCommentSniff
  - Removed doc block formatting checks from Squiz FileCommentSniff
  - Removed doc block formatting checks from Squiz FunctionCommentSniff
  - Removed doc block formatting checks from Squiz VariableCommentSniff
- Squiz DocCommentAlignmentSniff has had its error codes changed
  - NoSpaceBeforeTag becomes NoSpaceAfterStar
  - SpaceBeforeTag becomes SpaceAfterStar
  - SpaceBeforeAsterisk becomes SpaceBeforeStar
- Generic MultipleStatementAlignment now aligns assignments within a block so they fit within their max padding setting
  - The sniff previously requested the padding as 1 space if max padding was exceeded
  - It now aligns the assignment with surrounding assignments if it can
  - Removed property ignoreMultiline as multi-line assignments are now handled correctly and should not be ignored
- Squiz FunctionClosingBraceSpaceSniff now requires a blank line before the brace in all cases except function args
- Added error Squiz.Commenting.ClassComment.SpacingAfter to ensure there are no blank lines after a class comment
- Added error Squiz.WhiteSpace.MemberVarSpacing.AfterComment to ensure there are no blank lines after a member var comment
  - Fixes have also been corrected to not strip the member var comment or indent under some circumstances
  - Thanks to Mark Scherer for help with this fix
- Added error Squiz.Commenting.FunctionCommentThrowTag.Missing to ensure a throw is documented
- Removed error Squiz.Commenting.FunctionCommentThrowTag.WrongType
- Content passed via STDIN can now specify the filename to use so that sniffs can run the correct filename checks
  - Ensure the first line of the content is: phpcs_input_file: /path/to/file
- Squiz coding standard now enforces no closing PHP tag at the end of a pure PHP file
- Squiz coding standard now enforces a single newline character at the end of the file
- Squiz ClassDeclarationSniff no longer checks for a PHP ending tag after a class definition
- Squiz ControlStructureSpacingSniff now checks TRY and CATCH statements as well
- Removed MySource ChannelExceptionSniff
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/173534/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/173534,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/2.0.0a1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/2.0.0a1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/2.0.0a1,2.0.0a1,False,True
173417,2014-02-04T23:52:44Z,2014-02-04T23:54:50Z,1.5.2,"- Improved support for the PHP 5.5. classname::class syntax
  - PSR2 SwitchDeclarationSniff no longer throws errors when this syntax is used in CASE conditions
- Improved support for negative checks of instanceOf in Squiz ComparisonOperatorUsageSniff
  - Thanks to Martin Winkel for the patch
- Generic FunctionCallArgumentSpacingSniff now longer complains about space before comma when using here/nowdocs
  - Thanks to Richard van Velzen for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore class constants
  - Thanks to Kristopher Wilson for the patch
- PEAR FunctionCallSignatureSniff now has settings to specify how many spaces should appear before/after parentheses
  - Override the 'requiredSpacesAfterOpen' and 'requiredSpacesBeforeClose' settings in a ruleset.xml file to change
  - Default remains at 0 for both
  - Thanks to Astinus Eberhard for the patch
- PSR2 ControlStructureSpacingSniff now has settings to specify how many spaces should appear before/after parentheses
  - Override the 'requiredSpacesAfterOpen' and 'requiredSpacesBeforeClose' settings in a ruleset.xml file to change
  - Default remains at 0 for both
  - Thanks to Astinus Eberhard for the patch
- Squiz ForEachLoopDeclarationSniff now has settings to specify how many spaces should appear before/after parentheses
  - Override the 'requiredSpacesAfterOpen' and 'requiredSpacesBeforeClose' settings in a ruleset.xml file to change
  - Default remains at 0 for both
  - Thanks to Astinus Eberhard for the patch
- Squiz ForLoopDeclarationSniff now has settings to specify how many spaces should appear before/after parentheses
  - Override the 'requiredSpacesAfterOpen' and 'requiredSpacesBeforeClose' settings in a ruleset.xml file to change
  - Default remains at 0 for both
  - Thanks to Astinus Eberhard for the patch
- Squiz FunctionDeclarationArgumentSpacingSniff now has settings to specify how many spaces should appear before/after parentheses
  - Override the 'requiredSpacesAfterOpen' and 'requiredSpacesBeforeClose' settings in a ruleset.xml file to change
  - Default remains at 0 for both
  - Thanks to Astinus Eberhard for the patch
- Removed UnusedFunctionParameter, CyclomaticComplexity and NestingLevel from the Squiz standard
- Generic FixmeSniff and TodoSniff now work correctly with accented characters
- Fixed bug [#20145](http://pear.php.net/bugs/bug.php?id=20145) : Custom ruleset preferences directory over installed standard
- Fixed bug [#20147](http://pear.php.net/bugs/bug.php?id=20147) : phpcs-svn-pre-commit - no more default error report
- Fixed bug [#20151](http://pear.php.net/bugs/bug.php?id=20151) : Problem handling ""if(): ... else: ... endif;"" syntax
- Fixed bug [#20190](http://pear.php.net/bugs/bug.php?id=20190) : Invalid regex in Squiz_Sniffs_WhiteSpace_SuperfluousWhitespaceSniff
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/173417/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/173417,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.2,1.5.2,False,False
119634,2013-12-12T03:10:18Z,2013-12-12T03:12:18Z,1.5.1,"- Config values can now be set at runtime using the command line argument [--runtime-set key value]
  - Runtime values are the same as config values, but are not written to the main config file
  - Thanks to Wim Godden for the patch
- Config values can now be set in ruleset files
  - e.g., config name=""zend_ca_path"" value=""/path/to/ZendCodeAnalyzer""
  - Can not be used to set config values that override command line values, such as show_warnings
  - Thanks to Jonathan Marcil for helping with the patch
- Added a new installed_paths config value to allow for the setting of directories that contain standards
  - By default, standards have to be installed into the CodeSniffer/Standards directory to be considered installed
  - New config value allows a list of paths to be set in addition to this internal path
  - Installed standards appear when using the -i arg, and can be referenced in rulesets using only their name
  - Set paths by running: phpcs --config-set installed_paths /path/one,/path/two,...
- PSR2 ClassDeclarationSniff now allows a list of extended interfaces to be split across multiple lines
- Squiz DoubleQuoteUsageSniff now allows \b in double quoted strings
- Generic ForbiddenFunctionsSniff now ignores object creation
  - This is a further fix for bug [#20100](http://pear.php.net/bugs/bug.php?id=20100) : incorrect Function mysql() has been deprecated report
- Fixed bug [#20136](http://pear.php.net/bugs/bug.php?id=20136) : Squiz_Sniffs_WhiteSpace_ScopeKeywordSpacingSniff and Traits
- Fixed bug [#20138](http://pear.php.net/bugs/bug.php?id=20138) : Protected property underscore and camel caps issue (in trait with Zend)
  - Thanks to Gaetan Rousseau for the patch
- Fixed bug [#20139](http://pear.php.net/bugs/bug.php?id=20139) : No report file generated on success
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/119634/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/119634,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.1,1.5.1,False,False
105962,2013-11-27T22:24:20Z,2013-11-27T22:28:30Z,1.5.0,"- Doc generation is now working again for installed standards
  - Includes a fix for limiting the docs to specific sniffs
- Generic ScopeIndentSniff now allows for ignored tokens to be set via ruleset.xml files
  - E.g., to ignore comments, override a property using:
  - name=""ignoreIndentationTokens"" type=""array"" value=""T_COMMENT,T_DOC_COMMENT""
- PSR2 standard now ignores comments when checking indentation rules
- Generic UpperCaseConstantNameSniff no longer reports errors where constants are used (request [#20090](http://pear.php.net/bugs/bug.php?id=20090))
  - It still reports errors where constants are defined
- Individual messages can now be excluded in ruleset.xml files using the exclude tag (request [#20091](http://pear.php.net/bugs/bug.php?id=20091))
  - Setting message severity to 0 continues to be supported
- Squiz OperatorSpacingSniff no longer throws errors for the ?: short ternary operator
  - Thanks to Antoine Musso for the patch
- Comment parser now supports non-English characters when splitting comment lines into words
  - Thanks to Nik Sun for the patch
- Exit statements are now recognised as valid closers for CASE and DEFAULT blocks
  - Thanks to Maksim Kochkin for the patch
- PHP_CodeSniffer_CLI::process() can now be passed an incomplete array of CLI values
  - Missing values will be set to the CLI defaults
  - Thanks to Maksim Kochkin for the patch
- Fixed bug [#20093](http://pear.php.net/bugs/bug.php?id=20093) : Bug with ternary operator token
- Fixed bug [#20097](http://pear.php.net/bugs/bug.php?id=20097) : CLI.php throws error in php 5.2
- Fixed bug [#20100](http://pear.php.net/bugs/bug.php?id=20100) : incorrect Function mysql() has been deprecated report
- Fixed bug [#20119](http://pear.php.net/bugs/bug.php?id=20119) : PHP warning: invalid argument to str_repeat() in SVN blame report with -s
- Fixed bug [#20123](http://pear.php.net/bugs/bug.php?id=20123) : PSR2 complains about an empty second statement in for-loop
- Fixed bug [#20131](http://pear.php.net/bugs/bug.php?id=20131) : PHP errors in svnblame report, if there are files not under version control
- Fixed bug [#20133](http://pear.php.net/bugs/bug.php?id=20133) : Allow ""HG: hg_id"" as value for @version tag
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/105962/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/105962,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.0,1.5.0,False,False
103403,2013-11-25T22:07:36Z,2013-11-25T22:21:18Z,1.4.8,"- Generic ScopeIndentSniff now allows for ignored tokens to be set via ruleset.xml files
  - E.g., to ignore comments, override a property using:
  - name=""ignoreIndentationTokens"" type=""array"" value=""T_COMMENT,T_DOC_COMMENT""
- PSR2 standard now ignores comments when checking indentation rules
- Squiz OperatorSpacingSniff no longer throws errors for the ?: short ternary operator
  - Thanks to Antoine Musso for the patch
- Comment parser now supports non-English characters when splitting comment lines into words
  - Thanks to Nik Sun for the patch
- Exit statements are now recognised as valid closers for CASE and DEFAULT blocks
  - Thanks to Maksim Kochkin for the patch
- PHP_CodeSniffer_CLI::process() can now be passed an incomplete array of CLI values
  - Missing values will be set to the CLI defaults
  - Thanks to Maksim Kochkin for the patch
- Fixed bug [#20097](http://pear.php.net/bugs/bug.php?id=20097) : CLI.php throws error in php 5.2
- Fixed bug [#20100](http://pear.php.net/bugs/bug.php?id=20100) : incorrect Function mysql() has been deprecated report
- Fixed bug [#20119](http://pear.php.net/bugs/bug.php?id=20119) : PHP warning: invalid argument to str_repeat() in SVN blame report with -s
- Fixed bug [#20123](http://pear.php.net/bugs/bug.php?id=20123) : PSR2 complains about an empty second statement in for-loop
- Fixed bug [#20131](http://pear.php.net/bugs/bug.php?id=20131) : PHP errors in svnblame report, if there are files not under version control
- Fixed bug [#20133](http://pear.php.net/bugs/bug.php?id=20133) : Allow ""HG: hg_id"" as value for @version tag
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/103403/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/103403,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.8,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.8,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.8,1.4.8,False,False
52464,2011-11-03T04:18:51Z,2013-09-26T04:06:50Z,1.3.1,"- All report file command line arguments now work with relative paths (request [#17240](http://pear.php.net/bugs/bug.php?id=17240))
- The extensions command line argument now supports multi-part file extensions (request [#17227](http://pear.php.net/bugs/bug.php?id=17227))
- Added report type --report=hgblame to show number of errors/warnings committed by authors in a Mercurial repository
  - Has the same functionality as the svnblame report
  - Thanks to Ben Selby for the patch
- Added T_BACKTICK token type to make detection of backticks easier (request [#18799](http://pear.php.net/bugs/bug.php?id=18799))
- Added pattern matching support to Generic ForbiddenFunctionsSniff
  - If you are extending it and overriding register() or addError() you will need to review your sniff
- Namespaces are now recognised as scope openers, although they do not require braces (request [#18043](http://pear.php.net/bugs/bug.php?id=18043))
- Added new ByteOrderMarkSniff to Generic standard (request [#18194](http://pear.php.net/bugs/bug.php?id=18194))
  - Throws an error if a byte order mark is found in any PHP file
  - Thanks to Piotr Karas for the contribution
- PHP_Timer output is no longer included in reports when being written to a file (request [#18252](http://pear.php.net/bugs/bug.php?id=18252))
  - Also now shown for all report types if nothing is being printed to the screen
- Generic DeprecatedFunctionSniff now reports functions as deprecated and not simply forbidden (request [#18288](http://pear.php.net/bugs/bug.php?id=18288))
- PHPCS now accepts file contents from STDIN (request [#18447](http://pear.php.net/bugs/bug.php?id=18447))
  - Example usage: cat temp.php | phpcs [options]  -OR-  phpcs [options] &lt; temp.php
  - Not every sniff will work correctly due to the lack of a valid file path
- PHP_CodeSniffer_Exception no longer extends PEAR_Exception (request [#18483](http://pear.php.net/bugs/bug.php?id=18483))
  - PEAR_Exception added a requirement that PEAR had to be installed
  - PHP_CodeSniffer is not used as a library, so unlikely to have any impact
- PEAR FileCommentSniff now allows GIT IDs in the version tag (request [#14874](http://pear.php.net/bugs/bug.php?id=14874))
- AbstractVariableSniff now supports heredocs
  - Also includes some variable detection fixes
  - Thanks to Sam Graham for the patch
- Squiz FileCommentSniff now enforces rule that package names cannot start with the word Squiz
- MySource AssignThisSniff now allows ""this"" to be assigned to the private var _self
- Fixed issue in Squiz FileCommentSniff where suggested package name was the same as the incorrect package name
- Fixed some issues with Squiz ArrayDeclarationSniff when using function calls in array values
- Fixed doc generation so it actually works again
  - Also now works when being run from an SVN checkout as well as when installed as a PEAR package
  - Should fix bug [#18949](http://pear.php.net/bugs/bug.php?id=18949) : Call to private method from static
- PEAR ClassDeclaration sniff now supports indentation checks when using the alternate namespace syntax
  - PEAR.Classes.ClassDeclaration.SpaceBeforeBrace message now contains 2 variables instead of 1
  - Sniff allows overriding of the default indent level, which is set to 4
  - Fixes bug [#18933](http://pear.php.net/bugs/bug.php?id=18933) : Alternative namespace declaration syntax confuses scope sniffs
- Fixed bug [#18465](http://pear.php.net/bugs/bug.php?id=18465) : ""self::"" does not work in lambda functions
  - Also corrects conversion of T_FUNCTION tokens to T_CLOSURE, which was not fixing token condition arrays
- Fixed bug [#18543](http://pear.php.net/bugs/bug.php?id=18543) : CSS Tokenizer deletes too many #
- Fixed bug [#18624](http://pear.php.net/bugs/bug.php?id=18624) : @throws namespace problem
  - Thanks to Gavin Davies for the patch
- Fixed bug [#18628](http://pear.php.net/bugs/bug.php?id=18628) : Generic.Files.LineLength gives incorrect results with Windows line-endings
- Fixed bug [#18633](http://pear.php.net/bugs/bug.php?id=18633) : CSS Tokenizer doesn't replace T_LIST tokens inside some styles
- Fixed bug [#18657](http://pear.php.net/bugs/bug.php?id=18657) : anonymous functions wrongly indented
- Fixed bug [#18670](http://pear.php.net/bugs/bug.php?id=18670) : UpperCaseConstantNameSniff fails on dynamic retrieval of class constant
- Fixed bug [#18709](http://pear.php.net/bugs/bug.php?id=18709) : Code sniffer sniffs file if even if it's in --ignore
  - Thanks to Artem Lopata for the patch
- Fixed bug [#18762](http://pear.php.net/bugs/bug.php?id=18762) : Incorrect handling of define and constant in UpperCaseConstantNameSniff
  - Thanks to Thomas Baker for the patch
- Fixed bug [#18769](http://pear.php.net/bugs/bug.php?id=18769) : CSS Tokenizer doesn't replace T_BREAK tokens inside some styles
- Fixed bug [#18835](http://pear.php.net/bugs/bug.php?id=18835) : Unreachable errors of inline returns of closure functions
  - Thanks to Patrick Schmidt for the patch
- Fixed bug [#18839](http://pear.php.net/bugs/bug.php?id=18839) : Fix miscount of warnings in AbstractSniffUnitTest.php
  - Thanks to Sam Graham for the patch
- Fixed bug [#18844](http://pear.php.net/bugs/bug.php?id=18844) : Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff with empty body
  - Thanks to Dmitri Medvedev for the patch
- Fixed bug [#18847](http://pear.php.net/bugs/bug.php?id=18847) : Running Squiz_Sniffs_Classes_ClassDeclarationSniff results in PHP notice
- Fixed bug [#18868](http://pear.php.net/bugs/bug.php?id=18868) : jslint+rhino: errors/warnings not detected
  - Thanks to Christian Weiske for the patch
- Fixed bug [#18879](http://pear.php.net/bugs/bug.php?id=18879) : phpcs-svn-pre-commit requires escapeshellarg
  - Thanks to Bjorn Katuin for the patch
- Fixed bug [#18951](http://pear.php.net/bugs/bug.php?id=18951) : weird behaviour with closures and multi-line use () params
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52464/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52464,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.1,1.3.1,False,False
52463,2011-12-01T04:23:58Z,2013-09-26T04:06:14Z,1.3.2,"- Added Generic JSHintSniff to run jshint.js over a JS file and report warnings
  - Set jshint path using phpcs --config-set jshint_path /path/to/jshint-rhino.js
  - Set rhino path using phpcs --config-set rhino_path /path/to/rhino
  - Thanks to Alexander Weiß for the contribution
- Nowdocs are now tokenized using PHP_CodeSniffer specific T_NOWDOC tokens for easier identification
- Generic UpperCaseConstantNameSniff no longer throws errors for namespaces
  - Thanks to Jaroslav Hanslík for the patch
- Squiz NonExecutableCodeSniff now detects code after thrown exceptions
  - Thanks to Jaroslav Hanslík for the patch
- Squiz OperatorSpacingSniff now ignores references
  - Thanks to Jaroslav Hanslík for the patch
- Squiz FunctionCommentSniff now reports a missing function comment if it finds a standard code comment instead
- Squiz FunctionCommentThrownTagSniff no longer reports errors if it can't find a function comment
- Fixed unit tests not running under Windows
  - Thanks to Jaroslav Hanslík for the patch
- Fixed bug [#18964](http://pear.php.net/bugs/bug.php?id=18964) : ""$stackPtr must be of type T_VARIABLE"" on heredocs and nowdocs
- Fixed bug [#18973](http://pear.php.net/bugs/bug.php?id=18973) : phpcs is looking for variables in a nowdoc
- Fixed bug [#18974](http://pear.php.net/bugs/bug.php?id=18974) : Blank line causes ""Multi-line function call not indented correctly""
  - Adds new error message to ban empty lines in multi-line function calls
- Fixed bug [#18975](http://pear.php.net/bugs/bug.php?id=18975) : ""Closing parenthesis must be on a line by itself"" also causes indentation error
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52463/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52463,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.2,1.3.2,False,False
52462,2012-02-17T02:07:01Z,2013-09-26T04:05:53Z,1.3.3,"- Added new Generic FixmeSniff that shows error messages for all FIXME comments left in your code
  - Thanks to Sam Graham for the contribution
- The maxPercentage setting in the Squiz CommentedOutCodeSniff can now be overriden in a rulset.xml file
  - Thanks to Volker Dusch for the patch
- The Checkstyle and XML reports now use XMLWriter
  - Only change in output is that empty file tags are no longer produced for files with no violations
  - Thanks to Sebastian Bergmann for the patch
- Added PHP_CodeSniffer_Tokens::$bracketTokens to give sniff writers fast access to open and close bracket tokens
- Fixed an issue in AbstractPatternSniff where EOL tokens were not being correctly checked in some cases
- PHP_CodeSniffer_File::getTokensAsString() now detects incorrect length value (request [#19313](http://pear.php.net/bugs/bug.php?id=19313))
- Fixed bug [#19114](http://pear.php.net/bugs/bug.php?id=19114) : CodeSniffer checks extension even for single file
- Fixed bug [#19171](http://pear.php.net/bugs/bug.php?id=19171) : Show sniff codes option is ignored by some report types
  - Thanks to Dominic Scheirlinck for the patch
- Fixed bug [#19188](http://pear.php.net/bugs/bug.php?id=19188) : Lots of PHP Notices when analyzing the Symfony framework
  - First issue was list-style.. lines in CSS files not properly adjusting open/close bracket positions
  - Second issue was notices caused by bug [#19137](http://pear.php.net/bugs/bug.php?id=19137)
- Fixed bug [#19208](http://pear.php.net/bugs/bug.php?id=19208) : UpperCaseConstantName reports class members
  - Was also a problem with LowerCaseConstantName as well
- Fixed bug [#19256](http://pear.php.net/bugs/bug.php?id=19256) : T_DOC_COMMENT in CSS files breaks ClassDefinitionNameSpacingSniff
  - Thanks to Klaus Purer for the patch
- Fixed bug [#19264](http://pear.php.net/bugs/bug.php?id=19264) : Squiz.PHP.NonExecutableCode does not handle RETURN in CASE without BREAK
- Fixed bug [#19270](http://pear.php.net/bugs/bug.php?id=19270) : DuplicateClassName does not handle namespaces correctly
- Fixed bug [#19283](http://pear.php.net/bugs/bug.php?id=19283) : CSS @media rules cause false positives
  - Thanks to Klaus Purer for the patch
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52462/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52462,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.3,1.3.3,False,False
52461,2012-05-17T03:50:01Z,2013-09-26T04:05:39Z,1.3.4,"- Added missing package.xml entries for new Generic FixmeSniff
  - Thanks to Jaroslav Hanslík for the patch
- Expected indents for PEAR ScopeClosingBraceSniff and FunctionCallSignatureSniff can now be set in ruleset files
  - Both sniffs use a variable called ""indent""
  - Thanks to Thomas Despoix for the patch
- Standards designed to be installed in the PHPCS Standards dir will now work outside this dir as well
  - In particular, allows the Drupal CS to work without needing to symlink it into the PHPCS install
  - Thanks to Peter Philipp for the patch
- Rule references for standards, directories and specific sniffs can now be relative in ruleset.xml files
  - For example: ref=""../MyStandard/Sniffs/Commenting/DisallowHashCommentsSniff.php""
- Symlinked standards now work correctly, allowing aliasing of installed standards (request [#19417](http://pear.php.net/bugs/bug.php?id=19417))
  - Thanks to Tom Klingenberg for the patch
- Squiz ObjectInstantiationSniff now allows objects to be returned without assinging them to a variable
- Added Squiz.Commenting.FileComment.MissingShort error message for file comments that only contains tags
  - Also stops undefined index errors being generated for these comments
- Debug option -vv now shows tokenizer status for CSS files
- Added support for new gjslint error formats
  - Thanks to Meck for the patch
- Generic ScopeIndentSniff now allows comment indents to not be exact even if the exact flag is set
  - The start of the comment is still checked for exact indentation as normal
- Fixed an issue in AbstractPatternSniff where comments were not being ignored in some cases
- Fixed an issue in Zend ClosingTagSniff where the closing tag was not always being detected correctly
  - Thanks to Jonathan Robson for the patch
- Fixed an issue in Generic FunctionCallArgumentSpacingSniff where closures could cause incorrect errors
- Fixed an issue in Generic UpperCaseConstantNameSniff where errors were incorrectly reported on goto statements
  - Thanks to Tom Klingenberg for the patch
- PEAR FileCommentSniff and ClassCommentSniff now support author emails with a single character in the local part
  - E.g., a@me.com
  - Thanks to Denis Shapkin for the patch
- Fixed bug [#19290](http://pear.php.net/bugs/bug.php?id=19290) : Generic indent sniffer fails for anonymous functions
- Fixed bug [#19324](http://pear.php.net/bugs/bug.php?id=19324) : Setting show_warnings configuration option does not work
- Fixed bug [#19354](http://pear.php.net/bugs/bug.php?id=19354) : Not recognizing references passed to method
- Fixed bug [#19361](http://pear.php.net/bugs/bug.php?id=19361) : CSS tokenzier generates errors when PHP embedded in CSS file
- Fixed bug [#19374](http://pear.php.net/bugs/bug.php?id=19374) : HEREDOC/NOWDOC Indentation problems
- Fixed bug [#19381](http://pear.php.net/bugs/bug.php?id=19381) : traits and indetations in traits are not handled properly
- Fixed bug [#19394](http://pear.php.net/bugs/bug.php?id=19394) : Notice in NonExecutableCodeSniff
- Fixed bug [#19402](http://pear.php.net/bugs/bug.php?id=19402) : Syntax error when executing phpcs on Windows with parens in PHP path
  - Thanks to Tom Klingenberg for the patch
- Fixed bug [#19411](http://pear.php.net/bugs/bug.php?id=19411) : magic method error on __construct()
  - The fix required a rewrite of AbstractScopeSniff, so please test any sniffs that extend this class
- Fixed bug [#19412](http://pear.php.net/bugs/bug.php?id=19412) : Incorrect error about assigning objects to variables when inside inline IF
- Fixed bug [#19413](http://pear.php.net/bugs/bug.php?id=19413) : php_cs thinks I haven't used a parameter when I have
- Fixed bug [#19414](http://pear.php.net/bugs/bug.php?id=19414) : php_cs seems to not track variables correctly in heredocs
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52461/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52461,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.4,1.3.4,False,False
52460,2012-07-12T05:18:30Z,2013-09-26T04:05:14Z,1.3.5,"- Added Generic CamelCapsFunctionNameSniff to just check if function and method names use camel caps
  - Does not allow underscore prefixes for private/protected methods
  - Defaults to strict checking, where two uppercase characters can not be next to each other
  - Strict checking can be disabled in a ruleset.xml file
- Squiz FunctionDeclarationArgumentSpacing now has a setting to specify how many spaces should surround equals signs
  - Default remains at 0
  - Override the equalsSpacing setting in a ruleset.xml file to change
- Squiz ClassDeclarationSniff now throws errors for > 1 space before extends/implements class name with ns seperator
- Squiz standard now warns about deprecated functions using Generic DeprecatedFunctionsSniff
- PEAR FunctionDeclarationSniff now reports an error for multiple spaces after the FUNCTION keyword and around USE
- PEAR FunctionDeclarationSniff now supports closures
- Squiz MultiLineFunctionDeclarationSniff now supports closures
- Exclude rules written for Unix systems will now work correctly on Windows
  - Thanks to Walter Tamboer for the patch
- The PHP tokenizer now recognises T_RETURN as a valid closer for T_CASE and T_DEFAULT inside switch statements
- Fixed duplicate message codes in Generic OpeningFunctionBraceKernighanRitchieSniff
- Fixed bug [#18651](http://pear.php.net/bugs/bug.php?id=18651) : PHPunit Test cases for custom standards are not working on Windows
- Fixed bug [#19416](http://pear.php.net/bugs/bug.php?id=19416) : Shorthand arrays cause bracket spacing errors
- Fixed bug [#19421](http://pear.php.net/bugs/bug.php?id=19421) : phpcs doesn't recognize ${x} as equivalent to $x
- Fixed bug [#19428](http://pear.php.net/bugs/bug.php?id=19428) : PHPCS Report ""hgblame"" doesn't support windows paths
  - Thanks to Justin Rovang for the patch
- Fixed bug [#19448](http://pear.php.net/bugs/bug.php?id=19448) : Problem with detecting remote standards
- Fixed bug [#19463](http://pear.php.net/bugs/bug.php?id=19463) : Anonymous functions incorrectly being flagged by NonExecutableCodeSniff
- Fixed bug [#19469](http://pear.php.net/bugs/bug.php?id=19469) : PHP_CodeSniffer_File::getMemberProperties() sets wrong scope
- Fixed bug [#19471](http://pear.php.net/bugs/bug.php?id=19471) : phpcs on Windows, when using Zend standard, doesn't catch problems
  - Thanks to Ivan Habunek for the patch
- Fixed bug [#19478](http://pear.php.net/bugs/bug.php?id=19478) : Incorrect indent detection in PEAR standard
  - Thanks to Shane Auckland for the patch
- Fixed bug [#19483](http://pear.php.net/bugs/bug.php?id=19483) : Blame Reports fail with space in directory name
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52460/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52460,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.5,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.5,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.5,1.3.5,False,False
52458,2012-08-08T00:56:39Z,2013-09-26T04:04:58Z,1.3.6,"- Memory usage has been dramatically reduced when using the summary report
  - Reduced memory is only available when displaying a single summary report to the screen
  - PHP_CodeSniffer will not generate any messages in this case, storing only error counts instead
  - Impact is most notable with very high error and warning counts
- Significantly improved the performance of Squiz NonExecutableCodeSniff
- Ignore patterns now check the relative path of a file based on the dir being checked
  - Allows ignore patterns to become more generic as the path to the code is no longer included when checking
  - Thanks to Kristof Coomans for the patch
- Sniff settings can now be changed by specifying a special comment format inside a file
  - e.g., // @codingStandardsChangeSetting PEAR.Functions.FunctionCallSignature allowMultipleArguments false
  - If you change a setting, don't forget to change it back
- Added Generic EndFileNewlineSniff to ensure PHP files end with a newline character
- PEAR FunctionCallSignatureSniff now includes a setting to force one argument per line in multi-line calls
  - Set allowMultipleArguments to false
- Squiz standard now enforces one argument per line in multi-line function calls
- Squiz FunctionDeclarationArgumentSpacingSniff now supports closures
- Squiz OperatorSpacingSniff no longer throws an error for negative values inside an inline THEN statement
  - Thanks to Klaus Purer for the patch
- Squiz FunctionCommentSniff now throws an error for not closing a comment with */
  - Thanks to Klaus Purer for the patch
- Summary report no longer shows two lines of PHP_Timer output when showing sources
- Fixed undefined variable error in PEAR FunctionCallSignatureSniff for lines with no indent
- Fixed bug [#19502](http://pear.php.net/bugs/bug.php?id=19502) : Generic.Files.LineEndingsSniff fails if no new-lines in file
- Fixed bug [#19508](http://pear.php.net/bugs/bug.php?id=19508) : switch+return: Closing brace indented incorrectly
- Fixed bug [#19532](http://pear.php.net/bugs/bug.php?id=19532) : The PSR-2 standard don't recognize Null in class names
- Fixed bug [#19546](http://pear.php.net/bugs/bug.php?id=19546) : Error thrown for __call() method in traits
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52458/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52458,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.3.6,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.3.6,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.3.6,1.3.6,False,False
52457,2012-09-26T04:17:27Z,2013-09-26T04:01:54Z,1.4.0,"- Added PSR1 and PSR2 coding standards that can be used to check your code against these guidelines
- PHP 5.4 short array syntax is now detected and tokens are assigned to the open and close characters
  - New tokens are T_OPEN_SHORT_ARRAY and T_CLOSE_SHORT_ARRAY as PHP does not define its own
- Added the ability to explain a coding standard by listing the sniffs that it includes
  - The sniff list includes all imported and native sniffs
  - Explain a standard by using the -e and --standard=[standard] command line arguments
  - E.g., phpcs -e --standard=Squiz
  - Thanks to Ben Selby for the idea
- Added report to show results using notify-send
  - Use --report=notifysend to generate the report
  - Thanks to Christian Weiske for the contribution
- The JS tokenizer now recognises RETURN as a valid closer for CASE and DEFAULT inside switch statements
- AbstractPatternSniff now sets the ignoreComments option using a public var rather than through the constructor
  - This allows the setting to be overwritten in ruleset.xml files
  - Old method remains for backwards compatibility
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff no longer report errors on classes named True, False or Null
- PEAR ValidFunctionNameSniff no longer enforces exact case matching for PHP magic methods
- Squiz SwitchDeclarationSniff now allows RETURN statements to close a CASE or DEFAULT statement
- Squiz BlockCommentSniff now correctly reports an error for blank lines before blocks at the start of a control structure
- Fixed a PHP notice generated when loading custom array settings from a rulset.xml file
- Fixed bug [#17908](http://pear.php.net/bugs/bug.php?id=17908) : CodeSniffer does not recognise optional @params
  - Thanks to Pete Walker for the patch
- Fixed bug [#19538](http://pear.php.net/bugs/bug.php?id=19538) : Function indentation code sniffer checks inside short arrays
- Fixed bug [#19565](http://pear.php.net/bugs/bug.php?id=19565) : Non-Executable Code Sniff Broken for Case Statements with both return and break
- Fixed bug [#19612](http://pear.php.net/bugs/bug.php?id=19612) : Invalid @package suggestion
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52457/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52457,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.0,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.0,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.0,1.4.0,False,False
52456,2012-11-01T23:26:47Z,2013-09-26T04:01:25Z,1.4.1,"- All ignore patterns have been reverted to being checked against the absolute path of a file
  - Patterns can be specified to be relative in a rulset.xml file, but nowhere else
  - e.g., [exclude-pattern type=""relative""]^tests/*[/exclude-pattern](with angle brackets, not square brackets)
- Added support for PHP tokenizing of T_INLINE_ELSE colons, so this token type is now available
  - Custom sniffs that rely on looking for T_COLON tokens inside inline if statements must be changed to use the new token
  - Fixes bug [#19666](http://pear.php.net/bugs/bug.php?id=19666) : PSR1.Files.SideEffects throws a notice Undefined index: scope_closer
- Messages can now be changed from errors to warnings (and vice versa) inside ruleset.xml files
  - As you would with ""message"" and ""severity"", specify a ""type"" tag under a ""rule"" tag and set the value to ""error"" or ""warning""
- PHP_CodeSniffer will now generate a warning on files that it detects have mixed line endings
  - This warning has the code Internal.LineEndings.Mixed and can be overriden in a ruleset.xml file
  - Thanks to Vit Brunner for help with this
- Sniffs inside PHP 5.3 namespaces are now supported, along with the existing underscore-style emulated namespaces
  - For example: namespace MyStandard\Sniffs\Arrays; class ArrayDeclarationSniff implements \PHP_CodeSniffer_Sniff { ...
  - Thanks to Till Klampaeckel for the patch
- Generic DuplicateClassNameSniff is no longer a multi-file sniff, so it won't max out your memory
  - Multi-file sniff support should be considered deprecated as standard sniffs can now do the same thing
- Added Generic DisallowSpaceIndent to check that files are indented using tabs
- Added Generic OneClassPerFileSniff to check that only one class is defined in each file
  - Thanks to Andy Grunwald for the contribution
- Added Generic OneInterfacePerFileSniff to check that only one interface is defined in each file
  - Thanks to Andy Grunwald for the contribution
- Added Generic LowercasedFilenameSniff to check that filenames are lowercase
  - Thanks to Andy Grunwald for the contribution
- Added Generic ClosingPHPTagSniff to check that each open PHP tag has a corresponding close tag
  - Thanks to Andy Grunwald for the contribution
- Added Generic CharacterBeforePHPOpeningTagSniff to check that the open PHP tag is the first content in a file
  - Thanks to Andy Grunwald for the contribution
- Fixed incorrect errors in Squiz OperatorBracketSniff and OperatorSpacingSniff for negative numbers in CASE statements
  - Thanks to Arnout Boks for the patch
- Generic CamelCapsFunctionNameSniff no longer enforces exact case matching for PHP magic methods
- Generic CamelCapsFunctionNameSniff no longer throws errors for overridden SOAPClient methods prefixed with double underscores
  - Thanks to Dorian Villet for the patch
- PEAR ValidFunctionNameSniff now supports traits
- PSR1 ClassDeclarationSniff no longer throws an error for non-namespaced code if PHP version is less than 5.3.0
- Fixed bug [#19616](http://pear.php.net/bugs/bug.php?id=19616) : Nested switches cause false error in PSR2
- Fixed bug [#19629](http://pear.php.net/bugs/bug.php?id=19629) : PSR2 error for inline comments on multi-line argument lists
- Fixed bug [#19644](http://pear.php.net/bugs/bug.php?id=19644) : Alternative syntax, e.g. if/endif triggers Inline Control Structure error
- Fixed bug [#19655](http://pear.php.net/bugs/bug.php?id=19655) : Closures reporting as multi-line when they are not
- Fixed bug [#19675](http://pear.php.net/bugs/bug.php?id=19675) : Improper indent of nested anonymous function bodies in a call
- Fixed bug [#19685](http://pear.php.net/bugs/bug.php?id=19685) : PSR2 catch-22 with empty third statement in for loop
- Fixed bug [#19687](http://pear.php.net/bugs/bug.php?id=19687) : Anonymous functions inside arrays marked as indented incorrectly in PSR2
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52456/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52456,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.1,1.4.1,False,False
52455,2012-11-09T02:38:41Z,2013-09-26T04:01:06Z,1.4.2,"- PHP_CodeSniffer can now be installed using Composer
  - Require squizlabs/php_codesniffer in your composer.json file
  - Thanks to Rob Bast, Stephen Rees-Carter, Stefano Kowalke and Ivan Habunek for help with this
- Squiz BlockCommentSniff and InlineCommentSniff no longer report errors for trait block comments
- Squiz SelfMemberReferenceSniff now supports namespaces
  - Thanks to Andy Grunwald for the patch
- Squiz FileCommentSniff now uses tag names inside the error codes for many messages
  - This allows you to exclude specific missing, out of order etc., tags
- Squiz SuperfluousWhitespaceSniff now has an option to ignore blank lines
  - This will stop errors being reported for lines that contain only whitespace
  - Set the ignoreBlankLines property to TRUE in your ruleset.xml file to enable this
- PSR2 no longer reports errors for whitespace at the end of blank lines
- Fixed gitblame report not working on Windows
  - Thanks to Rogerio Prado de Jesus
- Fixed an incorrect error in Squiz OperatorSpacingSniff for default values inside a closure definition
- Fixed bug [#19691](http://pear.php.net/bugs/bug.php?id=19691) : SubversionPropertiesSniff fails to find missing properties
  - Thanks to Kevin Winahradsky for the patch
- Fixed bug [#19692](http://pear.php.net/bugs/bug.php?id=19692) : DisallowMultipleAssignments is triggered by a closure
- Fixed bug [#19693](http://pear.php.net/bugs/bug.php?id=19693) : exclude-patterns no longer work on specific messages
- Fixed bug [#19694](http://pear.php.net/bugs/bug.php?id=19694) : Squiz.PHP.LowercasePHPFunctions incorrectly matches return by ref functions
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52455/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52455,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.2,1.4.2,False,False
52453,2012-12-04T03:15:37Z,2013-09-26T04:00:45Z,1.4.3,"- Added support for the PHP 5.5 T_FINALLY token to detect try/catch/finally statements
- Added empty CodeSniffer.conf to enable config settings for Composer installs
- Added Generic EndFileNoNewlineSniff to ensure there is no newline at the end of a file
- Autoloader can now load PSR-0 compliant classes
  - Thanks to Maik Penz for the patch
- Squiz NonExecutableCodeSniff no longer throws error for multi-line RETURNs inside CASE statements
  - Thanks to Marc Ypes for the patch
- Squiz OperatorSpacingSniff no longer reports errors for negative numbers inside inline THEN statements
  - Thanks to Klaus Purer for the patch
- Squiz OperatorSpacingSniff no longer reports errors for the assignment of operations involving negative numbers
- Squiz SelfMemberReferenceSniff can no longer get into an infinite loop when checking a static call with a namespace
  - Thanks to Andy Grunwald for the patch
- Fixed bug [#19699](http://pear.php.net/bugs/bug.php?id=19699) : Generic.Files.LineLength giving false positives when tab-width is used
- Fixed bug [#19726](http://pear.php.net/bugs/bug.php?id=19726) : Wrong number of spaces expected after instanceof static
- Fixed bug [#19727](http://pear.php.net/bugs/bug.php?id=19727) : PSR2: no error reported when using } elseif {
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52453/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52453,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.3,1.4.3,False,False
52451,2013-02-06T23:14:15Z,2013-09-26T04:00:27Z,1.4.4,"- Ignored lines no longer cause the summary report to show incorrect error and warning counts
  - Thanks to Bert Van Hauwaert for the patch
- Added Generic CSSLintSniff to run CSSLint over a CSS file and report warnings
  - Set full command to run CSSLint using phpcs --config-set csslint_path /path/to/csslint
  - Thanks to Roman Levishchenko for the contribution
- Added PSR2 ControlStructureSpacingSniff to ensure there are no spaces before and after parenthesis in control structures
  - Fixes bug [#19732](http://pear.php.net/bugs/bug.php?id=19732) : PSR2: some control structures errors not reported
- Squiz commenting sniffs now support non-English characters when checking for capital letters
  - Thanks to Roman Levishchenko for the patch
- Generic EndFileNewlineSniff now supports JS and CSS files
  - Thanks to Denis Ryabkov for the patch
- PSR1 SideEffectsSniff no longer reports constant declarations as side effects
- Notifysend report now supports notify-send versions before 0.7.3
  - Thanks to Ken Guest for the patch
- PEAR and Squiz FunctionCommentSniffs no longer report errors for misaligned argument comments when they are blank
  - Thanks to Thomas Peterson for the patch
- Squiz FunctionDeclarationArgumentSpacingSniff now works correctly for equalsSpacing values greater than 0
  - Thanks to Klaus Purer for the patch
- Squiz SuperfluousWhitespaceSniff no longer throws errors for CSS files with no newline at the end
- Squiz SuperfluousWhitespaceSniff now allows a single newline at the end of JS and CSS files
- Fixed bug [#19755](http://pear.php.net/bugs/bug.php?id=19755) : Token of T_CLASS type has no scope_opener and scope_closer keys
- Fixed bug [#19759](http://pear.php.net/bugs/bug.php?id=19759) : Squiz.PHP.NonExecutableCode fails for return function()...
- Fixed bug [#19763](http://pear.php.net/bugs/bug.php?id=19763) : Use statements for traits not recognised correctly for PSR2 code style
- Fixed bug [#19764](http://pear.php.net/bugs/bug.php?id=19764) : Instead of for traits throws uppercase constant name errors
- Fixed bug [#19772](http://pear.php.net/bugs/bug.php?id=19772) : PSR2_Sniffs_Namespaces_UseDeclarationSniff does not properly recognize last use
- Fixed bug [#19775](http://pear.php.net/bugs/bug.php?id=19775) : False positive in NonExecutableCode sniff when not using curly braces
- Fixed bug [#19782](http://pear.php.net/bugs/bug.php?id=19782) : Invalid found size functions in loop when using object operator
- Fixed bug [#19799](http://pear.php.net/bugs/bug.php?id=19799) : config folder is not created automatically
- Fixed bug [#19804](http://pear.php.net/bugs/bug.php?id=19804) : JS Tokenizer wrong /**/ parsing
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52451/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52451,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.4,1.4.4,False,False
52450,2013-02-08T03:22:42Z,2013-09-26T04:00:02Z,1.5.0RC1,"- Reports have been completely rewritten to consume far less memory
  - Each report is incrementally written to the file system during a run and then printed out when the run ends
  - There is no longer a need to keep the list of errors and warnings in memory during a run
- Multi-file sniff support has been removed because they are too memory intensive
  - If you have a custom multi-file sniff, you can convert it into a standard sniff quite easily
  - See CodeSniffer/Standards/Generic/Sniffs/Classes/DuplicateClassNameSniff.php for an example
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52450/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52450,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.0RC1,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.0RC1,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.0RC1,1.5.0RC1,False,True
52377,2013-09-26T00:16:06Z,2013-09-26T00:24:56Z,1.5.0RC4,"- You can now restrict violations to individual sniff codes using the --sniffs command line argument
  - Previously, this only restricted violations to an entire sniff and not individual messages
  - If you have scripts calling PHP_CodeSniffer::process() or creating PHP_CodeSniffer_File objects, you must update your code
  - The array of restrictions passed to PHP_CodeSniffer::process() must now be an array of sniff codes instead of class names
  - The PHP_CodeSniffer_File::__construct() method now requires an array of restrictions to be passed
- Doc generation is now working again
- Progress information now shows the percentage complete at the end of each line
- Added report type --report=junit to show the error list in a JUnit compatible format
  - Thanks to Oleg Lobach for the contribution
- Added support for the PHP 5.4 callable type hint
- Fixed problem where some file content could be ignored when checking STDIN
- Version information is now printed when installed via composer or run from a Git clone (request [#20050](http://pear.php.net/bugs/bug.php?id=20050))
- Added Squiz DisallowBooleanStatementSniff to ban boolean operators outside of control structure conditions
- The CSS tokenizer is now more reliable when encountering 'list' and 'break' strings
- Coding standard ignore comments can now appear instead doc blocks as well as inline comments
  - Thanks to Stuart Langley for the patch
- Generic LineLengthSniff now ignores SVN URL and Head URL comments
  - Thanks to Karl DeBisschop for the patch
- PEAR MultiLineConditionSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- PEAR MultiLineAssignmentSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- PEAR FunctionDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- Squiz SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- Squiz CSS IndentationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Hugo Fonseca for the patch
- Squiz and MySource File and Function comment sniffs now allow all tags and don't require a particular licence
- Squiz standard now allows lines to be 120 characters long before warning; up from 85
- Squiz LowercaseStyleDefinitionSniff no longer throws errors for class names in nested style definitions
- Squiz ClassFileNameSniff no longer throws errors when checking STDIN
- Squiz CSS sniffs no longer generate errors for IE filters
- Squiz CSS IndentationSniff no longer sees comments as blank lines
- Squiz LogicalOperatorSpacingSniff now ignores whitespace at the end of a line
- Squiz.Scope.MethodScope.Missing error message now mentions 'visibility' instead of 'scope modifier'
  - Thanks to Renat Akhmedyanov for the patch
- Added support for the PSR2 multi-line arguments errata
- The PSR2 standard no longer throws errors for additional spacing after a type hint
- PSR UseDeclarationSniff no longer throws errors for USE statements inside TRAITs
- Fixed cases where code was incorrectly assigned the T_GOTO_LABEL token when used in a complex CASE condition
- Fixed bug [#20026](http://pear.php.net/bugs/bug.php?id=20026) : Check for multi-line arrays that should be single-line is slightly wrong
  - Adds new error message for single-line arrays that end with a comma
- Fixed bug [#20029](http://pear.php.net/bugs/bug.php?id=20029) : ForbiddenFunction sniff incorrectly recognizes methods in USE clauses
- Fixed bug [#20043](http://pear.php.net/bugs/bug.php?id=20043) : Mis-interpretation of Foo::class
- Fixed bug [#20044](http://pear.php.net/bugs/bug.php?id=20044) : PSR1 camelCase check does not ignore leading underscores
- Fixed bug [#20045](http://pear.php.net/bugs/bug.php?id=20045) : Errors about indentation for closures with multi-line 'use' in functions
- Fixed bug [#20051](http://pear.php.net/bugs/bug.php?id=20051) : Undefined index: scope_opener / scope_closer
  - Thanks to Anthon Pang for the patch
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52377/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52377,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.0RC4,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.0RC4,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.0RC4,1.5.0RC4,False,True
52376,2013-09-26T00:09:05Z,2013-09-26T00:23:43Z,1.4.7,"- Added report type --report=junit to show the error list in a JUnit compatible format
  - Thanks to Oleg Lobach for the contribution
- Added support for the PHP 5.4 callable type hint
- Fixed problem where some file content could be ignored when checking STDIN
- Version information is now printed when installed via composer or run from a Git clone (request [#20050](http://pear.php.net/bugs/bug.php?id=20050))
- The CSS tokenizer is now more reliable when encountering 'list' and 'break' strings
- Coding standard ignore comments can now appear instead doc blocks as well as inline comments
  - Thanks to Stuart Langley for the patch
- Generic LineLengthSniff now ignores SVN URL and Head URL comments
  - Thanks to Karl DeBisschop for the patch
- PEAR MultiLineConditionSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- PEAR MultiLineAssignmentSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- PEAR FunctionDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- Squiz SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Szabolcs Sulik for the patch
- Squiz CSS IndentationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the 'indent' setting in a ruleset.xml file to change
  - Thanks to Hugo Fonseca for the patch
- Squiz and MySource File and Function comment sniffs now allow all tags and don't require a particular licence
- Squiz LowercaseStyleDefinitionSniff no longer throws errors for class names in nested style definitions
- Squiz ClassFileNameSniff no longer throws errors when checking STDIN
- Squiz CSS sniffs no longer generate errors for IE filters
- Squiz CSS IndentationSniff no longer sees comments as blank lines
- Squiz LogicalOperatorSpacingSniff now ignores whitespace at the end of a line
- Squiz.Scope.MethodScope.Missing error message now mentions 'visibility' instead of 'scope modifier'
  - Thanks to Renat Akhmedyanov for the patch
- Added support for the PSR2 multi-line arguments errata
- The PSR2 standard no longer throws errors for additional spacing after a type hint
- PSR UseDeclarationSniff no longer throws errors for USE statements inside TRAITs
- Fixed bug [#20026](http://pear.php.net/bugs/bug.php?id=20026) : Check for multi-line arrays that should be single-line is slightly wrong
  - Adds new error message for single-line arrays that end with a comma
- Fixed bug [#20029](http://pear.php.net/bugs/bug.php?id=20029) : ForbiddenFunction sniff incorrectly recognizes methods in USE clauses
- Fixed bug [#20043](http://pear.php.net/bugs/bug.php?id=20043) : Mis-interpretation of Foo::class
- Fixed bug [#20044](http://pear.php.net/bugs/bug.php?id=20044) : PSR1 camelCase check does not ignore leading underscores
- Fixed bug [#20045](http://pear.php.net/bugs/bug.php?id=20045) : Errors about indentation for closures with multi-line 'use' in functions
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52376/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/52376,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.7,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.7,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.7,1.4.7,False,False
15344,2013-07-25T04:33:34Z,2013-07-25T04:35:30Z,1.5.0RC3,"- Added report type --report=json to show the error list and total counts for all checked files
  - Thanks to Jeffrey Fisher for the contribution
- PHP_CodeSniffer::isCamelCaps now allows for acronyms at the start of a string if the strict flag is FALSE
  - acronyms are defined as at least 2 uppercase characters in a row
  - e.g., the following is now valid camel caps with strict set to FALSE: XMLParser
- The PHP tokenizer now tokenizes goto labels as T_GOTO_LABEL instead of T_STRING followed by T_COLON
- The JS tokenizer now has support for the T_THROW token
- Symlinked directories inside CodeSniffer/Standards and in ruleset.xml files are now supported
  - Only available since PHP 5.2.11 and 5.3.1
  - Thanks to Maik Penz for the patch
- The JS tokenizer now correctly identifies T_INLINE_ELSE tokens instead of leaving them as T_COLON
  - Thanks to Arnout Boks for the patch
- Explaining a standard (phpcs -e) that uses namespaces now works correctly
- Restricting a check to specific sniffs (phpcs --sniffs=...) now works correctly with namespaced sniffs
  - Thanks to Maik Penz for the patch
- Docs added for the entire Generic standard, and many sniffs from other standards are now documented as well
  - Thanks to Spencer Rinehart for the contribution
- Clearer error message for when the sniff class name does not match the directory structure
- Generated HTML docs now correctly show the open PHP tag in code comparison blocks
- Added Generic InlineHTMLSniff to ensure a file only contains PHP code
- Added Squiz ShorthandSizeSniff to check that CSS sizes are using shorthand notation only when 1 or 2 values are used
- Added Squiz ForbiddenStylesSniff to ban the use of some deprecated browser-specific styles
- Added Squiz NamedColoursSniff to ban the use of colour names
- PSR2 standard no longer enforces no whitespace between the closing parenthesis of a function call and the semicolon
- PSR2 ClassDeclarationSniff now ignores empty classes when checking the end brace position
- PSR2 SwitchDeclarationSniff no longer reports errors for empty lines between CASE statements
- PEAR ObjectOperatorIndentSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the indent setting in a ruleset.xml file to change
  - Thanks to Andrey Mindubaev for the patch
- Squiz FileExtensionSniff now supports traits
  - Thanks to Lucas Green for the patch
- Squiz ArrayDeclarationSniff no longer reports errors for no comma at the end of a line that contains a function call
- Squiz SwitchDeclarationSniff now supports T_CONTINUE and T_THROW as valid case/default breaking statements
- Squiz CommentedOutCodeSniff is now better at ignoring commented out HTML, XML and regular expressions
- Squiz DisallowComparisonAssignmentSniff no longer throws errors for the third expression in a FOR statement
- Squiz ColourDefinitionSniff no longer throws errors for some CSS class names
- Squiz ControlStructureSpacingSniff now supports all types of CASE/DEFAULT breaking statements
- Generic CallTimePassByReferenceSniff now reports errors for functions called using a variable
  - Thanks to Maik Penz for the patch
- Generic ConstructorNameSniff no longer throws a notice for abstract constructors inside abstract classes
  - Thanks to Spencer Rinehart for the patch
- Squiz ComparisonOperatorUsageSniff now checks inside elseif statements
  - Thanks to Arnout Boks for the patch
- Squiz OperatorSpacingSniff now reports errors for no spacing around inline then and else tokens
  - Thanks to Arnout Boks for the patch
- Fixed bug [#19811](http://pear.php.net/bugs/bug.php?id=19811) : Comments not ignored in all cases in AbstractPatternSniff
  - Thanks to Erik Wiffin for the patch
- Fixed bug [#19892](http://pear.php.net/bugs/bug.php?id=19892) : ELSE with no braces causes incorrect SWITCH break statement indentation error
- Fixed bug [#19897](http://pear.php.net/bugs/bug.php?id=19897) : Indenting warnings in templates not consistent
- Fixed bug [#19908](http://pear.php.net/bugs/bug.php?id=19908) : PEAR MultiLineCondition Does Not Apply elseif
- Fixed bug [#19930](http://pear.php.net/bugs/bug.php?id=19930) : option --report-file generate an empty file
- Fixed bug [#19935](http://pear.php.net/bugs/bug.php?id=19935) : notify-send reports do not vanish in gnome-shell
  - Thanks to Christian Weiske for the patch
- Fixed bug [#19944](http://pear.php.net/bugs/bug.php?id=19944) : docblock squiz sniff ""return void"" trips over return in lambda function
- Fixed bug [#19953](http://pear.php.net/bugs/bug.php?id=19953) : PSR2 - Spaces before interface name for abstract class
- Fixed bug [#19956](http://pear.php.net/bugs/bug.php?id=19956) : phpcs warns for Type Hint missing Resource
- Fixed bug [#19957](http://pear.php.net/bugs/bug.php?id=19957) : Does not understand trait method aliasing
- Fixed bug [#19968](http://pear.php.net/bugs/bug.php?id=19968) : Permission denied on excluded directory
- Fixed bug [#19969](http://pear.php.net/bugs/bug.php?id=19969) : Sniffs with namespace not recognized in reports
- Fixed bug [#19997](http://pear.php.net/bugs/bug.php?id=19997) : Class names incorrectly detected as constants
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/15344/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/15344,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.0RC3,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.0RC3,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.0RC3,1.5.0RC3,False,True
15333,2013-07-25T03:56:17Z,2013-07-25T04:03:08Z,1.4.6,"- Added report type --report=json to show the error list and total counts for all checked files
  - Thanks to Jeffrey Fisher for the contribution
- The JS tokenizer now has support for the T_THROW token
- Symlinked directories inside CodeSniffer/Standards and in ruleset.xml files are now supported
  - Only available since PHP 5.2.11 and 5.3.1
  - Thanks to Maik Penz for the patch
- The JS tokenizer now correctly identifies T_INLINE_ELSE tokens instead of leaving them as T_COLON
  - Thanks to Arnout Boks for the patch
- Explaining a standard (phpcs -e) that uses namespaces now works correctly
- Restricting a check to specific sniffs (phpcs --sniffs=...) now works correctly with namespaced sniffs
  - Thanks to Maik Penz for the patch
- Docs added for the entire Generic standard, and many sniffs from other standards are now documented as well
  - Thanks to Spencer Rinehart for the contribution
- Clearer error message for when the sniff class name does not match the directory structure
- Generated HTML docs now correctly show the open PHP tag in code comparison blocks
- Added Generic InlineHTMLSniff to ensure a file only contains PHP code
- Added Squiz ShorthandSizeSniff to check that CSS sizes are using shorthand notation only when 1 or 2 values are used
- Added Squiz ForbiddenStylesSniff to ban the use of some deprecated browser-specific styles
- Added Squiz NamedColoursSniff to ban the use of colour names
- PSR2 standard no longer enforces no whitespace between the closing parenthesis of a function call and the semicolon
- PSR2 ClassDeclarationSniff now ignores empty classes when checking the end brace position
- PSR2 SwitchDeclarationSniff no longer reports errors for empty lines between CASE statements
- PEAR ObjectOperatorIndentSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the indent setting in a ruleset.xml file to change
  - Thanks to Andrey Mindubaev for the patch
- Squiz FileExtensionSniff now supports traits
  - Thanks to Lucas Green for the patch
- Squiz ArrayDeclarationSniff no longer reports errors for no comma at the end of a line that contains a function call
- Squiz SwitchDeclarationSniff now supports T_CONTINUE and T_THROW as valid case/default breaking statements
- Squiz CommentedOutCodeSniff is now better at ignoring commented out HTML, XML and regular expressions
- Squiz DisallowComparisonAssignmentSniff no longer throws errors for the third expression in a FOR statement
- Squiz ColourDefinitionSniff no longer throws errors for some CSS class names
- Squiz ControlStructureSpacingSniff now supports all types of CASE/DEFAULT breaking statements
- Generic CallTimePassByReferenceSniff now reports errors for functions called using a variable
  - Thanks to Maik Penz for the patch
- Generic ConstructorNameSniff no longer throws a notice for abstract constructors inside abstract classes
  - Thanks to Spencer Rinehart for the patch
- Squiz ComparisonOperatorUsageSniff now checks inside elseif statements
  - Thanks to Arnout Boks for the patch
- Squiz OperatorSpacingSniff now reports errors for no spacing around inline then and else tokens
  - Thanks to Arnout Boks for the patch
- Fixed bug [#19811](http://pear.php.net/bugs/bug.php?id=19811) : Comments not ignored in all cases in AbstractPatternSniff
  - Thanks to Erik Wiffin for the patch
- Fixed bug [#19892](http://pear.php.net/bugs/bug.php?id=19892) : ELSE with no braces causes incorrect SWITCH break statement indentation error
- Fixed bug [#19897](http://pear.php.net/bugs/bug.php?id=19897) : Indenting warnings in templates not consistent
- Fixed bug [#19908](http://pear.php.net/bugs/bug.php?id=19908) : PEAR MultiLineCondition Does Not Apply elseif
- Fixed bug [#19913](http://pear.php.net/bugs/bug.php?id=19913) : Running phpcs in interactive mode causes warnings
  - Thanks to Harald Franndorfer for the patch
- Fixed bug [#19935](http://pear.php.net/bugs/bug.php?id=19935) : notify-send reports do not vanish in gnome-shell
  - Thanks to Christian Weiske for the patch
- Fixed bug [#19944](http://pear.php.net/bugs/bug.php?id=19944) : docblock squiz sniff ""return void"" trips over return in lambda function
- Fixed bug [#19953](http://pear.php.net/bugs/bug.php?id=19953) : PSR2 - Spaces before interface name for abstract class
- Fixed bug [#19956](http://pear.php.net/bugs/bug.php?id=19956) : phpcs warns for Type Hint missing Resource
- Fixed bug [#19957](http://pear.php.net/bugs/bug.php?id=19957) : Does not understand trait method aliasing
- Fixed bug [#19968](http://pear.php.net/bugs/bug.php?id=19968) : Permission denied on excluded directory
- Fixed bug [#19969](http://pear.php.net/bugs/bug.php?id=19969) : Sniffs with namespace not recognized in reports
- Fixed bug [#19997](http://pear.php.net/bugs/bug.php?id=19997) : Class names incorrectly detected as constants
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/15333/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/15333,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.6,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.6,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.6,1.4.6,False,False
1252,2013-04-03T23:17:09Z,2013-07-02T23:31:24Z,1.4.5,"- Added Generic LowerCaseKeywordSniff to ensure all PHP keywords are defined in lowercase
  - The PSR2 and Squiz standards now use this sniff
- Added Generic SAPIUsageSniff to ensure the PHP_SAPI constant is used instead of php_sapi_name() (request [#19863](http://pear.php.net/bugs/bug.php?id=19863))
- Squiz FunctionSpacingSniff now has a setting to specify how many lines there should between functions (request [#19843](http://pear.php.net/bugs/bug.php?id=19843))
  - Default remains at 2
  - Override the ""spacing"" setting in a ruleset.xml file to change
- Squiz LowercasePHPFunctionSniff no longer throws errors for the limited set of PHP keywords it was checking
  - Add a rule for Generic.PHP.LowerCaseKeyword to your ruleset to replicate this functionality
- Added support for the PHP 5.4 T_CALLABLE token so it can be used in lower PHP versions
- Generic EndFileNoNewlineSniff now supports checking of CSS and JS files
- PSR2 SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the indent setting in a ruleset.xml file to change
  - Thanks to Asher Snyder for the patch
- Generic ScopeIndentSniff now has a setting to specify a list of tokens that should be ignored
  - The first token on the line is checked and the whole line is ignored if the token is in the array
  - Thanks to Eloy Lafuente for the patch
- Squiz LowercaseClassKeywordsSniff now checks for the TRAIT keyword
  - Thanks to Anthon Pang for the patch
- If you create your own PHP_CodeSniffer object, PHPCS will no longer exit when an unknown argument is found
  - This allows you to create wrapper scripts for PHPCS more easily
- PSR2 MethodDeclarationSniff no longer generates a notice for methods named ""_""
  - Thanks to Bart S for the patch
- Squiz BlockCommentSniff no longer reports that a blank line between a scope closer and block comment is invalid
- Generic DuplicateClassNameSniff no longer reports an invalid error if multiple PHP open tags exist in a file
- Generic DuplicateClassNameSniff no longer reports duplicate errors if multiple PHP open tags exist in a file
- Fixed bug [#19819](http://pear.php.net/bugs/bug.php?id=19819) : Freeze with syntax error in use statement
- Fixed bug [#19820](http://pear.php.net/bugs/bug.php?id=19820) : Wrong message level in Generic_Sniffs_CodeAnalysis_EmptyStatementSniff
- Fixed bug [#19859](http://pear.php.net/bugs/bug.php?id=19859) : CodeSniffer::setIgnorePatterns API changed
- Fixed bug [#19871](http://pear.php.net/bugs/bug.php?id=19871) : findExtendedClassName doesn't return FQCN on namespaced classes
- Fixed bug [#19879](http://pear.php.net/bugs/bug.php?id=19879) : bitwise and operator interpreted as reference by value
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1252/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1252,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.4.5,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.4.5,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.4.5,1.4.5,False,False
1245,2013-04-03T23:23:17Z,2013-07-02T23:29:40Z,1.5.0RC2,"- Ruleset processing has been rewritten to be more predictable
  - Provides much better support for relative paths inside ruleset files
  - May mean that sniffs that were previously ignored are now being included when importing external rulesets
  - Ruleset processing output can be seen by using the -vv command line argument
  - Internal sniff registering functions have all changed, so please review custom scripts
- You can now pass multiple coding standards on the command line, comma separated (request [#19144](http://pear.php.net/bugs/bug.php?id=19144))
  - Works with built-in or custom standards and rulesets, or a mix of both
- You can now exclude directories or whole standards in a ruleset XML file (request [#19731](http://pear.php.net/bugs/bug.php?id=19731))
  - e.g., exclude ""Generic.Commenting"" or just ""Generic""
  - You can also pass in a path to a directory instead, if you know it
- Added Generic LowerCaseKeywordSniff to ensure all PHP keywords are defined in lowercase
  - The PSR2 and Squiz standards now use this sniff
- Added Generic SAPIUsageSniff to ensure the PHP_SAPI constant is used instead of php_sapi_name() (request [#19863](http://pear.php.net/bugs/bug.php?id=19863))
- Squiz FunctionSpacingSniff now has a setting to specify how many lines there should between functions (request [#19843](http://pear.php.net/bugs/bug.php?id=19843))
  - Default remains at 2
  - Override the ""spacing"" setting in a ruleset.xml file to change
- Squiz LowercasePHPFunctionSniff no longer throws errors for the limited set of PHP keywords it was checking
  - Add a rule for Generic.PHP.LowerCaseKeyword to your ruleset to replicate this functionality
- Added support for the PHP 5.4 T_CALLABLE token so it can be used in lower PHP versions
- Generic EndFileNoNewlineSniff now supports checking of CSS and JS files
- PSR2 SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  - Default remains at 4; override the indent setting in a ruleset.xml file to change
  - Thanks to Asher Snyder for the patch
- Generic ScopeIndentSniff now has a setting to specify a list of tokens that should be ignored
  - The first token on the line is checked and the whole line is ignored if the token is in the array
  - Thanks to Eloy Lafuente for the patch
- Squiz LowercaseClassKeywordsSniff now checks for the TRAIT keyword
  - Thanks to Anthon Pang for the patch
- If you create your own PHP_CodeSniffer object, PHPCS will no longer exit when an unknown argument is found
  - This allows you to create wrapper scripts for PHPCS more easily
- PSR2 MethodDeclarationSniff no longer generates a notice for methods named ""_""
  - Thanks to Bart S for the patch
- Squiz BlockCommentSniff no longer reports that a blank line between a scope closer and block comment is invalid
- Generic DuplicateClassNameSniff no longer reports an invalid error if multiple PHP open tags exist in a file
- Generic DuplicateClassNameSniff no longer reports duplicate errors if multiple PHP open tags exist in a file
- Fixed bug [#19819](http://pear.php.net/bugs/bug.php?id=19819) : Freeze with syntax error in use statement
- Fixed bug [#19820](http://pear.php.net/bugs/bug.php?id=19820) : Wrong message level in Generic_Sniffs_CodeAnalysis_EmptyStatementSniff
- Fixed bug [#19859](http://pear.php.net/bugs/bug.php?id=19859) : CodeSniffer::setIgnorePatterns API changed
- Fixed bug [#19871](http://pear.php.net/bugs/bug.php?id=19871) : findExtendedClassName doesn't return FQCN on namespaced classes
- Fixed bug [#19879](http://pear.php.net/bugs/bug.php?id=19879) : bitwise and operator interpreted as reference by value
",https://api.github.com/users/gsherwood,185976,gsherwood,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1245/assets,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/1245,master,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tarball/1.5.0RC2,https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/1.5.0RC2,https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/1.5.0RC2,1.5.0RC2,False,True
