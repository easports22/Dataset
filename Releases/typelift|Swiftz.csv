id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
5950458,2017-03-29T22:03:56Z,2017-04-02T20:06:48Z,CXX,Swiftz is now compatible with Swift 3.1,https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/5950458/assets,https://api.github.com/repos/typelift/Swiftz/releases/5950458,master,https://api.github.com/repos/typelift/Swiftz/tarball/0.6.3,https://github.com/typelift/Swiftz/releases/tag/0.6.3,https://api.github.com/repos/typelift/Swiftz/zipball/0.6.3,0.6.3,False,False
5758565,2017-01-21T23:39:43Z,2017-03-15T20:08:20Z,CX,Resolves a compatibility issue introduced by the implementation of SE-110,https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/5758565/assets,https://api.github.com/repos/typelift/Swiftz/releases/5758565,master,https://api.github.com/repos/typelift/Swiftz/tarball/0.6.2,https://github.com/typelift/Swiftz/releases/tag/0.6.2,https://api.github.com/repos/typelift/Swiftz/zipball/0.6.2,0.6.2,False,False
4709965,2016-11-20T18:05:15Z,2016-11-20T18:06:56Z,Deballage,"Fixes a compatibility issue with the Swift Package Manager
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/4709965/assets,https://api.github.com/repos/typelift/Swiftz/releases/4709965,master,https://api.github.com/repos/typelift/Swiftz/tarball/0.6.1,https://github.com/typelift/Swiftz/releases/tag/0.6.1,https://api.github.com/repos/typelift/Swiftz/zipball/0.6.1,0.6.1,False,False
4163984,2016-09-18T23:48:01Z,2016-09-18T23:48:58Z,Swifts (Three Different Ones),"⚠️ Breaking Changes Ahead ⚠️ 

Swiftz now supports Swift 3.0, Xcode 8.0 and the Swift Package Manager.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/4163984/assets,https://api.github.com/repos/typelift/Swiftz/releases/4163984,master,https://api.github.com/repos/typelift/Swiftz/tarball/0.6.0,https://github.com/typelift/Swiftz/releases/tag/0.6.0,https://api.github.com/repos/typelift/Swiftz/zipball/0.6.0,0.6.0,False,False
4056736,2016-09-06T05:07:55Z,2016-09-06T05:08:15Z,Cartesian Catechism,"⚠️ Swiftz now requires Swift 2.3 ⚠️ 

In addition to bumping the version requirements, we now include support for the `Monoidal` typeclass.  
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/4056736/assets,https://api.github.com/repos/typelift/Swiftz/releases/4056736,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.5.1,https://github.com/typelift/Swiftz/releases/tag/v0.5.1,https://api.github.com/repos/typelift/Swiftz/zipball/v0.5.1,v0.5.1,False,False
2877407,2016-03-23T23:59:10Z,2016-03-24T00:22:38Z,C+=1,"Swiftz now fully supports building on Swift 2.2.  Not much has changed but we live underwater, etc.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/2877407/assets,https://api.github.com/repos/typelift/Swiftz/releases/2877407,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.5.0,https://github.com/typelift/Swiftz/releases/tag/v0.5.0,https://api.github.com/repos/typelift/Swiftz/zipball/v0.5.0,v0.5.0,False,False
2366906,2016-01-04T06:22:45Z,2016-01-04T06:22:50Z,Scheme a Little Scheme,":warning:  Breaking Changes Ahead :warning: 

Swiftz has just turned 0.4.0!  Here's what we changed:
- Swiftz now has watchOS and tvOS targets.
- JSON support has been moved into the new [Tyro](https://github.com/typelift/Tyro) framework.  Point your package manager accordingly!
- Swiftz no longer links with Foundation.
- More structures now have lawful tests.
- `Writer` now has a friend, the `Reader` monad.
- `Tuple2` has been removed entirely.
- `Unit` has been added.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/2366906/assets,https://api.github.com/repos/typelift/Swiftz/releases/2366906,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.4.0,https://github.com/typelift/Swiftz/releases/tag/v0.4.0,https://api.github.com/repos/typelift/Swiftz/zipball/v0.4.0,v0.4.0,False,False
1919654,2015-10-06T18:10:24Z,2015-10-06T18:11:30Z,Podocarpus,"- Fixes issues with the pod spec build.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1919654/assets,https://api.github.com/repos/typelift/Swiftz/releases/1919654,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.3.1,https://github.com/typelift/Swiftz/releases/tag/v0.3.1,https://api.github.com/repos/typelift/Swiftz/zipball/v0.3.1,v0.3.1,False,False
1523800,2015-09-16T19:35:00Z,2015-09-16T19:35:16Z,Forward Lattneral,":warning: Breaking Changes Ahead :warning: 

Swiftz now fully supports Swift 2.0 in all its two-point-oh glory.  Changes due to language updates include:
- Removed _all_ the boxing
- No, seriously, it's all gone.  Use the `Identity` Functor instead.
- Removed `EitherBF`,`Either` is now a `Bifunctor` on its own
- Many, many free functions have been moved into extensions.
- Our Dictionary extension now comes with a full set of useful functions and combinators.
- Functions in the `Character` extension have been changed to property getters.
- `Array` is now a `Monoid`
- `Proxy` has been added
- The `Writer Monad` has been added
- `Num` has been renamed to `NumericType`
- The `RealType` and `IntegralType` protocols have been added
- `Ratio` has been added
- Arrow Extensions have been brought back
- `Result<T>` has been removed.  Please use `Either<ErrorType, T>`
- Infinite `Stream`s have been added
- While we're on the subject of `Stream`s, have you seen our new framework [Aquifer](https://github.com/TypeLift/Aquifer)?

Overall Framework changes include:
- Lenses have been split into their own package, [Focus](https://github.com/TypeLift/Focus).
- Operators have been split into their [own package](https://github.com/TypeLift/Operadics) and standardized throughout all of TypeLift.
- Added the `Foldable` typeclass
- Additions to the  `Applicative` and `Monad` typeclasses have been added in the form of the `ApplicativeOps` and `MonadOps` typeclasses
- More tests now use [SwiftCheck](https://github.com/TypeLift/SwiftCheck), also more tests in general!
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1523800/assets,https://api.github.com/repos/typelift/Swiftz/releases/1523800,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.3.0,https://github.com/typelift/Swiftz/releases/tag/v0.3.0,https://api.github.com/repos/typelift/Swiftz/zipball/v0.3.0,v0.3.0,False,False
1363066,2015-06-01T20:13:57Z,2015-06-01T20:20:15Z,SISD,":warning: Breaking Changes Ahead :warning: 
- Removes the concurrency abstractions from the framework.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1363066/assets,https://api.github.com/repos/typelift/Swiftz/releases/1363066,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.2.4,https://github.com/typelift/Swiftz/releases/tag/v0.2.4,https://api.github.com/repos/typelift/Swiftz/zipball/v0.2.4,v0.2.4,False,False
1357317,2015-05-31T00:54:47Z,2015-05-31T01:11:42Z,Target Acquired,"- `String`s are now first class citizens of this framework!
- Fixes the deployment target of the iOS and OS X framework.
- Re-enables support for Travis and Xcode 6.3.x.

:warning: Breaking Changes Ahead :warning: 

This is the last release of Swiftz that defines the (deprecated) concurrency abstractions.  Transition all code from Swiftz to [Concurrent](https://github.com/typelift/Concurrent) now!
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1357317/assets,https://api.github.com/repos/typelift/Swiftz/releases/1357317,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.2.3,https://github.com/typelift/Swiftz/releases/tag/v0.2.3,https://api.github.com/repos/typelift/Swiftz/zipball/v0.2.3,v0.2.3,False,False
1314943,2015-05-19T21:33:33Z,2015-05-19T21:35:09Z,Cartman,"- Resolves several potentially silent build errors.
- Fixes the Carthage build.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1314943/assets,https://api.github.com/repos/typelift/Swiftz/releases/1314943,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.2.2,https://github.com/typelift/Swiftz/releases/tag/v0.2.2,https://api.github.com/repos/typelift/Swiftz/zipball/v0.2.2,v0.2.2,False,False
1294952,2015-05-14T04:40:13Z,2015-05-14T04:42:34Z,Amdahl's Law,"Deprecates all concurrency abstractions and removes any support Swiftz may have had for them.  These abstractions will continue to function for 2 more dot releases.  After that they will be removed.  Please migrate existing code to [Concurrent.framework](https://github.com/typelift/Concurrent).
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1294952/assets,https://api.github.com/repos/typelift/Swiftz/releases/1294952,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.2.1,https://github.com/typelift/Swiftz/releases/tag/v0.2.1,https://api.github.com/repos/typelift/Swiftz/zipball/v0.2.1,v0.2.1,False,False
1277602,2015-05-09T06:08:10Z,2015-05-09T06:23:38Z,Toofer,"Welp, we did it.  Swiftz now fully supports Swift 1.2 along with a huge number of fixes and improvements.  Unfortunately in keeping up with the neighborhood we've lost any semblance of support from Travis.  Our build status will stay firmly in the red until they can give us a box running 10.10 to build on.

Such is life.

Anyhow, changes:
- Full support for Swift 1.2
- General and sweeping changes to documentation
- Updates to code formatting and whitespace control
- Testing is now done using SwiftCheck along with XCTest.  In future versions we will go SwiftCheck only
- Added `extreme(_:_:)` the dual to `span(_:_:)`
- Lists can now be initialized with arrays directly.
- Maybe is now a Monad
- Proper operators for Functor, Applicative, and Monad methods have been added to List and Maybe
- Maybe now supports a fold, `fromMaybe()`, and case analysis, `maybe()`
- Int and UInt now have Num instances
- `coalesce` has been temporarily removed.
- Set has been removed
- State is now Applicative and a Monad
- `String.lines()` and `String.unlines()` are more efficient
- `scanl` now behaves properly when given the empty list
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/1277602/assets,https://api.github.com/repos/typelift/Swiftz/releases/1277602,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.2.0,https://github.com/typelift/Swiftz/releases/tag/v0.2.0,https://api.github.com/repos/typelift/Swiftz/zipball/v0.2.0,v0.2.0,False,False
931106,2015-02-08T21:51:39Z,2015-02-08T21:54:06Z,An Array of Simplifications,"This release contains numerous improvements to Set and Array.

Set:
- Adds reduce, partition, and remove.
- Adds toList/toArray

Array:
- Adds a matcher for destructuring.
- Adds head/tail to ArrayExt
- Adds take and drop to ArrayExt
- Simplifies the definition of many combinators with the matcher.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/931106/assets,https://api.github.com/repos/typelift/Swiftz/releases/931106,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.1.4,https://github.com/typelift/Swiftz/releases/tag/v0.1.4,https://api.github.com/repos/typelift/Swiftz/zipball/v0.1.4,v0.1.4,False,False
930752,2015-02-08T17:32:55Z,2015-02-08T18:00:32Z,JSON and the Argonauts,"Improvements to JSON:
- The decoding mechanism now uses Self constraints.
- Direct instances of JSONDecodable types now replace the old shims.
- JSONDecodable is easier to adopt for custom types like NSURL, NSString, NSDecimalNumber, etc.
- Adds support for traversing into nested JSON objects.

General Improvements:
- Adds the Monoid Coproduct of Monoids (Dither).
- Updates to the latest Swiftx

Bug Fixes:
- Unifies the Sectioning mechanism with Swiftx.
- `splitAt(_:, _:)` now works on lists where n is larger than list.count (h/t @hffmnn)
- Fixes the Carthage build by codesigning and copying the framework on testing builds.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/930752/assets,https://api.github.com/repos/typelift/Swiftz/releases/930752,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.1.3,https://github.com/typelift/Swiftz/releases/tag/v0.1.3,https://api.github.com/repos/typelift/Swiftz/zipball/v0.1.3,v0.1.3,False,False
899251,2015-01-30T02:15:44Z,2015-01-30T02:18:34Z,Disequal Rights,"Fixes erroneous disequality sections.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/899251/assets,https://api.github.com/repos/typelift/Swiftz/releases/899251,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.1.2,https://github.com/typelift/Swiftz/releases/tag/v0.1.2,https://api.github.com/repos/typelift/Swiftz/zipball/v0.1.2,v0.1.2,False,False
895642,2015-01-29T04:12:07Z,2015-01-29T04:16:55Z,Comfortably Num,"Simplifies the Num, Semigroup, and Monoid protocols.
- Prefer `Self` declarations over associated types.
- Make certain invariants (e.g. the identity element) class variables.
- Simplify multi-parameter Monoids and Semigroups with newtype-style structures.
- Adds the First and Last Monoids.
- Adds the Nil Adjunction Semigroup.
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/895642/assets,https://api.github.com/repos/typelift/Swiftz/releases/895642,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.1.1,https://github.com/typelift/Swiftz/releases/tag/v0.1.1,https://api.github.com/repos/typelift/Swiftz/zipball/v0.1.1,v0.1.1,False,False
884295,2015-01-26T06:49:26Z,2015-01-26T07:01:02Z,To Infinity,"Swiftz is a library of higher-level types and functional abstractions in Swift.  This release includes

# Data Types
- ArrayZipper
- Chan
- Future/GCDExecutionContext
- HList
- Iso
- IxCont, IxStore, IxMultiStore, IxState
- JSON
- Lens
- List
- MVar
- Maybe
- Sum, Product, Min, Max
- Num
- Prism
- Set
- Those

# Typeclasses
- Applicative
- Arrow
- Bifunctor
- Bounded
- Category
- Comonad
- Copointed
- Functor
- Semigroup, Monoid
- Pointed

# Extensions
- Array
- Character
- Dictionary
- Optional
- Tuples
",https://api.github.com/users/CodaFi,1896383,CodaFi,https://api.github.com/repos/typelift/Swiftz/releases/884295/assets,https://api.github.com/repos/typelift/Swiftz/releases/884295,master,https://api.github.com/repos/typelift/Swiftz/tarball/v0.1.0,https://github.com/typelift/Swiftz/releases/tag/v0.1.0,https://api.github.com/repos/typelift/Swiftz/zipball/v0.1.0,v0.1.0,False,False
