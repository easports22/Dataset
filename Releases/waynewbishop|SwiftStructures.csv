id,created_at,published_at,name,body,author_url,author_id,author_login,assets_url,url,target_commitish,tarball_url,html_url,zipball_url,tag_name,draft,prerelease
7862102,2017-09-22T21:44:29Z,2017-09-25T18:36:07Z,Swift 4.0 Release!,"**Swift 4.0** is now officially released! As a result, [The Swift Algorithms](http://shop.waynewbishop.com) project has been updated to reflect this new standard.

## Change Summary
The relative stability of **Swift 4.0** has allowed an opportunity refine many areas of the code base. Notable updates include:

- New examples of code Memoization and Dynamic Programming
- New non-recursive Binary Search Tree Algorithm (BST)
- New `contains()` method for BST's. 
- New generic `min/max` Heap Algorithm
- New unit test cases for evaluating Fibonacci and Heap Algorithms
- `subscript` syntax applied to `Trie` and `Linked List` algorithms
- Support for new Swift-based `Array.swapAt` function
- Limited use of Implicit Unwrapped Optionals (IUO's)


Existing Swift 3.0 followers should study the new **Swift 4.0** [BST Algorithm](https://github.com/waynewbishop/SwiftStructures/blob/swift-4.0/Source/Factories/BSTree.swift). To simulate a `call stack` often employed in recursive processes, this model uses a custom `Stack` data structure in conjunction with `inout` variables. 


Follow the latest **Swift 4.0** code updates from the [master](https://github.com/waynewbishop/SwiftStructures/tree/master) branch. If you have questions or would like submit a [pull request](https://help.github.com/articles/creating-a-pull-request/), please do so using the [develop](https://github.com/waynewbishop/SwiftStructures/tree/develop) branch. ",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/7862102/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/7862102,swift-4.0,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v4.0,https://github.com/waynewbishop/SwiftStructures/releases/tag/v4.0,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v4.0,v4.0,False,False
4022085,2016-08-31T19:16:52Z,2016-08-31T19:32:33Z,Swift 3.0 Beta 6,"With the final version of **Swift 3.0** soon to be announced, the algorithms project has been updated to reflect the latest standard!

## Change Summary

This update incorporates final language changes to **Swift 3.0**. These include minor functional changes to declare `inout` parameters, optionals, cast operations and `infix` operators.

## Branches

Follow the latest Swift 3.0 code updates [here](https://github.com/waynewbishop/SwiftStructures/tree/swift-3.0). While Swift 3.0 remains in beta, the **master** project branch will continue to support **Swift 2.2**. 
",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/4022085/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/4022085,swift-3.0,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v3.0-beta.6,https://github.com/waynewbishop/SwiftStructures/releases/tag/v3.0-beta.6,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v3.0-beta.6,v3.0-beta.6,False,True
3669963,2016-07-22T23:13:09Z,2016-07-27T02:10:19Z,Swift 3.0 Preview!,"With **Swift 3.0** now available in beta, the algorithms project has been updated to reflect this new standard!

## Change Summary

There have been many language refinements introduced with **Swift 3.0**. This has provided an opportunity to also refine numerous areas of the algorithms project. Notable **Swift 3.0** proposals now supported include:
- [New collection indexing model (SE-0065)](https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md)
- [Remove C-style for-loops with conditions (SE-0007)](https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md)
- [Consistent parameter naming (SE-0046)](https://github.com/apple/swift-evolution/blob/master/proposals/0046-first-label.md)
- [Warning for unused results (SE-0047)](https://github.com/apple/swift-evolution/blob/master/proposals/0047-nonvoid-warn.md)
- [New implicit unwrapped optionals model (SE-0054)](https://github.com/apple/swift-evolution/blob/master/proposals/0054-abolish-iuo.md)
- [Better Translation of Objective-C APIs Into Swift (SE-005)](https://github.com/apple/swift-evolution/blob/master/proposals/0005-objective-c-name-translation.md)

Existing Swift 2.2 followers should study the revamped **Swift 3.0** [collection indexing model](https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md). This implementation can seen with the refactored `String` extension and new `Sortable` protocol extension. 

## Additional Refinements

New `Int` and `Array` extensions have been added to support pre-existing `Math` and `Sorting` classes (respectively).  Beyond centralizing specific operations, the new design now works directly with the recursive `Enum` project example. Finally, a general effort has been made to improve generics (where applicable). This includes refactoring `Hash Tables` (renamed `Hash Lists`) to support generic objects as well as the `Search` and `Sorting` algorithms. 

## Branches

Follow the latest Swift 3.0 code updates [here](https://github.com/waynewbishop/SwiftStructures/tree/swift-3.0). While Swift 3.0 remains in beta, the **master** project branch will continue to support **Swift 2.2**. 
",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/3669963/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/3669963,swift-3.0,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v3.0-beta.3,https://github.com/waynewbishop/SwiftStructures/releases/tag/v3.0-beta.3,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v3.0-beta.3,v3.0-beta.3,False,True
2976379,2016-04-07T21:16:55Z,2016-04-07T22:01:23Z,Swift 2.2 Update,"With Swift 2.2 now [available](https://swift.org/blog/swift-2-2-new-features), the algorithms project has been updated to reflect this new standard! 

## Change Summary

This release mainly addresses legacy C-style syntax. With the pending removal of [C-style loops](https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md) as well as [increment / decrement](https://github.com/apple/swift-evolution/blob/master/proposals/0004-remove-pre-post-inc-decrement.md) markers in Swift 3.0, Github examples for `bubbleSort`, `insertionSort` and `selectionSort` have been refactored. Minor updates were also made to `queues`, `stacks` and `linked lists`. While not officially published, the Math-based `fibonacci` methods were also updated to reflect non-mutating parameters.
",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/2976379/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/2976379,master,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v2.2,https://github.com/waynewbishop/SwiftStructures/releases/tag/v2.2,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v2.2,v2.2,False,False
2222608,2015-12-02T19:06:23Z,2015-12-02T20:02:33Z,New Sorting Algorithms!,"With <a href=""http://shop.waynewbishop.com"" target=""_blank"">The Swift Algorithms Book</a> now available in print, pdf and ePub formats, it's been great receiving feedback from people everywhere! One area of interest has been sorting and search. Beyond heaps, graphs and binary search trees (BST's), language newcomers have been curious to see how Swift handles traditional <a href=""https://github.com/waynewbishop/SwiftStructures/blob/master/Source/Factories/Sorting.swift"" target=""_blank"">sorting algorithms</a> like <code>bubbleSort()</code> and <code>insertionSort()</code>.

## Change Summary

Github examples for <code>bubbleSort</code>, <code>insertionSort</code> and <code>selectionSort</code> now support generic and non-generic implementations using the latest Swift 2 syntax. Also, two new versions of <code>binarySearch</code> are now available. To support these updates, <a href=""https://github.com/waynewbishop/SwiftStructures/blob/master/SwiftTests/SortingTest.swift"" target=""_blank"">SortingTest.swift</a> has also been refactored to support generic and non-generic methods.
",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/2222608/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/2222608,master,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v.2.1,https://github.com/waynewbishop/SwiftStructures/releases/tag/v.2.1,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v.2.1,v.2.1,False,False
1802891,2015-09-11T21:33:28Z,2015-09-11T23:26:56Z,Swift 2.0 Release!,"The introduction of Swift 2.0 brings a new level of usability and concise syntax many have come to appreciate. As the referring source for <a href=""http://shop.waynewbishop.com"" target=""_blank"">The Swift Algorithms Book</a>, the Github source has been updated to meet this new standard.  

## Change Summary

While most updates involved object mutability and basic syntax, significant refactoring was completed for the project <a href=""https://github.com/waynewbishop/SwiftStructures/blob/master/Source/Structures/extensions.swift"" target=""_blank""><code>extensions</code></a>. Mainly used as helper functions for <code>trie</code> algorithms, readers should see little difference with the latest code and examples published in the book.

Along with code updates, this release also introduces a new algorithm called a <a href=""https://github.com/waynewbishop/SwiftStructures/blob/master/Source/Factories/Bloom.swift"" target=""_blank""><code>Bloom Filter<code></a>. Similar to a <code>hash table</code>, stay tuned for new documentation at  <a href=""http://www.waynewbishop.com/swift"" target=""_blank"">waynewbishop.com</a> that describes this process.
",https://api.github.com/users/waynewbishop,128404,waynewbishop,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/1802891/assets,https://api.github.com/repos/waynewbishop/SwiftStructures/releases/1802891,master,https://api.github.com/repos/waynewbishop/SwiftStructures/tarball/v2.0,https://github.com/waynewbishop/SwiftStructures/releases/tag/v2.0,https://api.github.com/repos/waynewbishop/SwiftStructures/zipball/v2.0,v2.0,False,False
